import {
  __require
} from "./chunk-FM7WUVZV.js";

// node_modules/mxdraw/dist/mxdraw.esm.js
var PubSub = class {
  constructor() {
    this.events = {};
  }
  on(t, e) {
    let n = this;
    n.events || (n.events = {}), n.events.hasOwnProperty(t) || (n.events[t] = []), n.events[t].push(e);
  }
  emit(t, ...e) {
    let n = this;
    n.events || (n.events = {}), n.events.hasOwnProperty(t) && n.events[t].map((t2) => t2(...e));
  }
  off(t, e) {
    if (this.events[t]) if (void 0 === e) this.events[t] = [];
    else {
      const n = this.events[t].indexOf(e);
      this.events[t].splice(n, 1);
    }
  }
};
var Store = class {
  constructor(t) {
    let e = this;
    e.actions = {}, e.mutations = {}, e.state = t.state, e.status = "resting", e.events = new PubSub(), t.hasOwnProperty("actions") && (e.actions = t.actions), t.hasOwnProperty("mutations") && (e.mutations = t.mutations);
  }
  dispatch(t, e) {
    let n = this;
    return "function" == typeof n.actions[t] && (console.groupCollapsed(`ACTION: ${t}`), n.status = "action", n.actions[t](n, e), console.groupEnd(), true);
  }
  commit(t, e) {
    let n = this;
    if ("function" != typeof n.mutations[t]) return console.log(`Mutation "${t}" doesn't exist`), false;
    n.status = "mutation";
    let r = n.mutations[t](n.state, e);
    return n.state = Object.assign(n.state, r), true;
  }
};
var options = { state: { MxFun: null, Mxassembly: null, isCreateDrawObj: false }, actions: {}, mutations: {} };
for (let t in options.state) {
  const e = t.charAt(0).toUpperCase() + t.slice(1);
  options.mutations["set" + e] = (e2, n) => {
    e2[t] = n;
  };
}
var store = new Store(options);
function mxfun() {
  !function t(e, n, r) {
    function i(o2, s) {
      if (!n[o2]) {
        if (!e[o2]) {
          var l = "function" == typeof __require && __require;
          if (!s && l) return l(o2, true);
          if (a) return a(o2, true);
          var c = new Error("Cannot find module '" + o2 + "'");
          throw c.code = "MODULE_NOT_FOUND", c;
        }
        var u = n[o2] = { exports: {} };
        e[o2][0].call(u.exports, function(t2) {
          return i(e[o2][1][t2] || t2);
        }, u, u.exports, t, e, n, r);
      }
      return n[o2].exports;
    }
    for (var a = "function" == typeof __require && __require, o = 0; o < r.length; o++) i(r[o]);
    return i;
  }({ 1: [function(t, e, n) {
    var r = {};
    (0, t("./lib/utils/common").assign)(r, t("./lib/deflate"), t("./lib/inflate"), t("./lib/zlib/constants")), e.exports = r;
  }, { "./lib/deflate": 2, "./lib/inflate": 3, "./lib/utils/common": 4, "./lib/zlib/constants": 7 }], 2: [function(t, e, n) {
    var r = t("./zlib/deflate"), i = t("./utils/common"), a = t("./utils/strings"), o = t("./zlib/messages"), s = t("./zlib/zstream"), l = Object.prototype.toString, c = 0, u = -1, h = 0, p = 8;
    function d(t2) {
      if (!(this instanceof d)) return new d(t2);
      this.options = i.assign({ level: u, method: p, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: h, to: "" }, t2 || {});
      var e2 = this.options;
      e2.raw && 0 < e2.windowBits ? e2.windowBits = -e2.windowBits : e2.gzip && 0 < e2.windowBits && e2.windowBits < 16 && (e2.windowBits += 16), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new s(), this.strm.avail_out = 0;
      var n2 = r.deflateInit2(this.strm, e2.level, e2.method, e2.windowBits, e2.memLevel, e2.strategy);
      if (n2 !== c) throw new Error(o[n2]);
      if (e2.header && r.deflateSetHeader(this.strm, e2.header), e2.dictionary) {
        var f2;
        if (f2 = "string" == typeof e2.dictionary ? a.string2buf(e2.dictionary) : "[object ArrayBuffer]" === l.call(e2.dictionary) ? new Uint8Array(e2.dictionary) : e2.dictionary, (n2 = r.deflateSetDictionary(this.strm, f2)) !== c) throw new Error(o[n2]);
        this._dict_set = true;
      }
    }
    function f(t2, e2) {
      var n2 = new d(e2);
      if (n2.push(t2, true), n2.err) throw n2.msg || o[n2.err];
      return n2.result;
    }
    d.prototype.push = function(t2, e2) {
      var n2, o2, s2 = this.strm, u2 = this.options.chunkSize;
      if (this.ended) return false;
      o2 = e2 === ~~e2 ? e2 : true === e2 ? 4 : 0, "string" == typeof t2 ? s2.input = a.string2buf(t2) : "[object ArrayBuffer]" === l.call(t2) ? s2.input = new Uint8Array(t2) : s2.input = t2, s2.next_in = 0, s2.avail_in = s2.input.length;
      do {
        if (0 === s2.avail_out && (s2.output = new i.Buf8(u2), s2.next_out = 0, s2.avail_out = u2), 1 !== (n2 = r.deflate(s2, o2)) && n2 !== c) return this.onEnd(n2), !(this.ended = true);
        0 !== s2.avail_out && (0 !== s2.avail_in || 4 !== o2 && 2 !== o2) || ("string" === this.options.to ? this.onData(a.buf2binstring(i.shrinkBuf(s2.output, s2.next_out))) : this.onData(i.shrinkBuf(s2.output, s2.next_out)));
      } while ((0 < s2.avail_in || 0 === s2.avail_out) && 1 !== n2);
      return 4 === o2 ? (n2 = r.deflateEnd(this.strm), this.onEnd(n2), this.ended = true, n2 === c) : 2 !== o2 || (this.onEnd(c), !(s2.avail_out = 0));
    }, d.prototype.onData = function(t2) {
      this.chunks.push(t2);
    }, d.prototype.onEnd = function(t2) {
      t2 === c && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = i.flattenChunks(this.chunks)), this.chunks = [], this.err = t2, this.msg = this.strm.msg;
    }, n.Deflate = d, n.deflate = f, n.deflateRaw = function(t2, e2) {
      return (e2 = e2 || {}).raw = true, f(t2, e2);
    }, n.gzip = function(t2, e2) {
      return (e2 = e2 || {}).gzip = true, f(t2, e2);
    };
  }, { "./utils/common": 4, "./utils/strings": 5, "./zlib/deflate": 9, "./zlib/messages": 14, "./zlib/zstream": 16 }], 3: [function(t, e, n) {
    var r = t("./zlib/inflate"), i = t("./utils/common"), a = t("./utils/strings"), o = t("./zlib/constants"), s = t("./zlib/messages"), l = t("./zlib/zstream"), c = t("./zlib/gzheader"), u = Object.prototype.toString;
    function h(t2) {
      if (!(this instanceof h)) return new h(t2);
      this.options = i.assign({ chunkSize: 16384, windowBits: 0, to: "" }, t2 || {});
      var e2 = this.options;
      e2.raw && 0 <= e2.windowBits && e2.windowBits < 16 && (e2.windowBits = -e2.windowBits, 0 === e2.windowBits && (e2.windowBits = -15)), !(0 <= e2.windowBits && e2.windowBits < 16) || t2 && t2.windowBits || (e2.windowBits += 32), 15 < e2.windowBits && e2.windowBits < 48 && 0 == (15 & e2.windowBits) && (e2.windowBits |= 15), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new l(), this.strm.avail_out = 0;
      var n2 = r.inflateInit2(this.strm, e2.windowBits);
      if (n2 !== o.Z_OK) throw new Error(s[n2]);
      if (this.header = new c(), r.inflateGetHeader(this.strm, this.header), e2.dictionary && ("string" == typeof e2.dictionary ? e2.dictionary = a.string2buf(e2.dictionary) : "[object ArrayBuffer]" === u.call(e2.dictionary) && (e2.dictionary = new Uint8Array(e2.dictionary)), e2.raw && (n2 = r.inflateSetDictionary(this.strm, e2.dictionary)) !== o.Z_OK)) throw new Error(s[n2]);
    }
    function p(t2, e2) {
      var n2 = new h(e2);
      if (n2.push(t2, true), n2.err) throw n2.msg || s[n2.err];
      return n2.result;
    }
    h.prototype.push = function(t2, e2) {
      var n2, s2, l2, c2, h2, p2 = this.strm, d = this.options.chunkSize, f = this.options.dictionary, m = false;
      if (this.ended) return false;
      s2 = e2 === ~~e2 ? e2 : true === e2 ? o.Z_FINISH : o.Z_NO_FLUSH, "string" == typeof t2 ? p2.input = a.binstring2buf(t2) : "[object ArrayBuffer]" === u.call(t2) ? p2.input = new Uint8Array(t2) : p2.input = t2, p2.next_in = 0, p2.avail_in = p2.input.length;
      do {
        if (0 === p2.avail_out && (p2.output = new i.Buf8(d), p2.next_out = 0, p2.avail_out = d), (n2 = r.inflate(p2, o.Z_NO_FLUSH)) === o.Z_NEED_DICT && f && (n2 = r.inflateSetDictionary(this.strm, f)), n2 === o.Z_BUF_ERROR && true === m && (n2 = o.Z_OK, m = false), n2 !== o.Z_STREAM_END && n2 !== o.Z_OK) return this.onEnd(n2), !(this.ended = true);
        p2.next_out && (0 !== p2.avail_out && n2 !== o.Z_STREAM_END && (0 !== p2.avail_in || s2 !== o.Z_FINISH && s2 !== o.Z_SYNC_FLUSH) || ("string" === this.options.to ? (l2 = a.utf8border(p2.output, p2.next_out), c2 = p2.next_out - l2, h2 = a.buf2string(p2.output, l2), p2.next_out = c2, p2.avail_out = d - c2, c2 && i.arraySet(p2.output, p2.output, l2, c2, 0), this.onData(h2)) : this.onData(i.shrinkBuf(p2.output, p2.next_out)))), 0 === p2.avail_in && 0 === p2.avail_out && (m = true);
      } while ((0 < p2.avail_in || 0 === p2.avail_out) && n2 !== o.Z_STREAM_END);
      return n2 === o.Z_STREAM_END && (s2 = o.Z_FINISH), s2 === o.Z_FINISH ? (n2 = r.inflateEnd(this.strm), this.onEnd(n2), this.ended = true, n2 === o.Z_OK) : s2 !== o.Z_SYNC_FLUSH || (this.onEnd(o.Z_OK), !(p2.avail_out = 0));
    }, h.prototype.onData = function(t2) {
      this.chunks.push(t2);
    }, h.prototype.onEnd = function(t2) {
      t2 === o.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = i.flattenChunks(this.chunks)), this.chunks = [], this.err = t2, this.msg = this.strm.msg;
    }, n.Inflate = h, n.inflate = p, n.inflateRaw = function(t2, e2) {
      return (e2 = e2 || {}).raw = true, p(t2, e2);
    }, n.ungzip = p;
  }, { "./utils/common": 4, "./utils/strings": 5, "./zlib/constants": 7, "./zlib/gzheader": 10, "./zlib/inflate": 12, "./zlib/messages": 14, "./zlib/zstream": 16 }], 4: [function(t, e, n) {
    var r = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
    n.assign = function(t2) {
      for (var e2, n2, r2 = Array.prototype.slice.call(arguments, 1); r2.length; ) {
        var i2 = r2.shift();
        if (i2) {
          if ("object" != typeof i2) throw new TypeError(i2 + "must be non-object");
          for (var a2 in i2) e2 = i2, n2 = a2, Object.prototype.hasOwnProperty.call(e2, n2) && (t2[a2] = i2[a2]);
        }
      }
      return t2;
    }, n.shrinkBuf = function(t2, e2) {
      return t2.length === e2 ? t2 : t2.subarray ? t2.subarray(0, e2) : (t2.length = e2, t2);
    };
    var i = { arraySet: function(t2, e2, n2, r2, i2) {
      if (e2.subarray && t2.subarray) t2.set(e2.subarray(n2, n2 + r2), i2);
      else for (var a2 = 0; a2 < r2; a2++) t2[i2 + a2] = e2[n2 + a2];
    }, flattenChunks: function(t2) {
      var e2, n2, r2, i2, a2, o;
      for (e2 = r2 = 0, n2 = t2.length; e2 < n2; e2++) r2 += t2[e2].length;
      for (o = new Uint8Array(r2), e2 = i2 = 0, n2 = t2.length; e2 < n2; e2++) a2 = t2[e2], o.set(a2, i2), i2 += a2.length;
      return o;
    } }, a = { arraySet: function(t2, e2, n2, r2, i2) {
      for (var a2 = 0; a2 < r2; a2++) t2[i2 + a2] = e2[n2 + a2];
    }, flattenChunks: function(t2) {
      return [].concat.apply([], t2);
    } };
    n.setTyped = function(t2) {
      t2 ? (n.Buf8 = Uint8Array, n.Buf16 = Uint16Array, n.Buf32 = Int32Array, n.assign(n, i)) : (n.Buf8 = Array, n.Buf16 = Array, n.Buf32 = Array, n.assign(n, a));
    }, n.setTyped(r);
  }, {}], 5: [function(t, e, n) {
    var r = t("./common"), i = true, a = true;
    try {
      String.fromCharCode.apply(null, [0]);
    } catch (t2) {
      i = false;
    }
    try {
      String.fromCharCode.apply(null, new Uint8Array(1));
    } catch (t2) {
      a = false;
    }
    for (var o = new r.Buf8(256), s = 0; s < 256; s++) o[s] = 252 <= s ? 6 : 248 <= s ? 5 : 240 <= s ? 4 : 224 <= s ? 3 : 192 <= s ? 2 : 1;
    function l(t2, e2) {
      if (e2 < 65534 && (t2.subarray && a || !t2.subarray && i)) return String.fromCharCode.apply(null, r.shrinkBuf(t2, e2));
      for (var n2 = "", o2 = 0; o2 < e2; o2++) n2 += String.fromCharCode(t2[o2]);
      return n2;
    }
    o[254] = o[254] = 1, n.string2buf = function(t2) {
      var e2, n2, i2, a2, o2, s2 = t2.length, l2 = 0;
      for (a2 = 0; a2 < s2; a2++) 55296 == (64512 & (n2 = t2.charCodeAt(a2))) && a2 + 1 < s2 && 56320 == (64512 & (i2 = t2.charCodeAt(a2 + 1))) && (n2 = 65536 + (n2 - 55296 << 10) + (i2 - 56320), a2++), l2 += n2 < 128 ? 1 : n2 < 2048 ? 2 : n2 < 65536 ? 3 : 4;
      for (e2 = new r.Buf8(l2), a2 = o2 = 0; o2 < l2; a2++) 55296 == (64512 & (n2 = t2.charCodeAt(a2))) && a2 + 1 < s2 && 56320 == (64512 & (i2 = t2.charCodeAt(a2 + 1))) && (n2 = 65536 + (n2 - 55296 << 10) + (i2 - 56320), a2++), n2 < 128 ? e2[o2++] = n2 : (n2 < 2048 ? e2[o2++] = 192 | n2 >>> 6 : (n2 < 65536 ? e2[o2++] = 224 | n2 >>> 12 : (e2[o2++] = 240 | n2 >>> 18, e2[o2++] = 128 | n2 >>> 12 & 63), e2[o2++] = 128 | n2 >>> 6 & 63), e2[o2++] = 128 | 63 & n2);
      return e2;
    }, n.buf2binstring = function(t2) {
      return l(t2, t2.length);
    }, n.binstring2buf = function(t2) {
      for (var e2 = new r.Buf8(t2.length), n2 = 0, i2 = e2.length; n2 < i2; n2++) e2[n2] = t2.charCodeAt(n2);
      return e2;
    }, n.buf2string = function(t2, e2) {
      var n2, r2, i2, a2, s2 = e2 || t2.length, c = new Array(2 * s2);
      for (n2 = r2 = 0; n2 < s2; ) if ((i2 = t2[n2++]) < 128) c[r2++] = i2;
      else if (4 < (a2 = o[i2])) c[r2++] = 65533, n2 += a2 - 1;
      else {
        for (i2 &= 2 === a2 ? 31 : 3 === a2 ? 15 : 7; 1 < a2 && n2 < s2; ) i2 = i2 << 6 | 63 & t2[n2++], a2--;
        1 < a2 ? c[r2++] = 65533 : i2 < 65536 ? c[r2++] = i2 : (i2 -= 65536, c[r2++] = 55296 | i2 >> 10 & 1023, c[r2++] = 56320 | 1023 & i2);
      }
      return l(c, r2);
    }, n.utf8border = function(t2, e2) {
      var n2;
      for ((e2 = e2 || t2.length) > t2.length && (e2 = t2.length), n2 = e2 - 1; 0 <= n2 && 128 == (192 & t2[n2]); ) n2--;
      return !(n2 < 0) && 0 !== n2 && n2 + o[t2[n2]] > e2 ? n2 : e2;
    };
  }, { "./common": 4 }], 6: [function(t, e, n) {
    e.exports = function(t2, e2, n2, r) {
      for (var i = 65535 & t2 | 0, a = t2 >>> 16 & 65535 | 0, o = 0; 0 !== n2; ) {
        for (n2 -= o = 2e3 < n2 ? 2e3 : n2; a = a + (i = i + e2[r++] | 0) | 0, --o; ) ;
        i %= 65521, a %= 65521;
      }
      return i | a << 16 | 0;
    };
  }, {}], 7: [function(t, e, n) {
    e.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
  }, {}], 8: [function(t, e, n) {
    var r = function() {
      for (var t2, e2 = [], n2 = 0; n2 < 256; n2++) {
        t2 = n2;
        for (var r2 = 0; r2 < 8; r2++) t2 = 1 & t2 ? 3988292384 ^ t2 >>> 1 : t2 >>> 1;
        e2[n2] = t2;
      }
      return e2;
    }();
    e.exports = function(t2, e2, n2, i) {
      var a = r, o = i + n2;
      t2 ^= -1;
      for (var s = i; s < o; s++) t2 = t2 >>> 8 ^ a[255 & (t2 ^ e2[s])];
      return -1 ^ t2;
    };
  }, {}], 9: [function(t, e, n) {
    var r, i = t("../utils/common"), a = t("./trees"), o = t("./adler32"), s = t("./crc32"), l = t("./messages"), c = 0, u = 0, h = -2, p = 2, d = 8, f = 286, m = 30, g = 19, y = 2 * f + 1, v = 15, x = 3, w = 258, b = w + x + 1, M = 42, _ = 113;
    function T(t2, e2) {
      return t2.msg = l[e2], e2;
    }
    function C(t2) {
      return (t2 << 1) - (4 < t2 ? 9 : 0);
    }
    function S(t2) {
      for (var e2 = t2.length; 0 <= --e2; ) t2[e2] = 0;
    }
    function D(t2) {
      var e2 = t2.state, n2 = e2.pending;
      n2 > t2.avail_out && (n2 = t2.avail_out), 0 !== n2 && (i.arraySet(t2.output, e2.pending_buf, e2.pending_out, n2, t2.next_out), t2.next_out += n2, e2.pending_out += n2, t2.total_out += n2, t2.avail_out -= n2, e2.pending -= n2, 0 === e2.pending && (e2.pending_out = 0));
    }
    function E(t2, e2) {
      a._tr_flush_block(t2, 0 <= t2.block_start ? t2.block_start : -1, t2.strstart - t2.block_start, e2), t2.block_start = t2.strstart, D(t2.strm);
    }
    function O(t2, e2) {
      t2.pending_buf[t2.pending++] = e2;
    }
    function A(t2, e2) {
      t2.pending_buf[t2.pending++] = e2 >>> 8 & 255, t2.pending_buf[t2.pending++] = 255 & e2;
    }
    function P(t2, e2) {
      var n2, r2, i2 = t2.max_chain_length, a2 = t2.strstart, o2 = t2.prev_length, s2 = t2.nice_match, l2 = t2.strstart > t2.w_size - b ? t2.strstart - (t2.w_size - b) : 0, c2 = t2.window, u2 = t2.w_mask, h2 = t2.prev, p2 = t2.strstart + w, d2 = c2[a2 + o2 - 1], f2 = c2[a2 + o2];
      t2.prev_length >= t2.good_match && (i2 >>= 2), s2 > t2.lookahead && (s2 = t2.lookahead);
      do {
        if (c2[(n2 = e2) + o2] === f2 && c2[n2 + o2 - 1] === d2 && c2[n2] === c2[a2] && c2[++n2] === c2[a2 + 1]) {
          a2 += 2, n2++;
          do {
          } while (c2[++a2] === c2[++n2] && c2[++a2] === c2[++n2] && c2[++a2] === c2[++n2] && c2[++a2] === c2[++n2] && c2[++a2] === c2[++n2] && c2[++a2] === c2[++n2] && c2[++a2] === c2[++n2] && c2[++a2] === c2[++n2] && a2 < p2);
          if (r2 = w - (p2 - a2), a2 = p2 - w, o2 < r2) {
            if (t2.match_start = e2, s2 <= (o2 = r2)) break;
            d2 = c2[a2 + o2 - 1], f2 = c2[a2 + o2];
          }
        }
      } while ((e2 = h2[e2 & u2]) > l2 && 0 != --i2);
      return o2 <= t2.lookahead ? o2 : t2.lookahead;
    }
    function R(t2) {
      var e2, n2, r2, a2, l2, c2, u2, h2, p2, d2, f2 = t2.w_size;
      do {
        if (a2 = t2.window_size - t2.lookahead - t2.strstart, t2.strstart >= f2 + (f2 - b)) {
          for (i.arraySet(t2.window, t2.window, f2, f2, 0), t2.match_start -= f2, t2.strstart -= f2, t2.block_start -= f2, e2 = n2 = t2.hash_size; r2 = t2.head[--e2], t2.head[e2] = f2 <= r2 ? r2 - f2 : 0, --n2; ) ;
          for (e2 = n2 = f2; r2 = t2.prev[--e2], t2.prev[e2] = f2 <= r2 ? r2 - f2 : 0, --n2; ) ;
          a2 += f2;
        }
        if (0 === t2.strm.avail_in) break;
        if (c2 = t2.strm, u2 = t2.window, h2 = t2.strstart + t2.lookahead, d2 = void 0, (p2 = a2) < (d2 = c2.avail_in) && (d2 = p2), n2 = 0 === d2 ? 0 : (c2.avail_in -= d2, i.arraySet(u2, c2.input, c2.next_in, d2, h2), 1 === c2.state.wrap ? c2.adler = o(c2.adler, u2, d2, h2) : 2 === c2.state.wrap && (c2.adler = s(c2.adler, u2, d2, h2)), c2.next_in += d2, c2.total_in += d2, d2), t2.lookahead += n2, t2.lookahead + t2.insert >= x) for (l2 = t2.strstart - t2.insert, t2.ins_h = t2.window[l2], t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[l2 + 1]) & t2.hash_mask; t2.insert && (t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[l2 + x - 1]) & t2.hash_mask, t2.prev[l2 & t2.w_mask] = t2.head[t2.ins_h], t2.head[t2.ins_h] = l2, l2++, t2.insert--, !(t2.lookahead + t2.insert < x)); ) ;
      } while (t2.lookahead < b && 0 !== t2.strm.avail_in);
    }
    function L(t2, e2) {
      for (var n2, r2; ; ) {
        if (t2.lookahead < b) {
          if (R(t2), t2.lookahead < b && e2 === c) return 1;
          if (0 === t2.lookahead) break;
        }
        if (n2 = 0, t2.lookahead >= x && (t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[t2.strstart + x - 1]) & t2.hash_mask, n2 = t2.prev[t2.strstart & t2.w_mask] = t2.head[t2.ins_h], t2.head[t2.ins_h] = t2.strstart), 0 !== n2 && t2.strstart - n2 <= t2.w_size - b && (t2.match_length = P(t2, n2)), t2.match_length >= x) if (r2 = a._tr_tally(t2, t2.strstart - t2.match_start, t2.match_length - x), t2.lookahead -= t2.match_length, t2.match_length <= t2.max_lazy_match && t2.lookahead >= x) {
          for (t2.match_length--; t2.strstart++, t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[t2.strstart + x - 1]) & t2.hash_mask, n2 = t2.prev[t2.strstart & t2.w_mask] = t2.head[t2.ins_h], t2.head[t2.ins_h] = t2.strstart, 0 != --t2.match_length; ) ;
          t2.strstart++;
        } else t2.strstart += t2.match_length, t2.match_length = 0, t2.ins_h = t2.window[t2.strstart], t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[t2.strstart + 1]) & t2.hash_mask;
        else r2 = a._tr_tally(t2, 0, t2.window[t2.strstart]), t2.lookahead--, t2.strstart++;
        if (r2 && (E(t2, false), 0 === t2.strm.avail_out)) return 1;
      }
      return t2.insert = t2.strstart < x - 1 ? t2.strstart : x - 1, 4 === e2 ? (E(t2, true), 0 === t2.strm.avail_out ? 3 : 4) : t2.last_lit && (E(t2, false), 0 === t2.strm.avail_out) ? 1 : 2;
    }
    function I(t2, e2) {
      for (var n2, r2, i2; ; ) {
        if (t2.lookahead < b) {
          if (R(t2), t2.lookahead < b && e2 === c) return 1;
          if (0 === t2.lookahead) break;
        }
        if (n2 = 0, t2.lookahead >= x && (t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[t2.strstart + x - 1]) & t2.hash_mask, n2 = t2.prev[t2.strstart & t2.w_mask] = t2.head[t2.ins_h], t2.head[t2.ins_h] = t2.strstart), t2.prev_length = t2.match_length, t2.prev_match = t2.match_start, t2.match_length = x - 1, 0 !== n2 && t2.prev_length < t2.max_lazy_match && t2.strstart - n2 <= t2.w_size - b && (t2.match_length = P(t2, n2), t2.match_length <= 5 && (1 === t2.strategy || t2.match_length === x && 4096 < t2.strstart - t2.match_start) && (t2.match_length = x - 1)), t2.prev_length >= x && t2.match_length <= t2.prev_length) {
          for (i2 = t2.strstart + t2.lookahead - x, r2 = a._tr_tally(t2, t2.strstart - 1 - t2.prev_match, t2.prev_length - x), t2.lookahead -= t2.prev_length - 1, t2.prev_length -= 2; ++t2.strstart <= i2 && (t2.ins_h = (t2.ins_h << t2.hash_shift ^ t2.window[t2.strstart + x - 1]) & t2.hash_mask, n2 = t2.prev[t2.strstart & t2.w_mask] = t2.head[t2.ins_h], t2.head[t2.ins_h] = t2.strstart), 0 != --t2.prev_length; ) ;
          if (t2.match_available = 0, t2.match_length = x - 1, t2.strstart++, r2 && (E(t2, false), 0 === t2.strm.avail_out)) return 1;
        } else if (t2.match_available) {
          if ((r2 = a._tr_tally(t2, 0, t2.window[t2.strstart - 1])) && E(t2, false), t2.strstart++, t2.lookahead--, 0 === t2.strm.avail_out) return 1;
        } else t2.match_available = 1, t2.strstart++, t2.lookahead--;
      }
      return t2.match_available && (r2 = a._tr_tally(t2, 0, t2.window[t2.strstart - 1]), t2.match_available = 0), t2.insert = t2.strstart < x - 1 ? t2.strstart : x - 1, 4 === e2 ? (E(t2, true), 0 === t2.strm.avail_out ? 3 : 4) : t2.last_lit && (E(t2, false), 0 === t2.strm.avail_out) ? 1 : 2;
    }
    function k(t2, e2, n2, r2, i2) {
      this.good_length = t2, this.max_lazy = e2, this.nice_length = n2, this.max_chain = r2, this.func = i2;
    }
    function j(t2) {
      var e2;
      return t2 && t2.state ? (t2.total_in = t2.total_out = 0, t2.data_type = p, (e2 = t2.state).pending = 0, e2.pending_out = 0, e2.wrap < 0 && (e2.wrap = -e2.wrap), e2.status = e2.wrap ? M : _, t2.adler = 2 === e2.wrap ? 0 : 1, e2.last_flush = c, a._tr_init(e2), u) : T(t2, h);
    }
    function N(t2) {
      var e2, n2 = j(t2);
      return n2 === u && ((e2 = t2.state).window_size = 2 * e2.w_size, S(e2.head), e2.max_lazy_match = r[e2.level].max_lazy, e2.good_match = r[e2.level].good_length, e2.nice_match = r[e2.level].nice_length, e2.max_chain_length = r[e2.level].max_chain, e2.strstart = 0, e2.block_start = 0, e2.lookahead = 0, e2.insert = 0, e2.match_length = e2.prev_length = x - 1, e2.match_available = 0, e2.ins_h = 0), n2;
    }
    function V(t2, e2, n2, r2, a2, o2) {
      if (!t2) return h;
      var s2 = 1;
      if (-1 === e2 && (e2 = 6), r2 < 0 ? (s2 = 0, r2 = -r2) : 15 < r2 && (s2 = 2, r2 -= 16), a2 < 1 || 9 < a2 || n2 !== d || r2 < 8 || 15 < r2 || e2 < 0 || 9 < e2 || o2 < 0 || 4 < o2) return T(t2, h);
      8 === r2 && (r2 = 9);
      var l2 = new function() {
        this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = d, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new i.Buf16(2 * y), this.dyn_dtree = new i.Buf16(2 * (2 * m + 1)), this.bl_tree = new i.Buf16(2 * (2 * g + 1)), S(this.dyn_ltree), S(this.dyn_dtree), S(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new i.Buf16(v + 1), this.heap = new i.Buf16(2 * f + 1), S(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new i.Buf16(2 * f + 1), S(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
      }();
      return (t2.state = l2).strm = t2, l2.wrap = s2, l2.gzhead = null, l2.w_bits = r2, l2.w_size = 1 << l2.w_bits, l2.w_mask = l2.w_size - 1, l2.hash_bits = a2 + 7, l2.hash_size = 1 << l2.hash_bits, l2.hash_mask = l2.hash_size - 1, l2.hash_shift = ~~((l2.hash_bits + x - 1) / x), l2.window = new i.Buf8(2 * l2.w_size), l2.head = new i.Buf16(l2.hash_size), l2.prev = new i.Buf16(l2.w_size), l2.lit_bufsize = 1 << a2 + 6, l2.pending_buf_size = 4 * l2.lit_bufsize, l2.pending_buf = new i.Buf8(l2.pending_buf_size), l2.d_buf = +l2.lit_bufsize, l2.l_buf = 3 * l2.lit_bufsize, l2.level = e2, l2.strategy = o2, l2.method = n2, N(t2);
    }
    r = [new k(0, 0, 0, 0, function(t2, e2) {
      var n2 = 65535;
      for (n2 > t2.pending_buf_size - 5 && (n2 = t2.pending_buf_size - 5); ; ) {
        if (t2.lookahead <= 1) {
          if (R(t2), 0 === t2.lookahead && e2 === c) return 1;
          if (0 === t2.lookahead) break;
        }
        t2.strstart += t2.lookahead, t2.lookahead = 0;
        var r2 = t2.block_start + n2;
        if ((0 === t2.strstart || t2.strstart >= r2) && (t2.lookahead = t2.strstart - r2, t2.strstart = r2, E(t2, false), 0 === t2.strm.avail_out)) return 1;
        if (t2.strstart - t2.block_start >= t2.w_size - b && (E(t2, false), 0 === t2.strm.avail_out)) return 1;
      }
      return t2.insert = 0, 4 === e2 ? (E(t2, true), 0 === t2.strm.avail_out ? 3 : 4) : (t2.strstart > t2.block_start && (E(t2, false), t2.strm.avail_out), 1);
    }), new k(4, 4, 8, 4, L), new k(4, 5, 16, 8, L), new k(4, 6, 32, 32, L), new k(4, 4, 16, 16, I), new k(8, 16, 32, 32, I), new k(8, 16, 128, 128, I), new k(8, 32, 128, 256, I), new k(32, 128, 258, 1024, I), new k(32, 258, 258, 4096, I)], n.deflateInit = function(t2, e2) {
      return V(t2, e2, d, 15, 8, 0);
    }, n.deflateInit2 = V, n.deflateReset = N, n.deflateResetKeep = j, n.deflateSetHeader = function(t2, e2) {
      return t2 && t2.state && 2 === t2.state.wrap ? (t2.state.gzhead = e2, u) : h;
    }, n.deflate = function(t2, e2) {
      var n2, i2, o2, l2;
      if (!t2 || !t2.state || 5 < e2 || e2 < 0) return t2 ? T(t2, h) : h;
      if (i2 = t2.state, !t2.output || !t2.input && 0 !== t2.avail_in || 666 === i2.status && 4 !== e2) return T(t2, 0 === t2.avail_out ? -5 : h);
      if (i2.strm = t2, n2 = i2.last_flush, i2.last_flush = e2, i2.status === M) if (2 === i2.wrap) t2.adler = 0, O(i2, 31), O(i2, 139), O(i2, 8), i2.gzhead ? (O(i2, (i2.gzhead.text ? 1 : 0) + (i2.gzhead.hcrc ? 2 : 0) + (i2.gzhead.extra ? 4 : 0) + (i2.gzhead.name ? 8 : 0) + (i2.gzhead.comment ? 16 : 0)), O(i2, 255 & i2.gzhead.time), O(i2, i2.gzhead.time >> 8 & 255), O(i2, i2.gzhead.time >> 16 & 255), O(i2, i2.gzhead.time >> 24 & 255), O(i2, 9 === i2.level ? 2 : 2 <= i2.strategy || i2.level < 2 ? 4 : 0), O(i2, 255 & i2.gzhead.os), i2.gzhead.extra && i2.gzhead.extra.length && (O(i2, 255 & i2.gzhead.extra.length), O(i2, i2.gzhead.extra.length >> 8 & 255)), i2.gzhead.hcrc && (t2.adler = s(t2.adler, i2.pending_buf, i2.pending, 0)), i2.gzindex = 0, i2.status = 69) : (O(i2, 0), O(i2, 0), O(i2, 0), O(i2, 0), O(i2, 0), O(i2, 9 === i2.level ? 2 : 2 <= i2.strategy || i2.level < 2 ? 4 : 0), O(i2, 3), i2.status = _);
      else {
        var p2 = d + (i2.w_bits - 8 << 4) << 8;
        p2 |= (2 <= i2.strategy || i2.level < 2 ? 0 : i2.level < 6 ? 1 : 6 === i2.level ? 2 : 3) << 6, 0 !== i2.strstart && (p2 |= 32), p2 += 31 - p2 % 31, i2.status = _, A(i2, p2), 0 !== i2.strstart && (A(i2, t2.adler >>> 16), A(i2, 65535 & t2.adler)), t2.adler = 1;
      }
      if (69 === i2.status) if (i2.gzhead.extra) {
        for (o2 = i2.pending; i2.gzindex < (65535 & i2.gzhead.extra.length) && (i2.pending !== i2.pending_buf_size || (i2.gzhead.hcrc && i2.pending > o2 && (t2.adler = s(t2.adler, i2.pending_buf, i2.pending - o2, o2)), D(t2), o2 = i2.pending, i2.pending !== i2.pending_buf_size)); ) O(i2, 255 & i2.gzhead.extra[i2.gzindex]), i2.gzindex++;
        i2.gzhead.hcrc && i2.pending > o2 && (t2.adler = s(t2.adler, i2.pending_buf, i2.pending - o2, o2)), i2.gzindex === i2.gzhead.extra.length && (i2.gzindex = 0, i2.status = 73);
      } else i2.status = 73;
      if (73 === i2.status) if (i2.gzhead.name) {
        o2 = i2.pending;
        do {
          if (i2.pending === i2.pending_buf_size && (i2.gzhead.hcrc && i2.pending > o2 && (t2.adler = s(t2.adler, i2.pending_buf, i2.pending - o2, o2)), D(t2), o2 = i2.pending, i2.pending === i2.pending_buf_size)) {
            l2 = 1;
            break;
          }
          l2 = i2.gzindex < i2.gzhead.name.length ? 255 & i2.gzhead.name.charCodeAt(i2.gzindex++) : 0, O(i2, l2);
        } while (0 !== l2);
        i2.gzhead.hcrc && i2.pending > o2 && (t2.adler = s(t2.adler, i2.pending_buf, i2.pending - o2, o2)), 0 === l2 && (i2.gzindex = 0, i2.status = 91);
      } else i2.status = 91;
      if (91 === i2.status) if (i2.gzhead.comment) {
        o2 = i2.pending;
        do {
          if (i2.pending === i2.pending_buf_size && (i2.gzhead.hcrc && i2.pending > o2 && (t2.adler = s(t2.adler, i2.pending_buf, i2.pending - o2, o2)), D(t2), o2 = i2.pending, i2.pending === i2.pending_buf_size)) {
            l2 = 1;
            break;
          }
          l2 = i2.gzindex < i2.gzhead.comment.length ? 255 & i2.gzhead.comment.charCodeAt(i2.gzindex++) : 0, O(i2, l2);
        } while (0 !== l2);
        i2.gzhead.hcrc && i2.pending > o2 && (t2.adler = s(t2.adler, i2.pending_buf, i2.pending - o2, o2)), 0 === l2 && (i2.status = 103);
      } else i2.status = 103;
      if (103 === i2.status && (i2.gzhead.hcrc ? (i2.pending + 2 > i2.pending_buf_size && D(t2), i2.pending + 2 <= i2.pending_buf_size && (O(i2, 255 & t2.adler), O(i2, t2.adler >> 8 & 255), t2.adler = 0, i2.status = _)) : i2.status = _), 0 !== i2.pending) {
        if (D(t2), 0 === t2.avail_out) return i2.last_flush = -1, u;
      } else if (0 === t2.avail_in && C(e2) <= C(n2) && 4 !== e2) return T(t2, -5);
      if (666 === i2.status && 0 !== t2.avail_in) return T(t2, -5);
      if (0 !== t2.avail_in || 0 !== i2.lookahead || e2 !== c && 666 !== i2.status) {
        var f2 = 2 === i2.strategy ? function(t3, e3) {
          for (var n3; ; ) {
            if (0 === t3.lookahead && (R(t3), 0 === t3.lookahead)) {
              if (e3 === c) return 1;
              break;
            }
            if (t3.match_length = 0, n3 = a._tr_tally(t3, 0, t3.window[t3.strstart]), t3.lookahead--, t3.strstart++, n3 && (E(t3, false), 0 === t3.strm.avail_out)) return 1;
          }
          return t3.insert = 0, 4 === e3 ? (E(t3, true), 0 === t3.strm.avail_out ? 3 : 4) : t3.last_lit && (E(t3, false), 0 === t3.strm.avail_out) ? 1 : 2;
        }(i2, e2) : 3 === i2.strategy ? function(t3, e3) {
          for (var n3, r2, i3, o3, s2 = t3.window; ; ) {
            if (t3.lookahead <= w) {
              if (R(t3), t3.lookahead <= w && e3 === c) return 1;
              if (0 === t3.lookahead) break;
            }
            if (t3.match_length = 0, t3.lookahead >= x && 0 < t3.strstart && (r2 = s2[i3 = t3.strstart - 1]) === s2[++i3] && r2 === s2[++i3] && r2 === s2[++i3]) {
              o3 = t3.strstart + w;
              do {
              } while (r2 === s2[++i3] && r2 === s2[++i3] && r2 === s2[++i3] && r2 === s2[++i3] && r2 === s2[++i3] && r2 === s2[++i3] && r2 === s2[++i3] && r2 === s2[++i3] && i3 < o3);
              t3.match_length = w - (o3 - i3), t3.match_length > t3.lookahead && (t3.match_length = t3.lookahead);
            }
            if (t3.match_length >= x ? (n3 = a._tr_tally(t3, 1, t3.match_length - x), t3.lookahead -= t3.match_length, t3.strstart += t3.match_length, t3.match_length = 0) : (n3 = a._tr_tally(t3, 0, t3.window[t3.strstart]), t3.lookahead--, t3.strstart++), n3 && (E(t3, false), 0 === t3.strm.avail_out)) return 1;
          }
          return t3.insert = 0, 4 === e3 ? (E(t3, true), 0 === t3.strm.avail_out ? 3 : 4) : t3.last_lit && (E(t3, false), 0 === t3.strm.avail_out) ? 1 : 2;
        }(i2, e2) : r[i2.level].func(i2, e2);
        if (3 !== f2 && 4 !== f2 || (i2.status = 666), 1 === f2 || 3 === f2) return 0 === t2.avail_out && (i2.last_flush = -1), u;
        if (2 === f2 && (1 === e2 ? a._tr_align(i2) : 5 !== e2 && (a._tr_stored_block(i2, 0, 0, false), 3 === e2 && (S(i2.head), 0 === i2.lookahead && (i2.strstart = 0, i2.block_start = 0, i2.insert = 0))), D(t2), 0 === t2.avail_out)) return i2.last_flush = -1, u;
      }
      return 4 !== e2 ? u : i2.wrap <= 0 ? 1 : (2 === i2.wrap ? (O(i2, 255 & t2.adler), O(i2, t2.adler >> 8 & 255), O(i2, t2.adler >> 16 & 255), O(i2, t2.adler >> 24 & 255), O(i2, 255 & t2.total_in), O(i2, t2.total_in >> 8 & 255), O(i2, t2.total_in >> 16 & 255), O(i2, t2.total_in >> 24 & 255)) : (A(i2, t2.adler >>> 16), A(i2, 65535 & t2.adler)), D(t2), 0 < i2.wrap && (i2.wrap = -i2.wrap), 0 !== i2.pending ? u : 1);
    }, n.deflateEnd = function(t2) {
      var e2;
      return t2 && t2.state ? (e2 = t2.state.status) !== M && 69 !== e2 && 73 !== e2 && 91 !== e2 && 103 !== e2 && e2 !== _ && 666 !== e2 ? T(t2, h) : (t2.state = null, e2 === _ ? T(t2, -3) : u) : h;
    }, n.deflateSetDictionary = function(t2, e2) {
      var n2, r2, a2, s2, l2, c2, p2, d2, f2 = e2.length;
      if (!t2 || !t2.state) return h;
      if (2 === (s2 = (n2 = t2.state).wrap) || 1 === s2 && n2.status !== M || n2.lookahead) return h;
      for (1 === s2 && (t2.adler = o(t2.adler, e2, f2, 0)), n2.wrap = 0, f2 >= n2.w_size && (0 === s2 && (S(n2.head), n2.strstart = 0, n2.block_start = 0, n2.insert = 0), d2 = new i.Buf8(n2.w_size), i.arraySet(d2, e2, f2 - n2.w_size, n2.w_size, 0), e2 = d2, f2 = n2.w_size), l2 = t2.avail_in, c2 = t2.next_in, p2 = t2.input, t2.avail_in = f2, t2.next_in = 0, t2.input = e2, R(n2); n2.lookahead >= x; ) {
        for (r2 = n2.strstart, a2 = n2.lookahead - (x - 1); n2.ins_h = (n2.ins_h << n2.hash_shift ^ n2.window[r2 + x - 1]) & n2.hash_mask, n2.prev[r2 & n2.w_mask] = n2.head[n2.ins_h], n2.head[n2.ins_h] = r2, r2++, --a2; ) ;
        n2.strstart = r2, n2.lookahead = x - 1, R(n2);
      }
      return n2.strstart += n2.lookahead, n2.block_start = n2.strstart, n2.insert = n2.lookahead, n2.lookahead = 0, n2.match_length = n2.prev_length = x - 1, n2.match_available = 0, t2.next_in = c2, t2.input = p2, t2.avail_in = l2, n2.wrap = s2, u;
    }, n.deflateInfo = "pako deflate (from Nodeca project)";
  }, { "../utils/common": 4, "./adler32": 6, "./crc32": 8, "./messages": 14, "./trees": 15 }], 10: [function(t, e, n) {
    e.exports = function() {
      this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = false;
    };
  }, {}], 11: [function(t, e, n) {
    e.exports = function(t2, e2) {
      var n2, r, i, a, o, s, l, c, u, h, p, d, f, m, g, y, v, x, w, b, M, _, T, C, S;
      n2 = t2.state, r = t2.next_in, C = t2.input, i = r + (t2.avail_in - 5), a = t2.next_out, S = t2.output, o = a - (e2 - t2.avail_out), s = a + (t2.avail_out - 257), l = n2.dmax, c = n2.wsize, u = n2.whave, h = n2.wnext, p = n2.window, d = n2.hold, f = n2.bits, m = n2.lencode, g = n2.distcode, y = (1 << n2.lenbits) - 1, v = (1 << n2.distbits) - 1;
      t: do {
        f < 15 && (d += C[r++] << f, f += 8, d += C[r++] << f, f += 8), x = m[d & y];
        e: for (; ; ) {
          if (d >>>= w = x >>> 24, f -= w, 0 == (w = x >>> 16 & 255)) S[a++] = 65535 & x;
          else {
            if (!(16 & w)) {
              if (0 == (64 & w)) {
                x = m[(65535 & x) + (d & (1 << w) - 1)];
                continue e;
              }
              if (32 & w) {
                n2.mode = 12;
                break t;
              }
              t2.msg = "invalid literal/length code", n2.mode = 30;
              break t;
            }
            b = 65535 & x, (w &= 15) && (f < w && (d += C[r++] << f, f += 8), b += d & (1 << w) - 1, d >>>= w, f -= w), f < 15 && (d += C[r++] << f, f += 8, d += C[r++] << f, f += 8), x = g[d & v];
            n: for (; ; ) {
              if (d >>>= w = x >>> 24, f -= w, !(16 & (w = x >>> 16 & 255))) {
                if (0 == (64 & w)) {
                  x = g[(65535 & x) + (d & (1 << w) - 1)];
                  continue n;
                }
                t2.msg = "invalid distance code", n2.mode = 30;
                break t;
              }
              if (M = 65535 & x, f < (w &= 15) && (d += C[r++] << f, (f += 8) < w && (d += C[r++] << f, f += 8)), l < (M += d & (1 << w) - 1)) {
                t2.msg = "invalid distance too far back", n2.mode = 30;
                break t;
              }
              if (d >>>= w, f -= w, (w = a - o) < M) {
                if (u < (w = M - w) && n2.sane) {
                  t2.msg = "invalid distance too far back", n2.mode = 30;
                  break t;
                }
                if (T = p, (_ = 0) === h) {
                  if (_ += c - w, w < b) {
                    for (b -= w; S[a++] = p[_++], --w; ) ;
                    _ = a - M, T = S;
                  }
                } else if (h < w) {
                  if (_ += c + h - w, (w -= h) < b) {
                    for (b -= w; S[a++] = p[_++], --w; ) ;
                    if (_ = 0, h < b) {
                      for (b -= w = h; S[a++] = p[_++], --w; ) ;
                      _ = a - M, T = S;
                    }
                  }
                } else if (_ += h - w, w < b) {
                  for (b -= w; S[a++] = p[_++], --w; ) ;
                  _ = a - M, T = S;
                }
                for (; 2 < b; ) S[a++] = T[_++], S[a++] = T[_++], S[a++] = T[_++], b -= 3;
                b && (S[a++] = T[_++], 1 < b && (S[a++] = T[_++]));
              } else {
                for (_ = a - M; S[a++] = S[_++], S[a++] = S[_++], S[a++] = S[_++], 2 < (b -= 3); ) ;
                b && (S[a++] = S[_++], 1 < b && (S[a++] = S[_++]));
              }
              break;
            }
          }
          break;
        }
      } while (r < i && a < s);
      r -= b = f >> 3, d &= (1 << (f -= b << 3)) - 1, t2.next_in = r, t2.next_out = a, t2.avail_in = r < i ? i - r + 5 : 5 - (r - i), t2.avail_out = a < s ? s - a + 257 : 257 - (a - s), n2.hold = d, n2.bits = f;
    };
  }, {}], 12: [function(t, e, n) {
    var r = t("../utils/common"), i = t("./adler32"), a = t("./crc32"), o = t("./inffast"), s = t("./inftrees"), l = 0, c = -2, u = 1, h = 852, p = 592;
    function d(t2) {
      return (t2 >>> 24 & 255) + (t2 >>> 8 & 65280) + ((65280 & t2) << 8) + ((255 & t2) << 24);
    }
    function f() {
      this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new r.Buf16(320), this.work = new r.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
    }
    function m(t2) {
      var e2;
      return t2 && t2.state ? (e2 = t2.state, t2.total_in = t2.total_out = e2.total = 0, t2.msg = "", e2.wrap && (t2.adler = 1 & e2.wrap), e2.mode = u, e2.last = 0, e2.havedict = 0, e2.dmax = 32768, e2.head = null, e2.hold = 0, e2.bits = 0, e2.lencode = e2.lendyn = new r.Buf32(h), e2.distcode = e2.distdyn = new r.Buf32(p), e2.sane = 1, e2.back = -1, l) : c;
    }
    function g(t2) {
      var e2;
      return t2 && t2.state ? ((e2 = t2.state).wsize = 0, e2.whave = 0, e2.wnext = 0, m(t2)) : c;
    }
    function y(t2, e2) {
      var n2, r2;
      return t2 && t2.state ? (r2 = t2.state, e2 < 0 ? (n2 = 0, e2 = -e2) : (n2 = 1 + (e2 >> 4), e2 < 48 && (e2 &= 15)), e2 && (e2 < 8 || 15 < e2) ? c : (null !== r2.window && r2.wbits !== e2 && (r2.window = null), r2.wrap = n2, r2.wbits = e2, g(t2))) : c;
    }
    function v(t2, e2) {
      var n2, r2;
      return t2 ? (r2 = new f(), (t2.state = r2).window = null, (n2 = y(t2, e2)) !== l && (t2.state = null), n2) : c;
    }
    var x, w, b = true;
    function M(t2) {
      if (b) {
        var e2;
        for (x = new r.Buf32(512), w = new r.Buf32(32), e2 = 0; e2 < 144; ) t2.lens[e2++] = 8;
        for (; e2 < 256; ) t2.lens[e2++] = 9;
        for (; e2 < 280; ) t2.lens[e2++] = 7;
        for (; e2 < 288; ) t2.lens[e2++] = 8;
        for (s(1, t2.lens, 0, 288, x, 0, t2.work, { bits: 9 }), e2 = 0; e2 < 32; ) t2.lens[e2++] = 5;
        s(2, t2.lens, 0, 32, w, 0, t2.work, { bits: 5 }), b = false;
      }
      t2.lencode = x, t2.lenbits = 9, t2.distcode = w, t2.distbits = 5;
    }
    function _(t2, e2, n2, i2) {
      var a2, o2 = t2.state;
      return null === o2.window && (o2.wsize = 1 << o2.wbits, o2.wnext = 0, o2.whave = 0, o2.window = new r.Buf8(o2.wsize)), i2 >= o2.wsize ? (r.arraySet(o2.window, e2, n2 - o2.wsize, o2.wsize, 0), o2.wnext = 0, o2.whave = o2.wsize) : (i2 < (a2 = o2.wsize - o2.wnext) && (a2 = i2), r.arraySet(o2.window, e2, n2 - i2, a2, o2.wnext), (i2 -= a2) ? (r.arraySet(o2.window, e2, n2 - i2, i2, 0), o2.wnext = i2, o2.whave = o2.wsize) : (o2.wnext += a2, o2.wnext === o2.wsize && (o2.wnext = 0), o2.whave < o2.wsize && (o2.whave += a2))), 0;
    }
    n.inflateReset = g, n.inflateReset2 = y, n.inflateResetKeep = m, n.inflateInit = function(t2) {
      return v(t2, 15);
    }, n.inflateInit2 = v, n.inflate = function(t2, e2) {
      var n2, h2, p2, f2, m2, g2, y2, v2, x2, w2, b2, T, C, S, D, E, O, A, P, R, L, I, k, j, N = 0, V = new r.Buf8(4), F = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
      if (!t2 || !t2.state || !t2.output || !t2.input && 0 !== t2.avail_in) return c;
      12 === (n2 = t2.state).mode && (n2.mode = 13), m2 = t2.next_out, p2 = t2.output, y2 = t2.avail_out, f2 = t2.next_in, h2 = t2.input, g2 = t2.avail_in, v2 = n2.hold, x2 = n2.bits, w2 = g2, b2 = y2, I = l;
      t: for (; ; ) switch (n2.mode) {
        case u:
          if (0 === n2.wrap) {
            n2.mode = 13;
            break;
          }
          for (; x2 < 16; ) {
            if (0 === g2) break t;
            g2--, v2 += h2[f2++] << x2, x2 += 8;
          }
          if (2 & n2.wrap && 35615 === v2) {
            V[n2.check = 0] = 255 & v2, V[1] = v2 >>> 8 & 255, n2.check = a(n2.check, V, 2, 0), x2 = v2 = 0, n2.mode = 2;
            break;
          }
          if (n2.flags = 0, n2.head && (n2.head.done = false), !(1 & n2.wrap) || (((255 & v2) << 8) + (v2 >> 8)) % 31) {
            t2.msg = "incorrect header check", n2.mode = 30;
            break;
          }
          if (8 != (15 & v2)) {
            t2.msg = "unknown compression method", n2.mode = 30;
            break;
          }
          if (x2 -= 4, L = 8 + (15 & (v2 >>>= 4)), 0 === n2.wbits) n2.wbits = L;
          else if (L > n2.wbits) {
            t2.msg = "invalid window size", n2.mode = 30;
            break;
          }
          n2.dmax = 1 << L, t2.adler = n2.check = 1, n2.mode = 512 & v2 ? 10 : 12, x2 = v2 = 0;
          break;
        case 2:
          for (; x2 < 16; ) {
            if (0 === g2) break t;
            g2--, v2 += h2[f2++] << x2, x2 += 8;
          }
          if (n2.flags = v2, 8 != (255 & n2.flags)) {
            t2.msg = "unknown compression method", n2.mode = 30;
            break;
          }
          if (57344 & n2.flags) {
            t2.msg = "unknown header flags set", n2.mode = 30;
            break;
          }
          n2.head && (n2.head.text = v2 >> 8 & 1), 512 & n2.flags && (V[0] = 255 & v2, V[1] = v2 >>> 8 & 255, n2.check = a(n2.check, V, 2, 0)), x2 = v2 = 0, n2.mode = 3;
        case 3:
          for (; x2 < 32; ) {
            if (0 === g2) break t;
            g2--, v2 += h2[f2++] << x2, x2 += 8;
          }
          n2.head && (n2.head.time = v2), 512 & n2.flags && (V[0] = 255 & v2, V[1] = v2 >>> 8 & 255, V[2] = v2 >>> 16 & 255, V[3] = v2 >>> 24 & 255, n2.check = a(n2.check, V, 4, 0)), x2 = v2 = 0, n2.mode = 4;
        case 4:
          for (; x2 < 16; ) {
            if (0 === g2) break t;
            g2--, v2 += h2[f2++] << x2, x2 += 8;
          }
          n2.head && (n2.head.xflags = 255 & v2, n2.head.os = v2 >> 8), 512 & n2.flags && (V[0] = 255 & v2, V[1] = v2 >>> 8 & 255, n2.check = a(n2.check, V, 2, 0)), x2 = v2 = 0, n2.mode = 5;
        case 5:
          if (1024 & n2.flags) {
            for (; x2 < 16; ) {
              if (0 === g2) break t;
              g2--, v2 += h2[f2++] << x2, x2 += 8;
            }
            n2.length = v2, n2.head && (n2.head.extra_len = v2), 512 & n2.flags && (V[0] = 255 & v2, V[1] = v2 >>> 8 & 255, n2.check = a(n2.check, V, 2, 0)), x2 = v2 = 0;
          } else n2.head && (n2.head.extra = null);
          n2.mode = 6;
        case 6:
          if (1024 & n2.flags && (g2 < (T = n2.length) && (T = g2), T && (n2.head && (L = n2.head.extra_len - n2.length, n2.head.extra || (n2.head.extra = new Array(n2.head.extra_len)), r.arraySet(n2.head.extra, h2, f2, T, L)), 512 & n2.flags && (n2.check = a(n2.check, h2, T, f2)), g2 -= T, f2 += T, n2.length -= T), n2.length)) break t;
          n2.length = 0, n2.mode = 7;
        case 7:
          if (2048 & n2.flags) {
            if (0 === g2) break t;
            for (T = 0; L = h2[f2 + T++], n2.head && L && n2.length < 65536 && (n2.head.name += String.fromCharCode(L)), L && T < g2; ) ;
            if (512 & n2.flags && (n2.check = a(n2.check, h2, T, f2)), g2 -= T, f2 += T, L) break t;
          } else n2.head && (n2.head.name = null);
          n2.length = 0, n2.mode = 8;
        case 8:
          if (4096 & n2.flags) {
            if (0 === g2) break t;
            for (T = 0; L = h2[f2 + T++], n2.head && L && n2.length < 65536 && (n2.head.comment += String.fromCharCode(L)), L && T < g2; ) ;
            if (512 & n2.flags && (n2.check = a(n2.check, h2, T, f2)), g2 -= T, f2 += T, L) break t;
          } else n2.head && (n2.head.comment = null);
          n2.mode = 9;
        case 9:
          if (512 & n2.flags) {
            for (; x2 < 16; ) {
              if (0 === g2) break t;
              g2--, v2 += h2[f2++] << x2, x2 += 8;
            }
            if (v2 !== (65535 & n2.check)) {
              t2.msg = "header crc mismatch", n2.mode = 30;
              break;
            }
            x2 = v2 = 0;
          }
          n2.head && (n2.head.hcrc = n2.flags >> 9 & 1, n2.head.done = true), t2.adler = n2.check = 0, n2.mode = 12;
          break;
        case 10:
          for (; x2 < 32; ) {
            if (0 === g2) break t;
            g2--, v2 += h2[f2++] << x2, x2 += 8;
          }
          t2.adler = n2.check = d(v2), x2 = v2 = 0, n2.mode = 11;
        case 11:
          if (0 === n2.havedict) return t2.next_out = m2, t2.avail_out = y2, t2.next_in = f2, t2.avail_in = g2, n2.hold = v2, n2.bits = x2, 2;
          t2.adler = n2.check = 1, n2.mode = 12;
        case 12:
          if (5 === e2 || 6 === e2) break t;
        case 13:
          if (n2.last) {
            v2 >>>= 7 & x2, x2 -= 7 & x2, n2.mode = 27;
            break;
          }
          for (; x2 < 3; ) {
            if (0 === g2) break t;
            g2--, v2 += h2[f2++] << x2, x2 += 8;
          }
          switch (n2.last = 1 & v2, --x2, 3 & (v2 >>>= 1)) {
            case 0:
              n2.mode = 14;
              break;
            case 1:
              if (M(n2), n2.mode = 20, 6 !== e2) break;
              v2 >>>= 2, x2 -= 2;
              break t;
            case 2:
              n2.mode = 17;
              break;
            case 3:
              t2.msg = "invalid block type", n2.mode = 30;
          }
          v2 >>>= 2, x2 -= 2;
          break;
        case 14:
          for (v2 >>>= 7 & x2, x2 -= 7 & x2; x2 < 32; ) {
            if (0 === g2) break t;
            g2--, v2 += h2[f2++] << x2, x2 += 8;
          }
          if ((65535 & v2) != (v2 >>> 16 ^ 65535)) {
            t2.msg = "invalid stored block lengths", n2.mode = 30;
            break;
          }
          if (n2.length = 65535 & v2, x2 = v2 = 0, n2.mode = 15, 6 === e2) break t;
        case 15:
          n2.mode = 16;
        case 16:
          if (T = n2.length) {
            if (g2 < T && (T = g2), y2 < T && (T = y2), 0 === T) break t;
            r.arraySet(p2, h2, f2, T, m2), g2 -= T, f2 += T, y2 -= T, m2 += T, n2.length -= T;
            break;
          }
          n2.mode = 12;
          break;
        case 17:
          for (; x2 < 14; ) {
            if (0 === g2) break t;
            g2--, v2 += h2[f2++] << x2, x2 += 8;
          }
          if (n2.nlen = 257 + (31 & v2), v2 >>>= 5, x2 -= 5, n2.ndist = 1 + (31 & v2), v2 >>>= 5, x2 -= 5, n2.ncode = 4 + (15 & v2), v2 >>>= 4, x2 -= 4, 286 < n2.nlen || 30 < n2.ndist) {
            t2.msg = "too many length or distance symbols", n2.mode = 30;
            break;
          }
          n2.have = 0, n2.mode = 18;
        case 18:
          for (; n2.have < n2.ncode; ) {
            for (; x2 < 3; ) {
              if (0 === g2) break t;
              g2--, v2 += h2[f2++] << x2, x2 += 8;
            }
            n2.lens[F[n2.have++]] = 7 & v2, v2 >>>= 3, x2 -= 3;
          }
          for (; n2.have < 19; ) n2.lens[F[n2.have++]] = 0;
          if (n2.lencode = n2.lendyn, n2.lenbits = 7, k = { bits: n2.lenbits }, I = s(0, n2.lens, 0, 19, n2.lencode, 0, n2.work, k), n2.lenbits = k.bits, I) {
            t2.msg = "invalid code lengths set", n2.mode = 30;
            break;
          }
          n2.have = 0, n2.mode = 19;
        case 19:
          for (; n2.have < n2.nlen + n2.ndist; ) {
            for (; E = (N = n2.lencode[v2 & (1 << n2.lenbits) - 1]) >>> 16 & 255, O = 65535 & N, !((D = N >>> 24) <= x2); ) {
              if (0 === g2) break t;
              g2--, v2 += h2[f2++] << x2, x2 += 8;
            }
            if (O < 16) v2 >>>= D, x2 -= D, n2.lens[n2.have++] = O;
            else {
              if (16 === O) {
                for (j = D + 2; x2 < j; ) {
                  if (0 === g2) break t;
                  g2--, v2 += h2[f2++] << x2, x2 += 8;
                }
                if (v2 >>>= D, x2 -= D, 0 === n2.have) {
                  t2.msg = "invalid bit length repeat", n2.mode = 30;
                  break;
                }
                L = n2.lens[n2.have - 1], T = 3 + (3 & v2), v2 >>>= 2, x2 -= 2;
              } else if (17 === O) {
                for (j = D + 3; x2 < j; ) {
                  if (0 === g2) break t;
                  g2--, v2 += h2[f2++] << x2, x2 += 8;
                }
                x2 -= D, L = 0, T = 3 + (7 & (v2 >>>= D)), v2 >>>= 3, x2 -= 3;
              } else {
                for (j = D + 7; x2 < j; ) {
                  if (0 === g2) break t;
                  g2--, v2 += h2[f2++] << x2, x2 += 8;
                }
                x2 -= D, L = 0, T = 11 + (127 & (v2 >>>= D)), v2 >>>= 7, x2 -= 7;
              }
              if (n2.have + T > n2.nlen + n2.ndist) {
                t2.msg = "invalid bit length repeat", n2.mode = 30;
                break;
              }
              for (; T--; ) n2.lens[n2.have++] = L;
            }
          }
          if (30 === n2.mode) break;
          if (0 === n2.lens[256]) {
            t2.msg = "invalid code -- missing end-of-block", n2.mode = 30;
            break;
          }
          if (n2.lenbits = 9, k = { bits: n2.lenbits }, I = s(1, n2.lens, 0, n2.nlen, n2.lencode, 0, n2.work, k), n2.lenbits = k.bits, I) {
            t2.msg = "invalid literal/lengths set", n2.mode = 30;
            break;
          }
          if (n2.distbits = 6, n2.distcode = n2.distdyn, k = { bits: n2.distbits }, I = s(2, n2.lens, n2.nlen, n2.ndist, n2.distcode, 0, n2.work, k), n2.distbits = k.bits, I) {
            t2.msg = "invalid distances set", n2.mode = 30;
            break;
          }
          if (n2.mode = 20, 6 === e2) break t;
        case 20:
          n2.mode = 21;
        case 21:
          if (6 <= g2 && 258 <= y2) {
            t2.next_out = m2, t2.avail_out = y2, t2.next_in = f2, t2.avail_in = g2, n2.hold = v2, n2.bits = x2, o(t2, b2), m2 = t2.next_out, p2 = t2.output, y2 = t2.avail_out, f2 = t2.next_in, h2 = t2.input, g2 = t2.avail_in, v2 = n2.hold, x2 = n2.bits, 12 === n2.mode && (n2.back = -1);
            break;
          }
          for (n2.back = 0; E = (N = n2.lencode[v2 & (1 << n2.lenbits) - 1]) >>> 16 & 255, O = 65535 & N, !((D = N >>> 24) <= x2); ) {
            if (0 === g2) break t;
            g2--, v2 += h2[f2++] << x2, x2 += 8;
          }
          if (E && 0 == (240 & E)) {
            for (A = D, P = E, R = O; E = (N = n2.lencode[R + ((v2 & (1 << A + P) - 1) >> A)]) >>> 16 & 255, O = 65535 & N, !(A + (D = N >>> 24) <= x2); ) {
              if (0 === g2) break t;
              g2--, v2 += h2[f2++] << x2, x2 += 8;
            }
            v2 >>>= A, x2 -= A, n2.back += A;
          }
          if (v2 >>>= D, x2 -= D, n2.back += D, n2.length = O, 0 === E) {
            n2.mode = 26;
            break;
          }
          if (32 & E) {
            n2.back = -1, n2.mode = 12;
            break;
          }
          if (64 & E) {
            t2.msg = "invalid literal/length code", n2.mode = 30;
            break;
          }
          n2.extra = 15 & E, n2.mode = 22;
        case 22:
          if (n2.extra) {
            for (j = n2.extra; x2 < j; ) {
              if (0 === g2) break t;
              g2--, v2 += h2[f2++] << x2, x2 += 8;
            }
            n2.length += v2 & (1 << n2.extra) - 1, v2 >>>= n2.extra, x2 -= n2.extra, n2.back += n2.extra;
          }
          n2.was = n2.length, n2.mode = 23;
        case 23:
          for (; E = (N = n2.distcode[v2 & (1 << n2.distbits) - 1]) >>> 16 & 255, O = 65535 & N, !((D = N >>> 24) <= x2); ) {
            if (0 === g2) break t;
            g2--, v2 += h2[f2++] << x2, x2 += 8;
          }
          if (0 == (240 & E)) {
            for (A = D, P = E, R = O; E = (N = n2.distcode[R + ((v2 & (1 << A + P) - 1) >> A)]) >>> 16 & 255, O = 65535 & N, !(A + (D = N >>> 24) <= x2); ) {
              if (0 === g2) break t;
              g2--, v2 += h2[f2++] << x2, x2 += 8;
            }
            v2 >>>= A, x2 -= A, n2.back += A;
          }
          if (v2 >>>= D, x2 -= D, n2.back += D, 64 & E) {
            t2.msg = "invalid distance code", n2.mode = 30;
            break;
          }
          n2.offset = O, n2.extra = 15 & E, n2.mode = 24;
        case 24:
          if (n2.extra) {
            for (j = n2.extra; x2 < j; ) {
              if (0 === g2) break t;
              g2--, v2 += h2[f2++] << x2, x2 += 8;
            }
            n2.offset += v2 & (1 << n2.extra) - 1, v2 >>>= n2.extra, x2 -= n2.extra, n2.back += n2.extra;
          }
          if (n2.offset > n2.dmax) {
            t2.msg = "invalid distance too far back", n2.mode = 30;
            break;
          }
          n2.mode = 25;
        case 25:
          if (0 === y2) break t;
          if (T = b2 - y2, n2.offset > T) {
            if ((T = n2.offset - T) > n2.whave && n2.sane) {
              t2.msg = "invalid distance too far back", n2.mode = 30;
              break;
            }
            C = T > n2.wnext ? (T -= n2.wnext, n2.wsize - T) : n2.wnext - T, T > n2.length && (T = n2.length), S = n2.window;
          } else S = p2, C = m2 - n2.offset, T = n2.length;
          for (y2 < T && (T = y2), y2 -= T, n2.length -= T; p2[m2++] = S[C++], --T; ) ;
          0 === n2.length && (n2.mode = 21);
          break;
        case 26:
          if (0 === y2) break t;
          p2[m2++] = n2.length, y2--, n2.mode = 21;
          break;
        case 27:
          if (n2.wrap) {
            for (; x2 < 32; ) {
              if (0 === g2) break t;
              g2--, v2 |= h2[f2++] << x2, x2 += 8;
            }
            if (b2 -= y2, t2.total_out += b2, n2.total += b2, b2 && (t2.adler = n2.check = (n2.flags ? a : i)(n2.check, p2, b2, m2 - b2)), b2 = y2, (n2.flags ? v2 : d(v2)) !== n2.check) {
              t2.msg = "incorrect data check", n2.mode = 30;
              break;
            }
            x2 = v2 = 0;
          }
          n2.mode = 28;
        case 28:
          if (n2.wrap && n2.flags) {
            for (; x2 < 32; ) {
              if (0 === g2) break t;
              g2--, v2 += h2[f2++] << x2, x2 += 8;
            }
            if (v2 !== (4294967295 & n2.total)) {
              t2.msg = "incorrect length check", n2.mode = 30;
              break;
            }
            x2 = v2 = 0;
          }
          n2.mode = 29;
        case 29:
          I = 1;
          break t;
        case 30:
          I = -3;
          break t;
        case 31:
          return -4;
        default:
          return c;
      }
      return t2.next_out = m2, t2.avail_out = y2, t2.next_in = f2, t2.avail_in = g2, n2.hold = v2, n2.bits = x2, (n2.wsize || b2 !== t2.avail_out && n2.mode < 30 && (n2.mode < 27 || 4 !== e2)) && _(t2, t2.output, t2.next_out, b2 - t2.avail_out) ? (n2.mode = 31, -4) : (w2 -= t2.avail_in, b2 -= t2.avail_out, t2.total_in += w2, t2.total_out += b2, n2.total += b2, n2.wrap && b2 && (t2.adler = n2.check = (n2.flags ? a : i)(n2.check, p2, b2, t2.next_out - b2)), t2.data_type = n2.bits + (n2.last ? 64 : 0) + (12 === n2.mode ? 128 : 0) + (20 === n2.mode || 15 === n2.mode ? 256 : 0), (0 == w2 && 0 === b2 || 4 === e2) && I === l && (I = -5), I);
    }, n.inflateEnd = function(t2) {
      if (!t2 || !t2.state) return c;
      var e2 = t2.state;
      return e2.window && (e2.window = null), t2.state = null, l;
    }, n.inflateGetHeader = function(t2, e2) {
      var n2;
      return t2 && t2.state && 0 != (2 & (n2 = t2.state).wrap) ? ((n2.head = e2).done = false, l) : c;
    }, n.inflateSetDictionary = function(t2, e2) {
      var n2, r2 = e2.length;
      return !t2 || !t2.state || 0 !== (n2 = t2.state).wrap && 11 !== n2.mode ? c : 11 === n2.mode && i(1, e2, r2, 0) !== n2.check ? -3 : _(t2, e2, r2, r2) ? (n2.mode = 31, -4) : (n2.havedict = 1, l);
    }, n.inflateInfo = "pako inflate (from Nodeca project)";
  }, { "../utils/common": 4, "./adler32": 6, "./crc32": 8, "./inffast": 11, "./inftrees": 13 }], 13: [function(t, e, n) {
    var r = t("../utils/common"), i = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], a = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], o = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], s = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
    e.exports = function(t2, e2, n2, l, c, u, h, p) {
      var d, f, m, g, y, v, x, w, b, M = p.bits, _ = 0, T = 0, C = 0, S = 0, D = 0, E = 0, O = 0, A = 0, P = 0, R = 0, L = null, I = 0, k = new r.Buf16(16), j = new r.Buf16(16), N = null, V = 0;
      for (_ = 0; _ <= 15; _++) k[_] = 0;
      for (T = 0; T < l; T++) k[e2[n2 + T]]++;
      for (D = M, S = 15; 1 <= S && 0 === k[S]; S--) ;
      if (S < D && (D = S), 0 === S) return c[u++] = 20971520, c[u++] = 20971520, p.bits = 1, 0;
      for (C = 1; C < S && 0 === k[C]; C++) ;
      for (D < C && (D = C), _ = A = 1; _ <= 15; _++) if (A <<= 1, (A -= k[_]) < 0) return -1;
      if (0 < A && (0 === t2 || 1 !== S)) return -1;
      for (j[1] = 0, _ = 1; _ < 15; _++) j[_ + 1] = j[_] + k[_];
      for (T = 0; T < l; T++) 0 !== e2[n2 + T] && (h[j[e2[n2 + T]]++] = T);
      if (v = 0 === t2 ? (L = N = h, 19) : 1 === t2 ? (L = i, I -= 257, N = a, V -= 257, 256) : (L = o, N = s, -1), _ = C, y = u, O = T = R = 0, m = -1, g = (P = 1 << (E = D)) - 1, 1 === t2 && 852 < P || 2 === t2 && 592 < P) return 1;
      for (; ; ) {
        for (x = _ - O, b = h[T] < v ? (w = 0, h[T]) : h[T] > v ? (w = N[V + h[T]], L[I + h[T]]) : (w = 96, 0), d = 1 << _ - O, C = f = 1 << E; c[y + (R >> O) + (f -= d)] = x << 24 | w << 16 | b | 0, 0 !== f; ) ;
        for (d = 1 << _ - 1; R & d; ) d >>= 1;
        if (0 !== d ? (R &= d - 1, R += d) : R = 0, T++, 0 == --k[_]) {
          if (_ === S) break;
          _ = e2[n2 + h[T]];
        }
        if (D < _ && (R & g) !== m) {
          for (0 === O && (O = D), y += C, A = 1 << (E = _ - O); E + O < S && !((A -= k[E + O]) <= 0); ) E++, A <<= 1;
          if (P += 1 << E, 1 === t2 && 852 < P || 2 === t2 && 592 < P) return 1;
          c[m = R & g] = D << 24 | E << 16 | y - u | 0;
        }
      }
      return 0 !== R && (c[y + R] = _ - O << 24 | 64 << 16 | 0), p.bits = D, 0;
    };
  }, { "../utils/common": 4 }], 14: [function(t, e, n) {
    e.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
  }, {}], 15: [function(t, e, n) {
    var r = t("../utils/common");
    function i(t2) {
      for (var e2 = t2.length; 0 <= --e2; ) t2[e2] = 0;
    }
    var a = 256, o = 286, s = 30, l = 15, c = 16, u = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], h = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], p = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], d = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], f = new Array(576);
    i(f);
    var m = new Array(60);
    i(m);
    var g = new Array(512);
    i(g);
    var y = new Array(256);
    i(y);
    var v = new Array(29);
    i(v);
    var x, w, b, M = new Array(s);
    function _(t2, e2, n2, r2, i2) {
      this.static_tree = t2, this.extra_bits = e2, this.extra_base = n2, this.elems = r2, this.max_length = i2, this.has_stree = t2 && t2.length;
    }
    function T(t2, e2) {
      this.dyn_tree = t2, this.max_code = 0, this.stat_desc = e2;
    }
    function C(t2) {
      return t2 < 256 ? g[t2] : g[256 + (t2 >>> 7)];
    }
    function S(t2, e2) {
      t2.pending_buf[t2.pending++] = 255 & e2, t2.pending_buf[t2.pending++] = e2 >>> 8 & 255;
    }
    function D(t2, e2, n2) {
      t2.bi_valid > c - n2 ? (t2.bi_buf |= e2 << t2.bi_valid & 65535, S(t2, t2.bi_buf), t2.bi_buf = e2 >> c - t2.bi_valid, t2.bi_valid += n2 - c) : (t2.bi_buf |= e2 << t2.bi_valid & 65535, t2.bi_valid += n2);
    }
    function E(t2, e2, n2) {
      D(t2, n2[2 * e2], n2[2 * e2 + 1]);
    }
    function O(t2, e2) {
      for (var n2 = 0; n2 |= 1 & t2, t2 >>>= 1, n2 <<= 1, 0 < --e2; ) ;
      return n2 >>> 1;
    }
    function A(t2, e2, n2) {
      var r2, i2, a2 = new Array(l + 1), o2 = 0;
      for (r2 = 1; r2 <= l; r2++) a2[r2] = o2 = o2 + n2[r2 - 1] << 1;
      for (i2 = 0; i2 <= e2; i2++) {
        var s2 = t2[2 * i2 + 1];
        0 !== s2 && (t2[2 * i2] = O(a2[s2]++, s2));
      }
    }
    function P(t2) {
      var e2;
      for (e2 = 0; e2 < o; e2++) t2.dyn_ltree[2 * e2] = 0;
      for (e2 = 0; e2 < s; e2++) t2.dyn_dtree[2 * e2] = 0;
      for (e2 = 0; e2 < 19; e2++) t2.bl_tree[2 * e2] = 0;
      t2.dyn_ltree[512] = 1, t2.opt_len = t2.static_len = 0, t2.last_lit = t2.matches = 0;
    }
    function R(t2) {
      8 < t2.bi_valid ? S(t2, t2.bi_buf) : 0 < t2.bi_valid && (t2.pending_buf[t2.pending++] = t2.bi_buf), t2.bi_buf = 0, t2.bi_valid = 0;
    }
    function L(t2, e2, n2, r2) {
      var i2 = 2 * e2, a2 = 2 * n2;
      return t2[i2] < t2[a2] || t2[i2] === t2[a2] && r2[e2] <= r2[n2];
    }
    function I(t2, e2, n2) {
      for (var r2 = t2.heap[n2], i2 = n2 << 1; i2 <= t2.heap_len && (i2 < t2.heap_len && L(e2, t2.heap[i2 + 1], t2.heap[i2], t2.depth) && i2++, !L(e2, r2, t2.heap[i2], t2.depth)); ) t2.heap[n2] = t2.heap[i2], n2 = i2, i2 <<= 1;
      t2.heap[n2] = r2;
    }
    function k(t2, e2, n2) {
      var r2, i2, o2, s2, l2 = 0;
      if (0 !== t2.last_lit) for (; r2 = t2.pending_buf[t2.d_buf + 2 * l2] << 8 | t2.pending_buf[t2.d_buf + 2 * l2 + 1], i2 = t2.pending_buf[t2.l_buf + l2], l2++, 0 === r2 ? E(t2, i2, e2) : (E(t2, (o2 = y[i2]) + a + 1, e2), 0 !== (s2 = u[o2]) && D(t2, i2 -= v[o2], s2), E(t2, o2 = C(--r2), n2), 0 !== (s2 = h[o2]) && D(t2, r2 -= M[o2], s2)), l2 < t2.last_lit; ) ;
      E(t2, 256, e2);
    }
    function j(t2, e2) {
      var n2, r2, i2, a2 = e2.dyn_tree, o2 = e2.stat_desc.static_tree, s2 = e2.stat_desc.has_stree, c2 = e2.stat_desc.elems, u2 = -1;
      for (t2.heap_len = 0, t2.heap_max = 573, n2 = 0; n2 < c2; n2++) 0 !== a2[2 * n2] ? (t2.heap[++t2.heap_len] = u2 = n2, t2.depth[n2] = 0) : a2[2 * n2 + 1] = 0;
      for (; t2.heap_len < 2; ) a2[2 * (i2 = t2.heap[++t2.heap_len] = u2 < 2 ? ++u2 : 0)] = 1, t2.depth[i2] = 0, t2.opt_len--, s2 && (t2.static_len -= o2[2 * i2 + 1]);
      for (e2.max_code = u2, n2 = t2.heap_len >> 1; 1 <= n2; n2--) I(t2, a2, n2);
      for (i2 = c2; n2 = t2.heap[1], t2.heap[1] = t2.heap[t2.heap_len--], I(t2, a2, 1), r2 = t2.heap[1], t2.heap[--t2.heap_max] = n2, t2.heap[--t2.heap_max] = r2, a2[2 * i2] = a2[2 * n2] + a2[2 * r2], t2.depth[i2] = (t2.depth[n2] >= t2.depth[r2] ? t2.depth[n2] : t2.depth[r2]) + 1, a2[2 * n2 + 1] = a2[2 * r2 + 1] = i2, t2.heap[1] = i2++, I(t2, a2, 1), 2 <= t2.heap_len; ) ;
      t2.heap[--t2.heap_max] = t2.heap[1], function(t3, e3) {
        var n3, r3, i3, a3, o3, s3, c3 = e3.dyn_tree, u3 = e3.max_code, h2 = e3.stat_desc.static_tree, p2 = e3.stat_desc.has_stree, d2 = e3.stat_desc.extra_bits, f2 = e3.stat_desc.extra_base, m2 = e3.stat_desc.max_length, g2 = 0;
        for (a3 = 0; a3 <= l; a3++) t3.bl_count[a3] = 0;
        for (c3[2 * t3.heap[t3.heap_max] + 1] = 0, n3 = t3.heap_max + 1; n3 < 573; n3++) m2 < (a3 = c3[2 * c3[2 * (r3 = t3.heap[n3]) + 1] + 1] + 1) && (a3 = m2, g2++), c3[2 * r3 + 1] = a3, u3 < r3 || (t3.bl_count[a3]++, o3 = 0, f2 <= r3 && (o3 = d2[r3 - f2]), s3 = c3[2 * r3], t3.opt_len += s3 * (a3 + o3), p2 && (t3.static_len += s3 * (h2[2 * r3 + 1] + o3)));
        if (0 !== g2) {
          do {
            for (a3 = m2 - 1; 0 === t3.bl_count[a3]; ) a3--;
            t3.bl_count[a3]--, t3.bl_count[a3 + 1] += 2, t3.bl_count[m2]--, g2 -= 2;
          } while (0 < g2);
          for (a3 = m2; 0 !== a3; a3--) for (r3 = t3.bl_count[a3]; 0 !== r3; ) u3 < (i3 = t3.heap[--n3]) || (c3[2 * i3 + 1] !== a3 && (t3.opt_len += (a3 - c3[2 * i3 + 1]) * c3[2 * i3], c3[2 * i3 + 1] = a3), r3--);
        }
      }(t2, e2), A(a2, u2, t2.bl_count);
    }
    function N(t2, e2, n2) {
      var r2, i2, a2 = -1, o2 = e2[1], s2 = 0, l2 = 7, c2 = 4;
      for (0 === o2 && (l2 = 138, c2 = 3), e2[2 * (n2 + 1) + 1] = 65535, r2 = 0; r2 <= n2; r2++) i2 = o2, o2 = e2[2 * (r2 + 1) + 1], ++s2 < l2 && i2 === o2 || (s2 < c2 ? t2.bl_tree[2 * i2] += s2 : 0 !== i2 ? (i2 !== a2 && t2.bl_tree[2 * i2]++, t2.bl_tree[32]++) : s2 <= 10 ? t2.bl_tree[34]++ : t2.bl_tree[36]++, a2 = i2, c2 = (s2 = 0) === o2 ? (l2 = 138, 3) : i2 === o2 ? (l2 = 6, 3) : (l2 = 7, 4));
    }
    function V(t2, e2, n2) {
      var r2, i2, a2 = -1, o2 = e2[1], s2 = 0, l2 = 7, c2 = 4;
      for (0 === o2 && (l2 = 138, c2 = 3), r2 = 0; r2 <= n2; r2++) if (i2 = o2, o2 = e2[2 * (r2 + 1) + 1], !(++s2 < l2 && i2 === o2)) {
        if (s2 < c2) for (; E(t2, i2, t2.bl_tree), 0 != --s2; ) ;
        else 0 !== i2 ? (i2 !== a2 && (E(t2, i2, t2.bl_tree), s2--), E(t2, 16, t2.bl_tree), D(t2, s2 - 3, 2)) : s2 <= 10 ? (E(t2, 17, t2.bl_tree), D(t2, s2 - 3, 3)) : (E(t2, 18, t2.bl_tree), D(t2, s2 - 11, 7));
        a2 = i2, c2 = (s2 = 0) === o2 ? (l2 = 138, 3) : i2 === o2 ? (l2 = 6, 3) : (l2 = 7, 4);
      }
    }
    i(M);
    var F = false;
    function B(t2, e2, n2, i2) {
      var a2, o2, s2;
      D(t2, 0 + (i2 ? 1 : 0), 3), o2 = e2, s2 = n2, R(a2 = t2), S(a2, s2), S(a2, ~s2), r.arraySet(a2.pending_buf, a2.window, o2, s2, a2.pending), a2.pending += s2;
    }
    n._tr_init = function(t2) {
      F || (function() {
        var t3, e2, n2, r2, i2, a2 = new Array(l + 1);
        for (r2 = n2 = 0; r2 < 28; r2++) for (v[r2] = n2, t3 = 0; t3 < 1 << u[r2]; t3++) y[n2++] = r2;
        for (y[n2 - 1] = r2, r2 = i2 = 0; r2 < 16; r2++) for (M[r2] = i2, t3 = 0; t3 < 1 << h[r2]; t3++) g[i2++] = r2;
        for (i2 >>= 7; r2 < s; r2++) for (M[r2] = i2 << 7, t3 = 0; t3 < 1 << h[r2] - 7; t3++) g[256 + i2++] = r2;
        for (e2 = 0; e2 <= l; e2++) a2[e2] = 0;
        for (t3 = 0; t3 <= 143; ) f[2 * t3 + 1] = 8, t3++, a2[8]++;
        for (; t3 <= 255; ) f[2 * t3 + 1] = 9, t3++, a2[9]++;
        for (; t3 <= 279; ) f[2 * t3 + 1] = 7, t3++, a2[7]++;
        for (; t3 <= 287; ) f[2 * t3 + 1] = 8, t3++, a2[8]++;
        for (A(f, 287, a2), t3 = 0; t3 < s; t3++) m[2 * t3 + 1] = 5, m[2 * t3] = O(t3, 5);
        x = new _(f, u, 257, o, l), w = new _(m, h, 0, s, l), b = new _(new Array(0), p, 0, 19, 7);
      }(), F = true), t2.l_desc = new T(t2.dyn_ltree, x), t2.d_desc = new T(t2.dyn_dtree, w), t2.bl_desc = new T(t2.bl_tree, b), t2.bi_buf = 0, t2.bi_valid = 0, P(t2);
    }, n._tr_stored_block = B, n._tr_flush_block = function(t2, e2, n2, r2) {
      var i2, o2, s2 = 0;
      0 < t2.level ? (2 === t2.strm.data_type && (t2.strm.data_type = function(t3) {
        var e3, n3 = 4093624447;
        for (e3 = 0; e3 <= 31; e3++, n3 >>>= 1) if (1 & n3 && 0 !== t3.dyn_ltree[2 * e3]) return 0;
        if (0 !== t3.dyn_ltree[18] || 0 !== t3.dyn_ltree[20] || 0 !== t3.dyn_ltree[26]) return 1;
        for (e3 = 32; e3 < a; e3++) if (0 !== t3.dyn_ltree[2 * e3]) return 1;
        return 0;
      }(t2)), j(t2, t2.l_desc), j(t2, t2.d_desc), s2 = function(t3) {
        var e3;
        for (N(t3, t3.dyn_ltree, t3.l_desc.max_code), N(t3, t3.dyn_dtree, t3.d_desc.max_code), j(t3, t3.bl_desc), e3 = 18; 3 <= e3 && 0 === t3.bl_tree[2 * d[e3] + 1]; e3--) ;
        return t3.opt_len += 3 * (e3 + 1) + 5 + 5 + 4, e3;
      }(t2), i2 = t2.opt_len + 3 + 7 >>> 3, (o2 = t2.static_len + 3 + 7 >>> 3) <= i2 && (i2 = o2)) : i2 = o2 = n2 + 5, n2 + 4 <= i2 && -1 !== e2 ? B(t2, e2, n2, r2) : 4 === t2.strategy || o2 === i2 ? (D(t2, 2 + (r2 ? 1 : 0), 3), k(t2, f, m)) : (D(t2, 4 + (r2 ? 1 : 0), 3), function(t3, e3, n3, r3) {
        var i3;
        for (D(t3, e3 - 257, 5), D(t3, n3 - 1, 5), D(t3, r3 - 4, 4), i3 = 0; i3 < r3; i3++) D(t3, t3.bl_tree[2 * d[i3] + 1], 3);
        V(t3, t3.dyn_ltree, e3 - 1), V(t3, t3.dyn_dtree, n3 - 1);
      }(t2, t2.l_desc.max_code + 1, t2.d_desc.max_code + 1, s2 + 1), k(t2, t2.dyn_ltree, t2.dyn_dtree)), P(t2), r2 && R(t2);
    }, n._tr_tally = function(t2, e2, n2) {
      return t2.pending_buf[t2.d_buf + 2 * t2.last_lit] = e2 >>> 8 & 255, t2.pending_buf[t2.d_buf + 2 * t2.last_lit + 1] = 255 & e2, t2.pending_buf[t2.l_buf + t2.last_lit] = 255 & n2, t2.last_lit++, 0 === e2 ? t2.dyn_ltree[2 * n2]++ : (t2.matches++, e2--, t2.dyn_ltree[2 * (y[n2] + a + 1)]++, t2.dyn_dtree[2 * C(e2)]++), t2.last_lit === t2.lit_bufsize - 1;
    }, n._tr_align = function(t2) {
      var e2;
      D(t2, 2, 3), E(t2, 256, f), 16 === (e2 = t2).bi_valid ? (S(e2, e2.bi_buf), e2.bi_buf = 0, e2.bi_valid = 0) : 8 <= e2.bi_valid && (e2.pending_buf[e2.pending++] = 255 & e2.bi_buf, e2.bi_buf >>= 8, e2.bi_valid -= 8);
    };
  }, { "../utils/common": 4 }], 16: [function(t, e, n) {
    e.exports = function() {
      this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
    };
  }, {}], 17: [function(t, e, n) {
    var r = t("three");
    r.OrbitControls = function(t2, e2) {
      var n2, i, a, o, s;
      void 0 === e2 && console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'), e2 === document && console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'), this.object = t2, this.domElement = e2, this.enabled = true, this.target = new r.Vector3(), this.minDistance = 0, this.maxDistance = 1 / 0, this.minZoom = 0, this.maxZoom = 1 / 0, this.minPolarAngle = 0, this.maxPolarAngle = Math.PI, this.minAzimuthAngle = -1 / 0, this.maxAzimuthAngle = 1 / 0, this.enableDamping = false, this.dampingFactor = 0.05, this.enableZoom = true, this.zoomSpeed = 1, this.enableRotate = true, this.rotateSpeed = 1, this.enablePan = true, this.panSpeed = 1, this.screenSpacePanning = false, this.keyPanSpeed = 7, this.autoRotate = false, this.autoRotateSpeed = 2, this.enableKeys = true, this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 }, this.mouseButtons = { LEFT: r.MOUSE.ROTATE, MIDDLE: r.MOUSE.DOLLY, RIGHT: r.MOUSE.PAN }, this.touches = { ONE: r.TOUCH.ROTATE, TWO: r.TOUCH.DOLLY_PAN }, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = function() {
        return m.phi;
      }, this.getAzimuthalAngle = function() {
        return m.theta;
      }, this.saveState = function() {
        l.target0.copy(l.target), l.position0.copy(l.object.position), l.zoom0 = l.object.zoom;
      }, this.resetStatusValue = function() {
        d = p.NONE;
      }, this.reset = function() {
        l.target.copy(l.target0), l.object.position.copy(l.position0), l.object.zoom = l.zoom0, l.object.updateProjectionMatrix(), l.dispatchEvent(c), l.update(), d = p.NONE;
      }, this.update = (n2 = new r.Vector3(), i = new r.Quaternion().setFromUnitVectors(t2.up, new r.Vector3(0, 1, 0)), a = i.clone().inverse(), o = new r.Vector3(), s = new r.Quaternion(), function() {
        var t3 = l.object.position;
        return n2.copy(t3).sub(l.target), n2.applyQuaternion(i), m.setFromVector3(n2), l.autoRotate && d === p.NONE && A(2 * Math.PI / 60 / 60 * l.autoRotateSpeed), l.enableDamping ? (m.theta += g.theta * l.dampingFactor, m.phi += g.phi * l.dampingFactor) : (m.theta += g.theta, m.phi += g.phi), m.theta = Math.max(l.minAzimuthAngle, Math.min(l.maxAzimuthAngle, m.theta)), m.phi = Math.max(l.minPolarAngle, Math.min(l.maxPolarAngle, m.phi)), m.makeSafe(), m.radius *= y, m.radius = Math.max(l.minDistance, Math.min(l.maxDistance, m.radius)), true === l.enableDamping ? l.target.addScaledVector(v, l.dampingFactor) : l.target.add(v), n2.setFromSpherical(m), n2.applyQuaternion(a), t3.copy(l.target).add(n2), l.object.lookAt(l.target), true === l.enableDamping ? (g.theta *= 1 - l.dampingFactor, g.phi *= 1 - l.dampingFactor, v.multiplyScalar(1 - l.dampingFactor)) : (g.set(0, 0, 0), v.set(0, 0, 0)), y = 1, !(!(x || o.distanceToSquared(l.object.position) > f || 8 * (1 - s.dot(l.object.quaternion)) > f) || (l.dispatchEvent(c), o.copy(l.object.position), s.copy(l.object.quaternion), x = false));
      }), this.dispose = function() {
        l.domElement.removeEventListener("contextmenu", nt, false), l.domElement.removeEventListener("mousedown", q, false), l.domElement.removeEventListener("wheel", Z, false), l.domElement.removeEventListener("touchstart", Q, false), l.domElement.removeEventListener("touchend", et, false), l.domElement.removeEventListener("touchmove", tt, false), document.removeEventListener("mousemove", X, false), document.removeEventListener("mouseup", Y, false), l.domElement.removeEventListener("keydown", K, false);
      };
      var l = this, c = { type: "change" }, u = { type: "start" }, h = { type: "end" }, p = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_PAN: 4, TOUCH_DOLLY_PAN: 5, TOUCH_DOLLY_ROTATE: 6 }, d = p.NONE, f = 1e-6, m = new r.Spherical(), g = new r.Spherical(), y = 1, v = new r.Vector3(), x = false, w = new r.Vector2(), b = new r.Vector2(), M = new r.Vector2(), _ = new r.Vector2(), T = new r.Vector2(), C = new r.Vector2(), S = new r.Vector2(), D = new r.Vector2(), E = new r.Vector2();
      function O() {
        return Math.pow(0.95, l.zoomSpeed);
      }
      function A(t3) {
        g.theta -= t3;
      }
      function P(t3) {
        g.phi -= t3;
      }
      var R, L, I, k = (R = new r.Vector3(), function(t3, e3) {
        R.setFromMatrixColumn(e3, 0), R.multiplyScalar(-t3), v.add(R);
      }), j = (L = new r.Vector3(), function(t3, e3) {
        true === l.screenSpacePanning ? L.setFromMatrixColumn(e3, 1) : (L.setFromMatrixColumn(e3, 0), L.crossVectors(l.object.up, L)), L.multiplyScalar(t3), v.add(L);
      }), N = (I = new r.Vector3(), function(t3, e3) {
        var n3 = l.domElement;
        if (l.object.isPerspectiveCamera) {
          var r2 = l.object.position;
          I.copy(r2).sub(l.target);
          var i2 = I.length();
          i2 *= Math.tan(l.object.fov / 2 * Math.PI / 180), k(2 * t3 * i2 / n3.clientHeight, l.object.matrix), j(2 * e3 * i2 / n3.clientHeight, l.object.matrix);
        } else l.object.isOrthographicCamera ? (k(t3 * (l.object.right - l.object.left) / l.object.zoom / n3.clientWidth, l.object.matrix), j(e3 * (l.object.top - l.object.bottom) / l.object.zoom / n3.clientHeight, l.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), l.enablePan = false);
      });
      function V(t3) {
        l.object.isPerspectiveCamera ? y /= t3 : l.object.isOrthographicCamera ? (l.object.zoom = Math.max(l.minZoom, Math.min(l.maxZoom, l.object.zoom * t3)), l.object.updateProjectionMatrix(), x = true) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), l.enableZoom = false);
      }
      function F(t3) {
        w.set(t3.clientX, t3.clientY);
      }
      function B(t3) {
        _.set(t3.clientX, t3.clientY);
      }
      function G(t3) {
        if (1 == t3.touches.length) w.set(t3.touches[0].pageX, t3.touches[0].pageY);
        else {
          var e3 = 0.5 * (t3.touches[0].pageX + t3.touches[1].pageX), n3 = 0.5 * (t3.touches[0].pageY + t3.touches[1].pageY);
          w.set(e3, n3);
        }
      }
      function z(t3) {
        if (1 == t3.touches.length) _.set(t3.touches[0].pageX, t3.touches[0].pageY);
        else {
          var e3 = 0.5 * (t3.touches[0].pageX + t3.touches[1].pageX), n3 = 0.5 * (t3.touches[0].pageY + t3.touches[1].pageY);
          _.set(e3, n3);
        }
      }
      function U(t3) {
        var e3 = t3.touches[0].pageX - t3.touches[1].pageX, n3 = t3.touches[0].pageY - t3.touches[1].pageY, r2 = Math.sqrt(e3 * e3 + n3 * n3);
        S.set(0, r2);
      }
      function H(t3) {
        if (1 == t3.touches.length) b.set(t3.touches[0].pageX, t3.touches[0].pageY);
        else {
          var e3 = 0.5 * (t3.touches[0].pageX + t3.touches[1].pageX), n3 = 0.5 * (t3.touches[0].pageY + t3.touches[1].pageY);
          b.set(e3, n3);
        }
        M.subVectors(b, w).multiplyScalar(l.rotateSpeed);
        var r2 = l.domElement;
        A(2 * Math.PI * M.x / r2.clientHeight), P(2 * Math.PI * M.y / r2.clientHeight), w.copy(b);
      }
      function W(t3) {
        if (1 == t3.touches.length) T.set(t3.touches[0].pageX, t3.touches[0].pageY);
        else {
          var e3 = 0.5 * (t3.touches[0].pageX + t3.touches[1].pageX), n3 = 0.5 * (t3.touches[0].pageY + t3.touches[1].pageY);
          T.set(e3, n3);
        }
        C.subVectors(T, _).multiplyScalar(l.panSpeed), N(C.x, C.y), _.copy(T);
      }
      function J(t3) {
        var e3 = t3.touches[0].pageX - t3.touches[1].pageX, n3 = t3.touches[0].pageY - t3.touches[1].pageY, r2 = Math.sqrt(e3 * e3 + n3 * n3);
        D.set(0, r2), E.set(0, Math.pow(D.y / S.y, l.zoomSpeed)), V(E.y), S.copy(D);
      }
      function q(t3) {
        if (false !== l.enabled) {
          switch (t3.preventDefault(), l.domElement.focus ? l.domElement.focus() : window.focus(), t3.button) {
            case 0:
              switch (l.mouseButtons.LEFT) {
                case r.MOUSE.ROTATE:
                  if (t3.ctrlKey || t3.metaKey || t3.shiftKey) {
                    if (false === l.enablePan) return;
                    B(t3), d = p.PAN;
                  } else {
                    if (false === l.enableRotate) return;
                    F(t3), d = p.ROTATE;
                  }
                  break;
                case r.MOUSE.PAN:
                  if (t3.ctrlKey || t3.metaKey || t3.shiftKey) {
                    if (false === l.enableRotate) return;
                    F(t3), d = p.ROTATE;
                  } else {
                    if (false === l.enablePan) return;
                    B(t3), d = p.PAN;
                  }
                  break;
                default:
                  d = p.NONE;
              }
              break;
            case 1:
              switch (l.mouseButtons.MIDDLE) {
                case r.MOUSE.DOLLY:
                  if (false === l.enableZoom) return;
                  e3 = t3, S.set(e3.clientX, e3.clientY), d = p.DOLLY;
                  break;
                case r.MOUSE.PAN:
                  if (false === l.enablePan) return;
                  B(t3), d = p.PAN;
                  break;
                default:
                  d = p.NONE;
              }
              break;
            case 2:
              switch (l.mouseButtons.RIGHT) {
                case r.MOUSE.ROTATE:
                  if (false === l.enableRotate) return;
                  F(t3), d = p.ROTATE;
                  break;
                case r.MOUSE.PAN:
                  if (false === l.enablePan) return;
                  B(t3), d = p.PAN;
                  break;
                default:
                  d = p.NONE;
              }
          }
          var e3;
          d !== p.NONE && (document.addEventListener("mousemove", X, false), document.addEventListener("mouseup", Y, false), l.dispatchEvent(u));
        }
      }
      function X(t3) {
        var e3;
        if (false !== l.enabled) switch (t3.preventDefault(), d) {
          case p.ROTATE:
            if (false === l.enableRotate) return;
            !function(t4) {
              b.set(t4.clientX, t4.clientY), M.subVectors(b, w).multiplyScalar(l.rotateSpeed);
              var e4 = l.domElement;
              A(2 * Math.PI * M.x / e4.clientHeight), P(2 * Math.PI * M.y / e4.clientHeight), w.copy(b), l.update();
            }(t3);
            break;
          case p.DOLLY:
            if (false === l.enableZoom) return;
            !function(t4) {
              var e4;
              D.set(t4.clientX, t4.clientY), E.subVectors(D, S), 0 < E.y ? V(O()) : E.y < 0 && (e4 = O(), l.object.isPerspectiveCamera ? y *= e4 : l.object.isOrthographicCamera ? (l.object.zoom = Math.max(l.minZoom, Math.min(l.maxZoom, l.object.zoom / e4)), l.object.updateProjectionMatrix(), x = true) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), l.enableZoom = false)), S.copy(D), l.update();
            }(t3);
            break;
          case p.PAN:
            if (false === l.enablePan) return;
            e3 = t3, T.set(e3.clientX, e3.clientY), C.subVectors(T, _).multiplyScalar(l.panSpeed), N(C.x, C.y), _.copy(T), l.update();
        }
      }
      function Y(t3) {
        false !== l.enabled && (document.removeEventListener("mousemove", X, false), document.removeEventListener("mouseup", Y, false), l.dispatchEvent(h), d = p.NONE);
      }
      function Z(t3) {
        false === l.enabled || false === l.enableZoom || d !== p.NONE && d !== p.ROTATE || (t3.preventDefault(), t3.stopPropagation(), l.dispatchEvent(u), function(t4) {
          t4.deltaY < 0 ? function(t5, e3) {
            if (l.object.isPerspectiveCamera) f2 *= t5;
            else if (l.object.isOrthographicCamera) {
              var n3 = l.domElement.clientWidth, i2 = l.domElement.clientHeight, a2 = (l.object.near + l.object.far) / (l.object.near - l.object.far), o2 = e3.offsetX, s2 = e3.offsetY, c2 = new r.Vector3(o2 / n3 * 2 - 1, -s2 / i2 * 2 + 1, a2);
              c2.applyMatrix4(l.object.projectionMatrixInverse);
              var u2 = new r.Vector3(-1, -1, a2), h2 = new r.Vector3(1, 1, a2);
              u2.applyMatrix4(l.object.projectionMatrixInverse), h2.applyMatrix4(l.object.projectionMatrixInverse);
              var p2 = Math.max(l.minZoom, Math.min(l.maxZoom, 1 / t5)), d2 = new r.Matrix4();
              d2.makeTranslation(-c2.x, -c2.y, 0);
              var f2 = new r.Matrix4().scale(new r.Vector3(1 / p2, 1 / p2, 1 / p2)), m2 = new r.Matrix4();
              m2.makeTranslation(c2.x, c2.y, 0);
              var g2 = new r.Matrix4().multiply(m2).multiply(f2).multiply(d2);
              u2.applyMatrix4(g2), h2.applyMatrix4(g2), l.object.left = u2.x, l.object.right = h2.x, l.object.top = h2.y, l.object.bottom = u2.y, l.object.zoom = 1, l.object.updateProjectionMatrix(), x = true;
            } else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), l.enableZoom = false;
          }(O(), t4) : 0 < t4.deltaY && function(t5, e3) {
            if (l.object.isPerspectiveCamera) f2 /= t5;
            else if (l.object.isOrthographicCamera) {
              var n3 = l.domElement.clientWidth, i2 = l.domElement.clientHeight, a2 = (l.object.near + l.object.far) / (l.object.near - l.object.far), o2 = e3.offsetX, s2 = e3.offsetY, c2 = new r.Vector3(o2 / n3 * 2 - 1, -s2 / i2 * 2 + 1, a2);
              c2.applyMatrix4(l.object.projectionMatrixInverse);
              var u2 = new r.Vector3(-1, -1, a2), h2 = new r.Vector3(1, 1, a2);
              u2.applyMatrix4(l.object.projectionMatrixInverse), h2.applyMatrix4(l.object.projectionMatrixInverse);
              var p2 = Math.max(l.minZoom, Math.min(l.maxZoom, t5)), d2 = new r.Matrix4();
              d2.makeTranslation(-c2.x, -c2.y, 0);
              var f2 = new r.Matrix4().scale(new r.Vector3(1 / p2, 1 / p2, 1 / p2)), m2 = new r.Matrix4();
              m2.makeTranslation(c2.x, c2.y, 0);
              var g2 = new r.Matrix4().multiply(m2).multiply(f2).multiply(d2);
              u2.applyMatrix4(g2), h2.applyMatrix4(g2), l.object.left = u2.x, l.object.right = h2.x, l.object.top = h2.y, l.object.bottom = u2.y, l.object.zoom = 1, l.object.updateProjectionMatrix(), x = true;
            } else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), l.enableZoom = false;
          }(O(), t4), l.update();
        }(t3), l.dispatchEvent(h));
      }
      function K(t3) {
        false !== l.enabled && false !== l.enableKeys && false !== l.enablePan && function(t4) {
          var e3 = false;
          switch (t4.keyCode) {
            case l.keys.UP:
              N(0, l.keyPanSpeed), e3 = true;
              break;
            case l.keys.BOTTOM:
              N(0, -l.keyPanSpeed), e3 = true;
              break;
            case l.keys.LEFT:
              N(l.keyPanSpeed, 0), e3 = true;
              break;
            case l.keys.RIGHT:
              N(-l.keyPanSpeed, 0), e3 = true;
          }
          e3 && (t4.preventDefault(), l.update());
        }(t3);
      }
      function $2(t3) {
        switch (t3.touches.length) {
          case 1:
            switch (l.touches.ONE) {
              case r.TOUCH.ROTATE:
                if (false === l.enableRotate) return;
                G(t3), d = p.TOUCH_ROTATE;
                break;
              case r.TOUCH.PAN:
                if (false === l.enablePan) return;
                z(t3), d = p.TOUCH_PAN;
                break;
              default:
                d = p.NONE;
            }
            break;
          case 2:
            switch (l.touches.TWO) {
              case r.TOUCH.DOLLY_PAN:
                if (false === l.enableZoom && false === l.enablePan) return;
                n3 = t3, l.enableZoom && U(n3), l.enablePan && z(n3), d = p.TOUCH_DOLLY_PAN;
                break;
              case r.TOUCH.DOLLY_ROTATE:
                if (false === l.enableZoom && false === l.enableRotate) return;
                e3 = t3, l.enableZoom && U(e3), l.enableRotate && G(e3), d = p.TOUCH_DOLLY_ROTATE;
                break;
              default:
                d = p.NONE;
            }
            break;
          default:
            d = p.NONE;
        }
        var e3, n3;
      }
      function Q(t3) {
        false !== l.enabled && (t3.preventDefault(), $2(t3), d !== p.NONE && l.dispatchEvent(u));
      }
      function tt(t3) {
        var e3, n3;
        if (false !== l.enabled) switch (t3.preventDefault(), t3.stopPropagation(), d) {
          case p.TOUCH_ROTATE:
            if (false === l.enableRotate) return;
            H(t3), l.update();
            break;
          case p.TOUCH_PAN:
            if (false === l.enablePan) return;
            W(t3), l.update();
            break;
          case p.TOUCH_DOLLY_PAN:
            if (false === l.enableZoom && false === l.enablePan) return;
            n3 = t3, l.enableZoom && J(n3), l.enablePan && W(n3), l.update();
            break;
          case p.TOUCH_DOLLY_ROTATE:
            if (false === l.enableZoom && false === l.enableRotate) return;
            e3 = t3, l.enableZoom && J(e3), l.enableRotate && H(e3), l.update();
            break;
          default:
            $2(t3);
        }
      }
      function et(t3) {
        false !== l.enabled && (l.dispatchEvent(h), d = p.NONE);
      }
      function nt(t3) {
        false !== l.enabled && t3.preventDefault();
      }
      l.domElement.addEventListener("contextmenu", nt, false), l.domElement.addEventListener("mousedown", q, false), l.domElement.addEventListener("wheel", Z, false), l.domElement.addEventListener("touchstart", Q, false), l.domElement.addEventListener("touchend", et, false), l.domElement.addEventListener("touchmove", tt, false), l.domElement.addEventListener("keydown", K, false), -1 === l.domElement.tabIndex && (l.domElement.tabIndex = 0), this.update();
    }, r.OrbitControls.prototype = Object.create(r.EventDispatcher.prototype), r.OrbitControls.prototype.constructor = r.OrbitControls, r.MapControls = function(t2, e2) {
      r.OrbitControls.call(this, t2, e2), this.mouseButtons.LEFT = r.MOUSE.PAN, this.mouseButtons.RIGHT = r.MOUSE.ROTATE, this.touches.ONE = r.TOUCH.PAN, this.touches.TWO = r.TOUCH.DOLLY_ROTATE;
    }, r.MapControls.prototype = Object.create(r.EventDispatcher.prototype), r.MapControls.prototype.constructor = r.MapControls, void 0 !== n && (void 0 !== e && e.exports && (n = e.exports = { OrbitControls: r.OrbitControls, MapControls: r.MapControls }), n.OrbitControls = r.OrbitControls, n.MapControls = r.MapControls);
  }, { three: 19 }], 18: [function(t, e, n) {
    (function() {
      var r, i, a, o = void 0 !== t, s = this.THREE || o && t("three");
      if (!s) throw new Error("MeshLine requires three.js");
      function l() {
        this.positions = [], this.previous = [], this.next = [], this.side = [], this.width = [], this.indices_array = [], this.uvs = [], this.counters = [], this.geometry = new s.BufferGeometry(), this.widthCallback = null, this.matrixWorld = new s.Matrix4();
      }
      function c(t2, e2, n2, r2, i2) {
        var a2;
        if (t2 = t2.subarray || t2.slice ? t2 : t2.buffer, n2 = n2.subarray || n2.slice ? n2 : n2.buffer, t2 = e2 ? t2.subarray ? t2.subarray(e2, i2 && e2 + i2) : t2.slice(e2, i2 && e2 + i2) : t2, n2.set) n2.set(t2, r2);
        else for (a2 = 0; a2 < t2.length; a2++) n2[a2 + r2] = t2[a2];
        return n2;
      }
      function u(t2) {
        s.ShaderMaterial.call(this, { uniforms: Object.assign({}, s.UniformsLib.fog, { lineWidth: { value: 1 }, map: { value: null }, useMap: { value: 0 }, alphaMap: { value: null }, useAlphaMap: { value: 0 }, color: { value: new s.Color(16777215) }, opacity: { value: 1 }, resolution: { value: new s.Vector2(1, 1) }, sizeAttenuation: { value: 1 }, near: { value: 1 }, far: { value: 1 }, dashArray: { value: 0 }, dashOffset: { value: 0 }, dashRatio: { value: 0.5 }, useDash: { value: 0 }, visibility: { value: 1 }, alphaTest: { value: 0 }, repeat: { value: new s.Vector2(1, 1) } }), vertexShader: s.ShaderChunk.meshline_vert, fragmentShader: s.ShaderChunk.meshline_frag }), this.type = "MeshLineMaterial", Object.defineProperties(this, { lineWidth: { enumerable: true, get: function() {
          return this.uniforms.lineWidth.value;
        }, set: function(t3) {
          this.uniforms.lineWidth.value = t3;
        } }, map: { enumerable: true, get: function() {
          return this.uniforms.map.value;
        }, set: function(t3) {
          this.uniforms.map.value = t3;
        } }, useMap: { enumerable: true, get: function() {
          return this.uniforms.useMap.value;
        }, set: function(t3) {
          this.uniforms.useMap.value = t3;
        } }, alphaMap: { enumerable: true, get: function() {
          return this.uniforms.alphaMap.value;
        }, set: function(t3) {
          this.uniforms.alphaMap.value = t3;
        } }, useAlphaMap: { enumerable: true, get: function() {
          return this.uniforms.useAlphaMap.value;
        }, set: function(t3) {
          this.uniforms.useAlphaMap.value = t3;
        } }, color: { enumerable: true, get: function() {
          return this.uniforms.color.value;
        }, set: function(t3) {
          this.uniforms.color.value = t3;
        } }, opacity: { enumerable: true, get: function() {
          return this.uniforms.opacity.value;
        }, set: function(t3) {
          this.uniforms.opacity.value = t3;
        } }, resolution: { enumerable: true, get: function() {
          return this.uniforms.resolution.value;
        }, set: function(t3) {
          this.uniforms.resolution.value.copy(t3);
        } }, sizeAttenuation: { enumerable: true, get: function() {
          return this.uniforms.sizeAttenuation.value;
        }, set: function(t3) {
          this.uniforms.sizeAttenuation.value = t3;
        } }, near: { enumerable: true, get: function() {
          return this.uniforms.near.value;
        }, set: function(t3) {
          this.uniforms.near.value = t3;
        } }, far: { enumerable: true, get: function() {
          return this.uniforms.far.value;
        }, set: function(t3) {
          this.uniforms.far.value = t3;
        } }, dashArray: { enumerable: true, get: function() {
          return this.uniforms.dashArray.value;
        }, set: function(t3) {
          this.uniforms.dashArray.value = t3, this.useDash = 0 !== t3 ? 1 : 0;
        } }, dashOffset: { enumerable: true, get: function() {
          return this.uniforms.dashOffset.value;
        }, set: function(t3) {
          this.uniforms.dashOffset.value = t3;
        } }, dashRatio: { enumerable: true, get: function() {
          return this.uniforms.dashRatio.value;
        }, set: function(t3) {
          this.uniforms.dashRatio.value = t3;
        } }, useDash: { enumerable: true, get: function() {
          return this.uniforms.useDash.value;
        }, set: function(t3) {
          this.uniforms.useDash.value = t3;
        } }, visibility: { enumerable: true, get: function() {
          return this.uniforms.visibility.value;
        }, set: function(t3) {
          this.uniforms.visibility.value = t3;
        } }, alphaTest: { enumerable: true, get: function() {
          return this.uniforms.alphaTest.value;
        }, set: function(t3) {
          this.uniforms.alphaTest.value = t3;
        } }, repeat: { enumerable: true, get: function() {
          return this.uniforms.repeat.value;
        }, set: function(t3) {
          this.uniforms.repeat.value.copy(t3);
        } } }), this.setValues(t2);
      }
      l.prototype.setMatrixWorld = function(t2) {
        this.matrixWorld = t2;
      }, l.prototype.setGeometry = function(t2, e2) {
        if (this.widthCallback = e2, this.positions = [], this.counters = [], t2 instanceof s.Geometry) for (var n2 = 0; n2 < t2.vertices.length; n2++) {
          var r2 = t2.vertices[n2];
          e2 = n2 / t2.vertices.length, this.positions.push(r2.x, r2.y, r2.z), this.positions.push(r2.x, r2.y, r2.z), this.counters.push(e2), this.counters.push(e2);
        }
        if (s.BufferGeometry, t2 instanceof Float32Array || t2 instanceof Array) for (n2 = 0; n2 < t2.length; n2 += 3) e2 = n2 / t2.length, this.positions.push(t2[n2], t2[n2 + 1], t2[n2 + 2]), this.positions.push(t2[n2], t2[n2 + 1], t2[n2 + 2]), this.counters.push(e2), this.counters.push(e2);
        this.process();
      }, l.prototype.raycast = (r = new s.Matrix4(), i = new s.Ray(), a = new s.Sphere(), function(t2, e2) {
        var n2 = t2.linePrecision, o2 = n2 * n2, l2 = this.geometry;
        if (null === l2.boundingSphere && l2.computeBoundingSphere(), a.copy(l2.boundingSphere), a.applyMatrix4(this.matrixWorld), false !== t2.ray.intersectSphere(a)) {
          r.getInverse(this.matrixWorld), i.copy(t2.ray).applyMatrix4(r);
          var c2 = new s.Vector3(), u2 = new s.Vector3(), h = new s.Vector3(), p = new s.Vector3(), d = this instanceof s.LineSegments ? 2 : 1;
          if (l2 instanceof s.BufferGeometry) {
            var f = l2.index, m = l2.attributes;
            if (null !== f) for (var g = f.array, y = m.position.array, v = 0, x = g.length - 1; v < x; v += d) {
              var w = g[v], b = g[v + 1];
              c2.fromArray(y, 3 * w), u2.fromArray(y, 3 * b), o2 < i.distanceSqToSegment(c2, u2, p, h) || (p.applyMatrix4(this.matrixWorld), (T = t2.ray.origin.distanceTo(p)) < t2.near || T > t2.far || e2.push({ distance: T, point: h.clone().applyMatrix4(this.matrixWorld), index: v, face: null, faceIndex: null, object: this }));
            }
            else for (v = 0, x = (y = m.position.array).length / 3 - 1; v < x; v += d) c2.fromArray(y, 3 * v), u2.fromArray(y, 3 * v + 3), o2 < i.distanceSqToSegment(c2, u2, p, h) || (p.applyMatrix4(this.matrixWorld), (T = t2.ray.origin.distanceTo(p)) < t2.near || T > t2.far || e2.push({ distance: T, point: h.clone().applyMatrix4(this.matrixWorld), index: v, face: null, faceIndex: null, object: this }));
          } else if (l2 instanceof s.Geometry) {
            var M = l2.vertices, _ = M.length;
            for (v = 0; v < _ - 1; v += d) {
              var T;
              o2 < i.distanceSqToSegment(M[v], M[v + 1], p, h) || (p.applyMatrix4(this.matrixWorld), (T = t2.ray.origin.distanceTo(p)) < t2.near || T > t2.far || e2.push({ distance: T, point: h.clone().applyMatrix4(this.matrixWorld), index: v, face: null, faceIndex: null, object: this }));
            }
          }
        }
      }), l.prototype.compareV3 = function(t2, e2) {
        var n2 = 6 * t2, r2 = 6 * e2;
        return this.positions[n2] === this.positions[r2] && this.positions[1 + n2] === this.positions[1 + r2] && this.positions[2 + n2] === this.positions[2 + r2];
      }, l.prototype.copyV3 = function(t2) {
        var e2 = 6 * t2;
        return [this.positions[e2], this.positions[1 + e2], this.positions[2 + e2]];
      }, l.prototype.process = function() {
        var t2, e2, n2 = this.positions.length / 6;
        this.previous = [], this.next = [], this.side = [], this.width = [], this.indices_array = [], this.uvs = [];
        for (var r2 = 0; r2 < n2; r2++) this.side.push(1), this.side.push(-1);
        for (r2 = 0; r2 < n2; r2++) t2 = this.widthCallback ? this.widthCallback(r2 / (n2 - 1)) : 1, this.width.push(t2), this.width.push(t2);
        for (r2 = 0; r2 < n2; r2++) this.uvs.push(r2 / (n2 - 1), 0), this.uvs.push(r2 / (n2 - 1), 1);
        for (e2 = this.compareV3(0, n2 - 1) ? this.copyV3(n2 - 2) : this.copyV3(0), this.previous.push(e2[0], e2[1], e2[2]), this.previous.push(e2[0], e2[1], e2[2]), r2 = 0; r2 < n2 - 1; r2++) e2 = this.copyV3(r2), this.previous.push(e2[0], e2[1], e2[2]), this.previous.push(e2[0], e2[1], e2[2]);
        for (r2 = 1; r2 < n2; r2++) e2 = this.copyV3(r2), this.next.push(e2[0], e2[1], e2[2]), this.next.push(e2[0], e2[1], e2[2]);
        for (e2 = this.compareV3(n2 - 1, 0) ? this.copyV3(1) : this.copyV3(n2 - 1), this.next.push(e2[0], e2[1], e2[2]), this.next.push(e2[0], e2[1], e2[2]), r2 = 0; r2 < n2 - 1; r2++) {
          var i2 = 2 * r2;
          this.indices_array.push(i2, 1 + i2, 2 + i2), this.indices_array.push(2 + i2, 1 + i2, 3 + i2);
        }
        this.attributes ? (this.attributes.position.copyArray(new Float32Array(this.positions)), this.attributes.position.needsUpdate = true, this.attributes.previous.copyArray(new Float32Array(this.previous)), this.attributes.previous.needsUpdate = true, this.attributes.next.copyArray(new Float32Array(this.next)), this.attributes.next.needsUpdate = true, this.attributes.side.copyArray(new Float32Array(this.side)), this.attributes.side.needsUpdate = true, this.attributes.width.copyArray(new Float32Array(this.width)), this.attributes.width.needsUpdate = true, this.attributes.uv.copyArray(new Float32Array(this.uvs)), this.attributes.uv.needsUpdate = true, this.attributes.index.copyArray(new Uint16Array(this.indices_array)), this.attributes.index.needsUpdate = true) : this.attributes = { position: new s.BufferAttribute(new Float32Array(this.positions), 3), previous: new s.BufferAttribute(new Float32Array(this.previous), 3), next: new s.BufferAttribute(new Float32Array(this.next), 3), side: new s.BufferAttribute(new Float32Array(this.side), 1), width: new s.BufferAttribute(new Float32Array(this.width), 1), uv: new s.BufferAttribute(new Float32Array(this.uvs), 2), index: new s.BufferAttribute(new Uint16Array(this.indices_array), 1), counters: new s.BufferAttribute(new Float32Array(this.counters), 1) }, this.geometry.setAttribute("position", this.attributes.position), this.geometry.setAttribute("previous", this.attributes.previous), this.geometry.setAttribute("next", this.attributes.next), this.geometry.setAttribute("side", this.attributes.side), this.geometry.setAttribute("width", this.attributes.width), this.geometry.setAttribute("uv", this.attributes.uv), this.geometry.setAttribute("counters", this.attributes.counters), this.geometry.setIndex(this.attributes.index);
      }, l.prototype.advance = function(t2) {
        var e2 = this.attributes.position.array, n2 = this.attributes.previous.array, r2 = this.attributes.next.array, i2 = e2.length;
        c(e2, 0, n2, 0, i2), c(e2, 6, e2, 0, i2 - 6), e2[i2 - 6] = t2.x, e2[i2 - 5] = t2.y, e2[i2 - 4] = t2.z, e2[i2 - 3] = t2.x, e2[i2 - 2] = t2.y, e2[i2 - 1] = t2.z, c(e2, 6, r2, 0, i2 - 6), r2[i2 - 6] = t2.x, r2[i2 - 5] = t2.y, r2[i2 - 4] = t2.z, r2[i2 - 3] = t2.x, r2[i2 - 2] = t2.y, r2[i2 - 1] = t2.z, this.attributes.position.needsUpdate = true, this.attributes.previous.needsUpdate = true, this.attributes.next.needsUpdate = true;
      }, s.ShaderChunk.meshline_vert = ["", s.ShaderChunk.logdepthbuf_pars_vertex, s.ShaderChunk.fog_pars_vertex, "", "attribute vec3 previous;", "attribute vec3 next;", "attribute float side;", "attribute float width;", "attribute float counters;", "", "uniform vec2 resolution;", "uniform float lineWidth;", "uniform vec3 color;", "uniform float opacity;", "uniform float sizeAttenuation;", "", "varying vec2 vUV;", "varying vec4 vColor;", "varying float vCounters;", "", "vec2 fix( vec4 i, float aspect ) {", "", "    vec2 res = i.xy / i.w;", "    res.x *= aspect;", "	 vCounters = counters;", "    return res;", "", "}", "", "void main() {", "", "    float aspect = resolution.x / resolution.y;", "", "    vColor = vec4( color, opacity );", "    vUV = uv;", "", "    mat4 m = projectionMatrix * modelViewMatrix;", "    vec4 finalPosition = m * vec4( position, 1.0 );", "    vec4 prevPos = m * vec4( previous, 1.0 );", "    vec4 nextPos = m * vec4( next, 1.0 );", "", "    vec2 currentP = fix( finalPosition, aspect );", "    vec2 prevP = fix( prevPos, aspect );", "    vec2 nextP = fix( nextPos, aspect );", "", "    float w = lineWidth * width;", "", "    vec2 dir;", "    if( nextP == currentP ) dir = normalize( currentP - prevP );", "    else if( prevP == currentP ) dir = normalize( nextP - currentP );", "    else {", "        vec2 dir1 = normalize( currentP - prevP );", "        vec2 dir2 = normalize( nextP - currentP );", "        dir = normalize( dir1 + dir2 );", "", "        vec2 perp = vec2( -dir1.y, dir1.x );", "        vec2 miter = vec2( -dir.y, dir.x );", "        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );", "", "    }", "", "    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;", "    vec4 normal = vec4( -dir.y, dir.x, 0., 1. );", "    normal.xy *= .5 * w;", "    normal *= projectionMatrix;", "    if( sizeAttenuation == 0. ) {", "        normal.xy *= finalPosition.w;", "        normal.xy /= ( vec4( resolution, 0., 1. ) * projectionMatrix ).xy;", "    }", "", "    finalPosition.xy += normal.xy * side;", "", "    gl_Position = finalPosition;", "", s.ShaderChunk.logdepthbuf_vertex, s.ShaderChunk.fog_vertex && "    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", s.ShaderChunk.fog_vertex, "}"].join("\n"), s.ShaderChunk.meshline_frag = ["", s.ShaderChunk.fog_pars_fragment, s.ShaderChunk.logdepthbuf_pars_fragment, "", "uniform sampler2D map;", "uniform sampler2D alphaMap;", "uniform float useMap;", "uniform float useAlphaMap;", "uniform float useDash;", "uniform float dashArray;", "uniform float dashOffset;", "uniform float dashRatio;", "uniform float visibility;", "uniform float alphaTest;", "uniform vec2 repeat;", "", "varying vec2 vUV;", "varying vec4 vColor;", "varying float vCounters;", "", "void main() {", "", s.ShaderChunk.logdepthbuf_fragment, "", "    vec4 c = vColor;", "    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );", "    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;", "    if( c.a < alphaTest ) discard;", "    if( useDash == 1. ){", "        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));", "    }", "    gl_FragColor = c;", "    gl_FragColor.a *= step(vCounters, visibility);", "", s.ShaderChunk.fog_fragment, "}"].join("\n"), ((u.prototype = Object.create(s.ShaderMaterial.prototype)).constructor = u).prototype.isMeshLineMaterial = true, u.prototype.copy = function(t2) {
        return s.ShaderMaterial.prototype.copy.call(this, t2), this.lineWidth = t2.lineWidth, this.map = t2.map, this.useMap = t2.useMap, this.alphaMap = t2.alphaMap, this.useAlphaMap = t2.useAlphaMap, this.color.copy(t2.color), this.opacity = t2.opacity, this.resolution.copy(t2.resolution), this.sizeAttenuation = t2.sizeAttenuation, this.near = t2.near, this.far = t2.far, this.dashArray.copy(t2.dashArray), this.dashOffset.copy(t2.dashOffset), this.dashRatio.copy(t2.dashRatio), this.useDash = t2.useDash, this.visibility = t2.visibility, this.alphaTest = t2.alphaTest, this.repeat.copy(t2.repeat), this;
      }, void 0 !== n ? (void 0 !== e && e.exports && (n = e.exports = { MeshLine: l, MeshLineMaterial: u }), n.MeshLine = l, n.MeshLineMaterial = u) : (this.MeshLine = l, this.MeshLineMaterial = u);
    }).call(this);
  }, { three: 19 }], 19: [function(t, e, n) {
    var r, i;
    r = this, i = function(t2) {
      void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)), void 0 === Number.isInteger && (Number.isInteger = function(t3) {
        return "number" == typeof t3 && isFinite(t3) && Math.floor(t3) === t3;
      }), void 0 === Math.sign && (Math.sign = function(t3) {
        return t3 < 0 ? -1 : 0 < t3 ? 1 : +t3;
      }), "name" in Function.prototype == 0 && Object.defineProperty(Function.prototype, "name", { get: function() {
        return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];
      } }), void 0 === Object.assign && (Object.assign = function(t3) {
        if (null == t3) throw new TypeError("Cannot convert undefined or null to object");
        for (var e3 = Object(t3), n3 = 1; n3 < arguments.length; n3++) {
          var r3 = arguments[n3];
          if (null != r3) for (var i3 in r3) Object.prototype.hasOwnProperty.call(r3, i3) && (e3[i3] = r3[i3]);
        }
        return e3;
      });
      var e2 = 0, n2 = 1, r2 = 2, i2 = 1, a = 2, o = 3, s = 0, l = 1, c = 2, u = 0, h = 0, p = 1, d = 2, f = 3, m = 4, g = 5, y = 100, v = 101, x = 102, w = 103, b = 104, M = 200, _ = 201, T = 202, C = 203, S = 204, D = 205, E = 206, O = 207, A = 208, P = 209, R = 210, L = 0, I = 1, k = 2, j = 3, N = 4, V = 5, F = 6, B = 7, G = 0, z = 1, U = 2, H = 0, W = 1, J = 2, q = 3, X = 4, Y = 5, Z = 301, K = 302, $2 = 303, Q = 304, tt = 305, et = 306, nt = 307, rt = 1e3, it = 1001, at = 1002, ot = 1003, st = 1004, lt = 1005, ct = 1006, ut = 1007, ht = 1008, pt = 1009, dt = 1010, ft = 1011, mt = 1012, gt = 1013, yt = 1014, vt = 1015, xt = 1016, wt = 1017, bt = 1018, Mt = 1019, _t = 1020, Tt = 1021, Ct = 1022, St = 1023, Dt = 1024, Et = 1025, Ot = St, At = 1026, Pt = 1027, Rt = 1028, Lt = 1029, It = 1030, kt = 1031, jt = 1032, Nt = 1033, Vt = 33776, Ft = 33777, Bt = 33778, Gt = 33779, zt = 35840, Ut = 35841, Ht = 35842, Wt = 35843, Jt = 36196, qt = 37808, Xt = 37809, Yt = 37810, Zt = 37811, Kt = 37812, $t = 37813, Qt = 37814, te = 37815, ee = 37816, ne = 37817, re = 37818, ie = 37819, ae = 37820, oe = 37821, se = 2300, le = 2301, ce = 2400, ue = 2401, he = 2402, pe = 3e3, de = 3001, fe = 3007, me = 3002, ge = 3003, ye = 3004, ve = 3005, xe = 3006, we = 3200, be = 3201, Me = 0, _e = 1, Te = 7680, Ce = 519, Se = 35044, De = 35048;
      function Ee() {
      }
      Object.assign(Ee.prototype, { addEventListener: function(t3, e3) {
        void 0 === this._listeners && (this._listeners = {});
        var n3 = this._listeners;
        void 0 === n3[t3] && (n3[t3] = []), -1 === n3[t3].indexOf(e3) && n3[t3].push(e3);
      }, hasEventListener: function(t3, e3) {
        if (void 0 === this._listeners) return false;
        var n3 = this._listeners;
        return void 0 !== n3[t3] && -1 !== n3[t3].indexOf(e3);
      }, removeEventListener: function(t3, e3) {
        if (void 0 !== this._listeners) {
          var n3 = this._listeners[t3];
          if (void 0 !== n3) {
            var r3 = n3.indexOf(e3);
            -1 !== r3 && n3.splice(r3, 1);
          }
        }
      }, dispatchEvent: function(t3) {
        if (void 0 !== this._listeners) {
          var e3 = this._listeners[t3.type];
          if (void 0 !== e3) {
            t3.target = this;
            for (var n3 = e3.slice(0), r3 = 0, i3 = n3.length; r3 < i3; r3++) n3[r3].call(this, t3);
          }
        }
      } });
      for (var Oe = [], Ae = 0; Ae < 256; Ae++) Oe[Ae] = (Ae < 16 ? "0" : "") + Ae.toString(16);
      var Pe, Re = { DEG2RAD: Math.PI / 180, RAD2DEG: 180 / Math.PI, generateUUID: function() {
        var t3 = 4294967295 * Math.random() | 0, e3 = 4294967295 * Math.random() | 0, n3 = 4294967295 * Math.random() | 0, r3 = 4294967295 * Math.random() | 0;
        return (Oe[255 & t3] + Oe[t3 >> 8 & 255] + Oe[t3 >> 16 & 255] + Oe[t3 >> 24 & 255] + "-" + Oe[255 & e3] + Oe[e3 >> 8 & 255] + "-" + Oe[e3 >> 16 & 15 | 64] + Oe[e3 >> 24 & 255] + "-" + Oe[63 & n3 | 128] + Oe[n3 >> 8 & 255] + "-" + Oe[n3 >> 16 & 255] + Oe[n3 >> 24 & 255] + Oe[255 & r3] + Oe[r3 >> 8 & 255] + Oe[r3 >> 16 & 255] + Oe[r3 >> 24 & 255]).toUpperCase();
      }, clamp: function(t3, e3, n3) {
        return Math.max(e3, Math.min(n3, t3));
      }, euclideanModulo: function(t3, e3) {
        return (t3 % e3 + e3) % e3;
      }, mapLinear: function(t3, e3, n3, r3, i3) {
        return r3 + (t3 - e3) * (i3 - r3) / (n3 - e3);
      }, lerp: function(t3, e3, n3) {
        return (1 - n3) * t3 + n3 * e3;
      }, smoothstep: function(t3, e3, n3) {
        return t3 <= e3 ? 0 : n3 <= t3 ? 1 : (t3 = (t3 - e3) / (n3 - e3)) * t3 * (3 - 2 * t3);
      }, smootherstep: function(t3, e3, n3) {
        return t3 <= e3 ? 0 : n3 <= t3 ? 1 : (t3 = (t3 - e3) / (n3 - e3)) * t3 * t3 * (t3 * (6 * t3 - 15) + 10);
      }, randInt: function(t3, e3) {
        return t3 + Math.floor(Math.random() * (e3 - t3 + 1));
      }, randFloat: function(t3, e3) {
        return t3 + Math.random() * (e3 - t3);
      }, randFloatSpread: function(t3) {
        return t3 * (0.5 - Math.random());
      }, degToRad: function(t3) {
        return t3 * Re.DEG2RAD;
      }, radToDeg: function(t3) {
        return t3 * Re.RAD2DEG;
      }, isPowerOfTwo: function(t3) {
        return 0 == (t3 & t3 - 1) && 0 !== t3;
      }, ceilPowerOfTwo: function(t3) {
        return Math.pow(2, Math.ceil(Math.log(t3) / Math.LN2));
      }, floorPowerOfTwo: function(t3) {
        return Math.pow(2, Math.floor(Math.log(t3) / Math.LN2));
      }, setQuaternionFromProperEuler: function(t3, e3, n3, r3, i3) {
        var a2 = Math.cos, o2 = Math.sin, s2 = a2(n3 / 2), l2 = o2(n3 / 2), c2 = a2((e3 + r3) / 2), u2 = o2((e3 + r3) / 2), h2 = a2((e3 - r3) / 2), p2 = o2((e3 - r3) / 2), d2 = a2((r3 - e3) / 2), f2 = o2((r3 - e3) / 2);
        "XYX" === i3 ? t3.set(s2 * u2, l2 * h2, l2 * p2, s2 * c2) : "YZY" === i3 ? t3.set(l2 * p2, s2 * u2, l2 * h2, s2 * c2) : "ZXZ" === i3 ? t3.set(l2 * h2, l2 * p2, s2 * u2, s2 * c2) : "XZX" === i3 ? t3.set(s2 * u2, l2 * f2, l2 * d2, s2 * c2) : "YXY" === i3 ? t3.set(l2 * d2, s2 * u2, l2 * f2, s2 * c2) : "ZYZ" === i3 ? t3.set(l2 * f2, l2 * d2, s2 * u2, s2 * c2) : console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order.");
      } };
      function Le(t3, e3) {
        this.x = t3 || 0, this.y = e3 || 0;
      }
      function Ie() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], 0 < arguments.length && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
      }
      Object.defineProperties(Le.prototype, { width: { get: function() {
        return this.x;
      }, set: function(t3) {
        this.x = t3;
      } }, height: { get: function() {
        return this.y;
      }, set: function(t3) {
        this.y = t3;
      } } }), Object.assign(Le.prototype, { isVector2: true, set: function(t3, e3) {
        return this.x = t3, this.y = e3, this;
      }, setScalar: function(t3) {
        return this.x = t3, this.y = t3, this;
      }, setX: function(t3) {
        return this.x = t3, this;
      }, setY: function(t3) {
        return this.y = t3, this;
      }, setComponent: function(t3, e3) {
        switch (t3) {
          case 0:
            this.x = e3;
            break;
          case 1:
            this.y = e3;
            break;
          default:
            throw new Error("index is out of range: " + t3);
        }
        return this;
      }, getComponent: function(t3) {
        switch (t3) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          default:
            throw new Error("index is out of range: " + t3);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y);
      }, copy: function(t3) {
        return this.x = t3.x, this.y = t3.y, this;
      }, add: function(t3, e3) {
        return void 0 !== e3 ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t3, e3)) : (this.x += t3.x, this.y += t3.y, this);
      }, addScalar: function(t3) {
        return this.x += t3, this.y += t3, this;
      }, addVectors: function(t3, e3) {
        return this.x = t3.x + e3.x, this.y = t3.y + e3.y, this;
      }, addScaledVector: function(t3, e3) {
        return this.x += t3.x * e3, this.y += t3.y * e3, this;
      }, sub: function(t3, e3) {
        return void 0 !== e3 ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t3, e3)) : (this.x -= t3.x, this.y -= t3.y, this);
      }, subScalar: function(t3) {
        return this.x -= t3, this.y -= t3, this;
      }, subVectors: function(t3, e3) {
        return this.x = t3.x - e3.x, this.y = t3.y - e3.y, this;
      }, multiply: function(t3) {
        return this.x *= t3.x, this.y *= t3.y, this;
      }, multiplyScalar: function(t3) {
        return this.x *= t3, this.y *= t3, this;
      }, divide: function(t3) {
        return this.x /= t3.x, this.y /= t3.y, this;
      }, divideScalar: function(t3) {
        return this.multiplyScalar(1 / t3);
      }, applyMatrix3: function(t3) {
        var e3 = this.x, n3 = this.y, r3 = t3.elements;
        return this.x = r3[0] * e3 + r3[3] * n3 + r3[6], this.y = r3[1] * e3 + r3[4] * n3 + r3[7], this;
      }, min: function(t3) {
        return this.x = Math.min(this.x, t3.x), this.y = Math.min(this.y, t3.y), this;
      }, max: function(t3) {
        return this.x = Math.max(this.x, t3.x), this.y = Math.max(this.y, t3.y), this;
      }, clamp: function(t3, e3) {
        return this.x = Math.max(t3.x, Math.min(e3.x, this.x)), this.y = Math.max(t3.y, Math.min(e3.y, this.y)), this;
      }, clampScalar: function(t3, e3) {
        return this.x = Math.max(t3, Math.min(e3, this.x)), this.y = Math.max(t3, Math.min(e3, this.y)), this;
      }, clampLength: function(t3, e3) {
        var n3 = this.length();
        return this.divideScalar(n3 || 1).multiplyScalar(Math.max(t3, Math.min(e3, n3)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this;
      }, dot: function(t3) {
        return this.x * t3.x + this.y * t3.y;
      }, cross: function(t3) {
        return this.x * t3.y - this.y * t3.x;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, angle: function() {
        var t3 = Math.atan2(this.y, this.x);
        return t3 < 0 && (t3 += 2 * Math.PI), t3;
      }, distanceTo: function(t3) {
        return Math.sqrt(this.distanceToSquared(t3));
      }, distanceToSquared: function(t3) {
        var e3 = this.x - t3.x, n3 = this.y - t3.y;
        return e3 * e3 + n3 * n3;
      }, manhattanDistanceTo: function(t3) {
        return Math.abs(this.x - t3.x) + Math.abs(this.y - t3.y);
      }, setLength: function(t3) {
        return this.normalize().multiplyScalar(t3);
      }, lerp: function(t3, e3) {
        return this.x += (t3.x - this.x) * e3, this.y += (t3.y - this.y) * e3, this;
      }, lerpVectors: function(t3, e3, n3) {
        return this.subVectors(e3, t3).multiplyScalar(n3).add(t3);
      }, equals: function(t3) {
        return t3.x === this.x && t3.y === this.y;
      }, fromArray: function(t3, e3) {
        return void 0 === e3 && (e3 = 0), this.x = t3[e3], this.y = t3[e3 + 1], this;
      }, toArray: function(t3, e3) {
        return void 0 === t3 && (t3 = []), void 0 === e3 && (e3 = 0), t3[e3] = this.x, t3[e3 + 1] = this.y, t3;
      }, fromBufferAttribute: function(t3, e3, n3) {
        return void 0 !== n3 && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = t3.getX(e3), this.y = t3.getY(e3), this;
      }, rotateAround: function(t3, e3) {
        var n3 = Math.cos(e3), r3 = Math.sin(e3), i3 = this.x - t3.x, a2 = this.y - t3.y;
        return this.x = i3 * n3 - a2 * r3 + t3.x, this.y = i3 * r3 + a2 * n3 + t3.y, this;
      } }), Object.assign(Ie.prototype, { isMatrix3: true, set: function(t3, e3, n3, r3, i3, a2, o2, s2, l2) {
        var c2 = this.elements;
        return c2[0] = t3, c2[1] = r3, c2[2] = o2, c2[3] = e3, c2[4] = i3, c2[5] = s2, c2[6] = n3, c2[7] = a2, c2[8] = l2, this;
      }, identity: function() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
      }, clone: function() {
        return new this.constructor().fromArray(this.elements);
      }, copy: function(t3) {
        var e3 = this.elements, n3 = t3.elements;
        return e3[0] = n3[0], e3[1] = n3[1], e3[2] = n3[2], e3[3] = n3[3], e3[4] = n3[4], e3[5] = n3[5], e3[6] = n3[6], e3[7] = n3[7], e3[8] = n3[8], this;
      }, setFromMatrix4: function(t3) {
        var e3 = t3.elements;
        return this.set(e3[0], e3[4], e3[8], e3[1], e3[5], e3[9], e3[2], e3[6], e3[10]), this;
      }, multiply: function(t3) {
        return this.multiplyMatrices(this, t3);
      }, premultiply: function(t3) {
        return this.multiplyMatrices(t3, this);
      }, multiplyMatrices: function(t3, e3) {
        var n3 = t3.elements, r3 = e3.elements, i3 = this.elements, a2 = n3[0], o2 = n3[3], s2 = n3[6], l2 = n3[1], c2 = n3[4], u2 = n3[7], h2 = n3[2], p2 = n3[5], d2 = n3[8], f2 = r3[0], m2 = r3[3], g2 = r3[6], y2 = r3[1], v2 = r3[4], x2 = r3[7], w2 = r3[2], b2 = r3[5], M2 = r3[8];
        return i3[0] = a2 * f2 + o2 * y2 + s2 * w2, i3[3] = a2 * m2 + o2 * v2 + s2 * b2, i3[6] = a2 * g2 + o2 * x2 + s2 * M2, i3[1] = l2 * f2 + c2 * y2 + u2 * w2, i3[4] = l2 * m2 + c2 * v2 + u2 * b2, i3[7] = l2 * g2 + c2 * x2 + u2 * M2, i3[2] = h2 * f2 + p2 * y2 + d2 * w2, i3[5] = h2 * m2 + p2 * v2 + d2 * b2, i3[8] = h2 * g2 + p2 * x2 + d2 * M2, this;
      }, multiplyScalar: function(t3) {
        var e3 = this.elements;
        return e3[0] *= t3, e3[3] *= t3, e3[6] *= t3, e3[1] *= t3, e3[4] *= t3, e3[7] *= t3, e3[2] *= t3, e3[5] *= t3, e3[8] *= t3, this;
      }, determinant: function() {
        var t3 = this.elements, e3 = t3[0], n3 = t3[1], r3 = t3[2], i3 = t3[3], a2 = t3[4], o2 = t3[5], s2 = t3[6], l2 = t3[7], c2 = t3[8];
        return e3 * a2 * c2 - e3 * o2 * l2 - n3 * i3 * c2 + n3 * o2 * s2 + r3 * i3 * l2 - r3 * a2 * s2;
      }, getInverse: function(t3, e3) {
        t3 && t3.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
        var n3 = t3.elements, r3 = this.elements, i3 = n3[0], a2 = n3[1], o2 = n3[2], s2 = n3[3], l2 = n3[4], c2 = n3[5], u2 = n3[6], h2 = n3[7], p2 = n3[8], d2 = p2 * l2 - c2 * h2, f2 = c2 * u2 - p2 * s2, m2 = h2 * s2 - l2 * u2, g2 = i3 * d2 + a2 * f2 + o2 * m2;
        if (0 == g2) {
          var y2 = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
          if (true === e3) throw new Error(y2);
          return console.warn(y2), this.identity();
        }
        var v2 = 1 / g2;
        return r3[0] = d2 * v2, r3[1] = (o2 * h2 - p2 * a2) * v2, r3[2] = (c2 * a2 - o2 * l2) * v2, r3[3] = f2 * v2, r3[4] = (p2 * i3 - o2 * u2) * v2, r3[5] = (o2 * s2 - c2 * i3) * v2, r3[6] = m2 * v2, r3[7] = (a2 * u2 - h2 * i3) * v2, r3[8] = (l2 * i3 - a2 * s2) * v2, this;
      }, transpose: function() {
        var t3, e3 = this.elements;
        return t3 = e3[1], e3[1] = e3[3], e3[3] = t3, t3 = e3[2], e3[2] = e3[6], e3[6] = t3, t3 = e3[5], e3[5] = e3[7], e3[7] = t3, this;
      }, getNormalMatrix: function(t3) {
        return this.setFromMatrix4(t3).getInverse(this).transpose();
      }, transposeIntoArray: function(t3) {
        var e3 = this.elements;
        return t3[0] = e3[0], t3[1] = e3[3], t3[2] = e3[6], t3[3] = e3[1], t3[4] = e3[4], t3[5] = e3[7], t3[6] = e3[2], t3[7] = e3[5], t3[8] = e3[8], this;
      }, setUvTransform: function(t3, e3, n3, r3, i3, a2, o2) {
        var s2 = Math.cos(i3), l2 = Math.sin(i3);
        this.set(n3 * s2, n3 * l2, -n3 * (s2 * a2 + l2 * o2) + a2 + t3, -r3 * l2, r3 * s2, -r3 * (-l2 * a2 + s2 * o2) + o2 + e3, 0, 0, 1);
      }, scale: function(t3, e3) {
        var n3 = this.elements;
        return n3[0] *= t3, n3[3] *= t3, n3[6] *= t3, n3[1] *= e3, n3[4] *= e3, n3[7] *= e3, this;
      }, rotate: function(t3) {
        var e3 = Math.cos(t3), n3 = Math.sin(t3), r3 = this.elements, i3 = r3[0], a2 = r3[3], o2 = r3[6], s2 = r3[1], l2 = r3[4], c2 = r3[7];
        return r3[0] = e3 * i3 + n3 * s2, r3[3] = e3 * a2 + n3 * l2, r3[6] = e3 * o2 + n3 * c2, r3[1] = -n3 * i3 + e3 * s2, r3[4] = -n3 * a2 + e3 * l2, r3[7] = -n3 * o2 + e3 * c2, this;
      }, translate: function(t3, e3) {
        var n3 = this.elements;
        return n3[0] += t3 * n3[2], n3[3] += t3 * n3[5], n3[6] += t3 * n3[8], n3[1] += e3 * n3[2], n3[4] += e3 * n3[5], n3[7] += e3 * n3[8], this;
      }, equals: function(t3) {
        for (var e3 = this.elements, n3 = t3.elements, r3 = 0; r3 < 9; r3++) if (e3[r3] !== n3[r3]) return false;
        return true;
      }, fromArray: function(t3, e3) {
        void 0 === e3 && (e3 = 0);
        for (var n3 = 0; n3 < 9; n3++) this.elements[n3] = t3[n3 + e3];
        return this;
      }, toArray: function(t3, e3) {
        void 0 === t3 && (t3 = []), void 0 === e3 && (e3 = 0);
        var n3 = this.elements;
        return t3[e3] = n3[0], t3[e3 + 1] = n3[1], t3[e3 + 2] = n3[2], t3[e3 + 3] = n3[3], t3[e3 + 4] = n3[4], t3[e3 + 5] = n3[5], t3[e3 + 6] = n3[6], t3[e3 + 7] = n3[7], t3[e3 + 8] = n3[8], t3;
      } });
      var ke = { getDataURL: function(t3) {
        var e3;
        if ("undefined" == typeof HTMLCanvasElement) return t3.src;
        if (t3 instanceof HTMLCanvasElement) e3 = t3;
        else {
          void 0 === Pe && (Pe = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), Pe.width = t3.width, Pe.height = t3.height;
          var n3 = Pe.getContext("2d");
          t3 instanceof ImageData ? n3.putImageData(t3, 0, 0) : n3.drawImage(t3, 0, 0, t3.width, t3.height), e3 = Pe;
        }
        return 2048 < e3.width || 2048 < e3.height ? e3.toDataURL("image/jpeg", 0.6) : e3.toDataURL("image/png");
      } }, je = 0;
      function Ne(t3, e3, n3, r3, i3, a2, o2, s2, l2, c2) {
        Object.defineProperty(this, "id", { value: je++ }), this.uuid = Re.generateUUID(), this.name = "", this.image = void 0 !== t3 ? t3 : Ne.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = void 0 !== e3 ? e3 : Ne.DEFAULT_MAPPING, this.wrapS = void 0 !== n3 ? n3 : it, this.wrapT = void 0 !== r3 ? r3 : it, this.magFilter = void 0 !== i3 ? i3 : ct, this.minFilter = void 0 !== a2 ? a2 : ht, this.anisotropy = void 0 !== l2 ? l2 : 1, this.format = void 0 !== o2 ? o2 : St, this.internalFormat = null, this.type = void 0 !== s2 ? s2 : pt, this.offset = new Le(0, 0), this.repeat = new Le(1, 1), this.center = new Le(0, 0), this.rotation = 0, this.matrixAutoUpdate = true, this.matrix = new Ie(), this.generateMipmaps = true, this.premultiplyAlpha = false, this.flipY = true, this.unpackAlignment = 4, this.encoding = void 0 !== c2 ? c2 : pe, this.version = 0, this.onUpdate = null;
      }
      function Ve(t3, e3, n3, r3) {
        this.x = t3 || 0, this.y = e3 || 0, this.z = n3 || 0, this.w = void 0 !== r3 ? r3 : 1;
      }
      function Fe(t3, e3, n3) {
        this.width = t3, this.height = e3, this.scissor = new Ve(0, 0, t3, e3), this.scissorTest = false, this.viewport = new Ve(0, 0, t3, e3), n3 = n3 || {}, this.texture = new Ne(void 0, n3.mapping, n3.wrapS, n3.wrapT, n3.magFilter, n3.minFilter, n3.format, n3.type, n3.anisotropy, n3.encoding), this.texture.image = {}, this.texture.image.width = t3, this.texture.image.height = e3, this.texture.generateMipmaps = void 0 !== n3.generateMipmaps && n3.generateMipmaps, this.texture.minFilter = void 0 !== n3.minFilter ? n3.minFilter : ct, this.depthBuffer = void 0 === n3.depthBuffer || n3.depthBuffer, this.stencilBuffer = void 0 === n3.stencilBuffer || n3.stencilBuffer, this.depthTexture = void 0 !== n3.depthTexture ? n3.depthTexture : null;
      }
      function Be(t3, e3, n3) {
        Fe.call(this, t3, e3, n3), this.samples = 4;
      }
      function Ge(t3, e3, n3, r3) {
        this._x = t3 || 0, this._y = e3 || 0, this._z = n3 || 0, this._w = void 0 !== r3 ? r3 : 1;
      }
      Ne.DEFAULT_IMAGE = void 0, Ne.DEFAULT_MAPPING = 300, Ne.prototype = Object.assign(Object.create(Ee.prototype), { constructor: Ne, isTexture: true, updateMatrix: function() {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.name = t3.name, this.image = t3.image, this.mipmaps = t3.mipmaps.slice(0), this.mapping = t3.mapping, this.wrapS = t3.wrapS, this.wrapT = t3.wrapT, this.magFilter = t3.magFilter, this.minFilter = t3.minFilter, this.anisotropy = t3.anisotropy, this.format = t3.format, this.internalFormat = t3.internalFormat, this.type = t3.type, this.offset.copy(t3.offset), this.repeat.copy(t3.repeat), this.center.copy(t3.center), this.rotation = t3.rotation, this.matrixAutoUpdate = t3.matrixAutoUpdate, this.matrix.copy(t3.matrix), this.generateMipmaps = t3.generateMipmaps, this.premultiplyAlpha = t3.premultiplyAlpha, this.flipY = t3.flipY, this.unpackAlignment = t3.unpackAlignment, this.encoding = t3.encoding, this;
      }, toJSON: function(t3) {
        var e3 = void 0 === t3 || "string" == typeof t3;
        if (!e3 && void 0 !== t3.textures[this.uuid]) return t3.textures[this.uuid];
        var n3 = { metadata: { version: 4.5, type: "Texture", generator: "Texture.toJSON" }, uuid: this.uuid, name: this.name, mapping: this.mapping, repeat: [this.repeat.x, this.repeat.y], offset: [this.offset.x, this.offset.y], center: [this.center.x, this.center.y], rotation: this.rotation, wrap: [this.wrapS, this.wrapT], format: this.format, type: this.type, encoding: this.encoding, minFilter: this.minFilter, magFilter: this.magFilter, anisotropy: this.anisotropy, flipY: this.flipY, premultiplyAlpha: this.premultiplyAlpha, unpackAlignment: this.unpackAlignment };
        if (void 0 !== this.image) {
          var r3 = this.image;
          if (void 0 === r3.uuid && (r3.uuid = Re.generateUUID()), !e3 && void 0 === t3.images[r3.uuid]) {
            var i3;
            if (Array.isArray(r3)) {
              i3 = [];
              for (var a2 = 0, o2 = r3.length; a2 < o2; a2++) i3.push(ke.getDataURL(r3[a2]));
            } else i3 = ke.getDataURL(r3);
            t3.images[r3.uuid] = { uuid: r3.uuid, url: i3 };
          }
          n3.image = r3.uuid;
        }
        return e3 || (t3.textures[this.uuid] = n3), n3;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      }, transformUv: function(t3) {
        if (300 !== this.mapping) return t3;
        if (t3.applyMatrix3(this.matrix), t3.x < 0 || 1 < t3.x) switch (this.wrapS) {
          case rt:
            t3.x = t3.x - Math.floor(t3.x);
            break;
          case it:
            t3.x = t3.x < 0 ? 0 : 1;
            break;
          case at:
            1 === Math.abs(Math.floor(t3.x) % 2) ? t3.x = Math.ceil(t3.x) - t3.x : t3.x = t3.x - Math.floor(t3.x);
        }
        if (t3.y < 0 || 1 < t3.y) switch (this.wrapT) {
          case rt:
            t3.y = t3.y - Math.floor(t3.y);
            break;
          case it:
            t3.y = t3.y < 0 ? 0 : 1;
            break;
          case at:
            1 === Math.abs(Math.floor(t3.y) % 2) ? t3.y = Math.ceil(t3.y) - t3.y : t3.y = t3.y - Math.floor(t3.y);
        }
        return this.flipY && (t3.y = 1 - t3.y), t3;
      } }), Object.defineProperty(Ne.prototype, "needsUpdate", { set: function(t3) {
        true === t3 && this.version++;
      } }), Object.defineProperties(Ve.prototype, { width: { get: function() {
        return this.z;
      }, set: function(t3) {
        this.z = t3;
      } }, height: { get: function() {
        return this.w;
      }, set: function(t3) {
        this.w = t3;
      } } }), Object.assign(Ve.prototype, { isVector4: true, set: function(t3, e3, n3, r3) {
        return this.x = t3, this.y = e3, this.z = n3, this.w = r3, this;
      }, setScalar: function(t3) {
        return this.x = t3, this.y = t3, this.z = t3, this.w = t3, this;
      }, setX: function(t3) {
        return this.x = t3, this;
      }, setY: function(t3) {
        return this.y = t3, this;
      }, setZ: function(t3) {
        return this.z = t3, this;
      }, setW: function(t3) {
        return this.w = t3, this;
      }, setComponent: function(t3, e3) {
        switch (t3) {
          case 0:
            this.x = e3;
            break;
          case 1:
            this.y = e3;
            break;
          case 2:
            this.z = e3;
            break;
          case 3:
            this.w = e3;
            break;
          default:
            throw new Error("index is out of range: " + t3);
        }
        return this;
      }, getComponent: function(t3) {
        switch (t3) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          case 3:
            return this.w;
          default:
            throw new Error("index is out of range: " + t3);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y, this.z, this.w);
      }, copy: function(t3) {
        return this.x = t3.x, this.y = t3.y, this.z = t3.z, this.w = void 0 !== t3.w ? t3.w : 1, this;
      }, add: function(t3, e3) {
        return void 0 !== e3 ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t3, e3)) : (this.x += t3.x, this.y += t3.y, this.z += t3.z, this.w += t3.w, this);
      }, addScalar: function(t3) {
        return this.x += t3, this.y += t3, this.z += t3, this.w += t3, this;
      }, addVectors: function(t3, e3) {
        return this.x = t3.x + e3.x, this.y = t3.y + e3.y, this.z = t3.z + e3.z, this.w = t3.w + e3.w, this;
      }, addScaledVector: function(t3, e3) {
        return this.x += t3.x * e3, this.y += t3.y * e3, this.z += t3.z * e3, this.w += t3.w * e3, this;
      }, sub: function(t3, e3) {
        return void 0 !== e3 ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t3, e3)) : (this.x -= t3.x, this.y -= t3.y, this.z -= t3.z, this.w -= t3.w, this);
      }, subScalar: function(t3) {
        return this.x -= t3, this.y -= t3, this.z -= t3, this.w -= t3, this;
      }, subVectors: function(t3, e3) {
        return this.x = t3.x - e3.x, this.y = t3.y - e3.y, this.z = t3.z - e3.z, this.w = t3.w - e3.w, this;
      }, multiplyScalar: function(t3) {
        return this.x *= t3, this.y *= t3, this.z *= t3, this.w *= t3, this;
      }, applyMatrix4: function(t3) {
        var e3 = this.x, n3 = this.y, r3 = this.z, i3 = this.w, a2 = t3.elements;
        return this.x = a2[0] * e3 + a2[4] * n3 + a2[8] * r3 + a2[12] * i3, this.y = a2[1] * e3 + a2[5] * n3 + a2[9] * r3 + a2[13] * i3, this.z = a2[2] * e3 + a2[6] * n3 + a2[10] * r3 + a2[14] * i3, this.w = a2[3] * e3 + a2[7] * n3 + a2[11] * r3 + a2[15] * i3, this;
      }, divideScalar: function(t3) {
        return this.multiplyScalar(1 / t3);
      }, setAxisAngleFromQuaternion: function(t3) {
        this.w = 2 * Math.acos(t3.w);
        var e3 = Math.sqrt(1 - t3.w * t3.w);
        return e3 < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = t3.x / e3, this.y = t3.y / e3, this.z = t3.z / e3), this;
      }, setAxisAngleFromRotationMatrix: function(t3) {
        var e3, n3, r3, i3, a2 = t3.elements, o2 = a2[0], s2 = a2[4], l2 = a2[8], c2 = a2[1], u2 = a2[5], h2 = a2[9], p2 = a2[2], d2 = a2[6], f2 = a2[10];
        if (Math.abs(s2 - c2) < 0.01 && Math.abs(l2 - p2) < 0.01 && Math.abs(h2 - d2) < 0.01) {
          if (Math.abs(s2 + c2) < 0.1 && Math.abs(l2 + p2) < 0.1 && Math.abs(h2 + d2) < 0.1 && Math.abs(o2 + u2 + f2 - 3) < 0.1) return this.set(1, 0, 0, 0), this;
          e3 = Math.PI;
          var m2 = (o2 + 1) / 2, g2 = (u2 + 1) / 2, y2 = (f2 + 1) / 2, v2 = (s2 + c2) / 4, x2 = (l2 + p2) / 4, w2 = (h2 + d2) / 4;
          return g2 < m2 && y2 < m2 ? i3 = m2 < 0.01 ? (n3 = 0, r3 = 0.707106781) : (r3 = v2 / (n3 = Math.sqrt(m2)), x2 / n3) : y2 < g2 ? i3 = g2 < 0.01 ? (r3 = 0, n3 = 0.707106781) : (n3 = v2 / (r3 = Math.sqrt(g2)), w2 / r3) : y2 < 0.01 ? (r3 = n3 = 0.707106781, i3 = 0) : (n3 = x2 / (i3 = Math.sqrt(y2)), r3 = w2 / i3), this.set(n3, r3, i3, e3), this;
        }
        var b2 = Math.sqrt((d2 - h2) * (d2 - h2) + (l2 - p2) * (l2 - p2) + (c2 - s2) * (c2 - s2));
        return Math.abs(b2) < 1e-3 && (b2 = 1), this.x = (d2 - h2) / b2, this.y = (l2 - p2) / b2, this.z = (c2 - s2) / b2, this.w = Math.acos((o2 + u2 + f2 - 1) / 2), this;
      }, min: function(t3) {
        return this.x = Math.min(this.x, t3.x), this.y = Math.min(this.y, t3.y), this.z = Math.min(this.z, t3.z), this.w = Math.min(this.w, t3.w), this;
      }, max: function(t3) {
        return this.x = Math.max(this.x, t3.x), this.y = Math.max(this.y, t3.y), this.z = Math.max(this.z, t3.z), this.w = Math.max(this.w, t3.w), this;
      }, clamp: function(t3, e3) {
        return this.x = Math.max(t3.x, Math.min(e3.x, this.x)), this.y = Math.max(t3.y, Math.min(e3.y, this.y)), this.z = Math.max(t3.z, Math.min(e3.z, this.z)), this.w = Math.max(t3.w, Math.min(e3.w, this.w)), this;
      }, clampScalar: function(t3, e3) {
        return this.x = Math.max(t3, Math.min(e3, this.x)), this.y = Math.max(t3, Math.min(e3, this.y)), this.z = Math.max(t3, Math.min(e3, this.z)), this.w = Math.max(t3, Math.min(e3, this.w)), this;
      }, clampLength: function(t3, e3) {
        var n3 = this.length();
        return this.divideScalar(n3 || 1).multiplyScalar(Math.max(t3, Math.min(e3, n3)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
      }, dot: function(t3) {
        return this.x * t3.x + this.y * t3.y + this.z * t3.z + this.w * t3.w;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, setLength: function(t3) {
        return this.normalize().multiplyScalar(t3);
      }, lerp: function(t3, e3) {
        return this.x += (t3.x - this.x) * e3, this.y += (t3.y - this.y) * e3, this.z += (t3.z - this.z) * e3, this.w += (t3.w - this.w) * e3, this;
      }, lerpVectors: function(t3, e3, n3) {
        return this.subVectors(e3, t3).multiplyScalar(n3).add(t3);
      }, equals: function(t3) {
        return t3.x === this.x && t3.y === this.y && t3.z === this.z && t3.w === this.w;
      }, fromArray: function(t3, e3) {
        return void 0 === e3 && (e3 = 0), this.x = t3[e3], this.y = t3[e3 + 1], this.z = t3[e3 + 2], this.w = t3[e3 + 3], this;
      }, toArray: function(t3, e3) {
        return void 0 === t3 && (t3 = []), void 0 === e3 && (e3 = 0), t3[e3] = this.x, t3[e3 + 1] = this.y, t3[e3 + 2] = this.z, t3[e3 + 3] = this.w, t3;
      }, fromBufferAttribute: function(t3, e3, n3) {
        return void 0 !== n3 && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = t3.getX(e3), this.y = t3.getY(e3), this.z = t3.getZ(e3), this.w = t3.getW(e3), this;
      } }), Fe.prototype = Object.assign(Object.create(Ee.prototype), { constructor: Fe, isWebGLRenderTarget: true, setSize: function(t3, e3) {
        this.width === t3 && this.height === e3 || (this.width = t3, this.height = e3, this.texture.image.width = t3, this.texture.image.height = e3, this.dispose()), this.viewport.set(0, 0, t3, e3), this.scissor.set(0, 0, t3, e3);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.width = t3.width, this.height = t3.height, this.viewport.copy(t3.viewport), this.texture = t3.texture.clone(), this.depthBuffer = t3.depthBuffer, this.stencilBuffer = t3.stencilBuffer, this.depthTexture = t3.depthTexture, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Be.prototype = Object.assign(Object.create(Fe.prototype), { constructor: Be, isWebGLMultisampleRenderTarget: true, copy: function(t3) {
        return Fe.prototype.copy.call(this, t3), this.samples = t3.samples, this;
      } }), Object.assign(Ge, { slerp: function(t3, e3, n3, r3) {
        return n3.copy(t3).slerp(e3, r3);
      }, slerpFlat: function(t3, e3, n3, r3, i3, a2, o2) {
        var s2 = n3[r3 + 0], l2 = n3[r3 + 1], c2 = n3[r3 + 2], u2 = n3[r3 + 3], h2 = i3[a2 + 0], p2 = i3[a2 + 1], d2 = i3[a2 + 2], f2 = i3[a2 + 3];
        if (u2 !== f2 || s2 !== h2 || l2 !== p2 || c2 !== d2) {
          var m2 = 1 - o2, g2 = s2 * h2 + l2 * p2 + c2 * d2 + u2 * f2, y2 = 0 <= g2 ? 1 : -1, v2 = 1 - g2 * g2;
          if (v2 > Number.EPSILON) {
            var x2 = Math.sqrt(v2), w2 = Math.atan2(x2, g2 * y2);
            m2 = Math.sin(m2 * w2) / x2, o2 = Math.sin(o2 * w2) / x2;
          }
          var b2 = o2 * y2;
          if (s2 = s2 * m2 + h2 * b2, l2 = l2 * m2 + p2 * b2, c2 = c2 * m2 + d2 * b2, u2 = u2 * m2 + f2 * b2, m2 === 1 - o2) {
            var M2 = 1 / Math.sqrt(s2 * s2 + l2 * l2 + c2 * c2 + u2 * u2);
            s2 *= M2, l2 *= M2, c2 *= M2, u2 *= M2;
          }
        }
        t3[e3] = s2, t3[e3 + 1] = l2, t3[e3 + 2] = c2, t3[e3 + 3] = u2;
      } }), Object.defineProperties(Ge.prototype, { x: { get: function() {
        return this._x;
      }, set: function(t3) {
        this._x = t3, this._onChangeCallback();
      } }, y: { get: function() {
        return this._y;
      }, set: function(t3) {
        this._y = t3, this._onChangeCallback();
      } }, z: { get: function() {
        return this._z;
      }, set: function(t3) {
        this._z = t3, this._onChangeCallback();
      } }, w: { get: function() {
        return this._w;
      }, set: function(t3) {
        this._w = t3, this._onChangeCallback();
      } } }), Object.assign(Ge.prototype, { isQuaternion: true, set: function(t3, e3, n3, r3) {
        return this._x = t3, this._y = e3, this._z = n3, this._w = r3, this._onChangeCallback(), this;
      }, clone: function() {
        return new this.constructor(this._x, this._y, this._z, this._w);
      }, copy: function(t3) {
        return this._x = t3.x, this._y = t3.y, this._z = t3.z, this._w = t3.w, this._onChangeCallback(), this;
      }, setFromEuler: function(t3, e3) {
        if (!t3 || !t3.isEuler) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
        var n3 = t3._x, r3 = t3._y, i3 = t3._z, a2 = t3.order, o2 = Math.cos, s2 = Math.sin, l2 = o2(n3 / 2), c2 = o2(r3 / 2), u2 = o2(i3 / 2), h2 = s2(n3 / 2), p2 = s2(r3 / 2), d2 = s2(i3 / 2);
        return "XYZ" === a2 ? (this._x = h2 * c2 * u2 + l2 * p2 * d2, this._y = l2 * p2 * u2 - h2 * c2 * d2, this._z = l2 * c2 * d2 + h2 * p2 * u2, this._w = l2 * c2 * u2 - h2 * p2 * d2) : "YXZ" === a2 ? (this._x = h2 * c2 * u2 + l2 * p2 * d2, this._y = l2 * p2 * u2 - h2 * c2 * d2, this._z = l2 * c2 * d2 - h2 * p2 * u2, this._w = l2 * c2 * u2 + h2 * p2 * d2) : "ZXY" === a2 ? (this._x = h2 * c2 * u2 - l2 * p2 * d2, this._y = l2 * p2 * u2 + h2 * c2 * d2, this._z = l2 * c2 * d2 + h2 * p2 * u2, this._w = l2 * c2 * u2 - h2 * p2 * d2) : "ZYX" === a2 ? (this._x = h2 * c2 * u2 - l2 * p2 * d2, this._y = l2 * p2 * u2 + h2 * c2 * d2, this._z = l2 * c2 * d2 - h2 * p2 * u2, this._w = l2 * c2 * u2 + h2 * p2 * d2) : "YZX" === a2 ? (this._x = h2 * c2 * u2 + l2 * p2 * d2, this._y = l2 * p2 * u2 + h2 * c2 * d2, this._z = l2 * c2 * d2 - h2 * p2 * u2, this._w = l2 * c2 * u2 - h2 * p2 * d2) : "XZY" === a2 && (this._x = h2 * c2 * u2 - l2 * p2 * d2, this._y = l2 * p2 * u2 - h2 * c2 * d2, this._z = l2 * c2 * d2 + h2 * p2 * u2, this._w = l2 * c2 * u2 + h2 * p2 * d2), false !== e3 && this._onChangeCallback(), this;
      }, setFromAxisAngle: function(t3, e3) {
        var n3 = e3 / 2, r3 = Math.sin(n3);
        return this._x = t3.x * r3, this._y = t3.y * r3, this._z = t3.z * r3, this._w = Math.cos(n3), this._onChangeCallback(), this;
      }, setFromRotationMatrix: function(t3) {
        var e3, n3 = t3.elements, r3 = n3[0], i3 = n3[4], a2 = n3[8], o2 = n3[1], s2 = n3[5], l2 = n3[9], c2 = n3[2], u2 = n3[6], h2 = n3[10], p2 = r3 + s2 + h2;
        return 0 < p2 ? (e3 = 0.5 / Math.sqrt(p2 + 1), this._w = 0.25 / e3, this._x = (u2 - l2) * e3, this._y = (a2 - c2) * e3, this._z = (o2 - i3) * e3) : s2 < r3 && h2 < r3 ? (e3 = 2 * Math.sqrt(1 + r3 - s2 - h2), this._w = (u2 - l2) / e3, this._x = 0.25 * e3, this._y = (i3 + o2) / e3, this._z = (a2 + c2) / e3) : h2 < s2 ? (e3 = 2 * Math.sqrt(1 + s2 - r3 - h2), this._w = (a2 - c2) / e3, this._x = (i3 + o2) / e3, this._y = 0.25 * e3, this._z = (l2 + u2) / e3) : (e3 = 2 * Math.sqrt(1 + h2 - r3 - s2), this._w = (o2 - i3) / e3, this._x = (a2 + c2) / e3, this._y = (l2 + u2) / e3, this._z = 0.25 * e3), this._onChangeCallback(), this;
      }, setFromUnitVectors: function(t3, e3) {
        var n3 = t3.dot(e3) + 1;
        return n3 < 1e-6 ? (n3 = 0, Math.abs(t3.x) > Math.abs(t3.z) ? (this._x = -t3.y, this._y = t3.x, this._z = 0) : (this._x = 0, this._y = -t3.z, this._z = t3.y)) : (this._x = t3.y * e3.z - t3.z * e3.y, this._y = t3.z * e3.x - t3.x * e3.z, this._z = t3.x * e3.y - t3.y * e3.x), this._w = n3, this.normalize();
      }, angleTo: function(t3) {
        return 2 * Math.acos(Math.abs(Re.clamp(this.dot(t3), -1, 1)));
      }, rotateTowards: function(t3, e3) {
        var n3 = this.angleTo(t3);
        if (0 === n3) return this;
        var r3 = Math.min(1, e3 / n3);
        return this.slerp(t3, r3), this;
      }, inverse: function() {
        return this.conjugate();
      }, conjugate: function() {
        return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
      }, dot: function(t3) {
        return this._x * t3._x + this._y * t3._y + this._z * t3._z + this._w * t3._w;
      }, lengthSq: function() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
      }, length: function() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
      }, normalize: function() {
        var t3 = this.length();
        return 0 === t3 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (t3 = 1 / t3, this._x = this._x * t3, this._y = this._y * t3, this._z = this._z * t3, this._w = this._w * t3), this._onChangeCallback(), this;
      }, multiply: function(t3, e3) {
        return void 0 !== e3 ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(t3, e3)) : this.multiplyQuaternions(this, t3);
      }, premultiply: function(t3) {
        return this.multiplyQuaternions(t3, this);
      }, multiplyQuaternions: function(t3, e3) {
        var n3 = t3._x, r3 = t3._y, i3 = t3._z, a2 = t3._w, o2 = e3._x, s2 = e3._y, l2 = e3._z, c2 = e3._w;
        return this._x = n3 * c2 + a2 * o2 + r3 * l2 - i3 * s2, this._y = r3 * c2 + a2 * s2 + i3 * o2 - n3 * l2, this._z = i3 * c2 + a2 * l2 + n3 * s2 - r3 * o2, this._w = a2 * c2 - n3 * o2 - r3 * s2 - i3 * l2, this._onChangeCallback(), this;
      }, slerp: function(t3, e3) {
        if (0 === e3) return this;
        if (1 === e3) return this.copy(t3);
        var n3 = this._x, r3 = this._y, i3 = this._z, a2 = this._w, o2 = a2 * t3._w + n3 * t3._x + r3 * t3._y + i3 * t3._z;
        if (o2 < 0 ? (this._w = -t3._w, this._x = -t3._x, this._y = -t3._y, this._z = -t3._z, o2 = -o2) : this.copy(t3), 1 <= o2) return this._w = a2, this._x = n3, this._y = r3, this._z = i3, this;
        var s2 = 1 - o2 * o2;
        if (s2 <= Number.EPSILON) {
          var l2 = 1 - e3;
          return this._w = l2 * a2 + e3 * this._w, this._x = l2 * n3 + e3 * this._x, this._y = l2 * r3 + e3 * this._y, this._z = l2 * i3 + e3 * this._z, this.normalize(), this._onChangeCallback(), this;
        }
        var c2 = Math.sqrt(s2), u2 = Math.atan2(c2, o2), h2 = Math.sin((1 - e3) * u2) / c2, p2 = Math.sin(e3 * u2) / c2;
        return this._w = a2 * h2 + this._w * p2, this._x = n3 * h2 + this._x * p2, this._y = r3 * h2 + this._y * p2, this._z = i3 * h2 + this._z * p2, this._onChangeCallback(), this;
      }, equals: function(t3) {
        return t3._x === this._x && t3._y === this._y && t3._z === this._z && t3._w === this._w;
      }, fromArray: function(t3, e3) {
        return void 0 === e3 && (e3 = 0), this._x = t3[e3], this._y = t3[e3 + 1], this._z = t3[e3 + 2], this._w = t3[e3 + 3], this._onChangeCallback(), this;
      }, toArray: function(t3, e3) {
        return void 0 === t3 && (t3 = []), void 0 === e3 && (e3 = 0), t3[e3] = this._x, t3[e3 + 1] = this._y, t3[e3 + 2] = this._z, t3[e3 + 3] = this._w, t3;
      }, _onChange: function(t3) {
        return this._onChangeCallback = t3, this;
      }, _onChangeCallback: function() {
      } });
      var ze = new He(), Ue = new Ge();
      function He(t3, e3, n3) {
        this.x = t3 || 0, this.y = e3 || 0, this.z = n3 || 0;
      }
      Object.assign(He.prototype, { isVector3: true, set: function(t3, e3, n3) {
        return this.x = t3, this.y = e3, this.z = n3, this;
      }, setScalar: function(t3) {
        return this.x = t3, this.y = t3, this.z = t3, this;
      }, setX: function(t3) {
        return this.x = t3, this;
      }, setY: function(t3) {
        return this.y = t3, this;
      }, setZ: function(t3) {
        return this.z = t3, this;
      }, setComponent: function(t3, e3) {
        switch (t3) {
          case 0:
            this.x = e3;
            break;
          case 1:
            this.y = e3;
            break;
          case 2:
            this.z = e3;
            break;
          default:
            throw new Error("index is out of range: " + t3);
        }
        return this;
      }, getComponent: function(t3) {
        switch (t3) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          default:
            throw new Error("index is out of range: " + t3);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y, this.z);
      }, copy: function(t3) {
        return this.x = t3.x, this.y = t3.y, this.z = t3.z, this;
      }, add: function(t3, e3) {
        return void 0 !== e3 ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t3, e3)) : (this.x += t3.x, this.y += t3.y, this.z += t3.z, this);
      }, addScalar: function(t3) {
        return this.x += t3, this.y += t3, this.z += t3, this;
      }, addVectors: function(t3, e3) {
        return this.x = t3.x + e3.x, this.y = t3.y + e3.y, this.z = t3.z + e3.z, this;
      }, addScaledVector: function(t3, e3) {
        return this.x += t3.x * e3, this.y += t3.y * e3, this.z += t3.z * e3, this;
      }, sub: function(t3, e3) {
        return void 0 !== e3 ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t3, e3)) : (this.x -= t3.x, this.y -= t3.y, this.z -= t3.z, this);
      }, subScalar: function(t3) {
        return this.x -= t3, this.y -= t3, this.z -= t3, this;
      }, subVectors: function(t3, e3) {
        return this.x = t3.x - e3.x, this.y = t3.y - e3.y, this.z = t3.z - e3.z, this;
      }, multiply: function(t3, e3) {
        return void 0 !== e3 ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(t3, e3)) : (this.x *= t3.x, this.y *= t3.y, this.z *= t3.z, this);
      }, multiplyScalar: function(t3) {
        return this.x *= t3, this.y *= t3, this.z *= t3, this;
      }, multiplyVectors: function(t3, e3) {
        return this.x = t3.x * e3.x, this.y = t3.y * e3.y, this.z = t3.z * e3.z, this;
      }, applyEuler: function(t3) {
        return t3 && t3.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(Ue.setFromEuler(t3));
      }, applyAxisAngle: function(t3, e3) {
        return this.applyQuaternion(Ue.setFromAxisAngle(t3, e3));
      }, applyMatrix3: function(t3) {
        var e3 = this.x, n3 = this.y, r3 = this.z, i3 = t3.elements;
        return this.x = i3[0] * e3 + i3[3] * n3 + i3[6] * r3, this.y = i3[1] * e3 + i3[4] * n3 + i3[7] * r3, this.z = i3[2] * e3 + i3[5] * n3 + i3[8] * r3, this;
      }, applyNormalMatrix: function(t3) {
        return this.applyMatrix3(t3).normalize();
      }, applyMatrix4: function(t3) {
        var e3 = this.x, n3 = this.y, r3 = this.z, i3 = t3.elements, a2 = 1 / (i3[3] * e3 + i3[7] * n3 + i3[11] * r3 + i3[15]);
        return this.x = (i3[0] * e3 + i3[4] * n3 + i3[8] * r3 + i3[12]) * a2, this.y = (i3[1] * e3 + i3[5] * n3 + i3[9] * r3 + i3[13]) * a2, this.z = (i3[2] * e3 + i3[6] * n3 + i3[10] * r3 + i3[14]) * a2, this;
      }, applyQuaternion: function(t3) {
        var e3 = this.x, n3 = this.y, r3 = this.z, i3 = t3.x, a2 = t3.y, o2 = t3.z, s2 = t3.w, l2 = s2 * e3 + a2 * r3 - o2 * n3, c2 = s2 * n3 + o2 * e3 - i3 * r3, u2 = s2 * r3 + i3 * n3 - a2 * e3, h2 = -i3 * e3 - a2 * n3 - o2 * r3;
        return this.x = l2 * s2 + h2 * -i3 + c2 * -o2 - u2 * -a2, this.y = c2 * s2 + h2 * -a2 + u2 * -i3 - l2 * -o2, this.z = u2 * s2 + h2 * -o2 + l2 * -a2 - c2 * -i3, this;
      }, project: function(t3) {
        return this.applyMatrix4(t3.matrixWorldInverse).applyMatrix4(t3.projectionMatrix);
      }, unproject: function(t3) {
        return this.applyMatrix4(t3.projectionMatrixInverse).applyMatrix4(t3.matrixWorld);
      }, transformDirection: function(t3) {
        var e3 = this.x, n3 = this.y, r3 = this.z, i3 = t3.elements;
        return this.x = i3[0] * e3 + i3[4] * n3 + i3[8] * r3, this.y = i3[1] * e3 + i3[5] * n3 + i3[9] * r3, this.z = i3[2] * e3 + i3[6] * n3 + i3[10] * r3, this.normalize();
      }, divide: function(t3) {
        return this.x /= t3.x, this.y /= t3.y, this.z /= t3.z, this;
      }, divideScalar: function(t3) {
        return this.multiplyScalar(1 / t3);
      }, min: function(t3) {
        return this.x = Math.min(this.x, t3.x), this.y = Math.min(this.y, t3.y), this.z = Math.min(this.z, t3.z), this;
      }, max: function(t3) {
        return this.x = Math.max(this.x, t3.x), this.y = Math.max(this.y, t3.y), this.z = Math.max(this.z, t3.z), this;
      }, clamp: function(t3, e3) {
        return this.x = Math.max(t3.x, Math.min(e3.x, this.x)), this.y = Math.max(t3.y, Math.min(e3.y, this.y)), this.z = Math.max(t3.z, Math.min(e3.z, this.z)), this;
      }, clampScalar: function(t3, e3) {
        return this.x = Math.max(t3, Math.min(e3, this.x)), this.y = Math.max(t3, Math.min(e3, this.y)), this.z = Math.max(t3, Math.min(e3, this.z)), this;
      }, clampLength: function(t3, e3) {
        var n3 = this.length();
        return this.divideScalar(n3 || 1).multiplyScalar(Math.max(t3, Math.min(e3, n3)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
      }, dot: function(t3) {
        return this.x * t3.x + this.y * t3.y + this.z * t3.z;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, setLength: function(t3) {
        return this.normalize().multiplyScalar(t3);
      }, lerp: function(t3, e3) {
        return this.x += (t3.x - this.x) * e3, this.y += (t3.y - this.y) * e3, this.z += (t3.z - this.z) * e3, this;
      }, lerpVectors: function(t3, e3, n3) {
        return this.subVectors(e3, t3).multiplyScalar(n3).add(t3);
      }, cross: function(t3, e3) {
        return void 0 !== e3 ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(t3, e3)) : this.crossVectors(this, t3);
      }, crossVectors: function(t3, e3) {
        var n3 = t3.x, r3 = t3.y, i3 = t3.z, a2 = e3.x, o2 = e3.y, s2 = e3.z;
        return this.x = r3 * s2 - i3 * o2, this.y = i3 * a2 - n3 * s2, this.z = n3 * o2 - r3 * a2, this;
      }, projectOnVector: function(t3) {
        var e3 = t3.lengthSq();
        if (0 === e3) return this.set(0, 0, 0);
        var n3 = t3.dot(this) / e3;
        return this.copy(t3).multiplyScalar(n3);
      }, projectOnPlane: function(t3) {
        return ze.copy(this).projectOnVector(t3), this.sub(ze);
      }, reflect: function(t3) {
        return this.sub(ze.copy(t3).multiplyScalar(2 * this.dot(t3)));
      }, angleTo: function(t3) {
        var e3 = Math.sqrt(this.lengthSq() * t3.lengthSq());
        if (0 === e3) return Math.PI / 2;
        var n3 = this.dot(t3) / e3;
        return Math.acos(Re.clamp(n3, -1, 1));
      }, distanceTo: function(t3) {
        return Math.sqrt(this.distanceToSquared(t3));
      }, distanceToSquared: function(t3) {
        var e3 = this.x - t3.x, n3 = this.y - t3.y, r3 = this.z - t3.z;
        return e3 * e3 + n3 * n3 + r3 * r3;
      }, manhattanDistanceTo: function(t3) {
        return Math.abs(this.x - t3.x) + Math.abs(this.y - t3.y) + Math.abs(this.z - t3.z);
      }, setFromSpherical: function(t3) {
        return this.setFromSphericalCoords(t3.radius, t3.phi, t3.theta);
      }, setFromSphericalCoords: function(t3, e3, n3) {
        var r3 = Math.sin(e3) * t3;
        return this.x = r3 * Math.sin(n3), this.y = Math.cos(e3) * t3, this.z = r3 * Math.cos(n3), this;
      }, setFromCylindrical: function(t3) {
        return this.setFromCylindricalCoords(t3.radius, t3.theta, t3.y);
      }, setFromCylindricalCoords: function(t3, e3, n3) {
        return this.x = t3 * Math.sin(e3), this.y = n3, this.z = t3 * Math.cos(e3), this;
      }, setFromMatrixPosition: function(t3) {
        var e3 = t3.elements;
        return this.x = e3[12], this.y = e3[13], this.z = e3[14], this;
      }, setFromMatrixScale: function(t3) {
        var e3 = this.setFromMatrixColumn(t3, 0).length(), n3 = this.setFromMatrixColumn(t3, 1).length(), r3 = this.setFromMatrixColumn(t3, 2).length();
        return this.x = e3, this.y = n3, this.z = r3, this;
      }, setFromMatrixColumn: function(t3, e3) {
        return this.fromArray(t3.elements, 4 * e3);
      }, setFromMatrix3Column: function(t3, e3) {
        return this.fromArray(t3.elements, 3 * e3);
      }, equals: function(t3) {
        return t3.x === this.x && t3.y === this.y && t3.z === this.z;
      }, fromArray: function(t3, e3) {
        return void 0 === e3 && (e3 = 0), this.x = t3[e3], this.y = t3[e3 + 1], this.z = t3[e3 + 2], this;
      }, toArray: function(t3, e3) {
        return void 0 === t3 && (t3 = []), void 0 === e3 && (e3 = 0), t3[e3] = this.x, t3[e3 + 1] = this.y, t3[e3 + 2] = this.z, t3;
      }, fromBufferAttribute: function(t3, e3, n3) {
        return void 0 !== n3 && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = t3.getX(e3), this.y = t3.getY(e3), this.z = t3.getZ(e3), this;
      } });
      var We = new He(), Je = new $e(), qe = new He(0, 0, 0), Xe = new He(1, 1, 1), Ye = new He(), Ze = new He(), Ke = new He();
      function $e() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], 0 < arguments.length && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
      }
      Object.assign($e.prototype, { isMatrix4: true, set: function(t3, e3, n3, r3, i3, a2, o2, s2, l2, c2, u2, h2, p2, d2, f2, m2) {
        var g2 = this.elements;
        return g2[0] = t3, g2[4] = e3, g2[8] = n3, g2[12] = r3, g2[1] = i3, g2[5] = a2, g2[9] = o2, g2[13] = s2, g2[2] = l2, g2[6] = c2, g2[10] = u2, g2[14] = h2, g2[3] = p2, g2[7] = d2, g2[11] = f2, g2[15] = m2, this;
      }, identity: function() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      }, clone: function() {
        return new $e().fromArray(this.elements);
      }, copy: function(t3) {
        var e3 = this.elements, n3 = t3.elements;
        return e3[0] = n3[0], e3[1] = n3[1], e3[2] = n3[2], e3[3] = n3[3], e3[4] = n3[4], e3[5] = n3[5], e3[6] = n3[6], e3[7] = n3[7], e3[8] = n3[8], e3[9] = n3[9], e3[10] = n3[10], e3[11] = n3[11], e3[12] = n3[12], e3[13] = n3[13], e3[14] = n3[14], e3[15] = n3[15], this;
      }, copyPosition: function(t3) {
        var e3 = this.elements, n3 = t3.elements;
        return e3[12] = n3[12], e3[13] = n3[13], e3[14] = n3[14], this;
      }, extractBasis: function(t3, e3, n3) {
        return t3.setFromMatrixColumn(this, 0), e3.setFromMatrixColumn(this, 1), n3.setFromMatrixColumn(this, 2), this;
      }, makeBasis: function(t3, e3, n3) {
        return this.set(t3.x, e3.x, n3.x, 0, t3.y, e3.y, n3.y, 0, t3.z, e3.z, n3.z, 0, 0, 0, 0, 1), this;
      }, extractRotation: function(t3) {
        var e3 = this.elements, n3 = t3.elements, r3 = 1 / We.setFromMatrixColumn(t3, 0).length(), i3 = 1 / We.setFromMatrixColumn(t3, 1).length(), a2 = 1 / We.setFromMatrixColumn(t3, 2).length();
        return e3[0] = n3[0] * r3, e3[1] = n3[1] * r3, e3[2] = n3[2] * r3, e3[3] = 0, e3[4] = n3[4] * i3, e3[5] = n3[5] * i3, e3[6] = n3[6] * i3, e3[7] = 0, e3[8] = n3[8] * a2, e3[9] = n3[9] * a2, e3[10] = n3[10] * a2, e3[11] = 0, e3[12] = 0, e3[13] = 0, e3[14] = 0, e3[15] = 1, this;
      }, makeRotationFromEuler: function(t3) {
        t3 && t3.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var e3 = this.elements, n3 = t3.x, r3 = t3.y, i3 = t3.z, a2 = Math.cos(n3), o2 = Math.sin(n3), s2 = Math.cos(r3), l2 = Math.sin(r3), c2 = Math.cos(i3), u2 = Math.sin(i3);
        if ("XYZ" === t3.order) {
          var h2 = a2 * c2, p2 = a2 * u2, d2 = o2 * c2, f2 = o2 * u2;
          e3[0] = s2 * c2, e3[4] = -s2 * u2, e3[8] = l2, e3[1] = p2 + d2 * l2, e3[5] = h2 - f2 * l2, e3[9] = -o2 * s2, e3[2] = f2 - h2 * l2, e3[6] = d2 + p2 * l2, e3[10] = a2 * s2;
        } else if ("YXZ" === t3.order) {
          var m2 = s2 * c2, g2 = s2 * u2, y2 = l2 * c2, v2 = l2 * u2;
          e3[0] = m2 + v2 * o2, e3[4] = y2 * o2 - g2, e3[8] = a2 * l2, e3[1] = a2 * u2, e3[5] = a2 * c2, e3[9] = -o2, e3[2] = g2 * o2 - y2, e3[6] = v2 + m2 * o2, e3[10] = a2 * s2;
        } else if ("ZXY" === t3.order) m2 = s2 * c2, g2 = s2 * u2, y2 = l2 * c2, v2 = l2 * u2, e3[0] = m2 - v2 * o2, e3[4] = -a2 * u2, e3[8] = y2 + g2 * o2, e3[1] = g2 + y2 * o2, e3[5] = a2 * c2, e3[9] = v2 - m2 * o2, e3[2] = -a2 * l2, e3[6] = o2, e3[10] = a2 * s2;
        else if ("ZYX" === t3.order) h2 = a2 * c2, p2 = a2 * u2, d2 = o2 * c2, f2 = o2 * u2, e3[0] = s2 * c2, e3[4] = d2 * l2 - p2, e3[8] = h2 * l2 + f2, e3[1] = s2 * u2, e3[5] = f2 * l2 + h2, e3[9] = p2 * l2 - d2, e3[2] = -l2, e3[6] = o2 * s2, e3[10] = a2 * s2;
        else if ("YZX" === t3.order) {
          var x2 = a2 * s2, w2 = a2 * l2, b2 = o2 * s2, M2 = o2 * l2;
          e3[0] = s2 * c2, e3[4] = M2 - x2 * u2, e3[8] = b2 * u2 + w2, e3[1] = u2, e3[5] = a2 * c2, e3[9] = -o2 * c2, e3[2] = -l2 * c2, e3[6] = w2 * u2 + b2, e3[10] = x2 - M2 * u2;
        } else "XZY" === t3.order && (x2 = a2 * s2, w2 = a2 * l2, b2 = o2 * s2, M2 = o2 * l2, e3[0] = s2 * c2, e3[4] = -u2, e3[8] = l2 * c2, e3[1] = x2 * u2 + M2, e3[5] = a2 * c2, e3[9] = w2 * u2 - b2, e3[2] = b2 * u2 - w2, e3[6] = o2 * c2, e3[10] = M2 * u2 + x2);
        return e3[3] = 0, e3[7] = 0, e3[11] = 0, e3[12] = 0, e3[13] = 0, e3[14] = 0, e3[15] = 1, this;
      }, makeRotationFromQuaternion: function(t3) {
        return this.compose(qe, t3, Xe);
      }, lookAt: function(t3, e3, n3) {
        var r3 = this.elements;
        return Ke.subVectors(t3, e3), 0 === Ke.lengthSq() && (Ke.z = 1), Ke.normalize(), Ye.crossVectors(n3, Ke), 0 === Ye.lengthSq() && (1 === Math.abs(n3.z) ? Ke.x += 1e-4 : Ke.z += 1e-4, Ke.normalize(), Ye.crossVectors(n3, Ke)), Ye.normalize(), Ze.crossVectors(Ke, Ye), r3[0] = Ye.x, r3[4] = Ze.x, r3[8] = Ke.x, r3[1] = Ye.y, r3[5] = Ze.y, r3[9] = Ke.y, r3[2] = Ye.z, r3[6] = Ze.z, r3[10] = Ke.z, this;
      }, multiply: function(t3, e3) {
        return void 0 !== e3 ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(t3, e3)) : this.multiplyMatrices(this, t3);
      }, premultiply: function(t3) {
        return this.multiplyMatrices(t3, this);
      }, multiplyMatrices: function(t3, e3) {
        var n3 = t3.elements, r3 = e3.elements, i3 = this.elements, a2 = n3[0], o2 = n3[4], s2 = n3[8], l2 = n3[12], c2 = n3[1], u2 = n3[5], h2 = n3[9], p2 = n3[13], d2 = n3[2], f2 = n3[6], m2 = n3[10], g2 = n3[14], y2 = n3[3], v2 = n3[7], x2 = n3[11], w2 = n3[15], b2 = r3[0], M2 = r3[4], _2 = r3[8], T2 = r3[12], C2 = r3[1], S2 = r3[5], D2 = r3[9], E2 = r3[13], O2 = r3[2], A2 = r3[6], P2 = r3[10], R2 = r3[14], L2 = r3[3], I2 = r3[7], k2 = r3[11], j2 = r3[15];
        return i3[0] = a2 * b2 + o2 * C2 + s2 * O2 + l2 * L2, i3[4] = a2 * M2 + o2 * S2 + s2 * A2 + l2 * I2, i3[8] = a2 * _2 + o2 * D2 + s2 * P2 + l2 * k2, i3[12] = a2 * T2 + o2 * E2 + s2 * R2 + l2 * j2, i3[1] = c2 * b2 + u2 * C2 + h2 * O2 + p2 * L2, i3[5] = c2 * M2 + u2 * S2 + h2 * A2 + p2 * I2, i3[9] = c2 * _2 + u2 * D2 + h2 * P2 + p2 * k2, i3[13] = c2 * T2 + u2 * E2 + h2 * R2 + p2 * j2, i3[2] = d2 * b2 + f2 * C2 + m2 * O2 + g2 * L2, i3[6] = d2 * M2 + f2 * S2 + m2 * A2 + g2 * I2, i3[10] = d2 * _2 + f2 * D2 + m2 * P2 + g2 * k2, i3[14] = d2 * T2 + f2 * E2 + m2 * R2 + g2 * j2, i3[3] = y2 * b2 + v2 * C2 + x2 * O2 + w2 * L2, i3[7] = y2 * M2 + v2 * S2 + x2 * A2 + w2 * I2, i3[11] = y2 * _2 + v2 * D2 + x2 * P2 + w2 * k2, i3[15] = y2 * T2 + v2 * E2 + x2 * R2 + w2 * j2, this;
      }, multiplyScalar: function(t3) {
        var e3 = this.elements;
        return e3[0] *= t3, e3[4] *= t3, e3[8] *= t3, e3[12] *= t3, e3[1] *= t3, e3[5] *= t3, e3[9] *= t3, e3[13] *= t3, e3[2] *= t3, e3[6] *= t3, e3[10] *= t3, e3[14] *= t3, e3[3] *= t3, e3[7] *= t3, e3[11] *= t3, e3[15] *= t3, this;
      }, determinant: function() {
        var t3 = this.elements, e3 = t3[0], n3 = t3[4], r3 = t3[8], i3 = t3[12], a2 = t3[1], o2 = t3[5], s2 = t3[9], l2 = t3[13], c2 = t3[2], u2 = t3[6], h2 = t3[10], p2 = t3[14];
        return t3[3] * (i3 * s2 * u2 - r3 * l2 * u2 - i3 * o2 * h2 + n3 * l2 * h2 + r3 * o2 * p2 - n3 * s2 * p2) + t3[7] * (e3 * s2 * p2 - e3 * l2 * h2 + i3 * a2 * h2 - r3 * a2 * p2 + r3 * l2 * c2 - i3 * s2 * c2) + t3[11] * (e3 * l2 * u2 - e3 * o2 * p2 - i3 * a2 * u2 + n3 * a2 * p2 + i3 * o2 * c2 - n3 * l2 * c2) + t3[15] * (-r3 * o2 * c2 - e3 * s2 * u2 + e3 * o2 * h2 + r3 * a2 * u2 - n3 * a2 * h2 + n3 * s2 * c2);
      }, transpose: function() {
        var t3, e3 = this.elements;
        return t3 = e3[1], e3[1] = e3[4], e3[4] = t3, t3 = e3[2], e3[2] = e3[8], e3[8] = t3, t3 = e3[6], e3[6] = e3[9], e3[9] = t3, t3 = e3[3], e3[3] = e3[12], e3[12] = t3, t3 = e3[7], e3[7] = e3[13], e3[13] = t3, t3 = e3[11], e3[11] = e3[14], e3[14] = t3, this;
      }, setPosition: function(t3, e3, n3) {
        var r3 = this.elements;
        return t3.isVector3 ? (r3[12] = t3.x, r3[13] = t3.y, r3[14] = t3.z) : (r3[12] = t3, r3[13] = e3, r3[14] = n3), this;
      }, getInverse: function(t3, e3) {
        var n3 = this.elements, r3 = t3.elements, i3 = r3[0], a2 = r3[1], o2 = r3[2], s2 = r3[3], l2 = r3[4], c2 = r3[5], u2 = r3[6], h2 = r3[7], p2 = r3[8], d2 = r3[9], f2 = r3[10], m2 = r3[11], g2 = r3[12], y2 = r3[13], v2 = r3[14], x2 = r3[15], w2 = d2 * v2 * h2 - y2 * f2 * h2 + y2 * u2 * m2 - c2 * v2 * m2 - d2 * u2 * x2 + c2 * f2 * x2, b2 = g2 * f2 * h2 - p2 * v2 * h2 - g2 * u2 * m2 + l2 * v2 * m2 + p2 * u2 * x2 - l2 * f2 * x2, M2 = p2 * y2 * h2 - g2 * d2 * h2 + g2 * c2 * m2 - l2 * y2 * m2 - p2 * c2 * x2 + l2 * d2 * x2, _2 = g2 * d2 * u2 - p2 * y2 * u2 - g2 * c2 * f2 + l2 * y2 * f2 + p2 * c2 * v2 - l2 * d2 * v2, T2 = i3 * w2 + a2 * b2 + o2 * M2 + s2 * _2;
        if (0 == T2) {
          var C2 = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
          if (true === e3) throw new Error(C2);
          return console.warn(C2), this.identity();
        }
        var S2 = 1 / T2;
        return n3[0] = w2 * S2, n3[1] = (y2 * f2 * s2 - d2 * v2 * s2 - y2 * o2 * m2 + a2 * v2 * m2 + d2 * o2 * x2 - a2 * f2 * x2) * S2, n3[2] = (c2 * v2 * s2 - y2 * u2 * s2 + y2 * o2 * h2 - a2 * v2 * h2 - c2 * o2 * x2 + a2 * u2 * x2) * S2, n3[3] = (d2 * u2 * s2 - c2 * f2 * s2 - d2 * o2 * h2 + a2 * f2 * h2 + c2 * o2 * m2 - a2 * u2 * m2) * S2, n3[4] = b2 * S2, n3[5] = (p2 * v2 * s2 - g2 * f2 * s2 + g2 * o2 * m2 - i3 * v2 * m2 - p2 * o2 * x2 + i3 * f2 * x2) * S2, n3[6] = (g2 * u2 * s2 - l2 * v2 * s2 - g2 * o2 * h2 + i3 * v2 * h2 + l2 * o2 * x2 - i3 * u2 * x2) * S2, n3[7] = (l2 * f2 * s2 - p2 * u2 * s2 + p2 * o2 * h2 - i3 * f2 * h2 - l2 * o2 * m2 + i3 * u2 * m2) * S2, n3[8] = M2 * S2, n3[9] = (g2 * d2 * s2 - p2 * y2 * s2 - g2 * a2 * m2 + i3 * y2 * m2 + p2 * a2 * x2 - i3 * d2 * x2) * S2, n3[10] = (l2 * y2 * s2 - g2 * c2 * s2 + g2 * a2 * h2 - i3 * y2 * h2 - l2 * a2 * x2 + i3 * c2 * x2) * S2, n3[11] = (p2 * c2 * s2 - l2 * d2 * s2 - p2 * a2 * h2 + i3 * d2 * h2 + l2 * a2 * m2 - i3 * c2 * m2) * S2, n3[12] = _2 * S2, n3[13] = (p2 * y2 * o2 - g2 * d2 * o2 + g2 * a2 * f2 - i3 * y2 * f2 - p2 * a2 * v2 + i3 * d2 * v2) * S2, n3[14] = (g2 * c2 * o2 - l2 * y2 * o2 - g2 * a2 * u2 + i3 * y2 * u2 + l2 * a2 * v2 - i3 * c2 * v2) * S2, n3[15] = (l2 * d2 * o2 - p2 * c2 * o2 + p2 * a2 * u2 - i3 * d2 * u2 - l2 * a2 * f2 + i3 * c2 * f2) * S2, this;
      }, scale: function(t3) {
        var e3 = this.elements, n3 = t3.x, r3 = t3.y, i3 = t3.z;
        return e3[0] *= n3, e3[4] *= r3, e3[8] *= i3, e3[1] *= n3, e3[5] *= r3, e3[9] *= i3, e3[2] *= n3, e3[6] *= r3, e3[10] *= i3, e3[3] *= n3, e3[7] *= r3, e3[11] *= i3, this;
      }, getMaxScaleOnAxis: function() {
        var t3 = this.elements, e3 = t3[0] * t3[0] + t3[1] * t3[1] + t3[2] * t3[2], n3 = t3[4] * t3[4] + t3[5] * t3[5] + t3[6] * t3[6], r3 = t3[8] * t3[8] + t3[9] * t3[9] + t3[10] * t3[10];
        return Math.sqrt(Math.max(e3, n3, r3));
      }, makeTranslation: function(t3, e3, n3) {
        return this.set(1, 0, 0, t3, 0, 1, 0, e3, 0, 0, 1, n3, 0, 0, 0, 1), this;
      }, makeRotationX: function(t3) {
        var e3 = Math.cos(t3), n3 = Math.sin(t3);
        return this.set(1, 0, 0, 0, 0, e3, -n3, 0, 0, n3, e3, 0, 0, 0, 0, 1), this;
      }, makeRotationY: function(t3) {
        var e3 = Math.cos(t3), n3 = Math.sin(t3);
        return this.set(e3, 0, n3, 0, 0, 1, 0, 0, -n3, 0, e3, 0, 0, 0, 0, 1), this;
      }, makeRotationZ: function(t3) {
        var e3 = Math.cos(t3), n3 = Math.sin(t3);
        return this.set(e3, -n3, 0, 0, n3, e3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      }, makeRotationAxis: function(t3, e3) {
        var n3 = Math.cos(e3), r3 = Math.sin(e3), i3 = 1 - n3, a2 = t3.x, o2 = t3.y, s2 = t3.z, l2 = i3 * a2, c2 = i3 * o2;
        return this.set(l2 * a2 + n3, l2 * o2 - r3 * s2, l2 * s2 + r3 * o2, 0, l2 * o2 + r3 * s2, c2 * o2 + n3, c2 * s2 - r3 * a2, 0, l2 * s2 - r3 * o2, c2 * s2 + r3 * a2, i3 * s2 * s2 + n3, 0, 0, 0, 0, 1), this;
      }, makeScale: function(t3, e3, n3) {
        return this.set(t3, 0, 0, 0, 0, e3, 0, 0, 0, 0, n3, 0, 0, 0, 0, 1), this;
      }, makeShear: function(t3, e3, n3) {
        return this.set(1, e3, n3, 0, t3, 1, n3, 0, t3, e3, 1, 0, 0, 0, 0, 1), this;
      }, compose: function(t3, e3, n3) {
        var r3 = this.elements, i3 = e3._x, a2 = e3._y, o2 = e3._z, s2 = e3._w, l2 = i3 + i3, c2 = a2 + a2, u2 = o2 + o2, h2 = i3 * l2, p2 = i3 * c2, d2 = i3 * u2, f2 = a2 * c2, m2 = a2 * u2, g2 = o2 * u2, y2 = s2 * l2, v2 = s2 * c2, x2 = s2 * u2, w2 = n3.x, b2 = n3.y, M2 = n3.z;
        return r3[0] = (1 - (f2 + g2)) * w2, r3[1] = (p2 + x2) * w2, r3[2] = (d2 - v2) * w2, r3[3] = 0, r3[4] = (p2 - x2) * b2, r3[5] = (1 - (h2 + g2)) * b2, r3[6] = (m2 + y2) * b2, r3[7] = 0, r3[8] = (d2 + v2) * M2, r3[9] = (m2 - y2) * M2, r3[10] = (1 - (h2 + f2)) * M2, r3[11] = 0, r3[12] = t3.x, r3[13] = t3.y, r3[14] = t3.z, r3[15] = 1, this;
      }, decompose: function(t3, e3, n3) {
        var r3 = this.elements, i3 = We.set(r3[0], r3[1], r3[2]).length(), a2 = We.set(r3[4], r3[5], r3[6]).length(), o2 = We.set(r3[8], r3[9], r3[10]).length();
        this.determinant() < 0 && (i3 = -i3), t3.x = r3[12], t3.y = r3[13], t3.z = r3[14], Je.copy(this);
        var s2 = 1 / i3, l2 = 1 / a2, c2 = 1 / o2;
        return Je.elements[0] *= s2, Je.elements[1] *= s2, Je.elements[2] *= s2, Je.elements[4] *= l2, Je.elements[5] *= l2, Je.elements[6] *= l2, Je.elements[8] *= c2, Je.elements[9] *= c2, Je.elements[10] *= c2, e3.setFromRotationMatrix(Je), n3.x = i3, n3.y = a2, n3.z = o2, this;
      }, makePerspective: function(t3, e3, n3, r3, i3, a2) {
        void 0 === a2 && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
        var o2 = this.elements, s2 = 2 * i3 / (e3 - t3), l2 = 2 * i3 / (n3 - r3), c2 = (e3 + t3) / (e3 - t3), u2 = (n3 + r3) / (n3 - r3), h2 = -(a2 + i3) / (a2 - i3), p2 = -2 * a2 * i3 / (a2 - i3);
        return o2[0] = s2, o2[4] = 0, o2[8] = c2, o2[12] = 0, o2[1] = 0, o2[5] = l2, o2[9] = u2, o2[13] = 0, o2[2] = 0, o2[6] = 0, o2[10] = h2, o2[14] = p2, o2[3] = 0, o2[7] = 0, o2[11] = -1, o2[15] = 0, this;
      }, makeOrthographic: function(t3, e3, n3, r3, i3, a2) {
        var o2 = this.elements, s2 = 1 / (e3 - t3), l2 = 1 / (n3 - r3), c2 = 1 / (a2 - i3), u2 = (e3 + t3) * s2, h2 = (n3 + r3) * l2, p2 = (a2 + i3) * c2;
        return o2[0] = 2 * s2, o2[4] = 0, o2[8] = 0, o2[12] = -u2, o2[1] = 0, o2[5] = 2 * l2, o2[9] = 0, o2[13] = -h2, o2[2] = 0, o2[6] = 0, o2[10] = -2 * c2, o2[14] = -p2, o2[3] = 0, o2[7] = 0, o2[11] = 0, o2[15] = 1, this;
      }, equals: function(t3) {
        for (var e3 = this.elements, n3 = t3.elements, r3 = 0; r3 < 16; r3++) if (e3[r3] !== n3[r3]) return false;
        return true;
      }, fromArray: function(t3, e3) {
        void 0 === e3 && (e3 = 0);
        for (var n3 = 0; n3 < 16; n3++) this.elements[n3] = t3[n3 + e3];
        return this;
      }, toArray: function(t3, e3) {
        void 0 === t3 && (t3 = []), void 0 === e3 && (e3 = 0);
        var n3 = this.elements;
        return t3[e3] = n3[0], t3[e3 + 1] = n3[1], t3[e3 + 2] = n3[2], t3[e3 + 3] = n3[3], t3[e3 + 4] = n3[4], t3[e3 + 5] = n3[5], t3[e3 + 6] = n3[6], t3[e3 + 7] = n3[7], t3[e3 + 8] = n3[8], t3[e3 + 9] = n3[9], t3[e3 + 10] = n3[10], t3[e3 + 11] = n3[11], t3[e3 + 12] = n3[12], t3[e3 + 13] = n3[13], t3[e3 + 14] = n3[14], t3[e3 + 15] = n3[15], t3;
      } });
      var Qe = new $e(), tn = new Ge();
      function en(t3, e3, n3, r3) {
        this._x = t3 || 0, this._y = e3 || 0, this._z = n3 || 0, this._order = r3 || en.DefaultOrder;
      }
      function nn() {
        this.mask = 1;
      }
      en.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], en.DefaultOrder = "XYZ", Object.defineProperties(en.prototype, { x: { get: function() {
        return this._x;
      }, set: function(t3) {
        this._x = t3, this._onChangeCallback();
      } }, y: { get: function() {
        return this._y;
      }, set: function(t3) {
        this._y = t3, this._onChangeCallback();
      } }, z: { get: function() {
        return this._z;
      }, set: function(t3) {
        this._z = t3, this._onChangeCallback();
      } }, order: { get: function() {
        return this._order;
      }, set: function(t3) {
        this._order = t3, this._onChangeCallback();
      } } }), Object.assign(en.prototype, { isEuler: true, set: function(t3, e3, n3, r3) {
        return this._x = t3, this._y = e3, this._z = n3, this._order = r3 || this._order, this._onChangeCallback(), this;
      }, clone: function() {
        return new this.constructor(this._x, this._y, this._z, this._order);
      }, copy: function(t3) {
        return this._x = t3._x, this._y = t3._y, this._z = t3._z, this._order = t3._order, this._onChangeCallback(), this;
      }, setFromRotationMatrix: function(t3, e3, n3) {
        var r3 = Re.clamp, i3 = t3.elements, a2 = i3[0], o2 = i3[4], s2 = i3[8], l2 = i3[1], c2 = i3[5], u2 = i3[9], h2 = i3[2], p2 = i3[6], d2 = i3[10];
        return "XYZ" === (e3 = e3 || this._order) ? (this._y = Math.asin(r3(s2, -1, 1)), Math.abs(s2) < 0.9999999 ? (this._x = Math.atan2(-u2, d2), this._z = Math.atan2(-o2, a2)) : (this._x = Math.atan2(p2, c2), this._z = 0)) : "YXZ" === e3 ? (this._x = Math.asin(-r3(u2, -1, 1)), Math.abs(u2) < 0.9999999 ? (this._y = Math.atan2(s2, d2), this._z = Math.atan2(l2, c2)) : (this._y = Math.atan2(-h2, a2), this._z = 0)) : "ZXY" === e3 ? (this._x = Math.asin(r3(p2, -1, 1)), Math.abs(p2) < 0.9999999 ? (this._y = Math.atan2(-h2, d2), this._z = Math.atan2(-o2, c2)) : (this._y = 0, this._z = Math.atan2(l2, a2))) : "ZYX" === e3 ? (this._y = Math.asin(-r3(h2, -1, 1)), Math.abs(h2) < 0.9999999 ? (this._x = Math.atan2(p2, d2), this._z = Math.atan2(l2, a2)) : (this._x = 0, this._z = Math.atan2(-o2, c2))) : "YZX" === e3 ? (this._z = Math.asin(r3(l2, -1, 1)), Math.abs(l2) < 0.9999999 ? (this._x = Math.atan2(-u2, c2), this._y = Math.atan2(-h2, a2)) : (this._x = 0, this._y = Math.atan2(s2, d2))) : "XZY" === e3 ? (this._z = Math.asin(-r3(o2, -1, 1)), Math.abs(o2) < 0.9999999 ? (this._x = Math.atan2(p2, c2), this._y = Math.atan2(s2, a2)) : (this._x = Math.atan2(-u2, d2), this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + e3), this._order = e3, false !== n3 && this._onChangeCallback(), this;
      }, setFromQuaternion: function(t3, e3, n3) {
        return Qe.makeRotationFromQuaternion(t3), this.setFromRotationMatrix(Qe, e3, n3);
      }, setFromVector3: function(t3, e3) {
        return this.set(t3.x, t3.y, t3.z, e3 || this._order);
      }, reorder: function(t3) {
        return tn.setFromEuler(this), this.setFromQuaternion(tn, t3);
      }, equals: function(t3) {
        return t3._x === this._x && t3._y === this._y && t3._z === this._z && t3._order === this._order;
      }, fromArray: function(t3) {
        return this._x = t3[0], this._y = t3[1], this._z = t3[2], void 0 !== t3[3] && (this._order = t3[3]), this._onChangeCallback(), this;
      }, toArray: function(t3, e3) {
        return void 0 === t3 && (t3 = []), void 0 === e3 && (e3 = 0), t3[e3] = this._x, t3[e3 + 1] = this._y, t3[e3 + 2] = this._z, t3[e3 + 3] = this._order, t3;
      }, toVector3: function(t3) {
        return t3 ? t3.set(this._x, this._y, this._z) : new He(this._x, this._y, this._z);
      }, _onChange: function(t3) {
        return this._onChangeCallback = t3, this;
      }, _onChangeCallback: function() {
      } }), Object.assign(nn.prototype, { set: function(t3) {
        this.mask = 1 << t3 | 0;
      }, enable: function(t3) {
        this.mask |= 1 << t3 | 0;
      }, enableAll: function() {
        this.mask = -1;
      }, toggle: function(t3) {
        this.mask ^= 1 << t3 | 0;
      }, disable: function(t3) {
        this.mask &= ~(1 << t3 | 0);
      }, disableAll: function() {
        this.mask = 0;
      }, test: function(t3) {
        return 0 != (this.mask & t3.mask);
      } });
      var rn = 0, an = new He(), on = new Ge(), sn = new $e(), ln = new He(), cn = new He(), un = new He(), hn = new Ge(), pn = new He(1, 0, 0), dn = new He(0, 1, 0), fn = new He(0, 0, 1), mn = { type: "added" }, gn = { type: "removed" };
      function yn() {
        Object.defineProperty(this, "id", { value: rn++ }), this.uuid = Re.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = yn.DefaultUp.clone();
        var t3 = new He(), e3 = new en(), n3 = new Ge(), r3 = new He(1, 1, 1);
        e3._onChange(function() {
          n3.setFromEuler(e3, false);
        }), n3._onChange(function() {
          e3.setFromQuaternion(n3, void 0, false);
        }), Object.defineProperties(this, { position: { configurable: true, enumerable: true, value: t3 }, rotation: { configurable: true, enumerable: true, value: e3 }, quaternion: { configurable: true, enumerable: true, value: n3 }, scale: { configurable: true, enumerable: true, value: r3 }, modelViewMatrix: { value: new $e() }, normalMatrix: { value: new Ie() } }), this.matrix = new $e(), this.matrixWorld = new $e(), this.matrixAutoUpdate = yn.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = false, this.layers = new nn(), this.visible = true, this.castShadow = false, this.receiveShadow = false, this.frustumCulled = true, this.renderOrder = 0, this.userData = {};
      }
      function vn() {
        yn.call(this), this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = true, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", { detail: this }));
      }
      yn.DefaultUp = new He(0, 1, 0), yn.DefaultMatrixAutoUpdate = true, yn.prototype = Object.assign(Object.create(Ee.prototype), { constructor: yn, isObject3D: true, onBeforeRender: function() {
      }, onAfterRender: function() {
      }, applyMatrix4: function(t3) {
        this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(t3), this.matrix.decompose(this.position, this.quaternion, this.scale);
      }, applyQuaternion: function(t3) {
        return this.quaternion.premultiply(t3), this;
      }, setRotationFromAxisAngle: function(t3, e3) {
        this.quaternion.setFromAxisAngle(t3, e3);
      }, setRotationFromEuler: function(t3) {
        this.quaternion.setFromEuler(t3, true);
      }, setRotationFromMatrix: function(t3) {
        this.quaternion.setFromRotationMatrix(t3);
      }, setRotationFromQuaternion: function(t3) {
        this.quaternion.copy(t3);
      }, rotateOnAxis: function(t3, e3) {
        return on.setFromAxisAngle(t3, e3), this.quaternion.multiply(on), this;
      }, rotateOnWorldAxis: function(t3, e3) {
        return on.setFromAxisAngle(t3, e3), this.quaternion.premultiply(on), this;
      }, rotateX: function(t3) {
        return this.rotateOnAxis(pn, t3);
      }, rotateY: function(t3) {
        return this.rotateOnAxis(dn, t3);
      }, rotateZ: function(t3) {
        return this.rotateOnAxis(fn, t3);
      }, translateOnAxis: function(t3, e3) {
        return an.copy(t3).applyQuaternion(this.quaternion), this.position.add(an.multiplyScalar(e3)), this;
      }, translateX: function(t3) {
        return this.translateOnAxis(pn, t3);
      }, translateY: function(t3) {
        return this.translateOnAxis(dn, t3);
      }, translateZ: function(t3) {
        return this.translateOnAxis(fn, t3);
      }, localToWorld: function(t3) {
        return t3.applyMatrix4(this.matrixWorld);
      }, worldToLocal: function(t3) {
        return t3.applyMatrix4(sn.getInverse(this.matrixWorld));
      }, lookAt: function(t3, e3, n3) {
        t3.isVector3 ? ln.copy(t3) : ln.set(t3, e3, n3);
        var r3 = this.parent;
        this.updateWorldMatrix(true, false), cn.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? sn.lookAt(cn, ln, this.up) : sn.lookAt(ln, cn, this.up), this.quaternion.setFromRotationMatrix(sn), r3 && (sn.extractRotation(r3.matrixWorld), on.setFromRotationMatrix(sn), this.quaternion.premultiply(on.inverse()));
      }, add: function(t3) {
        if (1 < arguments.length) {
          for (var e3 = 0; e3 < arguments.length; e3++) this.add(arguments[e3]);
          return this;
        }
        return t3 === this ? console.error("THREE.Object3D.add: object can't be added as a child of itself.", t3) : t3 && t3.isObject3D ? (null !== t3.parent && t3.parent.remove(t3), (t3.parent = this).children.push(t3), t3.dispatchEvent(mn)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t3), this;
      }, remove: function(t3) {
        if (1 < arguments.length) {
          for (var e3 = 0; e3 < arguments.length; e3++) this.remove(arguments[e3]);
          return this;
        }
        var n3 = this.children.indexOf(t3);
        return -1 !== n3 && (t3.parent = null, this.children.splice(n3, 1), t3.dispatchEvent(gn)), this;
      }, attach: function(t3) {
        return this.updateWorldMatrix(true, false), sn.getInverse(this.matrixWorld), null !== t3.parent && (t3.parent.updateWorldMatrix(true, false), sn.multiply(t3.parent.matrixWorld)), t3.applyMatrix4(sn), t3.updateWorldMatrix(false, false), this.add(t3), this;
      }, getObjectById: function(t3) {
        return this.getObjectByProperty("id", t3);
      }, getObjectByName: function(t3) {
        return this.getObjectByProperty("name", t3);
      }, getObjectByProperty: function(t3, e3) {
        if (this[t3] === e3) return this;
        for (var n3 = 0, r3 = this.children.length; n3 < r3; n3++) {
          var i3 = this.children[n3].getObjectByProperty(t3, e3);
          if (void 0 !== i3) return i3;
        }
      }, getWorldPosition: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"), t3 = new He()), this.updateMatrixWorld(true), t3.setFromMatrixPosition(this.matrixWorld);
      }, getWorldQuaternion: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"), t3 = new Ge()), this.updateMatrixWorld(true), this.matrixWorld.decompose(cn, t3, un), t3;
      }, getWorldScale: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Object3D: .getWorldScale() target is now required"), t3 = new He()), this.updateMatrixWorld(true), this.matrixWorld.decompose(cn, hn, t3), t3;
      }, getWorldDirection: function(t3) {
        void 0 === t3 && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"), t3 = new He()), this.updateMatrixWorld(true);
        var e3 = this.matrixWorld.elements;
        return t3.set(e3[8], e3[9], e3[10]).normalize();
      }, raycast: function() {
      }, traverse: function(t3) {
        t3(this);
        for (var e3 = this.children, n3 = 0, r3 = e3.length; n3 < r3; n3++) e3[n3].traverse(t3);
      }, traverseVisible: function(t3) {
        if (false !== this.visible) {
          t3(this);
          for (var e3 = this.children, n3 = 0, r3 = e3.length; n3 < r3; n3++) e3[n3].traverseVisible(t3);
        }
      }, traverseAncestors: function(t3) {
        var e3 = this.parent;
        null !== e3 && (t3(e3), e3.traverseAncestors(t3));
      }, updateMatrix: function() {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = true;
      }, updateMatrixWorld: function(t3) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || t3) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), t3 = !(this.matrixWorldNeedsUpdate = false));
        for (var e3 = this.children, n3 = 0, r3 = e3.length; n3 < r3; n3++) e3[n3].updateMatrixWorld(t3);
      }, updateWorldMatrix: function(t3, e3) {
        var n3 = this.parent;
        if (true === t3 && null !== n3 && n3.updateWorldMatrix(true, false), this.matrixAutoUpdate && this.updateMatrix(), null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), true === e3) for (var r3 = this.children, i3 = 0, a2 = r3.length; i3 < a2; i3++) r3[i3].updateWorldMatrix(false, true);
      }, toJSON: function(t3) {
        var e3 = void 0 === t3 || "string" == typeof t3, n3 = {};
        e3 && (t3 = { geometries: {}, materials: {}, textures: {}, images: {}, shapes: {} }, n3.metadata = { version: 4.5, type: "Object", generator: "Object3D.toJSON" });
        var r3 = {};
        function i3(e4, n4) {
          return void 0 === e4[n4.uuid] && (e4[n4.uuid] = n4.toJSON(t3)), n4.uuid;
        }
        if (r3.uuid = this.uuid, r3.type = this.type, "" !== this.name && (r3.name = this.name), true === this.castShadow && (r3.castShadow = true), true === this.receiveShadow && (r3.receiveShadow = true), false === this.visible && (r3.visible = false), false === this.frustumCulled && (r3.frustumCulled = false), 0 !== this.renderOrder && (r3.renderOrder = this.renderOrder), "{}" !== JSON.stringify(this.userData) && (r3.userData = this.userData), r3.layers = this.layers.mask, r3.matrix = this.matrix.toArray(), false === this.matrixAutoUpdate && (r3.matrixAutoUpdate = false), this.isInstancedMesh && (r3.type = "InstancedMesh", r3.count = this.count, r3.instanceMatrix = this.instanceMatrix.toJSON()), this.isMesh || this.isLine || this.isPoints) {
          r3.geometry = i3(t3.geometries, this.geometry);
          var a2 = this.geometry.parameters;
          if (void 0 !== a2 && void 0 !== a2.shapes) {
            var o2 = a2.shapes;
            if (Array.isArray(o2)) for (var s2 = 0, l2 = o2.length; s2 < l2; s2++) {
              var c2 = o2[s2];
              i3(t3.shapes, c2);
            }
            else i3(t3.shapes, o2);
          }
        }
        if (void 0 !== this.material) if (Array.isArray(this.material)) {
          var u2 = [];
          for (s2 = 0, l2 = this.material.length; s2 < l2; s2++) u2.push(i3(t3.materials, this.material[s2]));
          r3.material = u2;
        } else r3.material = i3(t3.materials, this.material);
        if (0 < this.children.length) for (r3.children = [], s2 = 0; s2 < this.children.length; s2++) r3.children.push(this.children[s2].toJSON(t3).object);
        if (e3) {
          var h2 = m2(t3.geometries), p2 = m2(t3.materials), d2 = m2(t3.textures), f2 = m2(t3.images);
          o2 = m2(t3.shapes), 0 < h2.length && (n3.geometries = h2), 0 < p2.length && (n3.materials = p2), 0 < d2.length && (n3.textures = d2), 0 < f2.length && (n3.images = f2), 0 < o2.length && (n3.shapes = o2);
        }
        return n3.object = r3, n3;
        function m2(t4) {
          var e4 = [];
          for (var n4 in t4) {
            var r4 = t4[n4];
            delete r4.metadata, e4.push(r4);
          }
          return e4;
        }
      }, clone: function(t3) {
        return new this.constructor().copy(this, t3);
      }, copy: function(t3, e3) {
        if (void 0 === e3 && (e3 = true), this.name = t3.name, this.up.copy(t3.up), this.position.copy(t3.position), this.quaternion.copy(t3.quaternion), this.scale.copy(t3.scale), this.matrix.copy(t3.matrix), this.matrixWorld.copy(t3.matrixWorld), this.matrixAutoUpdate = t3.matrixAutoUpdate, this.matrixWorldNeedsUpdate = t3.matrixWorldNeedsUpdate, this.layers.mask = t3.layers.mask, this.visible = t3.visible, this.castShadow = t3.castShadow, this.receiveShadow = t3.receiveShadow, this.frustumCulled = t3.frustumCulled, this.renderOrder = t3.renderOrder, this.userData = JSON.parse(JSON.stringify(t3.userData)), true === e3) for (var n3 = 0; n3 < t3.children.length; n3++) {
          var r3 = t3.children[n3];
          this.add(r3.clone());
        }
        return this;
      } }), vn.prototype = Object.assign(Object.create(yn.prototype), { constructor: vn, isScene: true, copy: function(t3, e3) {
        return yn.prototype.copy.call(this, t3, e3), null !== t3.background && (this.background = t3.background.clone()), null !== t3.environment && (this.environment = t3.environment.clone()), null !== t3.fog && (this.fog = t3.fog.clone()), null !== t3.overrideMaterial && (this.overrideMaterial = t3.overrideMaterial.clone()), this.autoUpdate = t3.autoUpdate, this.matrixAutoUpdate = t3.matrixAutoUpdate, this;
      }, toJSON: function(t3) {
        var e3 = yn.prototype.toJSON.call(this, t3);
        return null !== this.background && (e3.object.background = this.background.toJSON(t3)), null !== this.environment && (e3.object.environment = this.environment.toJSON(t3)), null !== this.fog && (e3.object.fog = this.fog.toJSON()), e3;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } });
      var xn = [new He(), new He(), new He(), new He(), new He(), new He(), new He(), new He()], wn = new He(), bn = new Rn(), Mn = new He(), _n = new He(), Tn = new He(), Cn = new He(), Sn = new He(), Dn = new He(), En = new He(), On = new He(), An = new He(), Pn = new He();
      function Rn(t3, e3) {
        this.min = void 0 !== t3 ? t3 : new He(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== e3 ? e3 : new He(-1 / 0, -1 / 0, -1 / 0);
      }
      function Ln(t3, e3, n3, r3, i3) {
        var a2, o2;
        for (a2 = 0, o2 = t3.length - 3; a2 <= o2; a2 += 3) {
          Pn.fromArray(t3, a2);
          var s2 = i3.x * Math.abs(Pn.x) + i3.y * Math.abs(Pn.y) + i3.z * Math.abs(Pn.z), l2 = e3.dot(Pn), c2 = n3.dot(Pn), u2 = r3.dot(Pn);
          if (Math.max(-Math.max(l2, c2, u2), Math.min(l2, c2, u2)) > s2) return false;
        }
        return true;
      }
      Object.assign(Rn.prototype, { isBox3: true, set: function(t3, e3) {
        return this.min.copy(t3), this.max.copy(e3), this;
      }, setFromArray: function(t3) {
        for (var e3 = 1 / 0, n3 = 1 / 0, r3 = 1 / 0, i3 = -1 / 0, a2 = -1 / 0, o2 = -1 / 0, s2 = 0, l2 = t3.length; s2 < l2; s2 += 3) {
          var c2 = t3[s2], u2 = t3[s2 + 1], h2 = t3[s2 + 2];
          c2 < e3 && (e3 = c2), u2 < n3 && (n3 = u2), h2 < r3 && (r3 = h2), i3 < c2 && (i3 = c2), a2 < u2 && (a2 = u2), o2 < h2 && (o2 = h2);
        }
        return this.min.set(e3, n3, r3), this.max.set(i3, a2, o2), this;
      }, setFromBufferAttribute: function(t3) {
        for (var e3 = 1 / 0, n3 = 1 / 0, r3 = 1 / 0, i3 = -1 / 0, a2 = -1 / 0, o2 = -1 / 0, s2 = 0, l2 = t3.count; s2 < l2; s2++) {
          var c2 = t3.getX(s2), u2 = t3.getY(s2), h2 = t3.getZ(s2);
          c2 < e3 && (e3 = c2), u2 < n3 && (n3 = u2), h2 < r3 && (r3 = h2), i3 < c2 && (i3 = c2), a2 < u2 && (a2 = u2), o2 < h2 && (o2 = h2);
        }
        return this.min.set(e3, n3, r3), this.max.set(i3, a2, o2), this;
      }, setFromPoints: function(t3) {
        this.makeEmpty();
        for (var e3 = 0, n3 = t3.length; e3 < n3; e3++) this.expandByPoint(t3[e3]);
        return this;
      }, setFromCenterAndSize: function(t3, e3) {
        var n3 = wn.copy(e3).multiplyScalar(0.5);
        return this.min.copy(t3).sub(n3), this.max.copy(t3).add(n3), this;
      }, setFromObject: function(t3) {
        return this.makeEmpty(), this.expandByObject(t3);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.min.copy(t3.min), this.max.copy(t3.max), this;
      }, makeEmpty: function() {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
      }, isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
      }, getCenter: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Box3: .getCenter() target is now required"), t3 = new He()), this.isEmpty() ? t3.set(0, 0, 0) : t3.addVectors(this.min, this.max).multiplyScalar(0.5);
      }, getSize: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Box3: .getSize() target is now required"), t3 = new He()), this.isEmpty() ? t3.set(0, 0, 0) : t3.subVectors(this.max, this.min);
      }, expandByPoint: function(t3) {
        return this.min.min(t3), this.max.max(t3), this;
      }, expandByVector: function(t3) {
        return this.min.sub(t3), this.max.add(t3), this;
      }, expandByScalar: function(t3) {
        return this.min.addScalar(-t3), this.max.addScalar(t3), this;
      }, expandByObject: function(t3) {
        t3.updateWorldMatrix(false, false);
        var e3 = t3.geometry;
        void 0 !== e3 && (null === e3.boundingBox && e3.computeBoundingBox(), bn.copy(e3.boundingBox), bn.applyMatrix4(t3.matrixWorld), this.expandByPoint(bn.min), this.expandByPoint(bn.max));
        for (var n3 = t3.children, r3 = 0, i3 = n3.length; r3 < i3; r3++) this.expandByObject(n3[r3]);
        return this;
      }, containsPoint: function(t3) {
        return !(t3.x < this.min.x || t3.x > this.max.x || t3.y < this.min.y || t3.y > this.max.y || t3.z < this.min.z || t3.z > this.max.z);
      }, containsBox: function(t3) {
        return this.min.x <= t3.min.x && t3.max.x <= this.max.x && this.min.y <= t3.min.y && t3.max.y <= this.max.y && this.min.z <= t3.min.z && t3.max.z <= this.max.z;
      }, getParameter: function(t3, e3) {
        return void 0 === e3 && (console.warn("THREE.Box3: .getParameter() target is now required"), e3 = new He()), e3.set((t3.x - this.min.x) / (this.max.x - this.min.x), (t3.y - this.min.y) / (this.max.y - this.min.y), (t3.z - this.min.z) / (this.max.z - this.min.z));
      }, intersectsBox: function(t3) {
        return !(t3.max.x < this.min.x || t3.min.x > this.max.x || t3.max.y < this.min.y || t3.min.y > this.max.y || t3.max.z < this.min.z || t3.min.z > this.max.z);
      }, intersectsSphere: function(t3) {
        return this.clampPoint(t3.center, wn), wn.distanceToSquared(t3.center) <= t3.radius * t3.radius;
      }, intersectsPlane: function(t3) {
        var e3, n3;
        return n3 = 0 < t3.normal.x ? (e3 = t3.normal.x * this.min.x, t3.normal.x * this.max.x) : (e3 = t3.normal.x * this.max.x, t3.normal.x * this.min.x), 0 < t3.normal.y ? (e3 += t3.normal.y * this.min.y, n3 += t3.normal.y * this.max.y) : (e3 += t3.normal.y * this.max.y, n3 += t3.normal.y * this.min.y), 0 < t3.normal.z ? (e3 += t3.normal.z * this.min.z, n3 += t3.normal.z * this.max.z) : (e3 += t3.normal.z * this.max.z, n3 += t3.normal.z * this.min.z), e3 <= -t3.constant && n3 >= -t3.constant;
      }, intersectsTriangle: function(t3) {
        if (this.isEmpty()) return false;
        this.getCenter(En), On.subVectors(this.max, En), Mn.subVectors(t3.a, En), _n.subVectors(t3.b, En), Tn.subVectors(t3.c, En), Cn.subVectors(_n, Mn), Sn.subVectors(Tn, _n), Dn.subVectors(Mn, Tn);
        var e3 = [0, -Cn.z, Cn.y, 0, -Sn.z, Sn.y, 0, -Dn.z, Dn.y, Cn.z, 0, -Cn.x, Sn.z, 0, -Sn.x, Dn.z, 0, -Dn.x, -Cn.y, Cn.x, 0, -Sn.y, Sn.x, 0, -Dn.y, Dn.x, 0];
        return !!Ln(e3, Mn, _n, Tn, On) && !!Ln(e3 = [1, 0, 0, 0, 1, 0, 0, 0, 1], Mn, _n, Tn, On) && (An.crossVectors(Cn, Sn), Ln(e3 = [An.x, An.y, An.z], Mn, _n, Tn, On));
      }, clampPoint: function(t3, e3) {
        return void 0 === e3 && (console.warn("THREE.Box3: .clampPoint() target is now required"), e3 = new He()), e3.copy(t3).clamp(this.min, this.max);
      }, distanceToPoint: function(t3) {
        return wn.copy(t3).clamp(this.min, this.max).sub(t3).length();
      }, getBoundingSphere: function(t3) {
        return void 0 === t3 && console.error("THREE.Box3: .getBoundingSphere() target is now required"), this.getCenter(t3.center), t3.radius = 0.5 * this.getSize(wn).length(), t3;
      }, intersect: function(t3) {
        return this.min.max(t3.min), this.max.min(t3.max), this.isEmpty() && this.makeEmpty(), this;
      }, union: function(t3) {
        return this.min.min(t3.min), this.max.max(t3.max), this;
      }, applyMatrix4: function(t3) {
        return this.isEmpty() || (xn[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t3), xn[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t3), xn[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t3), xn[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t3), xn[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t3), xn[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t3), xn[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t3), xn[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t3), this.setFromPoints(xn)), this;
      }, translate: function(t3) {
        return this.min.add(t3), this.max.add(t3), this;
      }, equals: function(t3) {
        return t3.min.equals(this.min) && t3.max.equals(this.max);
      } });
      var In = new Rn();
      function kn(t3, e3) {
        this.center = void 0 !== t3 ? t3 : new He(), this.radius = void 0 !== e3 ? e3 : 0;
      }
      Object.assign(kn.prototype, { set: function(t3, e3) {
        return this.center.copy(t3), this.radius = e3, this;
      }, setFromPoints: function(t3, e3) {
        var n3 = this.center;
        void 0 !== e3 ? n3.copy(e3) : In.setFromPoints(t3).getCenter(n3);
        for (var r3 = 0, i3 = 0, a2 = t3.length; i3 < a2; i3++) r3 = Math.max(r3, n3.distanceToSquared(t3[i3]));
        return this.radius = Math.sqrt(r3), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.center.copy(t3.center), this.radius = t3.radius, this;
      }, empty: function() {
        return this.radius <= 0;
      }, containsPoint: function(t3) {
        return t3.distanceToSquared(this.center) <= this.radius * this.radius;
      }, distanceToPoint: function(t3) {
        return t3.distanceTo(this.center) - this.radius;
      }, intersectsSphere: function(t3) {
        var e3 = this.radius + t3.radius;
        return t3.center.distanceToSquared(this.center) <= e3 * e3;
      }, intersectsBox: function(t3) {
        return t3.intersectsSphere(this);
      }, intersectsPlane: function(t3) {
        return Math.abs(t3.distanceToPoint(this.center)) <= this.radius;
      }, clampPoint: function(t3, e3) {
        var n3 = this.center.distanceToSquared(t3);
        return void 0 === e3 && (console.warn("THREE.Sphere: .clampPoint() target is now required"), e3 = new He()), e3.copy(t3), n3 > this.radius * this.radius && (e3.sub(this.center).normalize(), e3.multiplyScalar(this.radius).add(this.center)), e3;
      }, getBoundingBox: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"), t3 = new Rn()), t3.set(this.center, this.center), t3.expandByScalar(this.radius), t3;
      }, applyMatrix4: function(t3) {
        return this.center.applyMatrix4(t3), this.radius = this.radius * t3.getMaxScaleOnAxis(), this;
      }, translate: function(t3) {
        return this.center.add(t3), this;
      }, equals: function(t3) {
        return t3.center.equals(this.center) && t3.radius === this.radius;
      } });
      var jn = new He(), Nn = new He(), Vn = new He(), Fn = new He(), Bn = new He(), Gn = new He(), zn = new He();
      function Un(t3, e3) {
        this.origin = void 0 !== t3 ? t3 : new He(), this.direction = void 0 !== e3 ? e3 : new He(0, 0, -1);
      }
      Object.assign(Un.prototype, { set: function(t3, e3) {
        return this.origin.copy(t3), this.direction.copy(e3), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.origin.copy(t3.origin), this.direction.copy(t3.direction), this;
      }, at: function(t3, e3) {
        return void 0 === e3 && (console.warn("THREE.Ray: .at() target is now required"), e3 = new He()), e3.copy(this.direction).multiplyScalar(t3).add(this.origin);
      }, lookAt: function(t3) {
        return this.direction.copy(t3).sub(this.origin).normalize(), this;
      }, recast: function(t3) {
        return this.origin.copy(this.at(t3, jn)), this;
      }, closestPointToPoint: function(t3, e3) {
        void 0 === e3 && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"), e3 = new He()), e3.subVectors(t3, this.origin);
        var n3 = e3.dot(this.direction);
        return n3 < 0 ? e3.copy(this.origin) : e3.copy(this.direction).multiplyScalar(n3).add(this.origin);
      }, distanceToPoint: function(t3) {
        return Math.sqrt(this.distanceSqToPoint(t3));
      }, distanceSqToPoint: function(t3) {
        var e3 = jn.subVectors(t3, this.origin).dot(this.direction);
        return e3 < 0 ? this.origin.distanceToSquared(t3) : (jn.copy(this.direction).multiplyScalar(e3).add(this.origin), jn.distanceToSquared(t3));
      }, distanceSqToSegment: function(t3, e3, n3, r3) {
        Nn.copy(t3).add(e3).multiplyScalar(0.5), Vn.copy(e3).sub(t3).normalize(), Fn.copy(this.origin).sub(Nn);
        var i3, a2, o2, s2, l2 = 0.5 * t3.distanceTo(e3), c2 = -this.direction.dot(Vn), u2 = Fn.dot(this.direction), h2 = -Fn.dot(Vn), p2 = Fn.lengthSq(), d2 = Math.abs(1 - c2 * c2);
        if (0 < d2) if (a2 = c2 * u2 - h2, s2 = l2 * d2, 0 <= (i3 = c2 * h2 - u2)) if (-s2 <= a2) if (a2 <= s2) {
          var f2 = 1 / d2;
          o2 = (i3 *= f2) * (i3 + c2 * (a2 *= f2) + 2 * u2) + a2 * (c2 * i3 + a2 + 2 * h2) + p2;
        } else a2 = l2, o2 = -(i3 = Math.max(0, -(c2 * a2 + u2))) * i3 + a2 * (a2 + 2 * h2) + p2;
        else a2 = -l2, o2 = -(i3 = Math.max(0, -(c2 * a2 + u2))) * i3 + a2 * (a2 + 2 * h2) + p2;
        else o2 = a2 <= -s2 ? -(i3 = Math.max(0, -(-c2 * l2 + u2))) * i3 + (a2 = 0 < i3 ? -l2 : Math.min(Math.max(-l2, -h2), l2)) * (a2 + 2 * h2) + p2 : a2 <= s2 ? (i3 = 0, (a2 = Math.min(Math.max(-l2, -h2), l2)) * (a2 + 2 * h2) + p2) : -(i3 = Math.max(0, -(c2 * l2 + u2))) * i3 + (a2 = 0 < i3 ? l2 : Math.min(Math.max(-l2, -h2), l2)) * (a2 + 2 * h2) + p2;
        else a2 = 0 < c2 ? -l2 : l2, o2 = -(i3 = Math.max(0, -(c2 * a2 + u2))) * i3 + a2 * (a2 + 2 * h2) + p2;
        return n3 && n3.copy(this.direction).multiplyScalar(i3).add(this.origin), r3 && r3.copy(Vn).multiplyScalar(a2).add(Nn), o2;
      }, intersectSphere: function(t3, e3) {
        jn.subVectors(t3.center, this.origin);
        var n3 = jn.dot(this.direction), r3 = jn.dot(jn) - n3 * n3, i3 = t3.radius * t3.radius;
        if (i3 < r3) return null;
        var a2 = Math.sqrt(i3 - r3), o2 = n3 - a2, s2 = n3 + a2;
        return o2 < 0 && s2 < 0 ? null : o2 < 0 ? this.at(s2, e3) : this.at(o2, e3);
      }, intersectsSphere: function(t3) {
        return this.distanceSqToPoint(t3.center) <= t3.radius * t3.radius;
      }, distanceToPlane: function(t3) {
        var e3 = t3.normal.dot(this.direction);
        if (0 === e3) return 0 === t3.distanceToPoint(this.origin) ? 0 : null;
        var n3 = -(this.origin.dot(t3.normal) + t3.constant) / e3;
        return 0 <= n3 ? n3 : null;
      }, intersectPlane: function(t3, e3) {
        var n3 = this.distanceToPlane(t3);
        return null === n3 ? null : this.at(n3, e3);
      }, intersectsPlane: function(t3) {
        var e3 = t3.distanceToPoint(this.origin);
        return 0 === e3 || t3.normal.dot(this.direction) * e3 < 0;
      }, intersectBox: function(t3, e3) {
        var n3, r3, i3, a2, o2, s2, l2 = 1 / this.direction.x, c2 = 1 / this.direction.y, u2 = 1 / this.direction.z, h2 = this.origin;
        return r3 = 0 <= l2 ? (n3 = (t3.min.x - h2.x) * l2, (t3.max.x - h2.x) * l2) : (n3 = (t3.max.x - h2.x) * l2, (t3.min.x - h2.x) * l2), (a2 = 0 <= c2 ? (i3 = (t3.min.y - h2.y) * c2, (t3.max.y - h2.y) * c2) : (i3 = (t3.max.y - h2.y) * c2, (t3.min.y - h2.y) * c2)) < n3 || r3 < i3 ? null : ((n3 < i3 || n3 != n3) && (n3 = i3), (a2 < r3 || r3 != r3) && (r3 = a2), (s2 = 0 <= u2 ? (o2 = (t3.min.z - h2.z) * u2, (t3.max.z - h2.z) * u2) : (o2 = (t3.max.z - h2.z) * u2, (t3.min.z - h2.z) * u2)) < n3 || r3 < o2 ? null : ((n3 < o2 || n3 != n3) && (n3 = o2), (s2 < r3 || r3 != r3) && (r3 = s2), r3 < 0 ? null : this.at(0 <= n3 ? n3 : r3, e3)));
      }, intersectsBox: function(t3) {
        return null !== this.intersectBox(t3, jn);
      }, intersectTriangle: function(t3, e3, n3, r3, i3) {
        Bn.subVectors(e3, t3), Gn.subVectors(n3, t3), zn.crossVectors(Bn, Gn);
        var a2, o2 = this.direction.dot(zn);
        if (0 < o2) {
          if (r3) return null;
          a2 = 1;
        } else {
          if (!(o2 < 0)) return null;
          a2 = -1, o2 = -o2;
        }
        Fn.subVectors(this.origin, t3);
        var s2 = a2 * this.direction.dot(Gn.crossVectors(Fn, Gn));
        if (s2 < 0) return null;
        var l2 = a2 * this.direction.dot(Bn.cross(Fn));
        if (l2 < 0) return null;
        if (o2 < s2 + l2) return null;
        var c2 = -a2 * Fn.dot(zn);
        return c2 < 0 ? null : this.at(c2 / o2, i3);
      }, applyMatrix4: function(t3) {
        return this.origin.applyMatrix4(t3), this.direction.transformDirection(t3), this;
      }, equals: function(t3) {
        return t3.origin.equals(this.origin) && t3.direction.equals(this.direction);
      } });
      var Hn = new He(), Wn = new He(), Jn = new Ie();
      function qn(t3, e3) {
        this.normal = void 0 !== t3 ? t3 : new He(1, 0, 0), this.constant = void 0 !== e3 ? e3 : 0;
      }
      Object.assign(qn.prototype, { isPlane: true, set: function(t3, e3) {
        return this.normal.copy(t3), this.constant = e3, this;
      }, setComponents: function(t3, e3, n3, r3) {
        return this.normal.set(t3, e3, n3), this.constant = r3, this;
      }, setFromNormalAndCoplanarPoint: function(t3, e3) {
        return this.normal.copy(t3), this.constant = -e3.dot(this.normal), this;
      }, setFromCoplanarPoints: function(t3, e3, n3) {
        var r3 = Hn.subVectors(n3, e3).cross(Wn.subVectors(t3, e3)).normalize();
        return this.setFromNormalAndCoplanarPoint(r3, t3), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.normal.copy(t3.normal), this.constant = t3.constant, this;
      }, normalize: function() {
        var t3 = 1 / this.normal.length();
        return this.normal.multiplyScalar(t3), this.constant *= t3, this;
      }, negate: function() {
        return this.constant *= -1, this.normal.negate(), this;
      }, distanceToPoint: function(t3) {
        return this.normal.dot(t3) + this.constant;
      }, distanceToSphere: function(t3) {
        return this.distanceToPoint(t3.center) - t3.radius;
      }, projectPoint: function(t3, e3) {
        return void 0 === e3 && (console.warn("THREE.Plane: .projectPoint() target is now required"), e3 = new He()), e3.copy(this.normal).multiplyScalar(-this.distanceToPoint(t3)).add(t3);
      }, intersectLine: function(t3, e3) {
        void 0 === e3 && (console.warn("THREE.Plane: .intersectLine() target is now required"), e3 = new He());
        var n3 = t3.delta(Hn), r3 = this.normal.dot(n3);
        if (0 === r3) return 0 === this.distanceToPoint(t3.start) ? e3.copy(t3.start) : void 0;
        var i3 = -(t3.start.dot(this.normal) + this.constant) / r3;
        return i3 < 0 || 1 < i3 ? void 0 : e3.copy(n3).multiplyScalar(i3).add(t3.start);
      }, intersectsLine: function(t3) {
        var e3 = this.distanceToPoint(t3.start), n3 = this.distanceToPoint(t3.end);
        return e3 < 0 && 0 < n3 || n3 < 0 && 0 < e3;
      }, intersectsBox: function(t3) {
        return t3.intersectsPlane(this);
      }, intersectsSphere: function(t3) {
        return t3.intersectsPlane(this);
      }, coplanarPoint: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Plane: .coplanarPoint() target is now required"), t3 = new He()), t3.copy(this.normal).multiplyScalar(-this.constant);
      }, applyMatrix4: function(t3, e3) {
        var n3 = e3 || Jn.getNormalMatrix(t3), r3 = this.coplanarPoint(Hn).applyMatrix4(t3), i3 = this.normal.applyMatrix3(n3).normalize();
        return this.constant = -r3.dot(i3), this;
      }, translate: function(t3) {
        return this.constant -= t3.dot(this.normal), this;
      }, equals: function(t3) {
        return t3.normal.equals(this.normal) && t3.constant === this.constant;
      } });
      var Xn = new He(), Yn = new He(), Zn = new He(), Kn = new He(), $n = new He(), Qn = new He(), tr = new He(), er = new He(), nr = new He(), rr = new He();
      function ir(t3, e3, n3) {
        this.a = void 0 !== t3 ? t3 : new He(), this.b = void 0 !== e3 ? e3 : new He(), this.c = void 0 !== n3 ? n3 : new He();
      }
      Object.assign(ir, { getNormal: function(t3, e3, n3, r3) {
        void 0 === r3 && (console.warn("THREE.Triangle: .getNormal() target is now required"), r3 = new He()), r3.subVectors(n3, e3), Xn.subVectors(t3, e3), r3.cross(Xn);
        var i3 = r3.lengthSq();
        return 0 < i3 ? r3.multiplyScalar(1 / Math.sqrt(i3)) : r3.set(0, 0, 0);
      }, getBarycoord: function(t3, e3, n3, r3, i3) {
        Xn.subVectors(r3, e3), Yn.subVectors(n3, e3), Zn.subVectors(t3, e3);
        var a2 = Xn.dot(Xn), o2 = Xn.dot(Yn), s2 = Xn.dot(Zn), l2 = Yn.dot(Yn), c2 = Yn.dot(Zn), u2 = a2 * l2 - o2 * o2;
        if (void 0 === i3 && (console.warn("THREE.Triangle: .getBarycoord() target is now required"), i3 = new He()), 0 == u2) return i3.set(-2, -1, -1);
        var h2 = 1 / u2, p2 = (l2 * s2 - o2 * c2) * h2, d2 = (a2 * c2 - o2 * s2) * h2;
        return i3.set(1 - p2 - d2, d2, p2);
      }, containsPoint: function(t3, e3, n3, r3) {
        return ir.getBarycoord(t3, e3, n3, r3, Kn), 0 <= Kn.x && 0 <= Kn.y && Kn.x + Kn.y <= 1;
      }, getUV: function(t3, e3, n3, r3, i3, a2, o2, s2) {
        return this.getBarycoord(t3, e3, n3, r3, Kn), s2.set(0, 0), s2.addScaledVector(i3, Kn.x), s2.addScaledVector(a2, Kn.y), s2.addScaledVector(o2, Kn.z), s2;
      }, isFrontFacing: function(t3, e3, n3, r3) {
        return Xn.subVectors(n3, e3), Yn.subVectors(t3, e3), Xn.cross(Yn).dot(r3) < 0;
      } }), Object.assign(ir.prototype, { set: function(t3, e3, n3) {
        return this.a.copy(t3), this.b.copy(e3), this.c.copy(n3), this;
      }, setFromPointsAndIndices: function(t3, e3, n3, r3) {
        return this.a.copy(t3[e3]), this.b.copy(t3[n3]), this.c.copy(t3[r3]), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.a.copy(t3.a), this.b.copy(t3.b), this.c.copy(t3.c), this;
      }, getArea: function() {
        return Xn.subVectors(this.c, this.b), Yn.subVectors(this.a, this.b), 0.5 * Xn.cross(Yn).length();
      }, getMidpoint: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Triangle: .getMidpoint() target is now required"), t3 = new He()), t3.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
      }, getNormal: function(t3) {
        return ir.getNormal(this.a, this.b, this.c, t3);
      }, getPlane: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Triangle: .getPlane() target is now required"), t3 = new qn()), t3.setFromCoplanarPoints(this.a, this.b, this.c);
      }, getBarycoord: function(t3, e3) {
        return ir.getBarycoord(t3, this.a, this.b, this.c, e3);
      }, getUV: function(t3, e3, n3, r3, i3) {
        return ir.getUV(t3, this.a, this.b, this.c, e3, n3, r3, i3);
      }, containsPoint: function(t3) {
        return ir.containsPoint(t3, this.a, this.b, this.c);
      }, isFrontFacing: function(t3) {
        return ir.isFrontFacing(this.a, this.b, this.c, t3);
      }, intersectsBox: function(t3) {
        return t3.intersectsTriangle(this);
      }, closestPointToPoint: function(t3, e3) {
        void 0 === e3 && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"), e3 = new He());
        var n3, r3, i3 = this.a, a2 = this.b, o2 = this.c;
        $n.subVectors(a2, i3), Qn.subVectors(o2, i3), er.subVectors(t3, i3);
        var s2 = $n.dot(er), l2 = Qn.dot(er);
        if (s2 <= 0 && l2 <= 0) return e3.copy(i3);
        nr.subVectors(t3, a2);
        var c2 = $n.dot(nr), u2 = Qn.dot(nr);
        if (0 <= c2 && u2 <= c2) return e3.copy(a2);
        var h2 = s2 * u2 - c2 * l2;
        if (h2 <= 0 && 0 <= s2 && c2 <= 0) return n3 = s2 / (s2 - c2), e3.copy(i3).addScaledVector($n, n3);
        rr.subVectors(t3, o2);
        var p2 = $n.dot(rr), d2 = Qn.dot(rr);
        if (0 <= d2 && p2 <= d2) return e3.copy(o2);
        var f2 = p2 * l2 - s2 * d2;
        if (f2 <= 0 && 0 <= l2 && d2 <= 0) return r3 = l2 / (l2 - d2), e3.copy(i3).addScaledVector(Qn, r3);
        var m2 = c2 * d2 - p2 * u2;
        if (m2 <= 0 && 0 <= u2 - c2 && 0 <= p2 - d2) return tr.subVectors(o2, a2), r3 = (u2 - c2) / (u2 - c2 + (p2 - d2)), e3.copy(a2).addScaledVector(tr, r3);
        var g2 = 1 / (m2 + f2 + h2);
        return n3 = f2 * g2, r3 = h2 * g2, e3.copy(i3).addScaledVector($n, n3).addScaledVector(Qn, r3);
      }, equals: function(t3) {
        return t3.a.equals(this.a) && t3.b.equals(this.b) && t3.c.equals(this.c);
      } });
      var ar = { aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074 }, or = { h: 0, s: 0, l: 0 }, sr = { h: 0, s: 0, l: 0 };
      function lr(t3, e3, n3) {
        return void 0 === e3 && void 0 === n3 ? this.set(t3) : this.setRGB(t3, e3, n3);
      }
      function cr(t3, e3, n3) {
        return n3 < 0 && (n3 += 1), 1 < n3 && --n3, n3 < 1 / 6 ? t3 + 6 * (e3 - t3) * n3 : n3 < 0.5 ? e3 : n3 < 2 / 3 ? t3 + 6 * (e3 - t3) * (2 / 3 - n3) : t3;
      }
      function ur(t3) {
        return t3 < 0.04045 ? 0.0773993808 * t3 : Math.pow(0.9478672986 * t3 + 0.0521327014, 2.4);
      }
      function hr(t3) {
        return t3 < 31308e-7 ? 12.92 * t3 : 1.055 * Math.pow(t3, 0.41666) - 0.055;
      }
      function pr(t3, e3, n3, r3, i3, a2) {
        this.a = t3, this.b = e3, this.c = n3, this.normal = r3 && r3.isVector3 ? r3 : new He(), this.vertexNormals = Array.isArray(r3) ? r3 : [], this.color = i3 && i3.isColor ? i3 : new lr(), this.vertexColors = Array.isArray(i3) ? i3 : [], this.materialIndex = void 0 !== a2 ? a2 : 0;
      }
      Object.assign(lr.prototype, { isColor: true, r: 1, g: 1, b: 1, set: function(t3) {
        return t3 && t3.isColor ? this.copy(t3) : "number" == typeof t3 ? this.setHex(t3) : "string" == typeof t3 && this.setStyle(t3), this;
      }, setScalar: function(t3) {
        return this.r = t3, this.g = t3, this.b = t3, this;
      }, setHex: function(t3) {
        return t3 = Math.floor(t3), this.r = (t3 >> 16 & 255) / 255, this.g = (t3 >> 8 & 255) / 255, this.b = (255 & t3) / 255, this;
      }, setRGB: function(t3, e3, n3) {
        return this.r = t3, this.g = e3, this.b = n3, this;
      }, setHSL: function(t3, e3, n3) {
        if (t3 = Re.euclideanModulo(t3, 1), e3 = Re.clamp(e3, 0, 1), n3 = Re.clamp(n3, 0, 1), 0 === e3) this.r = this.g = this.b = n3;
        else {
          var r3 = n3 <= 0.5 ? n3 * (1 + e3) : n3 + e3 - n3 * e3, i3 = 2 * n3 - r3;
          this.r = cr(i3, r3, t3 + 1 / 3), this.g = cr(i3, r3, t3), this.b = cr(i3, r3, t3 - 1 / 3);
        }
        return this;
      }, setStyle: function(t3) {
        function e3(e4) {
          void 0 !== e4 && parseFloat(e4) < 1 && console.warn("THREE.Color: Alpha component of " + t3 + " will be ignored.");
        }
        var n3;
        if (n3 = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t3)) {
          var r3, i3 = n3[1], a2 = n3[2];
          switch (i3) {
            case "rgb":
            case "rgba":
              if (r3 = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a2)) return this.r = Math.min(255, parseInt(r3[1], 10)) / 255, this.g = Math.min(255, parseInt(r3[2], 10)) / 255, this.b = Math.min(255, parseInt(r3[3], 10)) / 255, e3(r3[5]), this;
              if (r3 = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a2)) return this.r = Math.min(100, parseInt(r3[1], 10)) / 100, this.g = Math.min(100, parseInt(r3[2], 10)) / 100, this.b = Math.min(100, parseInt(r3[3], 10)) / 100, e3(r3[5]), this;
              break;
            case "hsl":
            case "hsla":
              if (r3 = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a2)) {
                var o2 = parseFloat(r3[1]) / 360, s2 = parseInt(r3[2], 10) / 100, l2 = parseInt(r3[3], 10) / 100;
                return e3(r3[5]), this.setHSL(o2, s2, l2);
              }
          }
        } else if (n3 = /^\#([A-Fa-f0-9]+)$/.exec(t3)) {
          var c2 = n3[1], u2 = c2.length;
          if (3 === u2) return this.r = parseInt(c2.charAt(0) + c2.charAt(0), 16) / 255, this.g = parseInt(c2.charAt(1) + c2.charAt(1), 16) / 255, this.b = parseInt(c2.charAt(2) + c2.charAt(2), 16) / 255, this;
          if (6 === u2) return this.r = parseInt(c2.charAt(0) + c2.charAt(1), 16) / 255, this.g = parseInt(c2.charAt(2) + c2.charAt(3), 16) / 255, this.b = parseInt(c2.charAt(4) + c2.charAt(5), 16) / 255, this;
        }
        return t3 && 0 < t3.length ? this.setColorName(t3) : this;
      }, setColorName: function(t3) {
        var e3 = ar[t3];
        return void 0 !== e3 ? this.setHex(e3) : console.warn("THREE.Color: Unknown color " + t3), this;
      }, clone: function() {
        return new this.constructor(this.r, this.g, this.b);
      }, copy: function(t3) {
        return this.r = t3.r, this.g = t3.g, this.b = t3.b, this;
      }, copyGammaToLinear: function(t3, e3) {
        return void 0 === e3 && (e3 = 2), this.r = Math.pow(t3.r, e3), this.g = Math.pow(t3.g, e3), this.b = Math.pow(t3.b, e3), this;
      }, copyLinearToGamma: function(t3, e3) {
        void 0 === e3 && (e3 = 2);
        var n3 = 0 < e3 ? 1 / e3 : 1;
        return this.r = Math.pow(t3.r, n3), this.g = Math.pow(t3.g, n3), this.b = Math.pow(t3.b, n3), this;
      }, convertGammaToLinear: function(t3) {
        return this.copyGammaToLinear(this, t3), this;
      }, convertLinearToGamma: function(t3) {
        return this.copyLinearToGamma(this, t3), this;
      }, copySRGBToLinear: function(t3) {
        return this.r = ur(t3.r), this.g = ur(t3.g), this.b = ur(t3.b), this;
      }, copyLinearToSRGB: function(t3) {
        return this.r = hr(t3.r), this.g = hr(t3.g), this.b = hr(t3.b), this;
      }, convertSRGBToLinear: function() {
        return this.copySRGBToLinear(this), this;
      }, convertLinearToSRGB: function() {
        return this.copyLinearToSRGB(this), this;
      }, getHex: function() {
        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0;
      }, getHexString: function() {
        return ("000000" + this.getHex().toString(16)).slice(-6);
      }, getHSL: function(t3) {
        void 0 === t3 && (console.warn("THREE.Color: .getHSL() target is now required"), t3 = { h: 0, s: 0, l: 0 });
        var e3, n3, r3 = this.r, i3 = this.g, a2 = this.b, o2 = Math.max(r3, i3, a2), s2 = Math.min(r3, i3, a2), l2 = (s2 + o2) / 2;
        if (s2 === o2) n3 = e3 = 0;
        else {
          var c2 = o2 - s2;
          switch (n3 = l2 <= 0.5 ? c2 / (o2 + s2) : c2 / (2 - o2 - s2), o2) {
            case r3:
              e3 = (i3 - a2) / c2 + (i3 < a2 ? 6 : 0);
              break;
            case i3:
              e3 = (a2 - r3) / c2 + 2;
              break;
            case a2:
              e3 = (r3 - i3) / c2 + 4;
          }
          e3 /= 6;
        }
        return t3.h = e3, t3.s = n3, t3.l = l2, t3;
      }, getStyle: function() {
        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")";
      }, offsetHSL: function(t3, e3, n3) {
        return this.getHSL(or), or.h += t3, or.s += e3, or.l += n3, this.setHSL(or.h, or.s, or.l), this;
      }, add: function(t3) {
        return this.r += t3.r, this.g += t3.g, this.b += t3.b, this;
      }, addColors: function(t3, e3) {
        return this.r = t3.r + e3.r, this.g = t3.g + e3.g, this.b = t3.b + e3.b, this;
      }, addScalar: function(t3) {
        return this.r += t3, this.g += t3, this.b += t3, this;
      }, sub: function(t3) {
        return this.r = Math.max(0, this.r - t3.r), this.g = Math.max(0, this.g - t3.g), this.b = Math.max(0, this.b - t3.b), this;
      }, multiply: function(t3) {
        return this.r *= t3.r, this.g *= t3.g, this.b *= t3.b, this;
      }, multiplyScalar: function(t3) {
        return this.r *= t3, this.g *= t3, this.b *= t3, this;
      }, lerp: function(t3, e3) {
        return this.r += (t3.r - this.r) * e3, this.g += (t3.g - this.g) * e3, this.b += (t3.b - this.b) * e3, this;
      }, lerpHSL: function(t3, e3) {
        this.getHSL(or), t3.getHSL(sr);
        var n3 = Re.lerp(or.h, sr.h, e3), r3 = Re.lerp(or.s, sr.s, e3), i3 = Re.lerp(or.l, sr.l, e3);
        return this.setHSL(n3, r3, i3), this;
      }, equals: function(t3) {
        return t3.r === this.r && t3.g === this.g && t3.b === this.b;
      }, fromArray: function(t3, e3) {
        return void 0 === e3 && (e3 = 0), this.r = t3[e3], this.g = t3[e3 + 1], this.b = t3[e3 + 2], this;
      }, toArray: function(t3, e3) {
        return void 0 === t3 && (t3 = []), void 0 === e3 && (e3 = 0), t3[e3] = this.r, t3[e3 + 1] = this.g, t3[e3 + 2] = this.b, t3;
      }, toJSON: function() {
        return this.getHex();
      } }), lr.NAMES = ar, Object.assign(pr.prototype, { clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        this.a = t3.a, this.b = t3.b, this.c = t3.c, this.normal.copy(t3.normal), this.color.copy(t3.color), this.materialIndex = t3.materialIndex;
        for (var e3 = 0, n3 = t3.vertexNormals.length; e3 < n3; e3++) this.vertexNormals[e3] = t3.vertexNormals[e3].clone();
        for (e3 = 0, n3 = t3.vertexColors.length; e3 < n3; e3++) this.vertexColors[e3] = t3.vertexColors[e3].clone();
        return this;
      } });
      var dr = 0;
      function fr() {
        Object.defineProperty(this, "id", { value: dr++ }), this.uuid = Re.generateUUID(), this.name = "", this.type = "Material", this.fog = true, this.blending = p, this.side = s, this.flatShading = false, this.vertexTangents = false, this.vertexColors = u, this.opacity = 1, this.transparent = false, this.blendSrc = S, this.blendDst = D, this.blendEquation = y, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = j, this.depthTest = true, this.depthWrite = true, this.stencilWriteMask = 255, this.stencilFunc = Ce, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = Te, this.stencilZFail = Te, this.stencilZPass = Te, this.stencilWrite = false, this.clippingPlanes = null, this.clipIntersection = false, this.clipShadows = false, this.shadowSide = null, this.colorWrite = true, this.precision = null, this.polygonOffset = false, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = false, this.alphaTest = 0, this.premultipliedAlpha = false, this.visible = true, this.toneMapped = true, this.userData = {}, this.version = 0;
      }
      function mr(t3) {
        fr.call(this), this.type = "MeshBasicMaterial", this.color = new lr(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = G, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.setValues(t3);
      }
      fr.prototype = Object.assign(Object.create(Ee.prototype), { constructor: fr, isMaterial: true, onBeforeCompile: function() {
      }, setValues: function(t3) {
        if (void 0 !== t3) for (var e3 in t3) {
          var n3 = t3[e3];
          if (void 0 !== n3) if ("shading" !== e3) {
            var r3 = this[e3];
            void 0 !== r3 ? r3 && r3.isColor ? r3.set(n3) : r3 && r3.isVector3 && n3 && n3.isVector3 ? r3.copy(n3) : this[e3] = n3 : console.warn("THREE." + this.type + ": '" + e3 + "' is not a property of this material.");
          } else console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === n3;
          else console.warn("THREE.Material: '" + e3 + "' parameter is undefined.");
        }
      }, toJSON: function(t3) {
        var e3 = void 0 === t3 || "string" == typeof t3;
        e3 && (t3 = { textures: {}, images: {} });
        var n3 = { metadata: { version: 4.5, type: "Material", generator: "Material.toJSON" } };
        function r3(t4) {
          var e4 = [];
          for (var n4 in t4) {
            var r4 = t4[n4];
            delete r4.metadata, e4.push(r4);
          }
          return e4;
        }
        if (n3.uuid = this.uuid, n3.type = this.type, "" !== this.name && (n3.name = this.name), this.color && this.color.isColor && (n3.color = this.color.getHex()), void 0 !== this.roughness && (n3.roughness = this.roughness), void 0 !== this.metalness && (n3.metalness = this.metalness), this.sheen && this.sheen.isColor && (n3.sheen = this.sheen.getHex()), this.emissive && this.emissive.isColor && (n3.emissive = this.emissive.getHex()), this.emissiveIntensity && 1 !== this.emissiveIntensity && (n3.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n3.specular = this.specular.getHex()), void 0 !== this.shininess && (n3.shininess = this.shininess), void 0 !== this.clearcoat && (n3.clearcoat = this.clearcoat), void 0 !== this.clearcoatRoughness && (n3.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n3.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(t3).uuid, n3.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n3.map = this.map.toJSON(t3).uuid), this.matcap && this.matcap.isTexture && (n3.matcap = this.matcap.toJSON(t3).uuid), this.alphaMap && this.alphaMap.isTexture && (n3.alphaMap = this.alphaMap.toJSON(t3).uuid), this.lightMap && this.lightMap.isTexture && (n3.lightMap = this.lightMap.toJSON(t3).uuid), this.aoMap && this.aoMap.isTexture && (n3.aoMap = this.aoMap.toJSON(t3).uuid, n3.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n3.bumpMap = this.bumpMap.toJSON(t3).uuid, n3.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n3.normalMap = this.normalMap.toJSON(t3).uuid, n3.normalMapType = this.normalMapType, n3.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n3.displacementMap = this.displacementMap.toJSON(t3).uuid, n3.displacementScale = this.displacementScale, n3.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n3.roughnessMap = this.roughnessMap.toJSON(t3).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n3.metalnessMap = this.metalnessMap.toJSON(t3).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n3.emissiveMap = this.emissiveMap.toJSON(t3).uuid), this.specularMap && this.specularMap.isTexture && (n3.specularMap = this.specularMap.toJSON(t3).uuid), this.envMap && this.envMap.isTexture && (n3.envMap = this.envMap.toJSON(t3).uuid, n3.reflectivity = this.reflectivity, n3.refractionRatio = this.refractionRatio, void 0 !== this.combine && (n3.combine = this.combine), void 0 !== this.envMapIntensity && (n3.envMapIntensity = this.envMapIntensity)), this.gradientMap && this.gradientMap.isTexture && (n3.gradientMap = this.gradientMap.toJSON(t3).uuid), void 0 !== this.size && (n3.size = this.size), void 0 !== this.sizeAttenuation && (n3.sizeAttenuation = this.sizeAttenuation), this.blending !== p && (n3.blending = this.blending), true === this.flatShading && (n3.flatShading = this.flatShading), this.side !== s && (n3.side = this.side), this.vertexColors !== u && (n3.vertexColors = this.vertexColors), this.opacity < 1 && (n3.opacity = this.opacity), true === this.transparent && (n3.transparent = this.transparent), n3.depthFunc = this.depthFunc, n3.depthTest = this.depthTest, n3.depthWrite = this.depthWrite, n3.stencilWrite = this.stencilWrite, n3.stencilWriteMask = this.stencilWriteMask, n3.stencilFunc = this.stencilFunc, n3.stencilRef = this.stencilRef, n3.stencilFuncMask = this.stencilFuncMask, n3.stencilFail = this.stencilFail, n3.stencilZFail = this.stencilZFail, n3.stencilZPass = this.stencilZPass, this.rotation && 0 !== this.rotation && (n3.rotation = this.rotation), true === this.polygonOffset && (n3.polygonOffset = true), 0 !== this.polygonOffsetFactor && (n3.polygonOffsetFactor = this.polygonOffsetFactor), 0 !== this.polygonOffsetUnits && (n3.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && 1 !== this.linewidth && (n3.linewidth = this.linewidth), void 0 !== this.dashSize && (n3.dashSize = this.dashSize), void 0 !== this.gapSize && (n3.gapSize = this.gapSize), void 0 !== this.scale && (n3.scale = this.scale), true === this.dithering && (n3.dithering = true), 0 < this.alphaTest && (n3.alphaTest = this.alphaTest), true === this.premultipliedAlpha && (n3.premultipliedAlpha = this.premultipliedAlpha), true === this.wireframe && (n3.wireframe = this.wireframe), 1 < this.wireframeLinewidth && (n3.wireframeLinewidth = this.wireframeLinewidth), "round" !== this.wireframeLinecap && (n3.wireframeLinecap = this.wireframeLinecap), "round" !== this.wireframeLinejoin && (n3.wireframeLinejoin = this.wireframeLinejoin), true === this.morphTargets && (n3.morphTargets = true), true === this.morphNormals && (n3.morphNormals = true), true === this.skinning && (n3.skinning = true), false === this.visible && (n3.visible = false), false === this.toneMapped && (n3.toneMapped = false), "{}" !== JSON.stringify(this.userData) && (n3.userData = this.userData), e3) {
          var i3 = r3(t3.textures), a2 = r3(t3.images);
          0 < i3.length && (n3.textures = i3), 0 < a2.length && (n3.images = a2);
        }
        return n3;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        this.name = t3.name, this.fog = t3.fog, this.blending = t3.blending, this.side = t3.side, this.flatShading = t3.flatShading, this.vertexTangents = t3.vertexTangents, this.vertexColors = t3.vertexColors, this.opacity = t3.opacity, this.transparent = t3.transparent, this.blendSrc = t3.blendSrc, this.blendDst = t3.blendDst, this.blendEquation = t3.blendEquation, this.blendSrcAlpha = t3.blendSrcAlpha, this.blendDstAlpha = t3.blendDstAlpha, this.blendEquationAlpha = t3.blendEquationAlpha, this.depthFunc = t3.depthFunc, this.depthTest = t3.depthTest, this.depthWrite = t3.depthWrite, this.stencilWriteMask = t3.stencilWriteMask, this.stencilFunc = t3.stencilFunc, this.stencilRef = t3.stencilRef, this.stencilFuncMask = t3.stencilFuncMask, this.stencilFail = t3.stencilFail, this.stencilZFail = t3.stencilZFail, this.stencilZPass = t3.stencilZPass, this.stencilWrite = t3.stencilWrite;
        var e3 = t3.clippingPlanes, n3 = null;
        if (null !== e3) {
          var r3 = e3.length;
          n3 = new Array(r3);
          for (var i3 = 0; i3 !== r3; ++i3) n3[i3] = e3[i3].clone();
        }
        return this.clippingPlanes = n3, this.clipIntersection = t3.clipIntersection, this.clipShadows = t3.clipShadows, this.shadowSide = t3.shadowSide, this.colorWrite = t3.colorWrite, this.precision = t3.precision, this.polygonOffset = t3.polygonOffset, this.polygonOffsetFactor = t3.polygonOffsetFactor, this.polygonOffsetUnits = t3.polygonOffsetUnits, this.dithering = t3.dithering, this.alphaTest = t3.alphaTest, this.premultipliedAlpha = t3.premultipliedAlpha, this.visible = t3.visible, this.toneMapped = t3.toneMapped, this.userData = JSON.parse(JSON.stringify(t3.userData)), this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Object.defineProperty(fr.prototype, "needsUpdate", { set: function(t3) {
        true === t3 && this.version++;
      } }), ((mr.prototype = Object.create(fr.prototype)).constructor = mr).prototype.isMeshBasicMaterial = true, mr.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.color.copy(t3.color), this.map = t3.map, this.lightMap = t3.lightMap, this.lightMapIntensity = t3.lightMapIntensity, this.aoMap = t3.aoMap, this.aoMapIntensity = t3.aoMapIntensity, this.specularMap = t3.specularMap, this.alphaMap = t3.alphaMap, this.envMap = t3.envMap, this.combine = t3.combine, this.reflectivity = t3.reflectivity, this.refractionRatio = t3.refractionRatio, this.wireframe = t3.wireframe, this.wireframeLinewidth = t3.wireframeLinewidth, this.wireframeLinecap = t3.wireframeLinecap, this.wireframeLinejoin = t3.wireframeLinejoin, this.skinning = t3.skinning, this.morphTargets = t3.morphTargets, this;
      };
      var gr = new He();
      function yr(t3, e3, n3) {
        if (Array.isArray(t3)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "", this.array = t3, this.itemSize = e3, this.count = void 0 !== t3 ? t3.length / e3 : 0, this.normalized = true === n3, this.usage = Se, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
      }
      function vr(t3, e3, n3) {
        yr.call(this, new Int8Array(t3), e3, n3);
      }
      function xr(t3, e3, n3) {
        yr.call(this, new Uint8Array(t3), e3, n3);
      }
      function wr(t3, e3, n3) {
        yr.call(this, new Uint8ClampedArray(t3), e3, n3);
      }
      function br(t3, e3, n3) {
        yr.call(this, new Int16Array(t3), e3, n3);
      }
      function Mr(t3, e3, n3) {
        yr.call(this, new Uint16Array(t3), e3, n3);
      }
      function _r(t3, e3, n3) {
        yr.call(this, new Int32Array(t3), e3, n3);
      }
      function Tr(t3, e3, n3) {
        yr.call(this, new Uint32Array(t3), e3, n3);
      }
      function Cr(t3, e3, n3) {
        yr.call(this, new Float32Array(t3), e3, n3);
      }
      function Sr(t3, e3, n3) {
        yr.call(this, new Float64Array(t3), e3, n3);
      }
      function Dr() {
        this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = false, this.normalsNeedUpdate = false, this.colorsNeedUpdate = false, this.uvsNeedUpdate = false, this.groupsNeedUpdate = false;
      }
      function Er(t3) {
        if (0 === t3.length) return -1 / 0;
        for (var e3 = t3[0], n3 = 1, r3 = t3.length; n3 < r3; ++n3) t3[n3] > e3 && (e3 = t3[n3]);
        return e3;
      }
      Object.defineProperty(yr.prototype, "needsUpdate", { set: function(t3) {
        true === t3 && this.version++;
      } }), Object.assign(yr.prototype, { isBufferAttribute: true, onUploadCallback: function() {
      }, setUsage: function(t3) {
        return this.usage = t3, this;
      }, copy: function(t3) {
        return this.name = t3.name, this.array = new t3.array.constructor(t3.array), this.itemSize = t3.itemSize, this.count = t3.count, this.normalized = t3.normalized, this.usage = t3.usage, this;
      }, copyAt: function(t3, e3, n3) {
        t3 *= this.itemSize, n3 *= e3.itemSize;
        for (var r3 = 0, i3 = this.itemSize; r3 < i3; r3++) this.array[t3 + r3] = e3.array[n3 + r3];
        return this;
      }, copyArray: function(t3) {
        return this.array.set(t3), this;
      }, copyColorsArray: function(t3) {
        for (var e3 = this.array, n3 = 0, r3 = 0, i3 = t3.length; r3 < i3; r3++) {
          var a2 = t3[r3];
          void 0 === a2 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", r3), a2 = new lr()), e3[n3++] = a2.r, e3[n3++] = a2.g, e3[n3++] = a2.b;
        }
        return this;
      }, copyVector2sArray: function(t3) {
        for (var e3 = this.array, n3 = 0, r3 = 0, i3 = t3.length; r3 < i3; r3++) {
          var a2 = t3[r3];
          void 0 === a2 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", r3), a2 = new Le()), e3[n3++] = a2.x, e3[n3++] = a2.y;
        }
        return this;
      }, copyVector3sArray: function(t3) {
        for (var e3 = this.array, n3 = 0, r3 = 0, i3 = t3.length; r3 < i3; r3++) {
          var a2 = t3[r3];
          void 0 === a2 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", r3), a2 = new He()), e3[n3++] = a2.x, e3[n3++] = a2.y, e3[n3++] = a2.z;
        }
        return this;
      }, copyVector4sArray: function(t3) {
        for (var e3 = this.array, n3 = 0, r3 = 0, i3 = t3.length; r3 < i3; r3++) {
          var a2 = t3[r3];
          void 0 === a2 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", r3), a2 = new Ve()), e3[n3++] = a2.x, e3[n3++] = a2.y, e3[n3++] = a2.z, e3[n3++] = a2.w;
        }
        return this;
      }, applyMatrix3: function(t3) {
        for (var e3 = 0, n3 = this.count; e3 < n3; e3++) gr.x = this.getX(e3), gr.y = this.getY(e3), gr.z = this.getZ(e3), gr.applyMatrix3(t3), this.setXYZ(e3, gr.x, gr.y, gr.z);
        return this;
      }, applyMatrix4: function(t3) {
        for (var e3 = 0, n3 = this.count; e3 < n3; e3++) gr.x = this.getX(e3), gr.y = this.getY(e3), gr.z = this.getZ(e3), gr.applyMatrix4(t3), this.setXYZ(e3, gr.x, gr.y, gr.z);
        return this;
      }, applyNormalMatrix: function(t3) {
        for (var e3 = 0, n3 = this.count; e3 < n3; e3++) gr.x = this.getX(e3), gr.y = this.getY(e3), gr.z = this.getZ(e3), gr.applyNormalMatrix(t3), this.setXYZ(e3, gr.x, gr.y, gr.z);
        return this;
      }, transformDirection: function(t3) {
        for (var e3 = 0, n3 = this.count; e3 < n3; e3++) gr.x = this.getX(e3), gr.y = this.getY(e3), gr.z = this.getZ(e3), gr.transformDirection(t3), this.setXYZ(e3, gr.x, gr.y, gr.z);
        return this;
      }, set: function(t3, e3) {
        return void 0 === e3 && (e3 = 0), this.array.set(t3, e3), this;
      }, getX: function(t3) {
        return this.array[t3 * this.itemSize];
      }, setX: function(t3, e3) {
        return this.array[t3 * this.itemSize] = e3, this;
      }, getY: function(t3) {
        return this.array[t3 * this.itemSize + 1];
      }, setY: function(t3, e3) {
        return this.array[t3 * this.itemSize + 1] = e3, this;
      }, getZ: function(t3) {
        return this.itemSize < 3 ? 0 : this.array[t3 * this.itemSize + 2];
      }, setZ: function(t3, e3) {
        return this.array[t3 * this.itemSize + 2] = e3, this;
      }, getW: function(t3) {
        return this.array[t3 * this.itemSize + 3];
      }, setW: function(t3, e3) {
        return this.array[t3 * this.itemSize + 3] = e3, this;
      }, setXY: function(t3, e3, n3) {
        return t3 *= this.itemSize, this.array[t3 + 0] = e3, this.array[t3 + 1] = n3, this;
      }, setXYZ: function(t3, e3, n3, r3) {
        return t3 *= this.itemSize, this.array[t3 + 0] = e3, this.array[t3 + 1] = n3, this.array[t3 + 2] = r3, this;
      }, setXYZW: function(t3, e3, n3, r3, i3) {
        return t3 *= this.itemSize, this.array[t3 + 0] = e3, this.array[t3 + 1] = n3, this.array[t3 + 2] = r3, this.array[t3 + 3] = i3, this;
      }, onUpload: function(t3) {
        return this.onUploadCallback = t3, this;
      }, clone: function() {
        return new this.constructor(this.array, this.itemSize).copy(this);
      }, toJSON: function() {
        return { itemSize: this.itemSize, type: this.array.constructor.name, array: Array.prototype.slice.call(this.array), normalized: this.normalized };
      } }), (vr.prototype = Object.create(yr.prototype)).constructor = vr, (xr.prototype = Object.create(yr.prototype)).constructor = xr, (wr.prototype = Object.create(yr.prototype)).constructor = wr, (br.prototype = Object.create(yr.prototype)).constructor = br, (Mr.prototype = Object.create(yr.prototype)).constructor = Mr, (_r.prototype = Object.create(yr.prototype)).constructor = _r, (Tr.prototype = Object.create(yr.prototype)).constructor = Tr, (Cr.prototype = Object.create(yr.prototype)).constructor = Cr, (Sr.prototype = Object.create(yr.prototype)).constructor = Sr, Object.assign(Dr.prototype, { computeGroups: function(t3) {
        for (var e3, n3 = [], r3 = void 0, i3 = t3.faces, a2 = 0; a2 < i3.length; a2++) {
          var o2 = i3[a2];
          o2.materialIndex !== r3 && (r3 = o2.materialIndex, void 0 !== e3 && (e3.count = 3 * a2 - e3.start, n3.push(e3)), e3 = { start: 3 * a2, materialIndex: r3 });
        }
        void 0 !== e3 && (e3.count = 3 * a2 - e3.start, n3.push(e3)), this.groups = n3;
      }, fromGeometry: function(t3) {
        var e3, n3 = t3.faces, r3 = t3.vertices, i3 = t3.faceVertexUvs, a2 = i3[0] && 0 < i3[0].length, o2 = i3[1] && 0 < i3[1].length, s2 = t3.morphTargets, l2 = s2.length;
        if (0 < l2) {
          e3 = [];
          for (var c2 = 0; c2 < l2; c2++) e3[c2] = { name: s2[c2].name, data: [] };
          this.morphTargets.position = e3;
        }
        var u2, h2 = t3.morphNormals, p2 = h2.length;
        if (0 < p2) {
          for (u2 = [], c2 = 0; c2 < p2; c2++) u2[c2] = { name: h2[c2].name, data: [] };
          this.morphTargets.normal = u2;
        }
        var d2 = t3.skinIndices, f2 = t3.skinWeights, m2 = d2.length === r3.length, g2 = f2.length === r3.length;
        for (0 < r3.length && 0 === n3.length && console.error("THREE.DirectGeometry: Faceless geometries are not supported."), c2 = 0; c2 < n3.length; c2++) {
          var y2 = n3[c2];
          this.vertices.push(r3[y2.a], r3[y2.b], r3[y2.c]);
          var v2 = y2.vertexNormals;
          if (3 === v2.length) this.normals.push(v2[0], v2[1], v2[2]);
          else {
            var x2 = y2.normal;
            this.normals.push(x2, x2, x2);
          }
          var w2, b2 = y2.vertexColors;
          if (3 === b2.length) this.colors.push(b2[0], b2[1], b2[2]);
          else {
            var M2 = y2.color;
            this.colors.push(M2, M2, M2);
          }
          true === a2 && (void 0 !== (w2 = i3[0][c2]) ? this.uvs.push(w2[0], w2[1], w2[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", c2), this.uvs.push(new Le(), new Le(), new Le()))), true === o2 && (void 0 !== (w2 = i3[1][c2]) ? this.uvs2.push(w2[0], w2[1], w2[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", c2), this.uvs2.push(new Le(), new Le(), new Le())));
          for (var _2 = 0; _2 < l2; _2++) {
            var T2 = s2[_2].vertices;
            e3[_2].data.push(T2[y2.a], T2[y2.b], T2[y2.c]);
          }
          for (_2 = 0; _2 < p2; _2++) {
            var C2 = h2[_2].vertexNormals[c2];
            u2[_2].data.push(C2.a, C2.b, C2.c);
          }
          m2 && this.skinIndices.push(d2[y2.a], d2[y2.b], d2[y2.c]), g2 && this.skinWeights.push(f2[y2.a], f2[y2.b], f2[y2.c]);
        }
        return this.computeGroups(t3), this.verticesNeedUpdate = t3.verticesNeedUpdate, this.normalsNeedUpdate = t3.normalsNeedUpdate, this.colorsNeedUpdate = t3.colorsNeedUpdate, this.uvsNeedUpdate = t3.uvsNeedUpdate, this.groupsNeedUpdate = t3.groupsNeedUpdate, null !== t3.boundingSphere && (this.boundingSphere = t3.boundingSphere.clone()), null !== t3.boundingBox && (this.boundingBox = t3.boundingBox.clone()), this;
      } });
      var Or = 2147483647, Ar = new $e(), Pr = new yn(), Rr = new He(), Lr = new Rn(), Ir = new Rn(), kr = new He();
      function jr() {
        Object.defineProperty(this, "id", { value: Or += 2 }), this.uuid = Re.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = false, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = { start: 0, count: 1 / 0 }, this.userData = {};
      }
      jr.prototype = Object.assign(Object.create(Ee.prototype), { constructor: jr, isBufferGeometry: true, getIndex: function() {
        return this.index;
      }, setIndex: function(t3) {
        Array.isArray(t3) ? this.index = new (65535 < Er(t3) ? Tr : Mr)(t3, 1) : this.index = t3;
      }, getAttribute: function(t3) {
        return this.attributes[t3];
      }, setAttribute: function(t3, e3) {
        return this.attributes[t3] = e3, this;
      }, deleteAttribute: function(t3) {
        return delete this.attributes[t3], this;
      }, addGroup: function(t3, e3, n3) {
        this.groups.push({ start: t3, count: e3, materialIndex: void 0 !== n3 ? n3 : 0 });
      }, clearGroups: function() {
        this.groups = [];
      }, setDrawRange: function(t3, e3) {
        this.drawRange.start = t3, this.drawRange.count = e3;
      }, applyMatrix4: function(t3) {
        var e3 = this.attributes.position;
        void 0 !== e3 && (e3.applyMatrix4(t3), e3.needsUpdate = true);
        var n3 = this.attributes.normal;
        if (void 0 !== n3) {
          var r3 = new Ie().getNormalMatrix(t3);
          n3.applyNormalMatrix(r3), n3.needsUpdate = true;
        }
        var i3 = this.attributes.tangent;
        return void 0 !== i3 && (i3.transformDirection(t3), i3.needsUpdate = true), null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this;
      }, rotateX: function(t3) {
        return Ar.makeRotationX(t3), this.applyMatrix4(Ar), this;
      }, rotateY: function(t3) {
        return Ar.makeRotationY(t3), this.applyMatrix4(Ar), this;
      }, rotateZ: function(t3) {
        return Ar.makeRotationZ(t3), this.applyMatrix4(Ar), this;
      }, translate: function(t3, e3, n3) {
        return Ar.makeTranslation(t3, e3, n3), this.applyMatrix4(Ar), this;
      }, scale: function(t3, e3, n3) {
        return Ar.makeScale(t3, e3, n3), this.applyMatrix4(Ar), this;
      }, lookAt: function(t3) {
        return Pr.lookAt(t3), Pr.updateMatrix(), this.applyMatrix4(Pr.matrix), this;
      }, center: function() {
        return this.computeBoundingBox(), this.boundingBox.getCenter(Rr).negate(), this.translate(Rr.x, Rr.y, Rr.z), this;
      }, setFromObject: function(t3) {
        var e3 = t3.geometry;
        if (t3.isPoints || t3.isLine) {
          var n3 = new Cr(3 * e3.vertices.length, 3), r3 = new Cr(3 * e3.colors.length, 3);
          if (this.setAttribute("position", n3.copyVector3sArray(e3.vertices)), this.setAttribute("color", r3.copyColorsArray(e3.colors)), e3.lineDistances && e3.lineDistances.length === e3.vertices.length) {
            var i3 = new Cr(e3.lineDistances.length, 1);
            this.setAttribute("lineDistance", i3.copyArray(e3.lineDistances));
          }
          null !== e3.boundingSphere && (this.boundingSphere = e3.boundingSphere.clone()), null !== e3.boundingBox && (this.boundingBox = e3.boundingBox.clone());
        } else t3.isMesh && e3 && e3.isGeometry && this.fromGeometry(e3);
        return this;
      }, setFromPoints: function(t3) {
        for (var e3 = [], n3 = 0, r3 = t3.length; n3 < r3; n3++) {
          var i3 = t3[n3];
          e3.push(i3.x, i3.y, i3.z || 0);
        }
        return this.setAttribute("position", new Cr(e3, 3)), this;
      }, updateFromObject: function(t3) {
        var e3, n3 = t3.geometry;
        if (t3.isMesh) {
          var r3 = n3.__directGeometry;
          if (true === n3.elementsNeedUpdate && (r3 = void 0, n3.elementsNeedUpdate = false), void 0 === r3) return this.fromGeometry(n3);
          r3.verticesNeedUpdate = n3.verticesNeedUpdate, r3.normalsNeedUpdate = n3.normalsNeedUpdate, r3.colorsNeedUpdate = n3.colorsNeedUpdate, r3.uvsNeedUpdate = n3.uvsNeedUpdate, r3.groupsNeedUpdate = n3.groupsNeedUpdate, n3.verticesNeedUpdate = false, n3.normalsNeedUpdate = false, n3.colorsNeedUpdate = false, n3.uvsNeedUpdate = false, n3.groupsNeedUpdate = false, n3 = r3;
        }
        return true === n3.verticesNeedUpdate && (void 0 !== (e3 = this.attributes.position) && (e3.copyVector3sArray(n3.vertices), e3.needsUpdate = true), n3.verticesNeedUpdate = false), true === n3.normalsNeedUpdate && (void 0 !== (e3 = this.attributes.normal) && (e3.copyVector3sArray(n3.normals), e3.needsUpdate = true), n3.normalsNeedUpdate = false), true === n3.colorsNeedUpdate && (void 0 !== (e3 = this.attributes.color) && (e3.copyColorsArray(n3.colors), e3.needsUpdate = true), n3.colorsNeedUpdate = false), n3.uvsNeedUpdate && (void 0 !== (e3 = this.attributes.uv) && (e3.copyVector2sArray(n3.uvs), e3.needsUpdate = true), n3.uvsNeedUpdate = false), n3.lineDistancesNeedUpdate && (void 0 !== (e3 = this.attributes.lineDistance) && (e3.copyArray(n3.lineDistances), e3.needsUpdate = true), n3.lineDistancesNeedUpdate = false), n3.groupsNeedUpdate && (n3.computeGroups(t3.geometry), this.groups = n3.groups, n3.groupsNeedUpdate = false), this;
      }, fromGeometry: function(t3) {
        return t3.__directGeometry = new Dr().fromGeometry(t3), this.fromDirectGeometry(t3.__directGeometry);
      }, fromDirectGeometry: function(t3) {
        var e3 = new Float32Array(3 * t3.vertices.length);
        if (this.setAttribute("position", new yr(e3, 3).copyVector3sArray(t3.vertices)), 0 < t3.normals.length) {
          var n3 = new Float32Array(3 * t3.normals.length);
          this.setAttribute("normal", new yr(n3, 3).copyVector3sArray(t3.normals));
        }
        if (0 < t3.colors.length) {
          var r3 = new Float32Array(3 * t3.colors.length);
          this.setAttribute("color", new yr(r3, 3).copyColorsArray(t3.colors));
        }
        if (0 < t3.uvs.length) {
          var i3 = new Float32Array(2 * t3.uvs.length);
          this.setAttribute("uv", new yr(i3, 2).copyVector2sArray(t3.uvs));
        }
        if (0 < t3.uvs2.length) {
          var a2 = new Float32Array(2 * t3.uvs2.length);
          this.setAttribute("uv2", new yr(a2, 2).copyVector2sArray(t3.uvs2));
        }
        for (var o2 in this.groups = t3.groups, t3.morphTargets) {
          for (var s2 = [], l2 = t3.morphTargets[o2], c2 = 0, u2 = l2.length; c2 < u2; c2++) {
            var h2 = l2[c2], p2 = new Cr(3 * h2.data.length, 3);
            p2.name = h2.name, s2.push(p2.copyVector3sArray(h2.data));
          }
          this.morphAttributes[o2] = s2;
        }
        if (0 < t3.skinIndices.length) {
          var d2 = new Cr(4 * t3.skinIndices.length, 4);
          this.setAttribute("skinIndex", d2.copyVector4sArray(t3.skinIndices));
        }
        if (0 < t3.skinWeights.length) {
          var f2 = new Cr(4 * t3.skinWeights.length, 4);
          this.setAttribute("skinWeight", f2.copyVector4sArray(t3.skinWeights));
        }
        return null !== t3.boundingSphere && (this.boundingSphere = t3.boundingSphere.clone()), null !== t3.boundingBox && (this.boundingBox = t3.boundingBox.clone()), this;
      }, computeBoundingBox: function() {
        null === this.boundingBox && (this.boundingBox = new Rn());
        var t3 = this.attributes.position, e3 = this.morphAttributes.position;
        if (void 0 !== t3) {
          if (this.boundingBox.setFromBufferAttribute(t3), e3) for (var n3 = 0, r3 = e3.length; n3 < r3; n3++) {
            var i3 = e3[n3];
            Lr.setFromBufferAttribute(i3), this.morphTargetsRelative ? (kr.addVectors(this.boundingBox.min, Lr.min), this.boundingBox.expandByPoint(kr), kr.addVectors(this.boundingBox.max, Lr.max), this.boundingBox.expandByPoint(kr)) : (this.boundingBox.expandByPoint(Lr.min), this.boundingBox.expandByPoint(Lr.max));
          }
        } else this.boundingBox.makeEmpty();
        (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
      }, computeBoundingSphere: function() {
        null === this.boundingSphere && (this.boundingSphere = new kn());
        var t3 = this.attributes.position, e3 = this.morphAttributes.position;
        if (t3) {
          var n3 = this.boundingSphere.center;
          if (Lr.setFromBufferAttribute(t3), e3) for (var r3 = 0, i3 = e3.length; r3 < i3; r3++) {
            var a2 = e3[r3];
            Ir.setFromBufferAttribute(a2), this.morphTargetsRelative ? (kr.addVectors(Lr.min, Ir.min), Lr.expandByPoint(kr), kr.addVectors(Lr.max, Ir.max), Lr.expandByPoint(kr)) : (Lr.expandByPoint(Ir.min), Lr.expandByPoint(Ir.max));
          }
          Lr.getCenter(n3);
          var o2 = 0;
          for (r3 = 0, i3 = t3.count; r3 < i3; r3++) kr.fromBufferAttribute(t3, r3), o2 = Math.max(o2, n3.distanceToSquared(kr));
          if (e3) for (r3 = 0, i3 = e3.length; r3 < i3; r3++) {
            a2 = e3[r3];
            for (var s2 = this.morphTargetsRelative, l2 = 0, c2 = a2.count; l2 < c2; l2++) kr.fromBufferAttribute(a2, l2), s2 && (Rr.fromBufferAttribute(t3, l2), kr.add(Rr)), o2 = Math.max(o2, n3.distanceToSquared(kr));
          }
          this.boundingSphere.radius = Math.sqrt(o2), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
        }
      }, computeFaceNormals: function() {
      }, computeVertexNormals: function() {
        var t3 = this.index, e3 = this.attributes;
        if (e3.position) {
          var n3 = e3.position.array;
          if (void 0 === e3.normal) this.setAttribute("normal", new yr(new Float32Array(n3.length), 3));
          else for (var r3 = e3.normal.array, i3 = 0, a2 = r3.length; i3 < a2; i3++) r3[i3] = 0;
          var o2, s2, l2, c2 = e3.normal.array, u2 = new He(), h2 = new He(), p2 = new He(), d2 = new He(), f2 = new He();
          if (t3) {
            var m2 = t3.array;
            for (i3 = 0, a2 = t3.count; i3 < a2; i3 += 3) o2 = 3 * m2[i3 + 0], s2 = 3 * m2[i3 + 1], l2 = 3 * m2[i3 + 2], u2.fromArray(n3, o2), h2.fromArray(n3, s2), p2.fromArray(n3, l2), d2.subVectors(p2, h2), f2.subVectors(u2, h2), d2.cross(f2), c2[o2] += d2.x, c2[1 + o2] += d2.y, c2[2 + o2] += d2.z, c2[s2] += d2.x, c2[1 + s2] += d2.y, c2[2 + s2] += d2.z, c2[l2] += d2.x, c2[1 + l2] += d2.y, c2[2 + l2] += d2.z;
          } else for (i3 = 0, a2 = n3.length; i3 < a2; i3 += 9) u2.fromArray(n3, i3), h2.fromArray(n3, i3 + 3), p2.fromArray(n3, i3 + 6), d2.subVectors(p2, h2), f2.subVectors(u2, h2), d2.cross(f2), c2[i3] = d2.x, c2[i3 + 1] = d2.y, c2[i3 + 2] = d2.z, c2[i3 + 3] = d2.x, c2[i3 + 4] = d2.y, c2[i3 + 5] = d2.z, c2[i3 + 6] = d2.x, c2[i3 + 7] = d2.y, c2[i3 + 8] = d2.z;
          this.normalizeNormals(), e3.normal.needsUpdate = true;
        }
      }, merge: function(t3, e3) {
        if (t3 && t3.isBufferGeometry) {
          void 0 === e3 && (e3 = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
          var n3 = this.attributes;
          for (var r3 in n3) if (void 0 !== t3.attributes[r3]) for (var i3 = n3[r3].array, a2 = t3.attributes[r3], o2 = a2.array, s2 = a2.itemSize * e3, l2 = Math.min(o2.length, i3.length - s2), c2 = 0, u2 = s2; c2 < l2; c2++, u2++) i3[u2] = o2[c2];
          return this;
        }
        console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t3);
      }, normalizeNormals: function() {
        for (var t3 = this.attributes.normal, e3 = 0, n3 = t3.count; e3 < n3; e3++) kr.x = t3.getX(e3), kr.y = t3.getY(e3), kr.z = t3.getZ(e3), kr.normalize(), t3.setXYZ(e3, kr.x, kr.y, kr.z);
      }, toNonIndexed: function() {
        function t3(t4, e4) {
          for (var n4 = t4.array, r4 = t4.itemSize, i4 = new n4.constructor(e4.length * r4), a3 = 0, o3 = 0, s3 = 0, l3 = e4.length; s3 < l3; s3++) {
            a3 = e4[s3] * r4;
            for (var c3 = 0; c3 < r4; c3++) i4[o3++] = n4[a3++];
          }
          return new yr(i4, r4);
        }
        if (null === this.index) return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
        var e3 = new jr(), n3 = this.index.array, r3 = this.attributes;
        for (var i3 in r3) {
          var a2 = t3(r3[i3], n3);
          e3.setAttribute(i3, a2);
        }
        var o2 = this.morphAttributes;
        for (i3 in o2) {
          for (var s2 = [], l2 = o2[i3], c2 = 0, u2 = l2.length; c2 < u2; c2++) a2 = t3(l2[c2], n3), s2.push(a2);
          e3.morphAttributes[i3] = s2;
        }
        e3.morphTargetsRelative = this.morphTargetsRelative;
        for (var h2 = this.groups, p2 = (c2 = 0, h2.length); c2 < p2; c2++) {
          var d2 = h2[c2];
          e3.addGroup(d2.start, d2.count, d2.materialIndex);
        }
        return e3;
      }, toJSON: function() {
        var t3 = { metadata: { version: 4.5, type: "BufferGeometry", generator: "BufferGeometry.toJSON" } };
        if (t3.uuid = this.uuid, t3.type = this.type, "" !== this.name && (t3.name = this.name), 0 < Object.keys(this.userData).length && (t3.userData = this.userData), void 0 !== this.parameters) {
          var e3 = this.parameters;
          for (var n3 in e3) void 0 !== e3[n3] && (t3[n3] = e3[n3]);
          return t3;
        }
        t3.data = { attributes: {} };
        var r3 = this.index;
        null !== r3 && (t3.data.index = { type: r3.array.constructor.name, array: Array.prototype.slice.call(r3.array) });
        var i3 = this.attributes;
        for (var n3 in i3) {
          var a2 = (p2 = i3[n3]).toJSON();
          "" !== p2.name && (a2.name = p2.name), t3.data.attributes[n3] = a2;
        }
        var o2 = {}, s2 = false;
        for (var n3 in this.morphAttributes) {
          for (var l2 = this.morphAttributes[n3], c2 = [], u2 = 0, h2 = l2.length; u2 < h2; u2++) {
            var p2;
            a2 = (p2 = l2[u2]).toJSON(), "" !== p2.name && (a2.name = p2.name), c2.push(a2);
          }
          0 < c2.length && (o2[n3] = c2, s2 = true);
        }
        s2 && (t3.data.morphAttributes = o2, t3.data.morphTargetsRelative = this.morphTargetsRelative);
        var d2 = this.groups;
        0 < d2.length && (t3.data.groups = JSON.parse(JSON.stringify(d2)));
        var f2 = this.boundingSphere;
        return null !== f2 && (t3.data.boundingSphere = { center: f2.center.toArray(), radius: f2.radius }), t3;
      }, clone: function() {
        return new jr().copy(this);
      }, copy: function(t3) {
        var e3, n3, r3;
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.name = t3.name;
        var i3 = t3.index;
        null !== i3 && this.setIndex(i3.clone());
        var a2 = t3.attributes;
        for (e3 in a2) {
          var o2 = a2[e3];
          this.setAttribute(e3, o2.clone());
        }
        var s2 = t3.morphAttributes;
        for (e3 in s2) {
          var l2 = [], c2 = s2[e3];
          for (n3 = 0, r3 = c2.length; n3 < r3; n3++) l2.push(c2[n3].clone());
          this.morphAttributes[e3] = l2;
        }
        this.morphTargetsRelative = t3.morphTargetsRelative;
        var u2 = t3.groups;
        for (n3 = 0, r3 = u2.length; n3 < r3; n3++) {
          var h2 = u2[n3];
          this.addGroup(h2.start, h2.count, h2.materialIndex);
        }
        var p2 = t3.boundingBox;
        null !== p2 && (this.boundingBox = p2.clone());
        var d2 = t3.boundingSphere;
        return null !== d2 && (this.boundingSphere = d2.clone()), this.drawRange.start = t3.drawRange.start, this.drawRange.count = t3.drawRange.count, this.userData = t3.userData, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } });
      var Nr = new $e(), Vr = new Un(), Fr = new kn(), Br = new He(), Gr = new He(), zr = new He(), Ur = new He(), Hr = new He(), Wr = new He(), Jr = new He(), qr = new He(), Xr = new He(), Yr = new Le(), Zr = new Le(), Kr = new Le(), $r = new He(), Qr = new He();
      function ti(t3, e3) {
        yn.call(this), this.type = "Mesh", this.geometry = void 0 !== t3 ? t3 : new jr(), this.material = void 0 !== e3 ? e3 : new mr(), this.updateMorphTargets();
      }
      function ei(t3, e3, n3, r3, i3, a2, o2, s2) {
        if (null === (e3.side === l ? r3.intersectTriangle(o2, a2, i3, true, s2) : r3.intersectTriangle(i3, a2, o2, e3.side !== c, s2))) return null;
        Qr.copy(s2), Qr.applyMatrix4(t3.matrixWorld);
        var u2 = n3.ray.origin.distanceTo(Qr);
        return u2 < n3.near || u2 > n3.far ? null : { distance: u2, point: Qr.clone(), object: t3 };
      }
      function ni(t3, e3, n3, r3, i3, a2, o2, s2, l2, c2, u2, h2) {
        Br.fromBufferAttribute(i3, c2), Gr.fromBufferAttribute(i3, u2), zr.fromBufferAttribute(i3, h2);
        var p2 = t3.morphTargetInfluences;
        if (e3.morphTargets && a2 && p2) {
          Jr.set(0, 0, 0), qr.set(0, 0, 0), Xr.set(0, 0, 0);
          for (var d2 = 0, f2 = a2.length; d2 < f2; d2++) {
            var m2 = p2[d2], g2 = a2[d2];
            0 !== m2 && (Ur.fromBufferAttribute(g2, c2), Hr.fromBufferAttribute(g2, u2), Wr.fromBufferAttribute(g2, h2), o2 ? (Jr.addScaledVector(Ur, m2), qr.addScaledVector(Hr, m2), Xr.addScaledVector(Wr, m2)) : (Jr.addScaledVector(Ur.sub(Br), m2), qr.addScaledVector(Hr.sub(Gr), m2), Xr.addScaledVector(Wr.sub(zr), m2)));
          }
          Br.add(Jr), Gr.add(qr), zr.add(Xr);
        }
        var y2 = ei(t3, e3, n3, r3, Br, Gr, zr, $r);
        if (y2) {
          s2 && (Yr.fromBufferAttribute(s2, c2), Zr.fromBufferAttribute(s2, u2), Kr.fromBufferAttribute(s2, h2), y2.uv = ir.getUV($r, Br, Gr, zr, Yr, Zr, Kr, new Le())), l2 && (Yr.fromBufferAttribute(l2, c2), Zr.fromBufferAttribute(l2, u2), Kr.fromBufferAttribute(l2, h2), y2.uv2 = ir.getUV($r, Br, Gr, zr, Yr, Zr, Kr, new Le()));
          var v2 = new pr(c2, u2, h2);
          ir.getNormal(Br, Gr, zr, v2.normal), y2.face = v2;
        }
        return y2;
      }
      ti.prototype = Object.assign(Object.create(yn.prototype), { constructor: ti, isMesh: true, copy: function(t3) {
        return yn.prototype.copy.call(this, t3), void 0 !== t3.morphTargetInfluences && (this.morphTargetInfluences = t3.morphTargetInfluences.slice()), void 0 !== t3.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, t3.morphTargetDictionary)), this;
      }, updateMorphTargets: function() {
        var t3, e3, n3, r3 = this.geometry;
        if (r3.isBufferGeometry) {
          var i3 = r3.morphAttributes, a2 = Object.keys(i3);
          if (0 < a2.length) {
            var o2 = i3[a2[0]];
            if (void 0 !== o2) for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, t3 = 0, e3 = o2.length; t3 < e3; t3++) n3 = o2[t3].name || String(t3), this.morphTargetInfluences.push(0), this.morphTargetDictionary[n3] = t3;
          }
        } else {
          var s2 = r3.morphTargets;
          void 0 !== s2 && 0 < s2.length && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
      }, raycast: function(t3, e3) {
        var n3, r3 = this.geometry, i3 = this.material, a2 = this.matrixWorld;
        if (void 0 !== i3 && (null === r3.boundingSphere && r3.computeBoundingSphere(), Fr.copy(r3.boundingSphere), Fr.applyMatrix4(a2), false !== t3.ray.intersectsSphere(Fr) && (Nr.getInverse(a2), Vr.copy(t3.ray).applyMatrix4(Nr), null === r3.boundingBox || false !== Vr.intersectsBox(r3.boundingBox)))) {
          if (r3.isBufferGeometry) {
            var o2, s2, l2, c2, u2, h2, p2, d2, f2, m2 = r3.index, g2 = r3.attributes.position, y2 = r3.morphAttributes.position, v2 = r3.morphTargetsRelative, x2 = r3.attributes.uv, w2 = r3.attributes.uv2, b2 = r3.groups, M2 = r3.drawRange;
            if (null !== m2) if (Array.isArray(i3)) for (c2 = 0, h2 = b2.length; c2 < h2; c2++) for (f2 = i3[(d2 = b2[c2]).materialIndex], u2 = Math.max(d2.start, M2.start), p2 = Math.min(d2.start + d2.count, M2.start + M2.count); u2 < p2; u2 += 3) o2 = m2.getX(u2), s2 = m2.getX(u2 + 1), l2 = m2.getX(u2 + 2), (n3 = ni(this, f2, t3, Vr, g2, y2, v2, x2, w2, o2, s2, l2)) && (n3.faceIndex = Math.floor(u2 / 3), n3.face.materialIndex = d2.materialIndex, e3.push(n3));
            else for (c2 = Math.max(0, M2.start), h2 = Math.min(m2.count, M2.start + M2.count); c2 < h2; c2 += 3) o2 = m2.getX(c2), s2 = m2.getX(c2 + 1), l2 = m2.getX(c2 + 2), (n3 = ni(this, i3, t3, Vr, g2, y2, v2, x2, w2, o2, s2, l2)) && (n3.faceIndex = Math.floor(c2 / 3), e3.push(n3));
            else if (void 0 !== g2) if (Array.isArray(i3)) for (c2 = 0, h2 = b2.length; c2 < h2; c2++) for (f2 = i3[(d2 = b2[c2]).materialIndex], u2 = Math.max(d2.start, M2.start), p2 = Math.min(d2.start + d2.count, M2.start + M2.count); u2 < p2; u2 += 3) (n3 = ni(this, f2, t3, Vr, g2, y2, v2, x2, w2, o2 = u2, s2 = u2 + 1, l2 = u2 + 2)) && (n3.faceIndex = Math.floor(u2 / 3), n3.face.materialIndex = d2.materialIndex, e3.push(n3));
            else for (c2 = Math.max(0, M2.start), h2 = Math.min(g2.count, M2.start + M2.count); c2 < h2; c2 += 3) (n3 = ni(this, i3, t3, Vr, g2, y2, v2, x2, w2, o2 = c2, s2 = c2 + 1, l2 = c2 + 2)) && (n3.faceIndex = Math.floor(c2 / 3), e3.push(n3));
          } else if (r3.isGeometry) {
            var _2, T2, C2, S2, D2 = Array.isArray(i3), E2 = r3.vertices, O2 = r3.faces, A2 = r3.faceVertexUvs[0];
            0 < A2.length && (S2 = A2);
            for (var P2 = 0, R2 = O2.length; P2 < R2; P2++) {
              var L2 = O2[P2], I2 = D2 ? i3[L2.materialIndex] : i3;
              if (void 0 !== I2 && (_2 = E2[L2.a], T2 = E2[L2.b], C2 = E2[L2.c], n3 = ei(this, I2, t3, Vr, _2, T2, C2, $r))) {
                if (S2 && S2[P2]) {
                  var k2 = S2[P2];
                  Yr.copy(k2[0]), Zr.copy(k2[1]), Kr.copy(k2[2]), n3.uv = ir.getUV($r, _2, T2, C2, Yr, Zr, Kr, new Le());
                }
                n3.face = L2, n3.faceIndex = P2, e3.push(n3);
              }
            }
          }
        }
      }, clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } });
      var ri = 0, ii = new $e(), ai = new yn(), oi = new He();
      function si() {
        Object.defineProperty(this, "id", { value: ri += 2 }), this.uuid = Re.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.elementsNeedUpdate = false, this.verticesNeedUpdate = false, this.uvsNeedUpdate = false, this.normalsNeedUpdate = false, this.colorsNeedUpdate = false, this.lineDistancesNeedUpdate = false, this.groupsNeedUpdate = false;
      }
      si.prototype = Object.assign(Object.create(Ee.prototype), { constructor: si, isGeometry: true, applyMatrix4: function(t3) {
        for (var e3 = new Ie().getNormalMatrix(t3), n3 = 0, r3 = this.vertices.length; n3 < r3; n3++) this.vertices[n3].applyMatrix4(t3);
        for (n3 = 0, r3 = this.faces.length; n3 < r3; n3++) {
          var i3 = this.faces[n3];
          i3.normal.applyMatrix3(e3).normalize();
          for (var a2 = 0, o2 = i3.vertexNormals.length; a2 < o2; a2++) i3.vertexNormals[a2].applyMatrix3(e3).normalize();
        }
        return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this.verticesNeedUpdate = true, this.normalsNeedUpdate = true, this;
      }, rotateX: function(t3) {
        return ii.makeRotationX(t3), this.applyMatrix4(ii), this;
      }, rotateY: function(t3) {
        return ii.makeRotationY(t3), this.applyMatrix4(ii), this;
      }, rotateZ: function(t3) {
        return ii.makeRotationZ(t3), this.applyMatrix4(ii), this;
      }, translate: function(t3, e3, n3) {
        return ii.makeTranslation(t3, e3, n3), this.applyMatrix4(ii), this;
      }, scale: function(t3, e3, n3) {
        return ii.makeScale(t3, e3, n3), this.applyMatrix4(ii), this;
      }, lookAt: function(t3) {
        return ai.lookAt(t3), ai.updateMatrix(), this.applyMatrix4(ai.matrix), this;
      }, fromBufferGeometry: function(t3) {
        var e3 = this, n3 = null !== t3.index ? t3.index.array : void 0, r3 = t3.attributes;
        if (void 0 === r3.position) return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."), this;
        var i3 = r3.position.array, a2 = void 0 !== r3.normal ? r3.normal.array : void 0, o2 = void 0 !== r3.color ? r3.color.array : void 0, s2 = void 0 !== r3.uv ? r3.uv.array : void 0, l2 = void 0 !== r3.uv2 ? r3.uv2.array : void 0;
        void 0 !== l2 && (this.faceVertexUvs[1] = []);
        for (var c2 = 0; c2 < i3.length; c2 += 3) e3.vertices.push(new He().fromArray(i3, c2)), void 0 !== o2 && e3.colors.push(new lr().fromArray(o2, c2));
        function u2(t4, n4, r4, i4) {
          var c3 = void 0 === o2 ? [] : [e3.colors[t4].clone(), e3.colors[n4].clone(), e3.colors[r4].clone()], u3 = new pr(t4, n4, r4, void 0 === a2 ? [] : [new He().fromArray(a2, 3 * t4), new He().fromArray(a2, 3 * n4), new He().fromArray(a2, 3 * r4)], c3, i4);
          e3.faces.push(u3), void 0 !== s2 && e3.faceVertexUvs[0].push([new Le().fromArray(s2, 2 * t4), new Le().fromArray(s2, 2 * n4), new Le().fromArray(s2, 2 * r4)]), void 0 !== l2 && e3.faceVertexUvs[1].push([new Le().fromArray(l2, 2 * t4), new Le().fromArray(l2, 2 * n4), new Le().fromArray(l2, 2 * r4)]);
        }
        var h2 = t3.groups;
        if (0 < h2.length) for (c2 = 0; c2 < h2.length; c2++) for (var p2 = h2[c2], d2 = p2.start, f2 = d2, m2 = d2 + p2.count; f2 < m2; f2 += 3) void 0 !== n3 ? u2(n3[f2], n3[f2 + 1], n3[f2 + 2], p2.materialIndex) : u2(f2, f2 + 1, f2 + 2, p2.materialIndex);
        else if (void 0 !== n3) for (c2 = 0; c2 < n3.length; c2 += 3) u2(n3[c2], n3[c2 + 1], n3[c2 + 2]);
        else for (c2 = 0; c2 < i3.length / 3; c2 += 3) u2(c2, c2 + 1, c2 + 2);
        return this.computeFaceNormals(), null !== t3.boundingBox && (this.boundingBox = t3.boundingBox.clone()), null !== t3.boundingSphere && (this.boundingSphere = t3.boundingSphere.clone()), this;
      }, center: function() {
        return this.computeBoundingBox(), this.boundingBox.getCenter(oi).negate(), this.translate(oi.x, oi.y, oi.z), this;
      }, normalize: function() {
        this.computeBoundingSphere();
        var t3 = this.boundingSphere.center, e3 = this.boundingSphere.radius, n3 = 0 === e3 ? 1 : 1 / e3, r3 = new $e();
        return r3.set(n3, 0, 0, -n3 * t3.x, 0, n3, 0, -n3 * t3.y, 0, 0, n3, -n3 * t3.z, 0, 0, 0, 1), this.applyMatrix4(r3), this;
      }, computeFaceNormals: function() {
        for (var t3 = new He(), e3 = new He(), n3 = 0, r3 = this.faces.length; n3 < r3; n3++) {
          var i3 = this.faces[n3], a2 = this.vertices[i3.a], o2 = this.vertices[i3.b], s2 = this.vertices[i3.c];
          t3.subVectors(s2, o2), e3.subVectors(a2, o2), t3.cross(e3), t3.normalize(), i3.normal.copy(t3);
        }
      }, computeVertexNormals: function(t3) {
        var e3, n3, r3, i3, a2, o2;
        for (void 0 === t3 && (t3 = true), o2 = new Array(this.vertices.length), e3 = 0, n3 = this.vertices.length; e3 < n3; e3++) o2[e3] = new He();
        if (t3) {
          var s2, l2, c2, u2 = new He(), h2 = new He();
          for (r3 = 0, i3 = this.faces.length; r3 < i3; r3++) a2 = this.faces[r3], s2 = this.vertices[a2.a], l2 = this.vertices[a2.b], c2 = this.vertices[a2.c], u2.subVectors(c2, l2), h2.subVectors(s2, l2), u2.cross(h2), o2[a2.a].add(u2), o2[a2.b].add(u2), o2[a2.c].add(u2);
        } else for (this.computeFaceNormals(), r3 = 0, i3 = this.faces.length; r3 < i3; r3++) o2[(a2 = this.faces[r3]).a].add(a2.normal), o2[a2.b].add(a2.normal), o2[a2.c].add(a2.normal);
        for (e3 = 0, n3 = this.vertices.length; e3 < n3; e3++) o2[e3].normalize();
        for (r3 = 0, i3 = this.faces.length; r3 < i3; r3++) {
          var p2 = (a2 = this.faces[r3]).vertexNormals;
          3 === p2.length ? (p2[0].copy(o2[a2.a]), p2[1].copy(o2[a2.b]), p2[2].copy(o2[a2.c])) : (p2[0] = o2[a2.a].clone(), p2[1] = o2[a2.b].clone(), p2[2] = o2[a2.c].clone());
        }
        0 < this.faces.length && (this.normalsNeedUpdate = true);
      }, computeFlatVertexNormals: function() {
        var t3, e3, n3;
        for (this.computeFaceNormals(), t3 = 0, e3 = this.faces.length; t3 < e3; t3++) {
          var r3 = (n3 = this.faces[t3]).vertexNormals;
          3 === r3.length ? (r3[0].copy(n3.normal), r3[1].copy(n3.normal), r3[2].copy(n3.normal)) : (r3[0] = n3.normal.clone(), r3[1] = n3.normal.clone(), r3[2] = n3.normal.clone());
        }
        0 < this.faces.length && (this.normalsNeedUpdate = true);
      }, computeMorphNormals: function() {
        var t3, e3, n3, r3, i3;
        for (n3 = 0, r3 = this.faces.length; n3 < r3; n3++) for ((i3 = this.faces[n3]).__originalFaceNormal ? i3.__originalFaceNormal.copy(i3.normal) : i3.__originalFaceNormal = i3.normal.clone(), i3.__originalVertexNormals || (i3.__originalVertexNormals = []), t3 = 0, e3 = i3.vertexNormals.length; t3 < e3; t3++) i3.__originalVertexNormals[t3] ? i3.__originalVertexNormals[t3].copy(i3.vertexNormals[t3]) : i3.__originalVertexNormals[t3] = i3.vertexNormals[t3].clone();
        var a2 = new si();
        for (a2.faces = this.faces, t3 = 0, e3 = this.morphTargets.length; t3 < e3; t3++) {
          if (!this.morphNormals[t3]) {
            this.morphNormals[t3] = {}, this.morphNormals[t3].faceNormals = [], this.morphNormals[t3].vertexNormals = [];
            var o2 = this.morphNormals[t3].faceNormals, s2 = this.morphNormals[t3].vertexNormals;
            for (n3 = 0, r3 = this.faces.length; n3 < r3; n3++) l2 = new He(), c2 = { a: new He(), b: new He(), c: new He() }, o2.push(l2), s2.push(c2);
          }
          var l2, c2, u2 = this.morphNormals[t3];
          for (a2.vertices = this.morphTargets[t3].vertices, a2.computeFaceNormals(), a2.computeVertexNormals(), n3 = 0, r3 = this.faces.length; n3 < r3; n3++) i3 = this.faces[n3], l2 = u2.faceNormals[n3], c2 = u2.vertexNormals[n3], l2.copy(i3.normal), c2.a.copy(i3.vertexNormals[0]), c2.b.copy(i3.vertexNormals[1]), c2.c.copy(i3.vertexNormals[2]);
        }
        for (n3 = 0, r3 = this.faces.length; n3 < r3; n3++) (i3 = this.faces[n3]).normal = i3.__originalFaceNormal, i3.vertexNormals = i3.__originalVertexNormals;
      }, computeBoundingBox: function() {
        null === this.boundingBox && (this.boundingBox = new Rn()), this.boundingBox.setFromPoints(this.vertices);
      }, computeBoundingSphere: function() {
        null === this.boundingSphere && (this.boundingSphere = new kn()), this.boundingSphere.setFromPoints(this.vertices);
      }, merge: function(t3, e3, n3) {
        if (t3 && t3.isGeometry) {
          var r3, i3 = this.vertices.length, a2 = this.vertices, o2 = t3.vertices, s2 = this.faces, l2 = t3.faces, c2 = this.colors, u2 = t3.colors;
          void 0 === n3 && (n3 = 0), void 0 !== e3 && (r3 = new Ie().getNormalMatrix(e3));
          for (var h2 = 0, p2 = o2.length; h2 < p2; h2++) {
            var d2 = o2[h2].clone();
            void 0 !== e3 && d2.applyMatrix4(e3), a2.push(d2);
          }
          for (h2 = 0, p2 = u2.length; h2 < p2; h2++) c2.push(u2[h2].clone());
          for (h2 = 0, p2 = l2.length; h2 < p2; h2++) {
            var f2, m2, g2, y2 = l2[h2], v2 = y2.vertexNormals, x2 = y2.vertexColors;
            (f2 = new pr(y2.a + i3, y2.b + i3, y2.c + i3)).normal.copy(y2.normal), void 0 !== r3 && f2.normal.applyMatrix3(r3).normalize();
            for (var w2 = 0, b2 = v2.length; w2 < b2; w2++) m2 = v2[w2].clone(), void 0 !== r3 && m2.applyMatrix3(r3).normalize(), f2.vertexNormals.push(m2);
            for (f2.color.copy(y2.color), w2 = 0, b2 = x2.length; w2 < b2; w2++) g2 = x2[w2], f2.vertexColors.push(g2.clone());
            f2.materialIndex = y2.materialIndex + n3, s2.push(f2);
          }
          for (h2 = 0, p2 = t3.faceVertexUvs.length; h2 < p2; h2++) {
            var M2 = t3.faceVertexUvs[h2];
            for (void 0 === this.faceVertexUvs[h2] && (this.faceVertexUvs[h2] = []), w2 = 0, b2 = M2.length; w2 < b2; w2++) {
              for (var _2 = M2[w2], T2 = [], C2 = 0, S2 = _2.length; C2 < S2; C2++) T2.push(_2[C2].clone());
              this.faceVertexUvs[h2].push(T2);
            }
          }
        } else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t3);
      }, mergeMesh: function(t3) {
        t3 && t3.isMesh ? (t3.matrixAutoUpdate && t3.updateMatrix(), this.merge(t3.geometry, t3.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t3);
      }, mergeVertices: function() {
        var t3, e3, n3, r3, i3, a2, o2, s2, l2 = {}, c2 = [], u2 = [], h2 = Math.pow(10, 4);
        for (n3 = 0, r3 = this.vertices.length; n3 < r3; n3++) t3 = this.vertices[n3], void 0 === l2[e3 = Math.round(t3.x * h2) + "_" + Math.round(t3.y * h2) + "_" + Math.round(t3.z * h2)] ? (l2[e3] = n3, c2.push(this.vertices[n3]), u2[n3] = c2.length - 1) : u2[n3] = u2[l2[e3]];
        var p2 = [];
        for (n3 = 0, r3 = this.faces.length; n3 < r3; n3++) {
          (i3 = this.faces[n3]).a = u2[i3.a], i3.b = u2[i3.b], i3.c = u2[i3.c], a2 = [i3.a, i3.b, i3.c];
          for (var d2 = 0; d2 < 3; d2++) if (a2[d2] === a2[(d2 + 1) % 3]) {
            p2.push(n3);
            break;
          }
        }
        for (n3 = p2.length - 1; 0 <= n3; n3--) {
          var f2 = p2[n3];
          for (this.faces.splice(f2, 1), o2 = 0, s2 = this.faceVertexUvs.length; o2 < s2; o2++) this.faceVertexUvs[o2].splice(f2, 1);
        }
        var m2 = this.vertices.length - c2.length;
        return this.vertices = c2, m2;
      }, setFromPoints: function(t3) {
        this.vertices = [];
        for (var e3 = 0, n3 = t3.length; e3 < n3; e3++) {
          var r3 = t3[e3];
          this.vertices.push(new He(r3.x, r3.y, r3.z || 0));
        }
        return this;
      }, sortFacesByMaterialIndex: function() {
        for (var t3 = this.faces, e3 = t3.length, n3 = 0; n3 < e3; n3++) t3[n3]._id = n3;
        t3.sort(function(t4, e4) {
          return t4.materialIndex - e4.materialIndex;
        });
        var r3, i3, a2 = this.faceVertexUvs[0], o2 = this.faceVertexUvs[1];
        for (a2 && a2.length === e3 && (r3 = []), o2 && o2.length === e3 && (i3 = []), n3 = 0; n3 < e3; n3++) {
          var s2 = t3[n3]._id;
          r3 && r3.push(a2[s2]), i3 && i3.push(o2[s2]);
        }
        r3 && (this.faceVertexUvs[0] = r3), i3 && (this.faceVertexUvs[1] = i3);
      }, toJSON: function() {
        var t3 = { metadata: { version: 4.5, type: "Geometry", generator: "Geometry.toJSON" } };
        if (t3.uuid = this.uuid, t3.type = this.type, "" !== this.name && (t3.name = this.name), void 0 !== this.parameters) {
          var e3 = this.parameters;
          for (var n3 in e3) void 0 !== e3[n3] && (t3[n3] = e3[n3]);
          return t3;
        }
        for (var r3 = [], i3 = 0; i3 < this.vertices.length; i3++) {
          var a2 = this.vertices[i3];
          r3.push(a2.x, a2.y, a2.z);
        }
        var o2 = [], s2 = [], l2 = {}, c2 = [], u2 = {}, h2 = [], p2 = {};
        for (i3 = 0; i3 < this.faces.length; i3++) {
          var d2 = this.faces[i3], f2 = void 0 !== this.faceVertexUvs[0][i3], m2 = 0 < d2.normal.length(), g2 = 0 < d2.vertexNormals.length, y2 = 1 !== d2.color.r || 1 !== d2.color.g || 1 !== d2.color.b, v2 = 0 < d2.vertexColors.length, x2 = 0;
          if (x2 = _2(x2 = _2(x2 = _2(x2 = _2(x2 = _2(x2 = _2(x2 = _2(x2 = _2(x2, 0, 0), 1, true), 2, false), 3, f2), 4, m2), 5, g2), 6, y2), 7, v2), o2.push(x2), o2.push(d2.a, d2.b, d2.c), o2.push(d2.materialIndex), f2) {
            var w2 = this.faceVertexUvs[0][i3];
            o2.push(S2(w2[0]), S2(w2[1]), S2(w2[2]));
          }
          if (m2 && o2.push(T2(d2.normal)), g2) {
            var b2 = d2.vertexNormals;
            o2.push(T2(b2[0]), T2(b2[1]), T2(b2[2]));
          }
          if (y2 && o2.push(C2(d2.color)), v2) {
            var M2 = d2.vertexColors;
            o2.push(C2(M2[0]), C2(M2[1]), C2(M2[2]));
          }
        }
        function _2(t4, e4, n4) {
          return n4 ? t4 | 1 << e4 : t4 & ~(1 << e4);
        }
        function T2(t4) {
          var e4 = t4.x.toString() + t4.y.toString() + t4.z.toString();
          return void 0 !== l2[e4] || (l2[e4] = s2.length / 3, s2.push(t4.x, t4.y, t4.z)), l2[e4];
        }
        function C2(t4) {
          var e4 = t4.r.toString() + t4.g.toString() + t4.b.toString();
          return void 0 !== u2[e4] || (u2[e4] = c2.length, c2.push(t4.getHex())), u2[e4];
        }
        function S2(t4) {
          var e4 = t4.x.toString() + t4.y.toString();
          return void 0 !== p2[e4] || (p2[e4] = h2.length / 2, h2.push(t4.x, t4.y)), p2[e4];
        }
        return t3.data = {}, t3.data.vertices = r3, t3.data.normals = s2, 0 < c2.length && (t3.data.colors = c2), 0 < h2.length && (t3.data.uvs = [h2]), t3.data.faces = o2, t3;
      }, clone: function() {
        return new si().copy(this);
      }, copy: function(t3) {
        var e3, n3, r3, i3, a2, o2;
        this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.name = t3.name;
        var s2 = t3.vertices;
        for (e3 = 0, n3 = s2.length; e3 < n3; e3++) this.vertices.push(s2[e3].clone());
        var l2 = t3.colors;
        for (e3 = 0, n3 = l2.length; e3 < n3; e3++) this.colors.push(l2[e3].clone());
        var c2 = t3.faces;
        for (e3 = 0, n3 = c2.length; e3 < n3; e3++) this.faces.push(c2[e3].clone());
        for (e3 = 0, n3 = t3.faceVertexUvs.length; e3 < n3; e3++) {
          var u2 = t3.faceVertexUvs[e3];
          for (void 0 === this.faceVertexUvs[e3] && (this.faceVertexUvs[e3] = []), r3 = 0, i3 = u2.length; r3 < i3; r3++) {
            var h2 = u2[r3], p2 = [];
            for (a2 = 0, o2 = h2.length; a2 < o2; a2++) {
              var d2 = h2[a2];
              p2.push(d2.clone());
            }
            this.faceVertexUvs[e3].push(p2);
          }
        }
        var f2 = t3.morphTargets;
        for (e3 = 0, n3 = f2.length; e3 < n3; e3++) {
          var m2 = {};
          if (m2.name = f2[e3].name, void 0 !== f2[e3].vertices) for (m2.vertices = [], r3 = 0, i3 = f2[e3].vertices.length; r3 < i3; r3++) m2.vertices.push(f2[e3].vertices[r3].clone());
          if (void 0 !== f2[e3].normals) for (m2.normals = [], r3 = 0, i3 = f2[e3].normals.length; r3 < i3; r3++) m2.normals.push(f2[e3].normals[r3].clone());
          this.morphTargets.push(m2);
        }
        var g2 = t3.morphNormals;
        for (e3 = 0, n3 = g2.length; e3 < n3; e3++) {
          var y2 = {};
          if (void 0 !== g2[e3].vertexNormals) for (y2.vertexNormals = [], r3 = 0, i3 = g2[e3].vertexNormals.length; r3 < i3; r3++) {
            var v2 = g2[e3].vertexNormals[r3], x2 = {};
            x2.a = v2.a.clone(), x2.b = v2.b.clone(), x2.c = v2.c.clone(), y2.vertexNormals.push(x2);
          }
          if (void 0 !== g2[e3].faceNormals) for (y2.faceNormals = [], r3 = 0, i3 = g2[e3].faceNormals.length; r3 < i3; r3++) y2.faceNormals.push(g2[e3].faceNormals[r3].clone());
          this.morphNormals.push(y2);
        }
        var w2 = t3.skinWeights;
        for (e3 = 0, n3 = w2.length; e3 < n3; e3++) this.skinWeights.push(w2[e3].clone());
        var b2 = t3.skinIndices;
        for (e3 = 0, n3 = b2.length; e3 < n3; e3++) this.skinIndices.push(b2[e3].clone());
        var M2 = t3.lineDistances;
        for (e3 = 0, n3 = M2.length; e3 < n3; e3++) this.lineDistances.push(M2[e3]);
        var _2 = t3.boundingBox;
        null !== _2 && (this.boundingBox = _2.clone());
        var T2 = t3.boundingSphere;
        return null !== T2 && (this.boundingSphere = T2.clone()), this.elementsNeedUpdate = t3.elementsNeedUpdate, this.verticesNeedUpdate = t3.verticesNeedUpdate, this.uvsNeedUpdate = t3.uvsNeedUpdate, this.normalsNeedUpdate = t3.normalsNeedUpdate, this.colorsNeedUpdate = t3.colorsNeedUpdate, this.lineDistancesNeedUpdate = t3.lineDistancesNeedUpdate, this.groupsNeedUpdate = t3.groupsNeedUpdate, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } });
      var li = function(t3) {
        function e3(e4, n3, r3, i3, a2, o2) {
          t3.call(this), this.type = "BoxGeometry", this.parameters = { width: e4, height: n3, depth: r3, widthSegments: i3, heightSegments: a2, depthSegments: o2 }, this.fromBufferGeometry(new ci(e4, n3, r3, i3, a2, o2)), this.mergeVertices();
        }
        return t3 && (e3.__proto__ = t3), (e3.prototype = Object.create(t3 && t3.prototype)).constructor = e3;
      }(si), ci = function(t3) {
        function e3(e4, n3, r3, i3, a2, o2) {
          t3.call(this), this.type = "BoxBufferGeometry", this.parameters = { width: e4, height: n3, depth: r3, widthSegments: i3, heightSegments: a2, depthSegments: o2 };
          var s2 = this;
          e4 = e4 || 1, n3 = n3 || 1, r3 = r3 || 1, i3 = Math.floor(i3) || 1, a2 = Math.floor(a2) || 1;
          var l2 = [], c2 = [], u2 = [], h2 = [], p2 = 0, d2 = 0;
          function f2(t4, e5, n4, r4, i4, a3, o3, f3, m2, g2, y2) {
            var v2, x2, w2 = a3 / m2, b2 = o3 / g2, M2 = a3 / 2, _2 = o3 / 2, T2 = f3 / 2, C2 = m2 + 1, S2 = g2 + 1, D2 = 0, E2 = 0, O2 = new He();
            for (x2 = 0; x2 < S2; x2++) {
              var A2 = x2 * b2 - _2;
              for (v2 = 0; v2 < C2; v2++) {
                var P2 = v2 * w2 - M2;
                O2[t4] = P2 * r4, O2[e5] = A2 * i4, O2[n4] = T2, c2.push(O2.x, O2.y, O2.z), O2[t4] = 0, O2[e5] = 0, O2[n4] = 0 < f3 ? 1 : -1, u2.push(O2.x, O2.y, O2.z), h2.push(v2 / m2), h2.push(1 - x2 / g2), D2 += 1;
              }
            }
            for (x2 = 0; x2 < g2; x2++) for (v2 = 0; v2 < m2; v2++) {
              var R2 = p2 + v2 + C2 * x2, L2 = p2 + v2 + C2 * (x2 + 1), I2 = p2 + (v2 + 1) + C2 * (x2 + 1), k2 = p2 + (v2 + 1) + C2 * x2;
              l2.push(R2, L2, k2), l2.push(L2, I2, k2), E2 += 6;
            }
            s2.addGroup(d2, E2, y2), d2 += E2, p2 += D2;
          }
          f2("z", "y", "x", -1, -1, r3, n3, e4, o2 = Math.floor(o2) || 1, a2, 0), f2("z", "y", "x", 1, -1, r3, n3, -e4, o2, a2, 1), f2("x", "z", "y", 1, 1, e4, r3, n3, i3, o2, 2), f2("x", "z", "y", 1, -1, e4, r3, -n3, i3, o2, 3), f2("x", "y", "z", 1, -1, e4, n3, r3, i3, a2, 4), f2("x", "y", "z", -1, -1, e4, n3, -r3, i3, a2, 5), this.setIndex(l2), this.setAttribute("position", new Cr(c2, 3)), this.setAttribute("normal", new Cr(u2, 3)), this.setAttribute("uv", new Cr(h2, 2));
        }
        return t3 && (e3.__proto__ = t3), (e3.prototype = Object.create(t3 && t3.prototype)).constructor = e3;
      }(jr);
      function ui(t3) {
        var e3 = {};
        for (var n3 in t3) for (var r3 in e3[n3] = {}, t3[n3]) {
          var i3 = t3[n3][r3];
          i3 && (i3.isColor || i3.isMatrix3 || i3.isMatrix4 || i3.isVector2 || i3.isVector3 || i3.isVector4 || i3.isTexture) ? e3[n3][r3] = i3.clone() : Array.isArray(i3) ? e3[n3][r3] = i3.slice() : e3[n3][r3] = i3;
        }
        return e3;
      }
      function hi(t3) {
        for (var e3 = {}, n3 = 0; n3 < t3.length; n3++) {
          var r3 = ui(t3[n3]);
          for (var i3 in r3) e3[i3] = r3[i3];
        }
        return e3;
      }
      var pi = { clone: ui, merge: hi }, di = "void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", fi = "void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";
      function mi(t3) {
        fr.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = di, this.fragmentShader = fi, this.linewidth = 1, this.wireframe = false, this.wireframeLinewidth = 1, this.fog = false, this.lights = false, this.clipping = false, this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.extensions = { derivatives: false, fragDepth: false, drawBuffers: false, shaderTextureLOD: false }, this.defaultAttributeValues = { color: [1, 1, 1], uv: [0, 0], uv2: [0, 0] }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = false, void 0 !== t3 && (void 0 !== t3.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(t3));
      }
      function gi() {
        yn.call(this), this.type = "Camera", this.matrixWorldInverse = new $e(), this.projectionMatrix = new $e(), this.projectionMatrixInverse = new $e();
      }
      function yi(t3, e3, n3, r3) {
        gi.call(this), this.type = "PerspectiveCamera", this.fov = void 0 !== t3 ? t3 : 50, this.zoom = 1, this.near = void 0 !== n3 ? n3 : 0.1, this.far = void 0 !== r3 ? r3 : 2e3, this.focus = 10, this.aspect = void 0 !== e3 ? e3 : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
      }
      function vi(t3, e3, n3, r3) {
        yn.call(this), this.type = "CubeCamera";
        var i3 = new yi(90, 1, t3, e3);
        i3.up.set(0, -1, 0), i3.lookAt(new He(1, 0, 0)), this.add(i3);
        var a2 = new yi(90, 1, t3, e3);
        a2.up.set(0, -1, 0), a2.lookAt(new He(-1, 0, 0)), this.add(a2);
        var o2 = new yi(90, 1, t3, e3);
        o2.up.set(0, 0, 1), o2.lookAt(new He(0, 1, 0)), this.add(o2);
        var s2 = new yi(90, 1, t3, e3);
        s2.up.set(0, 0, -1), s2.lookAt(new He(0, -1, 0)), this.add(s2);
        var l2 = new yi(90, 1, t3, e3);
        l2.up.set(0, -1, 0), l2.lookAt(new He(0, 0, 1)), this.add(l2);
        var c2 = new yi(90, 1, t3, e3);
        c2.up.set(0, -1, 0), c2.lookAt(new He(0, 0, -1)), this.add(c2), r3 = r3 || { format: Ct, magFilter: ct, minFilter: ct }, this.renderTarget = new xi(n3, r3), this.renderTarget.texture.name = "CubeCamera", this.update = function(t4, e4) {
          null === this.parent && this.updateMatrixWorld();
          var n4 = t4.getRenderTarget(), r4 = this.renderTarget, u2 = r4.texture.generateMipmaps;
          r4.texture.generateMipmaps = false, t4.setRenderTarget(r4, 0), t4.render(e4, i3), t4.setRenderTarget(r4, 1), t4.render(e4, a2), t4.setRenderTarget(r4, 2), t4.render(e4, o2), t4.setRenderTarget(r4, 3), t4.render(e4, s2), t4.setRenderTarget(r4, 4), t4.render(e4, l2), r4.texture.generateMipmaps = u2, t4.setRenderTarget(r4, 5), t4.render(e4, c2), t4.setRenderTarget(n4);
        }, this.clear = function(t4, e4, n4, r4) {
          for (var i4 = t4.getRenderTarget(), a3 = this.renderTarget, o3 = 0; o3 < 6; o3++) t4.setRenderTarget(a3, o3), t4.clear(e4, n4, r4);
          t4.setRenderTarget(i4);
        };
      }
      function xi(t3, e3, n3) {
        Number.isInteger(e3) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"), e3 = n3), Fe.call(this, t3, t3, e3);
      }
      function wi(t3, e3, n3, r3, i3, a2, o2, s2, l2, c2, u2, h2) {
        Ne.call(this, null, a2, o2, s2, l2, c2, r3, i3, u2, h2), this.image = { data: t3 || null, width: e3 || 1, height: n3 || 1 }, this.magFilter = void 0 !== l2 ? l2 : ot, this.minFilter = void 0 !== c2 ? c2 : ot, this.generateMipmaps = false, this.flipY = false, this.unpackAlignment = 1, this.needsUpdate = true;
      }
      ((mi.prototype = Object.create(fr.prototype)).constructor = mi).prototype.isShaderMaterial = true, mi.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.fragmentShader = t3.fragmentShader, this.vertexShader = t3.vertexShader, this.uniforms = ui(t3.uniforms), this.defines = Object.assign({}, t3.defines), this.wireframe = t3.wireframe, this.wireframeLinewidth = t3.wireframeLinewidth, this.lights = t3.lights, this.clipping = t3.clipping, this.skinning = t3.skinning, this.morphTargets = t3.morphTargets, this.morphNormals = t3.morphNormals, this.extensions = t3.extensions, this;
      }, mi.prototype.toJSON = function(t3) {
        var e3 = fr.prototype.toJSON.call(this, t3);
        for (var n3 in e3.uniforms = {}, this.uniforms) {
          var r3 = this.uniforms[n3].value;
          r3 && r3.isTexture ? e3.uniforms[n3] = { type: "t", value: r3.toJSON(t3).uuid } : r3 && r3.isColor ? e3.uniforms[n3] = { type: "c", value: r3.getHex() } : r3 && r3.isVector2 ? e3.uniforms[n3] = { type: "v2", value: r3.toArray() } : r3 && r3.isVector3 ? e3.uniforms[n3] = { type: "v3", value: r3.toArray() } : r3 && r3.isVector4 ? e3.uniforms[n3] = { type: "v4", value: r3.toArray() } : r3 && r3.isMatrix3 ? e3.uniforms[n3] = { type: "m3", value: r3.toArray() } : r3 && r3.isMatrix4 ? e3.uniforms[n3] = { type: "m4", value: r3.toArray() } : e3.uniforms[n3] = { value: r3 };
        }
        0 < Object.keys(this.defines).length && (e3.defines = this.defines), e3.vertexShader = this.vertexShader, e3.fragmentShader = this.fragmentShader;
        var i3 = {};
        for (var a2 in this.extensions) true === this.extensions[a2] && (i3[a2] = true);
        return 0 < Object.keys(i3).length && (e3.extensions = i3), e3;
      }, gi.prototype = Object.assign(Object.create(yn.prototype), { constructor: gi, isCamera: true, copy: function(t3, e3) {
        return yn.prototype.copy.call(this, t3, e3), this.matrixWorldInverse.copy(t3.matrixWorldInverse), this.projectionMatrix.copy(t3.projectionMatrix), this.projectionMatrixInverse.copy(t3.projectionMatrixInverse), this;
      }, getWorldDirection: function(t3) {
        void 0 === t3 && (console.warn("THREE.Camera: .getWorldDirection() target is now required"), t3 = new He()), this.updateMatrixWorld(true);
        var e3 = this.matrixWorld.elements;
        return t3.set(-e3[8], -e3[9], -e3[10]).normalize();
      }, updateMatrixWorld: function(t3) {
        yn.prototype.updateMatrixWorld.call(this, t3), this.matrixWorldInverse.getInverse(this.matrixWorld);
      }, updateWorldMatrix: function(t3, e3) {
        yn.prototype.updateWorldMatrix.call(this, t3, e3), this.matrixWorldInverse.getInverse(this.matrixWorld);
      }, clone: function() {
        return new this.constructor().copy(this);
      } }), yi.prototype = Object.assign(Object.create(gi.prototype), { constructor: yi, isPerspectiveCamera: true, copy: function(t3, e3) {
        return gi.prototype.copy.call(this, t3, e3), this.fov = t3.fov, this.zoom = t3.zoom, this.near = t3.near, this.far = t3.far, this.focus = t3.focus, this.aspect = t3.aspect, this.view = null === t3.view ? null : Object.assign({}, t3.view), this.filmGauge = t3.filmGauge, this.filmOffset = t3.filmOffset, this;
      }, setFocalLength: function(t3) {
        var e3 = 0.5 * this.getFilmHeight() / t3;
        this.fov = 2 * Re.RAD2DEG * Math.atan(e3), this.updateProjectionMatrix();
      }, getFocalLength: function() {
        var t3 = Math.tan(0.5 * Re.DEG2RAD * this.fov);
        return 0.5 * this.getFilmHeight() / t3;
      }, getEffectiveFOV: function() {
        return 2 * Re.RAD2DEG * Math.atan(Math.tan(0.5 * Re.DEG2RAD * this.fov) / this.zoom);
      }, getFilmWidth: function() {
        return this.filmGauge * Math.min(this.aspect, 1);
      }, getFilmHeight: function() {
        return this.filmGauge / Math.max(this.aspect, 1);
      }, setViewOffset: function(t3, e3, n3, r3, i3, a2) {
        this.aspect = t3 / e3, null === this.view && (this.view = { enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = true, this.view.fullWidth = t3, this.view.fullHeight = e3, this.view.offsetX = n3, this.view.offsetY = r3, this.view.width = i3, this.view.height = a2, this.updateProjectionMatrix();
      }, clearViewOffset: function() {
        null !== this.view && (this.view.enabled = false), this.updateProjectionMatrix();
      }, updateProjectionMatrix: function() {
        var t3 = this.near, e3 = t3 * Math.tan(0.5 * Re.DEG2RAD * this.fov) / this.zoom, n3 = 2 * e3, r3 = this.aspect * n3, i3 = -0.5 * r3, a2 = this.view;
        if (null !== this.view && this.view.enabled) {
          var o2 = a2.fullWidth, s2 = a2.fullHeight;
          i3 += a2.offsetX * r3 / o2, e3 -= a2.offsetY * n3 / s2, r3 *= a2.width / o2, n3 *= a2.height / s2;
        }
        var l2 = this.filmOffset;
        0 !== l2 && (i3 += t3 * l2 / this.getFilmWidth()), this.projectionMatrix.makePerspective(i3, i3 + r3, e3, e3 - n3, t3, this.far), this.projectionMatrixInverse.getInverse(this.projectionMatrix);
      }, toJSON: function(t3) {
        var e3 = yn.prototype.toJSON.call(this, t3);
        return e3.object.fov = this.fov, e3.object.zoom = this.zoom, e3.object.near = this.near, e3.object.far = this.far, e3.object.focus = this.focus, e3.object.aspect = this.aspect, null !== this.view && (e3.object.view = Object.assign({}, this.view)), e3.object.filmGauge = this.filmGauge, e3.object.filmOffset = this.filmOffset, e3;
      } }), (vi.prototype = Object.create(yn.prototype)).constructor = vi, ((xi.prototype = Object.create(Fe.prototype)).constructor = xi).prototype.isWebGLCubeRenderTarget = true, xi.prototype.fromEquirectangularTexture = function(t3, e3) {
        this.texture.type = e3.type, this.texture.format = e3.format, this.texture.encoding = e3.encoding;
        var n3 = new vn(), r3 = { uniforms: { tEquirect: { value: null } }, vertexShader: ["varying vec3 vWorldDirection;", "vec3 transformDirection( in vec3 dir, in mat4 matrix ) {", "	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );", "}", "void main() {", "	vWorldDirection = transformDirection( position, modelMatrix );", "	#include <begin_vertex>", "	#include <project_vertex>", "}"].join("\n"), fragmentShader: ["uniform sampler2D tEquirect;", "varying vec3 vWorldDirection;", "#define RECIPROCAL_PI 0.31830988618", "#define RECIPROCAL_PI2 0.15915494", "void main() {", "	vec3 direction = normalize( vWorldDirection );", "	vec2 sampleUV;", "	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;", "	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;", "	gl_FragColor = texture2D( tEquirect, sampleUV );", "}"].join("\n") }, i3 = new mi({ type: "CubemapFromEquirect", uniforms: ui(r3.uniforms), vertexShader: r3.vertexShader, fragmentShader: r3.fragmentShader, side: l, blending: h });
        i3.uniforms.tEquirect.value = e3;
        var a2 = new ti(new ci(5, 5, 5), i3);
        n3.add(a2);
        var o2 = new vi(1, 10, 1);
        return o2.renderTarget = this, o2.renderTarget.texture.name = "CubeCameraTexture", o2.update(t3, n3), a2.geometry.dispose(), a2.material.dispose(), this;
      }, ((wi.prototype = Object.create(Ne.prototype)).constructor = wi).prototype.isDataTexture = true;
      var bi = new kn(), Mi = new He();
      function _i(t3, e3, n3, r3, i3, a2) {
        this.planes = [void 0 !== t3 ? t3 : new qn(), void 0 !== e3 ? e3 : new qn(), void 0 !== n3 ? n3 : new qn(), void 0 !== r3 ? r3 : new qn(), void 0 !== i3 ? i3 : new qn(), void 0 !== a2 ? a2 : new qn()];
      }
      Object.assign(_i.prototype, { set: function(t3, e3, n3, r3, i3, a2) {
        var o2 = this.planes;
        return o2[0].copy(t3), o2[1].copy(e3), o2[2].copy(n3), o2[3].copy(r3), o2[4].copy(i3), o2[5].copy(a2), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        for (var e3 = this.planes, n3 = 0; n3 < 6; n3++) e3[n3].copy(t3.planes[n3]);
        return this;
      }, setFromProjectionMatrix: function(t3) {
        var e3 = this.planes, n3 = t3.elements, r3 = n3[0], i3 = n3[1], a2 = n3[2], o2 = n3[3], s2 = n3[4], l2 = n3[5], c2 = n3[6], u2 = n3[7], h2 = n3[8], p2 = n3[9], d2 = n3[10], f2 = n3[11], m2 = n3[12], g2 = n3[13], y2 = n3[14], v2 = n3[15];
        return e3[0].setComponents(o2 - r3, u2 - s2, f2 - h2, v2 - m2).normalize(), e3[1].setComponents(o2 + r3, u2 + s2, f2 + h2, v2 + m2).normalize(), e3[2].setComponents(o2 + i3, u2 + l2, f2 + p2, v2 + g2).normalize(), e3[3].setComponents(o2 - i3, u2 - l2, f2 - p2, v2 - g2).normalize(), e3[4].setComponents(o2 - a2, u2 - c2, f2 - d2, v2 - y2).normalize(), e3[5].setComponents(o2 + a2, u2 + c2, f2 + d2, v2 + y2).normalize(), this;
      }, intersectsObject: function(t3) {
        var e3 = t3.geometry;
        return null === e3.boundingSphere && e3.computeBoundingSphere(), bi.copy(e3.boundingSphere).applyMatrix4(t3.matrixWorld), this.intersectsSphere(bi);
      }, intersectsSprite: function(t3) {
        return bi.center.set(0, 0, 0), bi.radius = 0.7071067811865476, bi.applyMatrix4(t3.matrixWorld), this.intersectsSphere(bi);
      }, intersectsSphere: function(t3) {
        for (var e3 = this.planes, n3 = t3.center, r3 = -t3.radius, i3 = 0; i3 < 6; i3++) if (e3[i3].distanceToPoint(n3) < r3) return false;
        return true;
      }, intersectsBox: function(t3) {
        for (var e3 = this.planes, n3 = 0; n3 < 6; n3++) {
          var r3 = e3[n3];
          if (Mi.x = 0 < r3.normal.x ? t3.max.x : t3.min.x, Mi.y = 0 < r3.normal.y ? t3.max.y : t3.min.y, Mi.z = 0 < r3.normal.z ? t3.max.z : t3.min.z, r3.distanceToPoint(Mi) < 0) return false;
        }
        return true;
      }, containsPoint: function(t3) {
        for (var e3 = this.planes, n3 = 0; n3 < 6; n3++) if (e3[n3].distanceToPoint(t3) < 0) return false;
        return true;
      } });
      var Ti = { common: { diffuse: { value: new lr(15658734) }, opacity: { value: 1 }, map: { value: null }, uvTransform: { value: new Ie() }, uv2Transform: { value: new Ie() }, alphaMap: { value: null } }, specularmap: { specularMap: { value: null } }, envmap: { envMap: { value: null }, flipEnvMap: { value: -1 }, reflectivity: { value: 1 }, refractionRatio: { value: 0.98 }, maxMipLevel: { value: 0 } }, aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } }, lightmap: { lightMap: { value: null }, lightMapIntensity: { value: 1 } }, emissivemap: { emissiveMap: { value: null } }, bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } }, normalmap: { normalMap: { value: null }, normalScale: { value: new Le(1, 1) } }, displacementmap: { displacementMap: { value: null }, displacementScale: { value: 1 }, displacementBias: { value: 0 } }, roughnessmap: { roughnessMap: { value: null } }, metalnessmap: { metalnessMap: { value: null } }, gradientmap: { gradientMap: { value: null } }, fog: { fogDensity: { value: 25e-5 }, fogNear: { value: 1 }, fogFar: { value: 2e3 }, fogColor: { value: new lr(16777215) } }, lights: { ambientLightColor: { value: [] }, lightProbe: { value: [] }, directionalLights: { value: [], properties: { direction: {}, color: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, directionalShadowMap: { value: [] }, directionalShadowMatrix: { value: [] }, spotLights: { value: [], properties: { color: {}, position: {}, direction: {}, distance: {}, coneCos: {}, penumbraCos: {}, decay: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, spotShadowMap: { value: [] }, spotShadowMatrix: { value: [] }, pointLights: { value: [], properties: { color: {}, position: {}, decay: {}, distance: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}, shadowCameraNear: {}, shadowCameraFar: {} } }, pointShadowMap: { value: [] }, pointShadowMatrix: { value: [] }, hemisphereLights: { value: [], properties: { direction: {}, skyColor: {}, groundColor: {} } }, rectAreaLights: { value: [], properties: { color: {}, position: {}, width: {}, height: {} } } }, points: { diffuse: { value: new lr(15658734) }, opacity: { value: 1 }, size: { value: 1 }, scale: { value: 1 }, map: { value: null }, alphaMap: { value: null }, uvTransform: { value: new Ie() } }, sprite: { diffuse: { value: new lr(15658734) }, opacity: { value: 1 }, center: { value: new Le(0.5, 0.5) }, rotation: { value: 0 }, map: { value: null }, alphaMap: { value: null }, uvTransform: { value: new Ie() } } };
      function Ci() {
        var t3 = null, e3 = false, n3 = null;
        function r3(i3, a2) {
          false !== e3 && (n3(i3, a2), t3.requestAnimationFrame(r3));
        }
        return { start: function() {
          true !== e3 && null !== n3 && (t3.requestAnimationFrame(r3), e3 = true);
        }, stop: function() {
          e3 = false;
        }, setAnimationLoop: function(t4) {
          n3 = t4;
        }, setContext: function(e4) {
          t3 = e4;
        } };
      }
      function Si(t3, e3, n3, r3) {
        si.call(this), this.type = "PlaneGeometry", this.parameters = { width: t3, height: e3, widthSegments: n3, heightSegments: r3 }, this.fromBufferGeometry(new Di(t3, e3, n3, r3)), this.mergeVertices();
      }
      function Di(t3, e3, n3, r3) {
        jr.call(this), this.type = "PlaneBufferGeometry", this.parameters = { width: t3, height: e3, widthSegments: n3, heightSegments: r3 };
        var i3, a2, o2 = (t3 = t3 || 1) / 2, s2 = (e3 = e3 || 1) / 2, l2 = Math.floor(n3) || 1, c2 = Math.floor(r3) || 1, u2 = l2 + 1, h2 = c2 + 1, p2 = t3 / l2, d2 = e3 / c2, f2 = [], m2 = [], g2 = [], y2 = [];
        for (a2 = 0; a2 < h2; a2++) {
          var v2 = a2 * d2 - s2;
          for (i3 = 0; i3 < u2; i3++) {
            var x2 = i3 * p2 - o2;
            m2.push(x2, -v2, 0), g2.push(0, 0, 1), y2.push(i3 / l2), y2.push(1 - a2 / c2);
          }
        }
        for (a2 = 0; a2 < c2; a2++) for (i3 = 0; i3 < l2; i3++) {
          var w2 = i3 + u2 * a2, b2 = i3 + u2 * (a2 + 1), M2 = i3 + 1 + u2 * (a2 + 1), _2 = i3 + 1 + u2 * a2;
          f2.push(w2, b2, _2), f2.push(b2, M2, _2);
        }
        this.setIndex(f2), this.setAttribute("position", new Cr(m2, 3)), this.setAttribute("normal", new Cr(g2, 3)), this.setAttribute("uv", new Cr(y2, 2));
      }
      (Si.prototype = Object.create(si.prototype)).constructor = Si, (Di.prototype = Object.create(jr.prototype)).constructor = Di;
      var Ei = { alphamap_fragment: "#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif", alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif", alphatest_fragment: "#ifdef ALPHATEST\n	if ( diffuseColor.a < ALPHATEST ) discard;\n#endif", aomap_fragment: "#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n	#endif\n#endif", aomap_pars_fragment: "#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif", begin_vertex: "vec3 transformed = vec3( position );", beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif", bsdfs: "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	return vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n	if( cutoffDistance > 0.0 ) {\n		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n	}\n	return distanceFalloff;\n#else\n	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n	}\n	return 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n	return Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	return 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( incidentLight.direction + viewDir );\n	float dotNL = saturate( dot( normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE  = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS  = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n	return specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n	vec3 FssEss = F * brdf.x + brdf.y;\n	float Ess = brdf.x + brdf.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n	float invAlpha  = 1.0 / roughness;\n	float cos2h = NoH * NoH;\n	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n	vec3 N = geometry.normal;\n	vec3 V = geometry.viewDir;\n	vec3 H = normalize( V + L );\n	float dotNH = saturate( dot( N, H ) );\n	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif", bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif", clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		if ( clipped ) discard;\n	#endif\n#endif", clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n	#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n		varying vec3 vViewPosition;\n	#endif\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif", clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n	varying vec3 vViewPosition;\n#endif", clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n	vViewPosition = - mvPosition.xyz;\n#endif", color_fragment: "#ifdef USE_COLOR\n	diffuseColor.rgb *= vColor;\n#endif", color_pars_fragment: "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif", color_pars_vertex: "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif", color_vertex: "#ifdef USE_COLOR\n	vColor.xyz = color.xyz;\n#endif", common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	float distance = dot( planeNormal, point - pointOnPlane );\n	return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}", cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);\n    } else if (face == 1.0) {\n      uv = vec2(direction.x, -direction.z) / abs(direction.y);\n    } else if (face == 2.0) {\n      uv = direction.xy / abs(direction.z);\n    } else if (face == 3.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);\n    } else if (face == 4.0) {\n      uv = direction.xz / abs(direction.y);\n    } else {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);\n    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif", defaultnormal_vertex: "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	transformedNormal = mat3( instanceMatrix ) * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif", displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif", displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif", emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif", emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif", encodings_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );", encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n	float maxComponent = max( max( value.r, value.g ), value.b );\n	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n	M = ceil( M * 255.0 ) / 255.0;\n	return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float D = max( maxRange / maxRGB, 1.0 );\n	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n	vec4 vResult;\n	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n	vResult.w = fract( Le );\n	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n	return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n	float Le = value.z * 255.0 + value.w;\n	vec3 Xp_Y_XYZp;\n	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n	return vec4( max( vRGB, 0.0 ), 1.0 );\n}", envmap_fragment: "#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		}  else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		reflectVec = normalize( reflectVec );\n		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		reflectVec = normalize( reflectVec );\n		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifndef ENVMAP_TYPE_CUBE_UV\n		envColor = envMapTexelToLinear( envColor );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif", envmap_common_pars_fragment: "#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform int maxMipLevel;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif", envmap_pars_fragment: "#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif", envmap_pars_vertex: "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif", envmap_physical_pars_fragment: "#if defined( USE_ENVMAP )\n	#ifdef ENVMAP_MODE_REFRACTION\n		uniform float refractionRatio;\n	#endif\n	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n		#else\n			vec4 envMapColor = vec4( 0.0 );\n		#endif\n		return PI * envMapColor.rgb * envMapIntensity;\n	}\n	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n		float maxMIPLevelScalar = float( maxMIPLevel );\n		float sigma = PI * roughness * roughness / ( 1.0 + roughness );\n		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n	}\n	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n		#ifdef ENVMAP_MODE_REFLECTION\n		  vec3 reflectVec = reflect( -viewDir, normal );\n		  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n		#else\n		  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n		#endif\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n		#elif defined( ENVMAP_TYPE_EQUIREC )\n			vec2 sampleUV;\n			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_SPHERE )\n			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#endif\n		return envMapColor.rgb * envMapIntensity;\n	}\n#endif", envmap_vertex: "#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) { \n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif", fog_vertex: "#ifdef USE_FOG\n	fogDepth = -mvPosition.z;\n#endif", fog_pars_vertex: "#ifdef USE_FOG\n	varying float fogDepth;\n#endif", fog_fragment: "#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif", fog_pars_fragment: "#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float fogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif", gradientmap_pars_fragment: "#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return texture2D( gradientMap, coord ).rgb;\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}", lightmap_fragment: "#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif", lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif", lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n		#endif\n	}\n#endif", lights_pars_begin: "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n		float shadowCameraNear;\n		float shadowCameraFar;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		directLight.color = pointLight.color;\n		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n		directLight.visible = ( directLight.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n		if ( angleCos > spotLight.coneCos ) {\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			irradiance *= PI;\n		#endif\n		return irradiance;\n	}\n#endif", lights_toon_fragment: "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;", lights_toon_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n	vec3	diffuseColor;\n	vec3	specularColor;\n	float	specularShininess;\n	float	specularStrength;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)", lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;", lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n	vec3	diffuseColor;\n	vec3	specularColor;\n	float	specularShininess;\n	float	specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)", lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n	material.clearcoat = saturate( clearcoat );	material.clearcoatRoughness = max( clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheen;\n#endif", lights_physical_pars_fragment: "struct PhysicalMaterial {\n	vec3	diffuseColor;\n	float	specularRoughness;\n	vec3	specularColor;\n#ifdef CLEARCOAT\n	float clearcoat;\n	float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	vec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.specularRoughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	#ifdef CLEARCOAT\n		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = ccDotNL * directLight.color;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			ccIrradiance *= PI;\n		#endif\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n	#else\n		float clearcoatDHR = 0.0;\n	#endif\n	#ifdef USE_SHEEN\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n			material.specularRoughness,\n			directLight.direction,\n			geometry,\n			material.sheenColor\n		);\n	#else\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n	#endif\n	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef CLEARCOAT\n		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n		float ccDotNL = ccDotNV;\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n	#else\n		float clearcoatDHR = 0.0;\n	#endif\n	float clearcoatInv = 1.0 - clearcoatDHR;\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}", lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointDirectLightIrradiance( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		directLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		directLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		}\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif", lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n	#ifdef CLEARCOAT\n		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n	#endif\n#endif", lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif", logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif", logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif", logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif", logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif", map_fragment: "#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif", map_pars_fragment: "#ifdef USE_MAP\n	uniform sampler2D map;\n#endif", map_particle_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, uv );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif", map_particle_pars_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif", metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif", metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif", morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif", morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifndef USE_MORPHNORMALS\n	uniform float morphTargetInfluences[ 8 ];\n	#else\n	uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif", morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n	transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n	transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n	transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n	transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n	transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n	transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n	transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n	#endif\n#endif", normal_fragment_begin: "#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;", normal_fragment_maps: "#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif", normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		float scale = sign( st1.t * st0.s - st0.t * st1.s );\n		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n		vec3 N = normalize( surf_norm );\n		mat3 tsn = mat3( S, T, N );\n		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		return normalize( tsn * mapN );\n	}\n#endif", clearcoat_normal_fragment_begin: "#ifdef CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif", clearcoat_normal_fragment_maps: "#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n	#endif\n#endif", clearcoat_normalmap_pars_fragment: "#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif", packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}", premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif", project_vertex: "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;", dithering_fragment: "#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif", dithering_pars_fragment: "#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif", roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif", roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif", shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif", shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif", shadowmap_vertex: "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n#endif", shadowmask_pars_fragment: "float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLight directionalLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		shadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLight spotLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLights[ i ];\n		shadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLight pointLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLights[ i ];\n		shadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#endif\n	#endif\n	return shadow;\n}", skinbase_vertex: "#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif", skinning_pars_vertex: "#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif", skinning_vertex: "#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif", skinnormal_vertex: "#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif", specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif", specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif", tonemapping_fragment: "#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif", tonemapping_pars_fragment: "#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}", uv_pars_fragment: "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif", uv_pars_vertex: "#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif", uv_vertex: "#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif", uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif", uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif", uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif", worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif", background_frag: "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}", background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}", cube_frag: "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}", cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}", depth_frag: "#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n	#endif\n}", depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}", distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}", distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}", equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV;\n	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n	vec4 texColor = texture2D( tEquirect, sampleUV );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}", equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}", linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}", linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}", meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n	\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}", meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_ENVMAP\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}", meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}", meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}", meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n		matcapColor = matcapTexelToLinear( matcapColor );\n	#else\n		vec4 matcapColor = vec4( 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}", meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#ifndef FLAT_SHADED\n		vNormal = normalize( transformedNormal );\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}", meshtoon_frag: "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}", meshtoon_vert: "#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}", meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}", meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}", meshphysical_frag: "#define STANDARD\n#ifdef PHYSICAL\n	#define REFLECTIVITY\n	#define CLEARCOAT\n	#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n	uniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n	uniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#ifdef TRANSPARENCY\n		diffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n	#endif\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}", meshphysical_vert: "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}", normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}", normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}", points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}", points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}", shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}", shadow_vert: "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}", sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}", sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}" }, Oi = { basic: { uniforms: hi([Ti.common, Ti.specularmap, Ti.envmap, Ti.aomap, Ti.lightmap, Ti.fog]), vertexShader: Ei.meshbasic_vert, fragmentShader: Ei.meshbasic_frag }, lambert: { uniforms: hi([Ti.common, Ti.specularmap, Ti.envmap, Ti.aomap, Ti.lightmap, Ti.emissivemap, Ti.fog, Ti.lights, { emissive: { value: new lr(0) } }]), vertexShader: Ei.meshlambert_vert, fragmentShader: Ei.meshlambert_frag }, phong: { uniforms: hi([Ti.common, Ti.specularmap, Ti.envmap, Ti.aomap, Ti.lightmap, Ti.emissivemap, Ti.bumpmap, Ti.normalmap, Ti.displacementmap, Ti.fog, Ti.lights, { emissive: { value: new lr(0) }, specular: { value: new lr(1118481) }, shininess: { value: 30 } }]), vertexShader: Ei.meshphong_vert, fragmentShader: Ei.meshphong_frag }, standard: { uniforms: hi([Ti.common, Ti.envmap, Ti.aomap, Ti.lightmap, Ti.emissivemap, Ti.bumpmap, Ti.normalmap, Ti.displacementmap, Ti.roughnessmap, Ti.metalnessmap, Ti.fog, Ti.lights, { emissive: { value: new lr(0) }, roughness: { value: 0.5 }, metalness: { value: 0.5 }, envMapIntensity: { value: 1 } }]), vertexShader: Ei.meshphysical_vert, fragmentShader: Ei.meshphysical_frag }, toon: { uniforms: hi([Ti.common, Ti.specularmap, Ti.aomap, Ti.lightmap, Ti.emissivemap, Ti.bumpmap, Ti.normalmap, Ti.displacementmap, Ti.gradientmap, Ti.fog, Ti.lights, { emissive: { value: new lr(0) }, specular: { value: new lr(1118481) }, shininess: { value: 30 } }]), vertexShader: Ei.meshtoon_vert, fragmentShader: Ei.meshtoon_frag }, matcap: { uniforms: hi([Ti.common, Ti.bumpmap, Ti.normalmap, Ti.displacementmap, Ti.fog, { matcap: { value: null } }]), vertexShader: Ei.meshmatcap_vert, fragmentShader: Ei.meshmatcap_frag }, points: { uniforms: hi([Ti.points, Ti.fog]), vertexShader: Ei.points_vert, fragmentShader: Ei.points_frag }, dashed: { uniforms: hi([Ti.common, Ti.fog, { scale: { value: 1 }, dashSize: { value: 1 }, totalSize: { value: 2 } }]), vertexShader: Ei.linedashed_vert, fragmentShader: Ei.linedashed_frag }, depth: { uniforms: hi([Ti.common, Ti.displacementmap]), vertexShader: Ei.depth_vert, fragmentShader: Ei.depth_frag }, normal: { uniforms: hi([Ti.common, Ti.bumpmap, Ti.normalmap, Ti.displacementmap, { opacity: { value: 1 } }]), vertexShader: Ei.normal_vert, fragmentShader: Ei.normal_frag }, sprite: { uniforms: hi([Ti.sprite, Ti.fog]), vertexShader: Ei.sprite_vert, fragmentShader: Ei.sprite_frag }, background: { uniforms: { uvTransform: { value: new Ie() }, t2D: { value: null } }, vertexShader: Ei.background_vert, fragmentShader: Ei.background_frag }, cube: { uniforms: hi([Ti.envmap, { opacity: { value: 1 } }]), vertexShader: Ei.cube_vert, fragmentShader: Ei.cube_frag }, equirect: { uniforms: { tEquirect: { value: null } }, vertexShader: Ei.equirect_vert, fragmentShader: Ei.equirect_frag }, distanceRGBA: { uniforms: hi([Ti.common, Ti.displacementmap, { referencePosition: { value: new He() }, nearDistance: { value: 1 }, farDistance: { value: 1e3 } }]), vertexShader: Ei.distanceRGBA_vert, fragmentShader: Ei.distanceRGBA_frag }, shadow: { uniforms: hi([Ti.lights, Ti.fog, { color: { value: new lr(0) }, opacity: { value: 1 } }]), vertexShader: Ei.shadow_vert, fragmentShader: Ei.shadow_frag } };
      function Ai(t3, e3, n3, r3) {
        var i3, a2, o2 = new lr(0), c2 = 0, u2 = null, h2 = 0, p2 = null;
        function d2(t4, n4) {
          e3.buffers.color.setClear(t4.r, t4.g, t4.b, n4, r3);
        }
        return { getClearColor: function() {
          return o2;
        }, setClearColor: function(t4, e4) {
          o2.set(t4), d2(o2, c2 = void 0 !== e4 ? e4 : 1);
        }, getClearAlpha: function() {
          return c2;
        }, setClearAlpha: function(t4) {
          d2(o2, c2 = t4);
        }, render: function(e4, r4, f2, m2) {
          var g2 = r4.background, y2 = t3.xr, v2 = y2.getSession && y2.getSession();
          if (v2 && "additive" === v2.environmentBlendMode && (g2 = null), null === g2 ? d2(o2, c2) : g2 && g2.isColor && (d2(g2, 1), m2 = true), (t3.autoClear || m2) && t3.clear(t3.autoClearColor, t3.autoClearDepth, t3.autoClearStencil), g2 && (g2.isCubeTexture || g2.isWebGLCubeRenderTarget || g2.mapping === et)) {
            void 0 === a2 && ((a2 = new ti(new ci(1, 1, 1), new mi({ type: "BackgroundCubeMaterial", uniforms: ui(Oi.cube.uniforms), vertexShader: Oi.cube.vertexShader, fragmentShader: Oi.cube.fragmentShader, side: l, depthTest: false, depthWrite: false, fog: false }))).geometry.deleteAttribute("normal"), a2.geometry.deleteAttribute("uv"), a2.onBeforeRender = function(t4, e5, n4) {
              this.matrixWorld.copyPosition(n4.matrixWorld);
            }, Object.defineProperty(a2.material, "envMap", { get: function() {
              return this.uniforms.envMap.value;
            } }), n3.update(a2));
            var x2 = g2.isWebGLCubeRenderTarget ? g2.texture : g2;
            a2.material.uniforms.envMap.value = x2, a2.material.uniforms.flipEnvMap.value = x2.isCubeTexture ? -1 : 1, u2 === g2 && h2 === x2.version && p2 === t3.toneMapping || (a2.material.needsUpdate = true, u2 = g2, h2 = x2.version, p2 = t3.toneMapping), e4.unshift(a2, a2.geometry, a2.material, 0, 0, null);
          } else g2 && g2.isTexture && (void 0 === i3 && ((i3 = new ti(new Di(2, 2), new mi({ type: "BackgroundMaterial", uniforms: ui(Oi.background.uniforms), vertexShader: Oi.background.vertexShader, fragmentShader: Oi.background.fragmentShader, side: s, depthTest: false, depthWrite: false, fog: false }))).geometry.deleteAttribute("normal"), Object.defineProperty(i3.material, "map", { get: function() {
            return this.uniforms.t2D.value;
          } }), n3.update(i3)), true === (i3.material.uniforms.t2D.value = g2).matrixAutoUpdate && g2.updateMatrix(), i3.material.uniforms.uvTransform.value.copy(g2.matrix), u2 === g2 && h2 === g2.version && p2 === t3.toneMapping || (i3.material.needsUpdate = true, h2 = (u2 = g2).version, p2 = t3.toneMapping), e4.unshift(i3, i3.geometry, i3.material, 0, 0, null));
        } };
      }
      function Pi(t3, e3) {
        return Math.abs(e3[1]) - Math.abs(t3[1]);
      }
      function Ri(t3, e3, n3, r3, i3, a2, o2, s2, l2, c2) {
        Ne.call(this, t3 = void 0 !== t3 ? t3 : [], e3 = void 0 !== e3 ? e3 : Z, n3, r3, i3, a2, o2 = void 0 !== o2 ? o2 : Ct, s2, l2, c2), this.flipY = false;
      }
      function Li(t3, e3, n3, r3) {
        Ne.call(this, null), this.image = { data: t3 || null, width: e3 || 1, height: n3 || 1, depth: r3 || 1 }, this.magFilter = ot, this.minFilter = ot, this.wrapR = it, this.generateMipmaps = false, this.flipY = false, this.needsUpdate = true;
      }
      function Ii(t3, e3, n3, r3) {
        Ne.call(this, null), this.image = { data: t3 || null, width: e3 || 1, height: n3 || 1, depth: r3 || 1 }, this.magFilter = ot, this.minFilter = ot, this.wrapR = it, this.generateMipmaps = false, this.flipY = false, this.needsUpdate = true;
      }
      Oi.physical = { uniforms: hi([Oi.standard.uniforms, { transparency: { value: 0 }, clearcoat: { value: 0 }, clearcoatRoughness: { value: 0 }, sheen: { value: new lr(0) }, clearcoatNormalScale: { value: new Le(1, 1) }, clearcoatNormalMap: { value: null } }]), vertexShader: Ei.meshphysical_vert, fragmentShader: Ei.meshphysical_frag }, ((Ri.prototype = Object.create(Ne.prototype)).constructor = Ri).prototype.isCubeTexture = true, Object.defineProperty(Ri.prototype, "images", { get: function() {
        return this.image;
      }, set: function(t3) {
        this.image = t3;
      } }), ((Li.prototype = Object.create(Ne.prototype)).constructor = Li).prototype.isDataTexture2DArray = true, ((Ii.prototype = Object.create(Ne.prototype)).constructor = Ii).prototype.isDataTexture3D = true;
      var ki = new Ne(), ji = new Li(), Ni = new Ii(), Vi = new Ri(), Fi = [], Bi = [], Gi = new Float32Array(16), zi = new Float32Array(9), Ui = new Float32Array(4);
      function Hi(t3, e3, n3) {
        var r3 = t3[0];
        if (r3 <= 0 || 0 < r3) return t3;
        var i3 = e3 * n3, a2 = Fi[i3];
        if (void 0 === a2 && (a2 = new Float32Array(i3), Fi[i3] = a2), 0 !== e3) {
          r3.toArray(a2, 0);
          for (var o2 = 1, s2 = 0; o2 !== e3; ++o2) s2 += n3, t3[o2].toArray(a2, s2);
        }
        return a2;
      }
      function Wi(t3, e3) {
        if (t3.length === e3.length) {
          for (var n3 = 0, r3 = t3.length; n3 < r3; n3++) if (t3[n3] !== e3[n3]) return;
          return 1;
        }
      }
      function Ji(t3, e3) {
        for (var n3 = 0, r3 = e3.length; n3 < r3; n3++) t3[n3] = e3[n3];
      }
      function qi(t3, e3) {
        var n3 = Bi[e3];
        void 0 === n3 && (n3 = new Int32Array(e3), Bi[e3] = n3);
        for (var r3 = 0; r3 !== e3; ++r3) n3[r3] = t3.allocateTextureUnit();
        return n3;
      }
      function Xi(t3, e3) {
        var n3 = this.cache;
        n3[0] !== e3 && (t3.uniform1f(this.addr, e3), n3[0] = e3);
      }
      function Yi(t3, e3) {
        var n3 = this.cache;
        if (void 0 !== e3.x) n3[0] === e3.x && n3[1] === e3.y || (t3.uniform2f(this.addr, e3.x, e3.y), n3[0] = e3.x, n3[1] = e3.y);
        else {
          if (Wi(n3, e3)) return;
          t3.uniform2fv(this.addr, e3), Ji(n3, e3);
        }
      }
      function Zi(t3, e3) {
        var n3 = this.cache;
        if (void 0 !== e3.x) n3[0] === e3.x && n3[1] === e3.y && n3[2] === e3.z || (t3.uniform3f(this.addr, e3.x, e3.y, e3.z), n3[0] = e3.x, n3[1] = e3.y, n3[2] = e3.z);
        else if (void 0 !== e3.r) n3[0] === e3.r && n3[1] === e3.g && n3[2] === e3.b || (t3.uniform3f(this.addr, e3.r, e3.g, e3.b), n3[0] = e3.r, n3[1] = e3.g, n3[2] = e3.b);
        else {
          if (Wi(n3, e3)) return;
          t3.uniform3fv(this.addr, e3), Ji(n3, e3);
        }
      }
      function Ki(t3, e3) {
        var n3 = this.cache;
        if (void 0 !== e3.x) n3[0] === e3.x && n3[1] === e3.y && n3[2] === e3.z && n3[3] === e3.w || (t3.uniform4f(this.addr, e3.x, e3.y, e3.z, e3.w), n3[0] = e3.x, n3[1] = e3.y, n3[2] = e3.z, n3[3] = e3.w);
        else {
          if (Wi(n3, e3)) return;
          t3.uniform4fv(this.addr, e3), Ji(n3, e3);
        }
      }
      function $i(t3, e3) {
        var n3 = this.cache, r3 = e3.elements;
        if (void 0 === r3) {
          if (Wi(n3, e3)) return;
          t3.uniformMatrix2fv(this.addr, false, e3), Ji(n3, e3);
        } else {
          if (Wi(n3, r3)) return;
          Ui.set(r3), t3.uniformMatrix2fv(this.addr, false, Ui), Ji(n3, r3);
        }
      }
      function Qi(t3, e3) {
        var n3 = this.cache, r3 = e3.elements;
        if (void 0 === r3) {
          if (Wi(n3, e3)) return;
          t3.uniformMatrix3fv(this.addr, false, e3), Ji(n3, e3);
        } else {
          if (Wi(n3, r3)) return;
          zi.set(r3), t3.uniformMatrix3fv(this.addr, false, zi), Ji(n3, r3);
        }
      }
      function ta(t3, e3) {
        var n3 = this.cache, r3 = e3.elements;
        if (void 0 === r3) {
          if (Wi(n3, e3)) return;
          t3.uniformMatrix4fv(this.addr, false, e3), Ji(n3, e3);
        } else {
          if (Wi(n3, r3)) return;
          Gi.set(r3), t3.uniformMatrix4fv(this.addr, false, Gi), Ji(n3, r3);
        }
      }
      function ea(t3, e3, n3) {
        var r3 = this.cache, i3 = n3.allocateTextureUnit();
        r3[0] !== i3 && (t3.uniform1i(this.addr, i3), r3[0] = i3), n3.safeSetTexture2D(e3 || ki, i3);
      }
      function na(t3, e3, n3) {
        var r3 = this.cache, i3 = n3.allocateTextureUnit();
        r3[0] !== i3 && (t3.uniform1i(this.addr, i3), r3[0] = i3), n3.setTexture2DArray(e3 || ji, i3);
      }
      function ra(t3, e3, n3) {
        var r3 = this.cache, i3 = n3.allocateTextureUnit();
        r3[0] !== i3 && (t3.uniform1i(this.addr, i3), r3[0] = i3), n3.setTexture3D(e3 || Ni, i3);
      }
      function ia(t3, e3, n3) {
        var r3 = this.cache, i3 = n3.allocateTextureUnit();
        r3[0] !== i3 && (t3.uniform1i(this.addr, i3), r3[0] = i3), n3.safeSetTextureCube(e3 || Vi, i3);
      }
      function aa(t3, e3) {
        var n3 = this.cache;
        n3[0] !== e3 && (t3.uniform1i(this.addr, e3), n3[0] = e3);
      }
      function oa(t3, e3) {
        var n3 = this.cache;
        Wi(n3, e3) || (t3.uniform2iv(this.addr, e3), Ji(n3, e3));
      }
      function sa(t3, e3) {
        var n3 = this.cache;
        Wi(n3, e3) || (t3.uniform3iv(this.addr, e3), Ji(n3, e3));
      }
      function la(t3, e3) {
        var n3 = this.cache;
        Wi(n3, e3) || (t3.uniform4iv(this.addr, e3), Ji(n3, e3));
      }
      function ca(t3, e3) {
        var n3 = this.cache;
        n3[0] !== e3 && (t3.uniform1ui(this.addr, e3), n3[0] = e3);
      }
      function ua(t3, e3) {
        t3.uniform1fv(this.addr, e3);
      }
      function ha(t3, e3) {
        t3.uniform1iv(this.addr, e3);
      }
      function pa(t3, e3) {
        t3.uniform2iv(this.addr, e3);
      }
      function da(t3, e3) {
        t3.uniform3iv(this.addr, e3);
      }
      function fa(t3, e3) {
        t3.uniform4iv(this.addr, e3);
      }
      function ma(t3, e3) {
        var n3 = Hi(e3, this.size, 2);
        t3.uniform2fv(this.addr, n3);
      }
      function ga(t3, e3) {
        var n3 = Hi(e3, this.size, 3);
        t3.uniform3fv(this.addr, n3);
      }
      function ya(t3, e3) {
        var n3 = Hi(e3, this.size, 4);
        t3.uniform4fv(this.addr, n3);
      }
      function va(t3, e3) {
        var n3 = Hi(e3, this.size, 4);
        t3.uniformMatrix2fv(this.addr, false, n3);
      }
      function xa(t3, e3) {
        var n3 = Hi(e3, this.size, 9);
        t3.uniformMatrix3fv(this.addr, false, n3);
      }
      function wa(t3, e3) {
        var n3 = Hi(e3, this.size, 16);
        t3.uniformMatrix4fv(this.addr, false, n3);
      }
      function ba(t3, e3, n3) {
        var r3 = e3.length, i3 = qi(n3, r3);
        t3.uniform1iv(this.addr, i3);
        for (var a2 = 0; a2 !== r3; ++a2) n3.safeSetTexture2D(e3[a2] || ki, i3[a2]);
      }
      function Ma(t3, e3, n3) {
        var r3 = e3.length, i3 = qi(n3, r3);
        t3.uniform1iv(this.addr, i3);
        for (var a2 = 0; a2 !== r3; ++a2) n3.safeSetTextureCube(e3[a2] || Vi, i3[a2]);
      }
      function _a(t3, e3, n3) {
        this.id = t3, this.addr = n3, this.cache = [], this.setValue = function(t4) {
          switch (e3.type) {
            case 5126:
              return Xi;
            case 35664:
              return Yi;
            case 35665:
              return Zi;
            case 35666:
              return Ki;
            case 35674:
              return $i;
            case 35675:
              return Qi;
            case 35676:
              return ta;
            case 5124:
            case 35670:
              return aa;
            case 35667:
            case 35671:
              return oa;
            case 35668:
            case 35672:
              return sa;
            case 35669:
            case 35673:
              return la;
            case 5125:
              return ca;
            case 35678:
            case 36198:
            case 36298:
            case 36306:
            case 35682:
              return ea;
            case 35679:
            case 36299:
            case 36307:
              return ra;
            case 35680:
            case 36300:
            case 36308:
            case 36293:
              return ia;
            case 36289:
            case 36303:
            case 36311:
            case 36292:
              return na;
          }
        }();
      }
      function Ta(t3, e3, n3) {
        this.id = t3, this.addr = n3, this.cache = [], this.size = e3.size, this.setValue = function(t4) {
          switch (e3.type) {
            case 5126:
              return ua;
            case 35664:
              return ma;
            case 35665:
              return ga;
            case 35666:
              return ya;
            case 35674:
              return va;
            case 35675:
              return xa;
            case 35676:
              return wa;
            case 5124:
            case 35670:
              return ha;
            case 35667:
            case 35671:
              return pa;
            case 35668:
            case 35672:
              return da;
            case 35669:
            case 35673:
              return fa;
            case 35678:
            case 36198:
            case 36298:
            case 36306:
            case 35682:
              return ba;
            case 35680:
            case 36300:
            case 36308:
            case 36293:
              return Ma;
          }
        }();
      }
      function Ca(t3) {
        this.id = t3, this.seq = [], this.map = {};
      }
      Ta.prototype.updateCache = function(t3) {
        var e3 = this.cache;
        t3 instanceof Float32Array && e3.length !== t3.length && (this.cache = new Float32Array(t3.length)), Ji(e3, t3);
      }, Ca.prototype.setValue = function(t3, e3, n3) {
        for (var r3 = this.seq, i3 = 0, a2 = r3.length; i3 !== a2; ++i3) {
          var o2 = r3[i3];
          o2.setValue(t3, e3[o2.id], n3);
        }
      };
      var Sa = /([\w\d_]+)(\])?(\[|\.)?/g;
      function Da(t3, e3) {
        t3.seq.push(e3), t3.map[e3.id] = e3;
      }
      function Ea(t3, e3, n3) {
        var r3 = t3.name, i3 = r3.length;
        for (Sa.lastIndex = 0; ; ) {
          var a2 = Sa.exec(r3), o2 = Sa.lastIndex, s2 = a2[1], l2 = "]" === a2[2], c2 = a2[3];
          if (l2 && (s2 |= 0), void 0 === c2 || "[" === c2 && o2 + 2 === i3) {
            Da(n3, new (void 0 === c2 ? _a : Ta)(s2, t3, e3));
            break;
          }
          var u2 = n3.map[s2];
          void 0 === u2 && Da(n3, u2 = new Ca(s2)), n3 = u2;
        }
      }
      function Oa(t3, e3) {
        this.seq = [], this.map = {};
        for (var n3 = t3.getProgramParameter(e3, 35718), r3 = 0; r3 < n3; ++r3) {
          var i3 = t3.getActiveUniform(e3, r3);
          Ea(i3, t3.getUniformLocation(e3, i3.name), this);
        }
      }
      function Aa(t3, e3, n3) {
        var r3 = t3.createShader(e3);
        return t3.shaderSource(r3, n3), t3.compileShader(r3), r3;
      }
      Oa.prototype.setValue = function(t3, e3, n3, r3) {
        var i3 = this.map[e3];
        void 0 !== i3 && i3.setValue(t3, n3, r3);
      }, Oa.prototype.setOptional = function(t3, e3, n3) {
        var r3 = e3[n3];
        void 0 !== r3 && this.setValue(t3, n3, r3);
      }, Oa.upload = function(t3, e3, n3, r3) {
        for (var i3 = 0, a2 = e3.length; i3 !== a2; ++i3) {
          var o2 = e3[i3], s2 = n3[o2.id];
          false !== s2.needsUpdate && o2.setValue(t3, s2.value, r3);
        }
      }, Oa.seqWithValue = function(t3, e3) {
        for (var n3 = [], r3 = 0, i3 = t3.length; r3 !== i3; ++r3) {
          var a2 = t3[r3];
          a2.id in e3 && n3.push(a2);
        }
        return n3;
      };
      var Pa = 0;
      function Ra(t3) {
        switch (t3) {
          case pe:
            return ["Linear", "( value )"];
          case de:
            return ["sRGB", "( value )"];
          case me:
            return ["RGBE", "( value )"];
          case ye:
            return ["RGBM", "( value, 7.0 )"];
          case ve:
            return ["RGBM", "( value, 16.0 )"];
          case xe:
            return ["RGBD", "( value, 256.0 )"];
          case fe:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
          case ge:
            return ["LogLuv", "( value )"];
          default:
            throw new Error("unsupported encoding: " + t3);
        }
      }
      function La(t3, e3, n3) {
        var r3 = t3.getShaderParameter(e3, 35713), i3 = t3.getShaderInfoLog(e3).trim();
        return r3 && "" === i3 ? "" : "THREE.WebGLShader: gl.getShaderInfoLog() " + n3 + "\n" + i3 + function(t4) {
          for (var e4 = t4.split("\n"), n4 = 0; n4 < e4.length; n4++) e4[n4] = n4 + 1 + ": " + e4[n4];
          return e4.join("\n");
        }(t3.getShaderSource(e3));
      }
      function Ia(t3, e3) {
        var n3 = Ra(e3);
        return "vec4 " + t3 + "( vec4 value ) { return " + n3[0] + "ToLinear" + n3[1] + "; }";
      }
      function ka(t3) {
        return "" !== t3;
      }
      function ja(t3, e3) {
        return t3.replace(/NUM_DIR_LIGHTS/g, e3.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e3.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e3.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e3.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e3.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e3.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e3.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e3.numPointLightShadows);
      }
      function Na(t3, e3) {
        return t3.replace(/NUM_CLIPPING_PLANES/g, e3.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e3.numClippingPlanes - e3.numClipIntersection);
      }
      var Va = /^[ \t]*#include +<([\w\d./]+)>/gm;
      function Fa(t3) {
        return t3.replace(Va, Ba);
      }
      function Ba(t3, e3) {
        var n3 = Ei[e3];
        if (void 0 === n3) throw new Error("Can not resolve #include <" + e3 + ">");
        return Fa(n3);
      }
      var Ga = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
      function za(t3) {
        return t3.replace(Ga, Ua);
      }
      function Ua(t3, e3, n3, r3) {
        for (var i3 = "", a2 = parseInt(e3); a2 < parseInt(n3); a2++) i3 += r3.replace(/\[ i \]/g, "[ " + a2 + " ]").replace(/UNROLLED_LOOP_INDEX/g, a2);
        return i3;
      }
      function Ha(t3) {
        var e3 = "precision " + t3.precision + " float;\nprecision " + t3.precision + " int;";
        return "highp" === t3.precision ? e3 += "\n#define HIGH_PRECISION" : "mediump" === t3.precision ? e3 += "\n#define MEDIUM_PRECISION" : "lowp" === t3.precision && (e3 += "\n#define LOW_PRECISION"), e3;
      }
      function Wa(t3, e3, n3) {
        var r3, s2, l2, c2, u2, h2, p2, d2 = t3.getContext(), f2 = n3.defines, m2 = n3.vertexShader, g2 = n3.fragmentShader, y2 = (s2 = "SHADOWMAP_TYPE_BASIC", (r3 = n3).shadowMapType === i2 ? s2 = "SHADOWMAP_TYPE_PCF" : r3.shadowMapType === a ? s2 = "SHADOWMAP_TYPE_PCF_SOFT" : r3.shadowMapType === o && (s2 = "SHADOWMAP_TYPE_VSM"), s2), v2 = function(t4) {
          var e4 = "ENVMAP_TYPE_CUBE";
          if (t4.envMap) switch (t4.envMapMode) {
            case Z:
            case K:
              e4 = "ENVMAP_TYPE_CUBE";
              break;
            case et:
            case nt:
              e4 = "ENVMAP_TYPE_CUBE_UV";
              break;
            case $2:
            case Q:
              e4 = "ENVMAP_TYPE_EQUIREC";
              break;
            case tt:
              e4 = "ENVMAP_TYPE_SPHERE";
          }
          return e4;
        }(n3), x2 = function(t4) {
          var e4 = "ENVMAP_MODE_REFLECTION";
          if (t4.envMap) switch (t4.envMapMode) {
            case K:
            case Q:
              e4 = "ENVMAP_MODE_REFRACTION";
          }
          return e4;
        }(n3), w2 = function(t4) {
          var e4 = "ENVMAP_BLENDING_NONE";
          if (t4.envMap) switch (t4.combine) {
            case G:
              e4 = "ENVMAP_BLENDING_MULTIPLY";
              break;
            case z:
              e4 = "ENVMAP_BLENDING_MIX";
              break;
            case U:
              e4 = "ENVMAP_BLENDING_ADD";
          }
          return e4;
        }(n3), b2 = 0 < t3.gammaFactor ? t3.gammaFactor : 1, M2 = n3.isWebGL2 ? "" : [(l2 = n3).extensionDerivatives || l2.envMapCubeUV || l2.bumpMap || l2.tangentSpaceNormalMap || l2.clearcoatNormalMap || l2.flatShading || "physical" === l2.shaderID ? "#extension GL_OES_standard_derivatives : enable" : "", (l2.extensionFragDepth || l2.logarithmicDepthBuffer) && l2.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "", l2.extensionDrawBuffers && l2.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "", (l2.extensionShaderTextureLOD || l2.envMap) && l2.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(ka).join("\n"), _2 = function(t4) {
          var e4 = [];
          for (var n4 in t4) {
            var r4 = t4[n4];
            false !== r4 && e4.push("#define " + n4 + " " + r4);
          }
          return e4.join("\n");
        }(f2), T2 = d2.createProgram(), C2 = n3.numMultiviewViews;
        if (n3.isRawShaderMaterial ? (0 < (c2 = [_2].filter(ka).join("\n")).length && (c2 += "\n"), 0 < (u2 = [M2, _2].filter(ka).join("\n")).length && (u2 += "\n")) : (c2 = [Ha(n3), "#define SHADER_NAME " + n3.shaderName, _2, n3.instancing ? "#define USE_INSTANCING" : "", n3.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + b2, "#define MAX_BONES " + n3.maxBones, n3.useFog && n3.fog ? "#define USE_FOG" : "", n3.useFog && n3.fogExp2 ? "#define FOG_EXP2" : "", n3.map ? "#define USE_MAP" : "", n3.envMap ? "#define USE_ENVMAP" : "", n3.envMap ? "#define " + x2 : "", n3.lightMap ? "#define USE_LIGHTMAP" : "", n3.aoMap ? "#define USE_AOMAP" : "", n3.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n3.bumpMap ? "#define USE_BUMPMAP" : "", n3.normalMap ? "#define USE_NORMALMAP" : "", n3.normalMap && n3.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n3.normalMap && n3.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n3.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n3.displacementMap && n3.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", n3.specularMap ? "#define USE_SPECULARMAP" : "", n3.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n3.metalnessMap ? "#define USE_METALNESSMAP" : "", n3.alphaMap ? "#define USE_ALPHAMAP" : "", n3.vertexTangents ? "#define USE_TANGENT" : "", n3.vertexColors ? "#define USE_COLOR" : "", n3.vertexUvs ? "#define USE_UV" : "", n3.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n3.flatShading ? "#define FLAT_SHADED" : "", n3.skinning ? "#define USE_SKINNING" : "", n3.useVertexTexture ? "#define BONE_TEXTURE" : "", n3.morphTargets ? "#define USE_MORPHTARGETS" : "", n3.morphNormals && false === n3.flatShading ? "#define USE_MORPHNORMALS" : "", n3.doubleSided ? "#define DOUBLE_SIDED" : "", n3.flipSided ? "#define FLIP_SIDED" : "", n3.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n3.shadowMapEnabled ? "#define " + y2 : "", n3.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n3.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n3.logarithmicDepthBuffer && n3.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", " attribute mat4 instanceMatrix;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "	attribute vec4 tangent;", "#endif", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", "\n"].filter(ka).join("\n"), u2 = [M2, Ha(n3), "#define SHADER_NAME " + n3.shaderName, _2, n3.alphaTest ? "#define ALPHATEST " + n3.alphaTest + (n3.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + b2, n3.useFog && n3.fog ? "#define USE_FOG" : "", n3.useFog && n3.fogExp2 ? "#define FOG_EXP2" : "", n3.map ? "#define USE_MAP" : "", n3.matcap ? "#define USE_MATCAP" : "", n3.envMap ? "#define USE_ENVMAP" : "", n3.envMap ? "#define " + v2 : "", n3.envMap ? "#define " + x2 : "", n3.envMap ? "#define " + w2 : "", n3.lightMap ? "#define USE_LIGHTMAP" : "", n3.aoMap ? "#define USE_AOMAP" : "", n3.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n3.bumpMap ? "#define USE_BUMPMAP" : "", n3.normalMap ? "#define USE_NORMALMAP" : "", n3.normalMap && n3.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n3.normalMap && n3.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n3.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n3.specularMap ? "#define USE_SPECULARMAP" : "", n3.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n3.metalnessMap ? "#define USE_METALNESSMAP" : "", n3.alphaMap ? "#define USE_ALPHAMAP" : "", n3.sheen ? "#define USE_SHEEN" : "", n3.vertexTangents ? "#define USE_TANGENT" : "", n3.vertexColors ? "#define USE_COLOR" : "", n3.vertexUvs ? "#define USE_UV" : "", n3.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n3.gradientMap ? "#define USE_GRADIENTMAP" : "", n3.flatShading ? "#define FLAT_SHADED" : "", n3.doubleSided ? "#define DOUBLE_SIDED" : "", n3.flipSided ? "#define FLIP_SIDED" : "", n3.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n3.shadowMapEnabled ? "#define " + y2 : "", n3.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", n3.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", n3.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n3.logarithmicDepthBuffer && n3.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", (n3.extensionShaderTextureLOD || n3.envMap) && n3.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", n3.toneMapping !== H ? "#define TONE_MAPPING" : "", n3.toneMapping !== H ? Ei.tonemapping_pars_fragment : "", n3.toneMapping !== H ? function(t4, e4) {
          var n4;
          switch (e4) {
            case W:
              n4 = "Linear";
              break;
            case J:
              n4 = "Reinhard";
              break;
            case q:
              n4 = "Uncharted2";
              break;
            case X:
              n4 = "OptimizedCineon";
              break;
            case Y:
              n4 = "ACESFilmic";
              break;
            default:
              throw new Error("unsupported toneMapping: " + e4);
          }
          return "vec3 toneMapping( vec3 color ) { return " + n4 + "ToneMapping( color ); }";
        }(0, n3.toneMapping) : "", n3.dithering ? "#define DITHERING" : "", n3.outputEncoding || n3.mapEncoding || n3.matcapEncoding || n3.envMapEncoding || n3.emissiveMapEncoding || n3.lightMapEncoding ? Ei.encodings_pars_fragment : "", n3.mapEncoding ? Ia("mapTexelToLinear", n3.mapEncoding) : "", n3.matcapEncoding ? Ia("matcapTexelToLinear", n3.matcapEncoding) : "", n3.envMapEncoding ? Ia("envMapTexelToLinear", n3.envMapEncoding) : "", n3.emissiveMapEncoding ? Ia("emissiveMapTexelToLinear", n3.emissiveMapEncoding) : "", n3.lightMapEncoding ? Ia("lightMapTexelToLinear", n3.lightMapEncoding) : "", n3.outputEncoding ? (h2 = n3.outputEncoding, p2 = Ra(h2), "vec4 linearToOutputTexel( vec4 value ) { return LinearTo" + p2[0] + p2[1] + "; }") : "", n3.depthPacking ? "#define DEPTH_PACKING " + n3.depthPacking : "", "\n"].filter(ka).join("\n")), m2 = Na(m2 = ja(m2 = Fa(m2), n3), n3), g2 = Na(g2 = ja(g2 = Fa(g2), n3), n3), m2 = za(m2), g2 = za(g2), n3.isWebGL2 && !n3.isRawShaderMaterial) {
          var S2 = false, D2 = /^\s*#version\s+300\s+es\s*\n/;
          n3.isShaderMaterial && null !== m2.match(D2) && null !== g2.match(D2) && (S2 = true, m2 = m2.replace(D2, ""), g2 = g2.replace(D2, "")), c2 = ["#version 300 es\n", "#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + c2, u2 = ["#version 300 es\n", "#define varying in", S2 ? "" : "out highp vec4 pc_fragColor;", S2 ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + u2, 0 < C2 && (c2 = (c2 = c2.replace("#version 300 es\n", ["#version 300 es\n", "#extension GL_OVR_multiview2 : require", "layout(num_views = " + C2 + ") in;", "#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace(["uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;"].join("\n"), ["uniform mat4 modelViewMatrices[" + C2 + "];", "uniform mat4 projectionMatrices[" + C2 + "];", "uniform mat4 viewMatrices[" + C2 + "];", "uniform mat3 normalMatrices[" + C2 + "];", "#define modelViewMatrix modelViewMatrices[VIEW_ID]", "#define projectionMatrix projectionMatrices[VIEW_ID]", "#define viewMatrix viewMatrices[VIEW_ID]", "#define normalMatrix normalMatrices[VIEW_ID]"].join("\n")), u2 = (u2 = u2.replace("#version 300 es\n", ["#version 300 es\n", "#extension GL_OVR_multiview2 : require", "#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace("uniform mat4 viewMatrix;", ["uniform mat4 viewMatrices[" + C2 + "];", "#define viewMatrix viewMatrices[VIEW_ID]"].join("\n")));
        }
        var E2, O2, A2 = u2 + g2, P2 = Aa(d2, 35633, c2 + m2), R2 = Aa(d2, 35632, A2);
        if (d2.attachShader(T2, P2), d2.attachShader(T2, R2), void 0 !== n3.index0AttributeName ? d2.bindAttribLocation(T2, 0, n3.index0AttributeName) : true === n3.morphTargets && d2.bindAttribLocation(T2, 0, "position"), d2.linkProgram(T2), t3.debug.checkShaderErrors) {
          var L2 = d2.getProgramInfoLog(T2).trim(), I2 = d2.getShaderInfoLog(P2).trim(), k2 = d2.getShaderInfoLog(R2).trim(), j2 = true, N2 = true;
          if (false === d2.getProgramParameter(T2, 35714)) {
            j2 = false;
            var V2 = La(d2, P2, "vertex"), F2 = La(d2, R2, "fragment");
            console.error("THREE.WebGLProgram: shader error: ", d2.getError(), "35715", d2.getProgramParameter(T2, 35715), "gl.getProgramInfoLog", L2, V2, F2);
          } else "" !== L2 ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", L2) : "" !== I2 && "" !== k2 || (N2 = false);
          N2 && (this.diagnostics = { runnable: j2, programLog: L2, vertexShader: { log: I2, prefix: c2 }, fragmentShader: { log: k2, prefix: u2 } });
        }
        return d2.deleteShader(P2), d2.deleteShader(R2), this.getUniforms = function() {
          return void 0 === E2 && (E2 = new Oa(d2, T2)), E2;
        }, this.getAttributes = function() {
          return void 0 === O2 && (O2 = function(t4, e4) {
            for (var n4 = {}, r4 = t4.getProgramParameter(e4, 35721), i3 = 0; i3 < r4; i3++) {
              var a2 = t4.getActiveAttrib(e4, i3).name;
              n4[a2] = t4.getAttribLocation(e4, a2);
            }
            return n4;
          }(d2, T2)), O2;
        }, this.destroy = function() {
          d2.deleteProgram(T2), this.program = void 0;
        }, this.name = n3.shaderName, this.id = Pa++, this.cacheKey = e3, this.usedTimes = 1, this.program = T2, this.vertexShader = P2, this.fragmentShader = R2, this.numMultiviewViews = C2, this;
      }
      function Ja(t3, e3, n3) {
        var r3 = [], i3 = n3.isWebGL2, a2 = n3.logarithmicDepthBuffer, o2 = n3.floatVertexTextures, s2 = n3.precision, u2 = n3.maxVertexUniforms, h2 = n3.vertexTextures, p2 = { MeshDepthMaterial: "depth", MeshDistanceMaterial: "distanceRGBA", MeshNormalMaterial: "normal", MeshBasicMaterial: "basic", MeshLambertMaterial: "lambert", MeshPhongMaterial: "phong", MeshToonMaterial: "toon", MeshStandardMaterial: "physical", MeshPhysicalMaterial: "physical", MeshMatcapMaterial: "matcap", LineBasicMaterial: "basic", LineDashedMaterial: "dashed", PointsMaterial: "points", ShadowMaterial: "shadow", SpriteMaterial: "sprite" }, d2 = ["precision", "isWebGL2", "supportsVertexTextures", "outputEncoding", "instancing", "numMultiviewViews", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "envMapCubeUV", "lightMap", "lightMapEncoding", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "tangentSpaceNormalMap", "clearcoatNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexTangents", "vertexUvs", "uvsVertexOnly", "fog", "useFog", "fogExp2", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "numDirLightShadows", "numPointLightShadows", "numSpotLightShadows", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering", "sheen"];
        function f2(t4) {
          var e4;
          return t4 ? t4.isTexture ? e4 = t4.encoding : t4.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), e4 = t4.texture.encoding) : e4 = pe, e4;
        }
        this.getParameters = function(r4, d3, m2, g2, y2, v2, x2) {
          var w2 = g2.fog, b2 = r4.isMeshStandardMaterial ? g2.environment : null, M2 = r4.envMap || b2, _2 = p2[r4.type], T2 = x2.isSkinnedMesh ? function(t4) {
            var e4 = x2.skeleton.bones;
            if (o2) return 1024;
            var n4 = u2, r5 = Math.floor((n4 - 20) / 4), i4 = Math.min(r5, e4.length);
            return i4 < e4.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + e4.length + " bones. This GPU supports " + i4 + "."), 0) : i4;
          }() : 0;
          null !== r4.precision && (s2 = n3.getMaxPrecision(r4.precision)) !== r4.precision && console.warn("THREE.WebGLProgram.getParameters:", r4.precision, "not supported, using", s2, "instead.");
          var C2 = function(t4, e4) {
            var n4;
            if (_2) {
              var r5 = Oi[_2];
              n4 = { name: t4.type, uniforms: pi.clone(r5.uniforms), vertexShader: r5.vertexShader, fragmentShader: r5.fragmentShader };
            } else n4 = { name: t4.type, uniforms: t4.uniforms, vertexShader: t4.vertexShader, fragmentShader: t4.fragmentShader };
            return n4;
          }(r4);
          r4.onBeforeCompile(C2, t3);
          var S2 = t3.getRenderTarget(), D2 = S2 && S2.isWebGLMultiviewRenderTarget ? S2.numViews : 0;
          return { isWebGL2: i3, shaderID: _2, shaderName: C2.name, uniforms: C2.uniforms, vertexShader: C2.vertexShader, fragmentShader: C2.fragmentShader, defines: r4.defines, isRawShaderMaterial: r4.isRawShaderMaterial, isShaderMaterial: r4.isShaderMaterial, precision: s2, instancing: true === x2.isInstancedMesh, supportsVertexTextures: h2, numMultiviewViews: D2, outputEncoding: null !== S2 ? f2(S2.texture) : t3.outputEncoding, map: !!r4.map, mapEncoding: f2(r4.map), matcap: !!r4.matcap, matcapEncoding: f2(r4.matcap), envMap: !!M2, envMapMode: M2 && M2.mapping, envMapEncoding: f2(M2), envMapCubeUV: !!M2 && (M2.mapping === et || M2.mapping === nt), lightMap: !!r4.lightMap, lightMapEncoding: f2(r4.lightMap), aoMap: !!r4.aoMap, emissiveMap: !!r4.emissiveMap, emissiveMapEncoding: f2(r4.emissiveMap), bumpMap: !!r4.bumpMap, normalMap: !!r4.normalMap, objectSpaceNormalMap: r4.normalMapType === _e, tangentSpaceNormalMap: r4.normalMapType === Me, clearcoatNormalMap: !!r4.clearcoatNormalMap, displacementMap: !!r4.displacementMap, roughnessMap: !!r4.roughnessMap, metalnessMap: !!r4.metalnessMap, specularMap: !!r4.specularMap, alphaMap: !!r4.alphaMap, gradientMap: !!r4.gradientMap, sheen: !!r4.sheen, combine: r4.combine, vertexTangents: r4.normalMap && r4.vertexTangents, vertexColors: r4.vertexColors, vertexUvs: !!(r4.map || r4.bumpMap || r4.normalMap || r4.specularMap || r4.alphaMap || r4.emissiveMap || r4.roughnessMap || r4.metalnessMap || r4.clearcoatNormalMap || r4.displacementMap), uvsVertexOnly: !(r4.map || r4.bumpMap || r4.normalMap || r4.specularMap || r4.alphaMap || r4.emissiveMap || r4.roughnessMap || r4.metalnessMap || r4.clearcoatNormalMap || !r4.displacementMap), fog: !!w2, useFog: r4.fog, fogExp2: w2 && w2.isFogExp2, flatShading: r4.flatShading, sizeAttenuation: r4.sizeAttenuation, logarithmicDepthBuffer: a2, skinning: r4.skinning && 0 < T2, maxBones: T2, useVertexTexture: o2, morphTargets: r4.morphTargets, morphNormals: r4.morphNormals, maxMorphTargets: t3.maxMorphTargets, maxMorphNormals: t3.maxMorphNormals, numDirLights: d3.directional.length, numPointLights: d3.point.length, numSpotLights: d3.spot.length, numRectAreaLights: d3.rectArea.length, numHemiLights: d3.hemi.length, numDirLightShadows: d3.directionalShadowMap.length, numPointLightShadows: d3.pointShadowMap.length, numSpotLightShadows: d3.spotShadowMap.length, numClippingPlanes: y2, numClipIntersection: v2, dithering: r4.dithering, shadowMapEnabled: t3.shadowMap.enabled && 0 < m2.length, shadowMapType: t3.shadowMap.type, toneMapping: r4.toneMapped ? t3.toneMapping : H, physicallyCorrectLights: t3.physicallyCorrectLights, premultipliedAlpha: r4.premultipliedAlpha, alphaTest: r4.alphaTest, doubleSided: r4.side === c, flipSided: r4.side === l, depthPacking: void 0 !== r4.depthPacking && r4.depthPacking, index0AttributeName: r4.index0AttributeName, extensionDerivatives: r4.extensions && r4.extensions.derivatives, extensionFragDepth: r4.extensions && r4.extensions.frawbuffers, extensionDrawbuffers: r4.extensions && r4.extensions.drawbuffers, extensionShaderTextureLOD: r4.extensions && r4.extensions.shaderTextureLOD, rendererExtensionFragDepth: i3 || null !== e3.get("EXT_frag_depth"), rendererExtensionDrawBuffers: i3 || null !== e3.get("WEBGL_draw_buffers"), rendererExtensionShaderTextureLod: i3 || null !== e3.get("EXT_shader_texture_lod"), onBeforeCompile: r4.onBeforeCompile };
        }, this.getProgramCacheKey = function(e4) {
          var n4 = [];
          if (e4.shaderID ? n4.push(e4.shaderID) : (n4.push(e4.fragmentShader), n4.push(e4.vertexShader)), void 0 !== e4.defines) for (var r4 in e4.defines) n4.push(r4), n4.push(e4.defines[r4]);
          if (void 0 === e4.isRawShaderMaterial) {
            for (var i4 = 0; i4 < d2.length; i4++) n4.push(e4[d2[i4]]);
            n4.push(t3.outputEncoding), n4.push(t3.gammaFactor);
          }
          return n4.push(e4.onBeforeCompile.toString()), n4.join();
        }, this.acquireProgram = function(e4, n4) {
          for (var i4, a3 = 0, o3 = r3.length; a3 < o3; a3++) {
            var s3 = r3[a3];
            if (s3.cacheKey === n4) {
              ++(i4 = s3).usedTimes;
              break;
            }
          }
          return void 0 === i4 && (i4 = new Wa(t3, n4, e4), r3.push(i4)), i4;
        }, this.releaseProgram = function(t4) {
          if (0 == --t4.usedTimes) {
            var e4 = r3.indexOf(t4);
            r3[e4] = r3[r3.length - 1], r3.pop(), t4.destroy();
          }
        }, this.programs = r3;
      }
      function qa(t3, e3) {
        return t3.groupOrder !== e3.groupOrder ? t3.groupOrder - e3.groupOrder : t3.renderOrder !== e3.renderOrder ? t3.renderOrder - e3.renderOrder : t3.program !== e3.program ? t3.program.id - e3.program.id : t3.material.id !== e3.material.id ? t3.material.id - e3.material.id : t3.z !== e3.z ? t3.z - e3.z : t3.id - e3.id;
      }
      function Xa(t3, e3) {
        return t3.groupOrder !== e3.groupOrder ? t3.groupOrder - e3.groupOrder : t3.renderOrder !== e3.renderOrder ? t3.renderOrder - e3.renderOrder : t3.z !== e3.z ? e3.z - t3.z : t3.id - e3.id;
      }
      function Ya() {
        var t3 = [], e3 = 0, n3 = [], r3 = [], i3 = { id: -1 };
        function a2(n4, r4, a3, o2, s2, l2) {
          var c2 = t3[e3];
          return void 0 === c2 ? (c2 = { id: n4.id, object: n4, geometry: r4, material: a3, program: a3.program || i3, groupOrder: o2, renderOrder: n4.renderOrder, z: s2, group: l2 }, t3[e3] = c2) : (c2.id = n4.id, c2.object = n4, c2.geometry = r4, c2.material = a3, c2.program = a3.program || i3, c2.groupOrder = o2, c2.renderOrder = n4.renderOrder, c2.z = s2, c2.group = l2), e3++, c2;
        }
        return { opaque: n3, transparent: r3, init: function() {
          e3 = 0, n3.length = 0, r3.length = 0;
        }, push: function(t4, e4, i4, o2, s2, l2) {
          var c2 = a2(t4, e4, i4, o2, s2, l2);
          (true === i4.transparent ? r3 : n3).push(c2);
        }, unshift: function(t4, e4, i4, o2, s2, l2) {
          var c2 = a2(t4, e4, i4, o2, s2, l2);
          (true === i4.transparent ? r3 : n3).unshift(c2);
        }, sort: function(t4, e4) {
          1 < n3.length && n3.sort(t4 || qa), 1 < r3.length && r3.sort(e4 || Xa);
        } };
      }
      var Za = 0;
      function Ka(t3, e3) {
        return (e3.castShadow ? 1 : 0) - (t3.castShadow ? 1 : 0);
      }
      function $a() {
        for (var t3 = new function() {
          var t4 = {};
          return { get: function(e4) {
            if (void 0 !== t4[e4.id]) return t4[e4.id];
            var n4;
            switch (e4.type) {
              case "DirectionalLight":
                n4 = { direction: new He(), color: new lr(), shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Le() };
                break;
              case "SpotLight":
                n4 = { position: new He(), direction: new He(), color: new lr(), distance: 0, coneCos: 0, penumbraCos: 0, decay: 0, shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Le() };
                break;
              case "PointLight":
                n4 = { position: new He(), color: new lr(), distance: 0, decay: 0, shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Le(), shadowCameraNear: 1, shadowCameraFar: 1e3 };
                break;
              case "HemisphereLight":
                n4 = { direction: new He(), skyColor: new lr(), groundColor: new lr() };
                break;
              case "RectAreaLight":
                n4 = { color: new lr(), position: new He(), halfWidth: new He(), halfHeight: new He() };
            }
            return t4[e4.id] = n4;
          } };
        }(), e3 = { version: 0, hash: { directionalLength: -1, pointLength: -1, spotLength: -1, rectAreaLength: -1, hemiLength: -1, numDirectionalShadows: -1, numPointShadows: -1, numSpotShadows: -1 }, ambient: [0, 0, 0], probe: [], directional: [], directionalShadowMap: [], directionalShadowMatrix: [], spot: [], spotShadowMap: [], spotShadowMatrix: [], rectArea: [], point: [], pointShadowMap: [], pointShadowMatrix: [], hemi: [], numDirectionalShadows: -1, numPointShadows: -1, numSpotShadows: -1 }, n3 = 0; n3 < 9; n3++) e3.probe.push(new He());
        var r3 = new He(), i3 = new $e(), a2 = new $e();
        return { setup: function(n4, o2, s2) {
          for (var l2 = 0, c2 = 0, u2 = 0, h2 = 0; h2 < 9; h2++) e3.probe[h2].set(0, 0, 0);
          var p2 = 0, d2 = 0, f2 = 0, m2 = 0, g2 = 0, y2 = 0, v2 = 0, x2 = 0, w2 = s2.matrixWorldInverse;
          n4.sort(Ka), h2 = 0;
          for (var b2 = n4.length; h2 < b2; h2++) {
            var M2 = n4[h2], _2 = M2.color, T2 = M2.intensity, C2 = M2.distance, S2 = M2.shadow && M2.shadow.map ? M2.shadow.map.texture : null;
            if (M2.isAmbientLight) l2 += _2.r * T2, c2 += _2.g * T2, u2 += _2.b * T2;
            else if (M2.isLightProbe) for (var D2 = 0; D2 < 9; D2++) e3.probe[D2].addScaledVector(M2.sh.coefficients[D2], T2);
            else if (M2.isDirectionalLight) {
              if ((O2 = t3.get(M2)).color.copy(M2.color).multiplyScalar(M2.intensity), O2.direction.setFromMatrixPosition(M2.matrixWorld), r3.setFromMatrixPosition(M2.target.matrixWorld), O2.direction.sub(r3), O2.direction.transformDirection(w2), O2.shadow = M2.castShadow, M2.castShadow) {
                var E2 = M2.shadow;
                O2.shadowBias = E2.bias, O2.shadowRadius = E2.radius, O2.shadowMapSize = E2.mapSize, e3.directionalShadowMap[p2] = S2, e3.directionalShadowMatrix[p2] = M2.shadow.matrix, y2++;
              }
              e3.directional[p2] = O2, p2++;
            } else if (M2.isSpotLight) (O2 = t3.get(M2)).position.setFromMatrixPosition(M2.matrixWorld), O2.position.applyMatrix4(w2), O2.color.copy(_2).multiplyScalar(T2), O2.distance = C2, O2.direction.setFromMatrixPosition(M2.matrixWorld), r3.setFromMatrixPosition(M2.target.matrixWorld), O2.direction.sub(r3), O2.direction.transformDirection(w2), O2.coneCos = Math.cos(M2.angle), O2.penumbraCos = Math.cos(M2.angle * (1 - M2.penumbra)), O2.decay = M2.decay, O2.shadow = M2.castShadow, M2.castShadow && (E2 = M2.shadow, O2.shadowBias = E2.bias, O2.shadowRadius = E2.radius, O2.shadowMapSize = E2.mapSize, e3.spotShadowMap[f2] = S2, e3.spotShadowMatrix[f2] = M2.shadow.matrix, x2++), e3.spot[f2] = O2, f2++;
            else if (M2.isRectAreaLight) (O2 = t3.get(M2)).color.copy(_2).multiplyScalar(T2), O2.position.setFromMatrixPosition(M2.matrixWorld), O2.position.applyMatrix4(w2), a2.identity(), i3.copy(M2.matrixWorld), i3.premultiply(w2), a2.extractRotation(i3), O2.halfWidth.set(0.5 * M2.width, 0, 0), O2.halfHeight.set(0, 0.5 * M2.height, 0), O2.halfWidth.applyMatrix4(a2), O2.halfHeight.applyMatrix4(a2), e3.rectArea[m2] = O2, m2++;
            else if (M2.isPointLight) (O2 = t3.get(M2)).position.setFromMatrixPosition(M2.matrixWorld), O2.position.applyMatrix4(w2), O2.color.copy(M2.color).multiplyScalar(M2.intensity), O2.distance = M2.distance, O2.decay = M2.decay, O2.shadow = M2.castShadow, M2.castShadow && (E2 = M2.shadow, O2.shadowBias = E2.bias, O2.shadowRadius = E2.radius, O2.shadowMapSize = E2.mapSize, O2.shadowCameraNear = E2.camera.near, O2.shadowCameraFar = E2.camera.far, e3.pointShadowMap[d2] = S2, e3.pointShadowMatrix[d2] = M2.shadow.matrix, v2++), e3.point[d2] = O2, d2++;
            else if (M2.isHemisphereLight) {
              var O2;
              (O2 = t3.get(M2)).direction.setFromMatrixPosition(M2.matrixWorld), O2.direction.transformDirection(w2), O2.direction.normalize(), O2.skyColor.copy(M2.color).multiplyScalar(T2), O2.groundColor.copy(M2.groundColor).multiplyScalar(T2), e3.hemi[g2] = O2, g2++;
            }
          }
          e3.ambient[0] = l2, e3.ambient[1] = c2, e3.ambient[2] = u2;
          var A2 = e3.hash;
          A2.directionalLength === p2 && A2.pointLength === d2 && A2.spotLength === f2 && A2.rectAreaLength === m2 && A2.hemiLength === g2 && A2.numDirectionalShadows === y2 && A2.numPointShadows === v2 && A2.numSpotShadows === x2 || (e3.directional.length = p2, e3.spot.length = f2, e3.rectArea.length = m2, e3.point.length = d2, e3.hemi.length = g2, e3.directionalShadowMap.length = y2, e3.pointShadowMap.length = v2, e3.spotShadowMap.length = x2, e3.directionalShadowMatrix.length = y2, e3.pointShadowMatrix.length = v2, e3.spotShadowMatrix.length = x2, A2.directionalLength = p2, A2.pointLength = d2, A2.spotLength = f2, A2.rectAreaLength = m2, A2.hemiLength = g2, A2.numDirectionalShadows = y2, A2.numPointShadows = v2, A2.numSpotShadows = x2, e3.version = Za++);
        }, state: e3 };
      }
      function Qa() {
        var t3 = new $a(), e3 = [], n3 = [];
        return { init: function() {
          e3.length = 0, n3.length = 0;
        }, state: { lightsArray: e3, shadowsArray: n3, lights: t3 }, setupLights: function(r3) {
          t3.setup(e3, n3, r3);
        }, pushLight: function(t4) {
          e3.push(t4);
        }, pushShadow: function(t4) {
          n3.push(t4);
        } };
      }
      function to(t3) {
        fr.call(this), this.type = "MeshDepthMaterial", this.depthPacking = we, this.skinning = false, this.morphTargets = false, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = false, this.wireframeLinewidth = 1, this.fog = false, this.setValues(t3);
      }
      function eo(t3) {
        fr.call(this), this.type = "MeshDistanceMaterial", this.referencePosition = new He(), this.nearDistance = 1, this.farDistance = 1e3, this.skinning = false, this.morphTargets = false, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = false, this.setValues(t3);
      }
      ((to.prototype = Object.create(fr.prototype)).constructor = to).prototype.isMeshDepthMaterial = true, to.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.depthPacking = t3.depthPacking, this.skinning = t3.skinning, this.morphTargets = t3.morphTargets, this.map = t3.map, this.alphaMap = t3.alphaMap, this.displacementMap = t3.displacementMap, this.displacementScale = t3.displacementScale, this.displacementBias = t3.displacementBias, this.wireframe = t3.wireframe, this.wireframeLinewidth = t3.wireframeLinewidth, this;
      }, ((eo.prototype = Object.create(fr.prototype)).constructor = eo).prototype.isMeshDistanceMaterial = true, eo.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.referencePosition.copy(t3.referencePosition), this.nearDistance = t3.nearDistance, this.farDistance = t3.farDistance, this.skinning = t3.skinning, this.morphTargets = t3.morphTargets, this.map = t3.map, this.alphaMap = t3.alphaMap, this.displacementMap = t3.displacementMap, this.displacementScale = t3.displacementScale, this.displacementBias = t3.displacementBias, this;
      };
      var no = "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}", ro = "void main() {\n	gl_Position = vec4( position, 1.0 );\n}";
      function io(t3, e3, n3) {
        var r3 = new _i(), a2 = new Le(), u2 = new Le(), p2 = new Ve(), d2 = [], f2 = [], m2 = {}, g2 = { 0: l, 1: s, 2: c }, y2 = new mi({ defines: { SAMPLE_RATE: 0.25, HALF_SAMPLE_RATE: 1 / 8 }, uniforms: { shadow_pass: { value: null }, resolution: { value: new Le() }, radius: { value: 4 } }, vertexShader: ro, fragmentShader: no }), v2 = y2.clone();
        v2.defines.HORIZONAL_PASS = 1;
        var x2 = new jr();
        x2.setAttribute("position", new yr(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));
        var w2 = new ti(x2, y2), b2 = this;
        function M2(n4, r4) {
          var i3 = e3.update(w2);
          y2.uniforms.shadow_pass.value = n4.map.texture, y2.uniforms.resolution.value = n4.mapSize, y2.uniforms.radius.value = n4.radius, t3.setRenderTarget(n4.mapPass), t3.clear(), t3.renderBufferDirect(r4, null, i3, y2, w2, null), v2.uniforms.shadow_pass.value = n4.mapPass.texture, v2.uniforms.resolution.value = n4.mapSize, v2.uniforms.radius.value = n4.radius, t3.setRenderTarget(n4.map), t3.clear(), t3.renderBufferDirect(r4, null, i3, v2, w2, null);
        }
        function _2(t4, e4, n4) {
          var r4 = t4 << 0 | e4 << 1 | n4 << 2, i3 = d2[r4];
          return void 0 === i3 && (i3 = new to({ depthPacking: be, morphTargets: t4, skinning: e4 }), d2[r4] = i3), i3;
        }
        function T2(t4, e4, n4) {
          var r4 = t4 << 0 | e4 << 1 | n4 << 2, i3 = f2[r4];
          return void 0 === i3 && (i3 = new eo({ morphTargets: t4, skinning: e4 }), f2[r4] = i3), i3;
        }
        function C2(e4, n4, r4, i3, a3, s2) {
          var l2 = e4.geometry, c2 = null, u3 = _2, h2 = e4.customDepthMaterial;
          if (true === r4.isPointLight && (u3 = T2, h2 = e4.customDistanceMaterial), void 0 === h2) {
            var p3 = false;
            true === n4.morphTargets && (true === l2.isBufferGeometry ? p3 = l2.morphAttributes && l2.morphAttributes.position && 0 < l2.morphAttributes.position.length : true === l2.isGeometry && (p3 = l2.morphTargets && 0 < l2.morphTargets.length));
            var d3 = false;
            true === e4.isSkinnedMesh && (true === n4.skinning ? d3 = true : console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", e4)), c2 = u3(p3, d3, true === e4.isInstancedMesh);
          } else c2 = h2;
          if (t3.localClippingEnabled && true === n4.clipShadows && 0 !== n4.clippingPlanes.length) {
            var f3 = c2.uuid, y3 = n4.uuid, v3 = m2[f3];
            void 0 === v3 && (v3 = {}, m2[f3] = v3);
            var x3 = v3[y3];
            void 0 === x3 && (x3 = c2.clone(), v3[y3] = x3), c2 = x3;
          }
          return c2.visible = n4.visible, c2.wireframe = n4.wireframe, c2.side = s2 === o ? null !== n4.shadowSide ? n4.shadowSide : n4.side : null !== n4.shadowSide ? n4.shadowSide : g2[n4.side], c2.clipShadows = n4.clipShadows, c2.clippingPlanes = n4.clippingPlanes, c2.clipIntersection = n4.clipIntersection, c2.wireframeLinewidth = n4.wireframeLinewidth, c2.linewidth = n4.linewidth, true === r4.isPointLight && true === c2.isMeshDistanceMaterial && (c2.referencePosition.setFromMatrixPosition(r4.matrixWorld), c2.nearDistance = i3, c2.farDistance = a3), c2;
        }
        function S2(n4, i3, a3, s2, l2) {
          if (false !== n4.visible) {
            if (n4.layers.test(i3.layers) && (n4.isMesh || n4.isLine || n4.isPoints) && (n4.castShadow || n4.receiveShadow && l2 === o) && (!n4.frustumCulled || r3.intersectsObject(n4))) {
              n4.modelViewMatrix.multiplyMatrices(a3.matrixWorldInverse, n4.matrixWorld);
              var c2 = e3.update(n4), u3 = n4.material;
              if (Array.isArray(u3)) for (var h2 = c2.groups, p3 = 0, d3 = h2.length; p3 < d3; p3++) {
                var f3 = h2[p3], m3 = u3[f3.materialIndex];
                if (m3 && m3.visible) {
                  var g3 = C2(n4, m3, s2, a3.near, a3.far, l2);
                  t3.renderBufferDirect(a3, null, c2, g3, n4, f3);
                }
              }
              else u3.visible && (g3 = C2(n4, u3, s2, a3.near, a3.far, l2), t3.renderBufferDirect(a3, null, c2, g3, n4, null));
            }
            for (var y3 = n4.children, v3 = 0, x3 = y3.length; v3 < x3; v3++) S2(y3[v3], i3, a3, s2, l2);
          }
        }
        this.enabled = false, this.autoUpdate = true, this.needsUpdate = false, this.type = i2, this.render = function(e4, i3, s2) {
          if (false !== b2.enabled && (false !== b2.autoUpdate || false !== b2.needsUpdate) && 0 !== e4.length) {
            var l2 = t3.getRenderTarget(), c2 = t3.getActiveCubeFace(), d3 = t3.getActiveMipmapLevel(), f3 = t3.state;
            f3.setBlending(h), f3.buffers.color.setClear(1, 1, 1, 1), f3.buffers.depth.setTest(true), f3.setScissorTest(false);
            for (var m3 = 0, g3 = e4.length; m3 < g3; m3++) {
              var y3 = e4[m3], v3 = y3.shadow;
              if (void 0 !== v3) {
                a2.copy(v3.mapSize);
                var x3 = v3.getFrameExtents();
                if (a2.multiply(x3), u2.copy(v3.mapSize), (a2.x > n3 || a2.y > n3) && (console.warn("THREE.WebGLShadowMap:", y3, "has shadow exceeding max texture size, reducing"), a2.x > n3 && (u2.x = Math.floor(n3 / x3.x), a2.x = u2.x * x3.x, v3.mapSize.x = u2.x), a2.y > n3 && (u2.y = Math.floor(n3 / x3.y), a2.y = u2.y * x3.y, v3.mapSize.y = u2.y)), null === v3.map && !v3.isPointLightShadow && this.type === o) {
                  var w3 = { minFilter: ct, magFilter: ct, format: St };
                  v3.map = new Fe(a2.x, a2.y, w3), v3.map.texture.name = y3.name + ".shadowMap", v3.mapPass = new Fe(a2.x, a2.y, w3), v3.camera.updateProjectionMatrix();
                }
                null === v3.map && (w3 = { minFilter: ot, magFilter: ot, format: St }, v3.map = new Fe(a2.x, a2.y, w3), v3.map.texture.name = y3.name + ".shadowMap", v3.camera.updateProjectionMatrix()), t3.setRenderTarget(v3.map), t3.clear();
                for (var _3 = v3.getViewportCount(), T3 = 0; T3 < _3; T3++) {
                  var C3 = v3.getViewport(T3);
                  p2.set(u2.x * C3.x, u2.y * C3.y, u2.x * C3.z, u2.y * C3.w), f3.viewport(p2), v3.updateMatrices(y3, T3), r3 = v3.getFrustum(), S2(i3, s2, v3.camera, y3, this.type);
                }
                v3.isPointLightShadow || this.type !== o || M2(v3, s2);
              } else console.warn("THREE.WebGLShadowMap:", y3, "has no shadow.");
            }
            b2.needsUpdate = false, t3.setRenderTarget(l2, c2, d3);
          }
        };
      }
      function ao(t3, i3, a2) {
        var o2 = a2.isWebGL2, s2 = new function() {
          var e3 = false, n3 = new Ve(), r3 = null, i4 = new Ve(0, 0, 0, 0);
          return { setMask: function(n4) {
            r3 === n4 || e3 || (t3.colorMask(n4, n4, n4, n4), r3 = n4);
          }, setLocked: function(t4) {
            e3 = t4;
          }, setClear: function(e4, r4, a3, o3, s3) {
            true === s3 && (e4 *= o3, r4 *= o3, a3 *= o3), n3.set(e4, r4, a3, o3), false === i4.equals(n3) && (t3.clearColor(e4, r4, a3, o3), i4.copy(n3));
          }, reset: function() {
            e3 = false, r3 = null, i4.set(-1, 0, 0, 0);
          } };
        }(), u2 = new function() {
          var e3 = false, n3 = null, r3 = null, i4 = null;
          return { setTest: function(t4) {
            (t4 ? xt2 : wt2)(2929);
          }, setMask: function(r4) {
            n3 === r4 || e3 || (t3.depthMask(r4), n3 = r4);
          }, setFunc: function(e4) {
            if (r3 !== e4) {
              if (e4) switch (e4) {
                case L:
                  t3.depthFunc(512);
                  break;
                case I:
                  t3.depthFunc(519);
                  break;
                case k:
                  t3.depthFunc(513);
                  break;
                case j:
                  t3.depthFunc(515);
                  break;
                case N:
                  t3.depthFunc(514);
                  break;
                case V:
                  t3.depthFunc(518);
                  break;
                case F:
                  t3.depthFunc(516);
                  break;
                case B:
                  t3.depthFunc(517);
                  break;
                default:
                  t3.depthFunc(515);
              }
              else t3.depthFunc(515);
              r3 = e4;
            }
          }, setLocked: function(t4) {
            e3 = t4;
          }, setClear: function(e4) {
            i4 !== e4 && (t3.clearDepth(e4), i4 = e4);
          }, reset: function() {
            e3 = false, i4 = r3 = n3 = null;
          } };
        }(), G2 = new function() {
          var e3 = false, n3 = null, r3 = null, i4 = null, a3 = null, o3 = null, s3 = null, l2 = null, c2 = null;
          return { setTest: function(t4) {
            e3 || (t4 ? xt2 : wt2)(2960);
          }, setMask: function(r4) {
            n3 === r4 || e3 || (t3.stencilMask(r4), n3 = r4);
          }, setFunc: function(e4, n4, o4) {
            r3 === e4 && i4 === n4 && a3 === o4 || (t3.stencilFunc(e4, n4, o4), r3 = e4, i4 = n4, a3 = o4);
          }, setOp: function(e4, n4, r4) {
            o3 === e4 && s3 === n4 && l2 === r4 || (t3.stencilOp(e4, n4, r4), o3 = e4, s3 = n4, l2 = r4);
          }, setLocked: function(t4) {
            e3 = t4;
          }, setClear: function(e4) {
            c2 !== e4 && (t3.clearStencil(e4), c2 = e4);
          }, reset: function() {
            e3 = false, c2 = l2 = s3 = o3 = a3 = i4 = r3 = n3 = null;
          } };
        }(), z2 = t3.getParameter(34921), U2 = new Uint8Array(z2), H2 = new Uint8Array(z2), W2 = new Uint8Array(z2), J2 = {}, q2 = null, X2 = null, Y2 = null, Z2 = null, K2 = null, $3 = null, Q2 = null, tt2 = null, et2 = null, nt2 = false, rt2 = null, it2 = null, at2 = null, ot2 = null, st2 = null, lt2 = t3.getParameter(35661), ct2 = false, ut2 = 0, ht2 = t3.getParameter(7938);
        -1 !== ht2.indexOf("WebGL") ? (ut2 = parseFloat(/^WebGL\ ([0-9])/.exec(ht2)[1]), ct2 = 1 <= ut2) : -1 !== ht2.indexOf("OpenGL ES") && (ut2 = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(ht2)[1]), ct2 = 2 <= ut2);
        var pt2 = null, dt2 = {}, ft2 = new Ve(), mt2 = new Ve();
        function gt2(e3, n3, r3) {
          var i4 = new Uint8Array(4), a3 = t3.createTexture();
          t3.bindTexture(e3, a3), t3.texParameteri(e3, 10241, 9728), t3.texParameteri(e3, 10240, 9728);
          for (var o3 = 0; o3 < r3; o3++) t3.texImage2D(n3 + o3, 0, 6408, 1, 1, 0, 6408, 5121, i4);
          return a3;
        }
        var yt2 = {};
        function vt2(e3, n3) {
          U2[e3] = 1, 0 === H2[e3] && (t3.enableVertexAttribArray(e3), H2[e3] = 1), W2[e3] !== n3 && ((o2 ? t3 : i3.get("ANGLE_instanced_arrays"))[o2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](e3, n3), W2[e3] = n3);
        }
        function xt2(e3) {
          true !== J2[e3] && (t3.enable(e3), J2[e3] = true);
        }
        function wt2(e3) {
          false !== J2[e3] && (t3.disable(e3), J2[e3] = false);
        }
        yt2[3553] = gt2(3553, 3553, 1), yt2[34067] = gt2(34067, 34069, 6), s2.setClear(0, 0, 0, 1), u2.setClear(1), G2.setClear(0), xt2(2929), u2.setFunc(j), Ct2(false), St2(n2), xt2(2884), Tt2(h);
        var bt2 = {};
        if (bt2[y] = 32774, bt2[v] = 32778, bt2[x] = 32779, o2) bt2[w] = 32775, bt2[b] = 32776;
        else {
          var Mt2 = i3.get("EXT_blend_minmax");
          null !== Mt2 && (bt2[w] = Mt2.MIN_EXT, bt2[b] = Mt2.MAX_EXT);
        }
        var _t2 = {};
        function Tt2(e3, n3, r3, i4, a3, o3, s3, l2) {
          if (e3 !== h) {
            if (X2 || (xt2(3042), X2 = true), e3 === g) a3 = a3 || n3, o3 = o3 || r3, s3 = s3 || i4, n3 === Z2 && a3 === Q2 || (t3.blendEquationSeparate(bt2[n3], bt2[a3]), Z2 = n3, Q2 = a3), r3 === K2 && i4 === $3 && o3 === tt2 && s3 === et2 || (t3.blendFuncSeparate(_t2[r3], _t2[i4], _t2[o3], _t2[s3]), K2 = r3, $3 = i4, tt2 = o3, et2 = s3), Y2 = e3, nt2 = null;
            else if (e3 !== Y2 || l2 !== nt2) {
              if (Z2 === y && Q2 === y || (t3.blendEquation(32774), Q2 = Z2 = y), l2) switch (e3) {
                case p:
                  t3.blendFuncSeparate(1, 771, 1, 771);
                  break;
                case d:
                  t3.blendFunc(1, 1);
                  break;
                case f:
                  t3.blendFuncSeparate(0, 0, 769, 771);
                  break;
                case m:
                  t3.blendFuncSeparate(0, 768, 0, 770);
                  break;
                default:
                  console.error("THREE.WebGLState: Invalid blending: ", e3);
              }
              else switch (e3) {
                case p:
                  t3.blendFuncSeparate(770, 771, 1, 771);
                  break;
                case d:
                  t3.blendFunc(770, 1);
                  break;
                case f:
                  t3.blendFunc(0, 769);
                  break;
                case m:
                  t3.blendFunc(0, 768);
                  break;
                default:
                  console.error("THREE.WebGLState: Invalid blending: ", e3);
              }
              et2 = tt2 = $3 = K2 = null, Y2 = e3, nt2 = l2;
            }
          } else X2 && (wt2(3042), X2 = false);
        }
        function Ct2(e3) {
          rt2 !== e3 && (e3 ? t3.frontFace(2304) : t3.frontFace(2305), rt2 = e3);
        }
        function St2(i4) {
          i4 !== e2 ? (xt2(2884), i4 !== it2 && (i4 === n2 ? t3.cullFace(1029) : i4 === r2 ? t3.cullFace(1028) : t3.cullFace(1032))) : wt2(2884), it2 = i4;
        }
        function Dt2(e3, n3, r3) {
          e3 ? (xt2(32823), ot2 === n3 && st2 === r3 || (t3.polygonOffset(n3, r3), ot2 = n3, st2 = r3)) : wt2(32823);
        }
        function Et2(e3) {
          void 0 === e3 && (e3 = 33984 + lt2 - 1), pt2 !== e3 && (t3.activeTexture(e3), pt2 = e3);
        }
        return _t2[M] = 0, _t2[_] = 1, _t2[T] = 768, _t2[S] = 770, _t2[R] = 776, _t2[A] = 774, _t2[E] = 772, _t2[C] = 769, _t2[D] = 771, _t2[P] = 775, _t2[O] = 773, { buffers: { color: s2, depth: u2, stencil: G2 }, initAttributes: function() {
          for (var t4 = 0, e3 = U2.length; t4 < e3; t4++) U2[t4] = 0;
        }, enableAttribute: function(t4) {
          vt2(t4, 0);
        }, enableAttributeAndDivisor: vt2, disableUnusedAttributes: function() {
          for (var e3 = 0, n3 = H2.length; e3 !== n3; ++e3) H2[e3] !== U2[e3] && (t3.disableVertexAttribArray(e3), H2[e3] = 0);
        }, enable: xt2, disable: wt2, useProgram: function(e3) {
          return q2 !== e3 && (t3.useProgram(e3), q2 = e3, true);
        }, setBlending: Tt2, setMaterial: function(t4, e3) {
          (t4.side === c ? wt2 : xt2)(2884);
          var n3 = t4.side === l;
          e3 && (n3 = !n3), Ct2(n3), t4.blending === p && false === t4.transparent ? Tt2(h) : Tt2(t4.blending, t4.blendEquation, t4.blendSrc, t4.blendDst, t4.blendEquationAlpha, t4.blendSrcAlpha, t4.blendDstAlpha, t4.premultipliedAlpha), u2.setFunc(t4.depthFunc), u2.setTest(t4.depthTest), u2.setMask(t4.depthWrite), s2.setMask(t4.colorWrite);
          var r3 = t4.stencilWrite;
          G2.setTest(r3), r3 && (G2.setMask(t4.stencilWriteMask), G2.setFunc(t4.stencilFunc, t4.stencilRef, t4.stencilFuncMask), G2.setOp(t4.stencilFail, t4.stencilZFail, t4.stencilZPass)), Dt2(t4.polygonOffset, t4.polygonOffsetFactor, t4.polygonOffsetUnits);
        }, setFlipSided: Ct2, setCullFace: St2, setLineWidth: function(e3) {
          e3 !== at2 && (ct2 && t3.lineWidth(e3), at2 = e3);
        }, setPolygonOffset: Dt2, setScissorTest: function(t4) {
          (t4 ? xt2 : wt2)(3089);
        }, activeTexture: Et2, bindTexture: function(e3, n3) {
          null === pt2 && Et2();
          var r3 = dt2[pt2];
          void 0 === r3 && (r3 = { type: void 0, texture: void 0 }, dt2[pt2] = r3), r3.type === e3 && r3.texture === n3 || (t3.bindTexture(e3, n3 || yt2[e3]), r3.type = e3, r3.texture = n3);
        }, unbindTexture: function() {
          var e3 = dt2[pt2];
          void 0 !== e3 && void 0 !== e3.type && (t3.bindTexture(e3.type, null), e3.type = void 0, e3.texture = void 0);
        }, compressedTexImage2D: function() {
          try {
            t3.compressedTexImage2D.apply(t3, arguments);
          } catch (t4) {
            console.error("THREE.WebGLState:", t4);
          }
        }, texImage2D: function() {
          try {
            t3.texImage2D.apply(t3, arguments);
          } catch (t4) {
            console.error("THREE.WebGLState:", t4);
          }
        }, texImage3D: function() {
          try {
            t3.texImage3D.apply(t3, arguments);
          } catch (t4) {
            console.error("THREE.WebGLState:", t4);
          }
        }, scissor: function(e3) {
          false === ft2.equals(e3) && (t3.scissor(e3.x, e3.y, e3.z, e3.w), ft2.copy(e3));
        }, viewport: function(e3) {
          false === mt2.equals(e3) && (t3.viewport(e3.x, e3.y, e3.z, e3.w), mt2.copy(e3));
        }, reset: function() {
          for (var e3 = 0; e3 < H2.length; e3++) 1 === H2[e3] && (t3.disableVertexAttribArray(e3), H2[e3] = 0);
          J2 = {}, dt2 = {}, it2 = rt2 = Y2 = q2 = pt2 = null, s2.reset(), u2.reset(), G2.reset();
        } };
      }
      function oo(t3, e3, n3, r3, i3, a2, o2) {
        var s2, l2 = i3.isWebGL2, c2 = i3.maxTextures, u2 = i3.maxCubemapSize, h2 = i3.maxTextureSize, p2 = i3.maxSamples, d2 = /* @__PURE__ */ new WeakMap(), f2 = false;
        try {
          f2 = "undefined" != typeof OffscreenCanvas && null !== new OffscreenCanvas(1, 1).getContext("2d");
        } catch (t4) {
        }
        function m2(t4, e4) {
          return f2 ? new OffscreenCanvas(t4, e4) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
        }
        function g2(t4, e4, n4, r4) {
          var i4 = 1;
          if ((t4.width > r4 || t4.height > r4) && (i4 = r4 / Math.max(t4.width, t4.height)), i4 < 1 || true === e4) {
            if ("undefined" != typeof HTMLImageElement && t4 instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && t4 instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && t4 instanceof ImageBitmap) {
              var a3 = e4 ? Re.floorPowerOfTwo : Math.floor, o3 = a3(i4 * t4.width), l3 = a3(i4 * t4.height);
              void 0 === s2 && (s2 = m2(o3, l3));
              var c3 = n4 ? m2(o3, l3) : s2;
              return c3.width = o3, c3.height = l3, c3.getContext("2d").drawImage(t4, 0, 0, o3, l3), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + t4.width + "x" + t4.height + ") to (" + o3 + "x" + l3 + ")."), c3;
            }
            return "data" in t4 && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + t4.width + "x" + t4.height + ")."), t4;
          }
          return t4;
        }
        function y2(t4) {
          return Re.isPowerOfTwo(t4.width) && Re.isPowerOfTwo(t4.height);
        }
        function v2(t4, e4) {
          return t4.generateMipmaps && e4 && t4.minFilter !== ot && t4.minFilter !== ct;
        }
        function x2(e4, n4, i4, a3) {
          t3.generateMipmap(e4), r3.get(n4).__maxMipLevel = Math.log(Math.max(i4, a3)) * Math.LOG2E;
        }
        function w2(n4, r4, i4) {
          if (false === l2) return r4;
          if (null !== n4) {
            if (void 0 !== t3[n4]) return t3[n4];
            console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + n4 + "'");
          }
          var a3 = r4;
          return 6403 === r4 && (5126 === i4 && (a3 = 33326), 5131 === i4 && (a3 = 33325), 5121 === i4 && (a3 = 33321)), 6407 === r4 && (5126 === i4 && (a3 = 34837), 5131 === i4 && (a3 = 34843), 5121 === i4 && (a3 = 32849)), 6408 === r4 && (5126 === i4 && (a3 = 34836), 5131 === i4 && (a3 = 34842), 5121 === i4 && (a3 = 32856)), 33325 === a3 || 33326 === a3 || 34842 === a3 || 34836 === a3 ? e3.get("EXT_color_buffer_float") : 34843 !== a3 && 34837 !== a3 || console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."), a3;
        }
        function b2(t4) {
          return t4 === ot || t4 === st || t4 === lt ? 9728 : 9729;
        }
        function M2(e4) {
          var n4 = e4.target;
          n4.removeEventListener("dispose", M2), function(e5) {
            var n5 = r3.get(e5);
            void 0 !== n5.__webglInit && (t3.deleteTexture(n5.__webglTexture), r3.remove(e5));
          }(n4), n4.isVideoTexture && d2.delete(n4), o2.memory.textures--;
        }
        function _2(e4) {
          var n4 = e4.target;
          n4.removeEventListener("dispose", _2), function(e5) {
            var n5 = r3.get(e5), i4 = r3.get(e5.texture);
            if (e5) {
              if (void 0 !== i4.__webglTexture && t3.deleteTexture(i4.__webglTexture), e5.depthTexture && e5.depthTexture.dispose(), e5.isWebGLCubeRenderTarget) for (var a3 = 0; a3 < 6; a3++) t3.deleteFramebuffer(n5.__webglFramebuffer[a3]), n5.__webglDepthbuffer && t3.deleteRenderbuffer(n5.__webglDepthbuffer[a3]);
              else t3.deleteFramebuffer(n5.__webglFramebuffer), n5.__webglDepthbuffer && t3.deleteRenderbuffer(n5.__webglDepthbuffer);
              if (e5.isWebGLMultiviewRenderTarget) {
                t3.deleteTexture(n5.__webglColorTexture), t3.deleteTexture(n5.__webglDepthStencilTexture), o2.memory.textures -= 2, a3 = 0;
                for (var s3 = n5.__webglViewFramebuffers.length; a3 < s3; a3++) t3.deleteFramebuffer(n5.__webglViewFramebuffers[a3]);
              }
              r3.remove(e5.texture), r3.remove(e5);
            }
          }(n4), o2.memory.textures--;
        }
        var T2 = 0;
        function C2(t4, e4) {
          var i4, a3, s3 = r3.get(t4);
          if (t4.isVideoTexture && (i4 = t4, a3 = o2.render.frame, d2.get(i4) !== a3 && (d2.set(i4, a3), i4.update())), 0 < t4.version && s3.__version !== t4.version) {
            var l3 = t4.image;
            if (void 0 === l3) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
            else {
              if (false !== l3.complete) return void R2(s3, t4, e4);
              console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
            }
          }
          n3.activeTexture(33984 + e4), n3.bindTexture(3553, s3.__webglTexture);
        }
        function S2(e4, i4) {
          if (6 === e4.image.length) {
            var o3 = r3.get(e4);
            if (0 < e4.version && o3.__version !== e4.version) {
              P2(o3, e4), n3.activeTexture(33984 + i4), n3.bindTexture(34067, o3.__webglTexture), t3.pixelStorei(37440, e4.flipY);
              for (var s3 = e4 && (e4.isCompressedTexture || e4.image[0].isCompressedTexture), c3 = e4.image[0] && e4.image[0].isDataTexture, h3 = [], p3 = 0; p3 < 6; p3++) h3[p3] = s3 || c3 ? c3 ? e4.image[p3].image : e4.image[p3] : g2(e4.image[p3], false, true, u2);
              var d3, f3 = h3[0], m3 = y2(f3) || l2, b3 = a2.convert(e4.format), M3 = a2.convert(e4.type), _3 = w2(e4.internalFormat, b3, M3);
              if (A2(34067, e4, m3), s3) {
                for (p3 = 0; p3 < 6; p3++) {
                  d3 = h3[p3].mipmaps;
                  for (var T3 = 0; T3 < d3.length; T3++) {
                    var C3 = d3[T3];
                    e4.format !== St && e4.format !== Ct ? null !== b3 ? n3.compressedTexImage2D(34069 + p3, T3, _3, C3.width, C3.height, 0, C3.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n3.texImage2D(34069 + p3, T3, _3, C3.width, C3.height, 0, b3, M3, C3.data);
                  }
                }
                o3.__maxMipLevel = d3.length - 1;
              } else {
                for (d3 = e4.mipmaps, p3 = 0; p3 < 6; p3++) if (c3) for (n3.texImage2D(34069 + p3, 0, _3, h3[p3].width, h3[p3].height, 0, b3, M3, h3[p3].data), T3 = 0; T3 < d3.length; T3++) {
                  var S3 = (C3 = d3[T3]).image[p3].image;
                  n3.texImage2D(34069 + p3, T3 + 1, _3, S3.width, S3.height, 0, b3, M3, S3.data);
                }
                else for (n3.texImage2D(34069 + p3, 0, _3, b3, M3, h3[p3]), T3 = 0; T3 < d3.length; T3++) C3 = d3[T3], n3.texImage2D(34069 + p3, T3 + 1, _3, b3, M3, C3.image[p3]);
                o3.__maxMipLevel = d3.length;
              }
              v2(e4, m3) && x2(34067, e4, f3.width, f3.height), o3.__version = e4.version, e4.onUpdate && e4.onUpdate(e4);
            } else n3.activeTexture(33984 + i4), n3.bindTexture(34067, o3.__webglTexture);
          }
        }
        function D2(t4, e4) {
          n3.activeTexture(33984 + e4), n3.bindTexture(34067, r3.get(t4).__webglTexture);
        }
        var E2 = {};
        E2[rt] = 10497, E2[it] = 33071, E2[at] = 33648;
        var O2 = {};
        function A2(n4, a3, o3) {
          o3 ? (t3.texParameteri(n4, 10242, E2[a3.wrapS]), t3.texParameteri(n4, 10243, E2[a3.wrapT]), 32879 !== n4 && 35866 !== n4 || t3.texParameteri(n4, 32882, E2[a3.wrapR]), t3.texParameteri(n4, 10240, O2[a3.magFilter]), t3.texParameteri(n4, 10241, O2[a3.minFilter])) : (t3.texParameteri(n4, 10242, 33071), t3.texParameteri(n4, 10243, 33071), 32879 !== n4 && 35866 !== n4 || t3.texParameteri(n4, 32882, 33071), a3.wrapS === it && a3.wrapT === it || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), t3.texParameteri(n4, 10240, b2(a3.magFilter)), t3.texParameteri(n4, 10241, b2(a3.minFilter)), a3.minFilter !== ot && a3.minFilter !== ct && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));
          var s3 = e3.get("EXT_texture_filter_anisotropic");
          if (s3) {
            if (a3.type === vt && null === e3.get("OES_texture_float_linear")) return;
            if (a3.type === xt && null === (l2 || e3.get("OES_texture_half_float_linear"))) return;
            (1 < a3.anisotropy || r3.get(a3).__currentAnisotropy) && (t3.texParameterf(n4, s3.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a3.anisotropy, i3.getMaxAnisotropy())), r3.get(a3).__currentAnisotropy = a3.anisotropy);
          }
        }
        function P2(e4, n4) {
          void 0 === e4.__webglInit && (e4.__webglInit = true, n4.addEventListener("dispose", M2), e4.__webglTexture = t3.createTexture(), o2.memory.textures++);
        }
        function R2(e4, r4, i4) {
          var o3 = 3553;
          r4.isDataTexture2DArray && (o3 = 35866), r4.isDataTexture3D && (o3 = 32879), P2(e4, r4), n3.activeTexture(33984 + i4), n3.bindTexture(o3, e4.__webglTexture), t3.pixelStorei(37440, r4.flipY), t3.pixelStorei(37441, r4.premultiplyAlpha), t3.pixelStorei(3317, r4.unpackAlignment);
          var s3, c3 = (s3 = r4, !l2 && (s3.wrapS !== it || s3.wrapT !== it || s3.minFilter !== ot && s3.minFilter !== ct) && false === y2(r4.image)), u3 = g2(r4.image, c3, false, h2), p3 = y2(u3) || l2, d3 = a2.convert(r4.format), f3 = a2.convert(r4.type), m3 = w2(r4.internalFormat, d3, f3);
          A2(o3, r4, p3);
          var b3, M3 = r4.mipmaps;
          if (r4.isDepthTexture) {
            if (m3 = 6402, r4.type === vt) {
              if (false === l2) throw new Error("Float Depth Texture only supported in WebGL2.0");
              m3 = 36012;
            } else l2 && (m3 = 33189);
            r4.format === At && 6402 === m3 && r4.type !== mt && r4.type !== yt && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), r4.type = mt, f3 = a2.convert(r4.type)), r4.format === Pt && (m3 = 34041, r4.type !== _t && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), r4.type = _t, f3 = a2.convert(r4.type))), n3.texImage2D(3553, 0, m3, u3.width, u3.height, 0, d3, f3, null);
          } else if (r4.isDataTexture) if (0 < M3.length && p3) {
            for (var _3 = 0, T3 = M3.length; _3 < T3; _3++) b3 = M3[_3], n3.texImage2D(3553, _3, m3, b3.width, b3.height, 0, d3, f3, b3.data);
            r4.generateMipmaps = false, e4.__maxMipLevel = M3.length - 1;
          } else n3.texImage2D(3553, 0, m3, u3.width, u3.height, 0, d3, f3, u3.data), e4.__maxMipLevel = 0;
          else if (r4.isCompressedTexture) {
            for (_3 = 0, T3 = M3.length; _3 < T3; _3++) b3 = M3[_3], r4.format !== St && r4.format !== Ct ? null !== d3 ? n3.compressedTexImage2D(3553, _3, m3, b3.width, b3.height, 0, b3.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n3.texImage2D(3553, _3, m3, b3.width, b3.height, 0, d3, f3, b3.data);
            e4.__maxMipLevel = M3.length - 1;
          } else if (r4.isDataTexture2DArray) n3.texImage3D(35866, 0, m3, u3.width, u3.height, u3.depth, 0, d3, f3, u3.data), e4.__maxMipLevel = 0;
          else if (r4.isDataTexture3D) n3.texImage3D(32879, 0, m3, u3.width, u3.height, u3.depth, 0, d3, f3, u3.data), e4.__maxMipLevel = 0;
          else if (0 < M3.length && p3) {
            for (_3 = 0, T3 = M3.length; _3 < T3; _3++) b3 = M3[_3], n3.texImage2D(3553, _3, m3, d3, f3, b3);
            r4.generateMipmaps = false, e4.__maxMipLevel = M3.length - 1;
          } else n3.texImage2D(3553, 0, m3, d3, f3, u3), e4.__maxMipLevel = 0;
          v2(r4, p3) && x2(o3, r4, u3.width, u3.height), e4.__version = r4.version, r4.onUpdate && r4.onUpdate(r4);
        }
        function L2(e4, i4, o3, s3) {
          var l3 = a2.convert(i4.texture.format), c3 = a2.convert(i4.texture.type), u3 = w2(i4.texture.internalFormat, l3, c3);
          n3.texImage2D(s3, 0, u3, i4.width, i4.height, 0, l3, c3, null), t3.bindFramebuffer(36160, e4), t3.framebufferTexture2D(36160, o3, s3, r3.get(i4.texture).__webglTexture, 0), t3.bindFramebuffer(36160, null);
        }
        function I2(e4, n4, r4) {
          if (t3.bindRenderbuffer(36161, e4), n4.depthBuffer && !n4.stencilBuffer) {
            if (r4) {
              var i4 = j2(n4);
              t3.renderbufferStorageMultisample(36161, i4, 33189, n4.width, n4.height);
            } else t3.renderbufferStorage(36161, 33189, n4.width, n4.height);
            t3.framebufferRenderbuffer(36160, 36096, 36161, e4);
          } else if (n4.depthBuffer && n4.stencilBuffer) r4 ? (i4 = j2(n4), t3.renderbufferStorageMultisample(36161, i4, 35056, n4.width, n4.height)) : t3.renderbufferStorage(36161, 34041, n4.width, n4.height), t3.framebufferRenderbuffer(36160, 33306, 36161, e4);
          else {
            var o3 = a2.convert(n4.texture.format), s3 = a2.convert(n4.texture.type), l3 = w2(n4.texture.internalFormat, o3, s3);
            r4 ? (i4 = j2(n4), t3.renderbufferStorageMultisample(36161, i4, l3, n4.width, n4.height)) : t3.renderbufferStorage(36161, l3, n4.width, n4.height);
          }
          t3.bindRenderbuffer(36161, null);
        }
        function k2(e4) {
          var n4 = r3.get(e4), i4 = true === e4.isWebGLCubeRenderTarget;
          if (e4.depthTexture) {
            if (i4) throw new Error("target.depthTexture not supported in Cube render targets");
            !function(e5, n5) {
              if (n5 && n5.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
              if (t3.bindFramebuffer(36160, e5), !n5.depthTexture || !n5.depthTexture.isDepthTexture) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
              r3.get(n5.depthTexture).__webglTexture && n5.depthTexture.image.width === n5.width && n5.depthTexture.image.height === n5.height || (n5.depthTexture.image.width = n5.width, n5.depthTexture.image.height = n5.height, n5.depthTexture.needsUpdate = true), C2(n5.depthTexture, 0);
              var i5 = r3.get(n5.depthTexture).__webglTexture;
              if (n5.depthTexture.format === At) t3.framebufferTexture2D(36160, 36096, 3553, i5, 0);
              else {
                if (n5.depthTexture.format !== Pt) throw new Error("Unknown depthTexture format");
                t3.framebufferTexture2D(36160, 33306, 3553, i5, 0);
              }
            }(n4.__webglFramebuffer, e4);
          } else if (i4) {
            n4.__webglDepthbuffer = [];
            for (var a3 = 0; a3 < 6; a3++) t3.bindFramebuffer(36160, n4.__webglFramebuffer[a3]), n4.__webglDepthbuffer[a3] = t3.createRenderbuffer(), I2(n4.__webglDepthbuffer[a3], e4);
          } else t3.bindFramebuffer(36160, n4.__webglFramebuffer), n4.__webglDepthbuffer = t3.createRenderbuffer(), I2(n4.__webglDepthbuffer, e4);
          t3.bindFramebuffer(36160, null);
        }
        function j2(t4) {
          return l2 && t4.isWebGLMultisampleRenderTarget ? Math.min(p2, t4.samples) : 0;
        }
        O2[ot] = 9728, O2[st] = 9984, O2[lt] = 9986, O2[ct] = 9729, O2[ut] = 9985;
        var N2 = !(O2[ht] = 9987), V2 = false;
        this.allocateTextureUnit = function() {
          var t4 = T2;
          return c2 <= t4 && console.warn("THREE.WebGLTextures: Trying to use " + t4 + " texture units while this GPU supports only " + c2), T2 += 1, t4;
        }, this.resetTextureUnits = function() {
          T2 = 0;
        }, this.setTexture2D = C2, this.setTexture2DArray = function(t4, e4) {
          var i4 = r3.get(t4);
          0 < t4.version && i4.__version !== t4.version ? R2(i4, t4, e4) : (n3.activeTexture(33984 + e4), n3.bindTexture(35866, i4.__webglTexture));
        }, this.setTexture3D = function(t4, e4) {
          var i4 = r3.get(t4);
          0 < t4.version && i4.__version !== t4.version ? R2(i4, t4, e4) : (n3.activeTexture(33984 + e4), n3.bindTexture(32879, i4.__webglTexture));
        }, this.setTextureCube = S2, this.setTextureCubeDynamic = D2, this.setupRenderTarget = function(i4) {
          var s3 = r3.get(i4), c3 = r3.get(i4.texture);
          i4.addEventListener("dispose", _2), c3.__webglTexture = t3.createTexture(), o2.memory.textures++;
          var u3 = true === i4.isWebGLCubeRenderTarget, h3 = true === i4.isWebGLMultisampleRenderTarget, p3 = true === i4.isWebGLMultiviewRenderTarget, d3 = y2(i4) || l2;
          if (u3) {
            s3.__webglFramebuffer = [];
            for (var f3 = 0; f3 < 6; f3++) s3.__webglFramebuffer[f3] = t3.createFramebuffer();
          } else if (s3.__webglFramebuffer = t3.createFramebuffer(), h3) if (l2) {
            s3.__webglMultisampledFramebuffer = t3.createFramebuffer(), s3.__webglColorRenderbuffer = t3.createRenderbuffer(), t3.bindRenderbuffer(36161, s3.__webglColorRenderbuffer);
            var m3 = a2.convert(i4.texture.format), g3 = a2.convert(i4.texture.type), b3 = w2(i4.texture.internalFormat, m3, g3), M3 = j2(i4);
            t3.renderbufferStorageMultisample(36161, M3, b3, i4.width, i4.height), t3.bindFramebuffer(36160, s3.__webglMultisampledFramebuffer), t3.framebufferRenderbuffer(36160, 36064, 36161, s3.__webglColorRenderbuffer), t3.bindRenderbuffer(36161, null), i4.depthBuffer && (s3.__webglDepthRenderbuffer = t3.createRenderbuffer(), I2(s3.__webglDepthRenderbuffer, i4, true)), t3.bindFramebuffer(36160, null);
          } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
          else if (p3) {
            var T3 = i4.width, C3 = i4.height, S3 = i4.numViews;
            t3.bindFramebuffer(36160, s3.__webglFramebuffer);
            var D3 = e3.get("OVR_multiview2");
            o2.memory.textures += 2;
            var E3 = t3.createTexture();
            t3.bindTexture(35866, E3), t3.texParameteri(35866, 10240, 9728), t3.texParameteri(35866, 10241, 9728), t3.texImage3D(35866, 0, 32856, T3, C3, S3, 0, 6408, 5121, null), D3.framebufferTextureMultiviewOVR(36160, 36064, E3, 0, 0, S3);
            var O3 = t3.createTexture();
            t3.bindTexture(35866, O3), t3.texParameteri(35866, 10240, 9728), t3.texParameteri(35866, 10241, 9728), t3.texImage3D(35866, 0, 35056, T3, C3, S3, 0, 34041, 34042, null), D3.framebufferTextureMultiviewOVR(36160, 33306, O3, 0, 0, S3);
            var P3 = new Array(S3);
            for (f3 = 0; f3 < S3; ++f3) P3[f3] = t3.createFramebuffer(), t3.bindFramebuffer(36160, P3[f3]), t3.framebufferTextureLayer(36160, 36064, E3, 0, f3);
            s3.__webglColorTexture = E3, s3.__webglDepthStencilTexture = O3, s3.__webglViewFramebuffers = P3, t3.bindFramebuffer(36160, null), t3.bindTexture(35866, null);
          }
          if (u3) {
            for (n3.bindTexture(34067, c3.__webglTexture), A2(34067, i4.texture, d3), f3 = 0; f3 < 6; f3++) L2(s3.__webglFramebuffer[f3], i4, 36064, 34069 + f3);
            v2(i4.texture, d3) && x2(34067, i4.texture, i4.width, i4.height), n3.bindTexture(34067, null);
          } else p3 || (n3.bindTexture(3553, c3.__webglTexture), A2(3553, i4.texture, d3), L2(s3.__webglFramebuffer, i4, 36064, 3553), v2(i4.texture, d3) && x2(3553, i4.texture, i4.width, i4.height), n3.bindTexture(3553, null));
          i4.depthBuffer && k2(i4);
        }, this.updateRenderTargetMipmap = function(t4) {
          var e4 = t4.texture;
          if (v2(e4, y2(t4) || l2)) {
            var i4 = t4.isWebGLCubeRenderTarget ? 34067 : 3553, a3 = r3.get(e4).__webglTexture;
            n3.bindTexture(i4, a3), x2(i4, e4, t4.width, t4.height), n3.bindTexture(i4, null);
          }
        }, this.updateMultisampleRenderTarget = function(e4) {
          if (e4.isWebGLMultisampleRenderTarget) if (l2) {
            var n4 = r3.get(e4);
            t3.bindFramebuffer(36008, n4.__webglMultisampledFramebuffer), t3.bindFramebuffer(36009, n4.__webglFramebuffer);
            var i4 = e4.width, a3 = e4.height, o3 = 16384;
            e4.depthBuffer && (o3 |= 256), e4.stencilBuffer && (o3 |= 1024), t3.blitFramebuffer(0, 0, i4, a3, 0, 0, i4, a3, o3, 9728);
          } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
        }, this.safeSetTexture2D = function(t4, e4) {
          t4 && t4.isWebGLRenderTarget && (false === N2 && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), N2 = true), t4 = t4.texture), C2(t4, e4);
        }, this.safeSetTextureCube = function(t4, e4) {
          t4 && t4.isWebGLCubeRenderTarget && (false === V2 && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), V2 = true), t4 = t4.texture), (t4 && t4.isCubeTexture || Array.isArray(t4.image) && 6 === t4.image.length ? S2 : D2)(t4, e4);
        };
      }
      function so(t3, e3, n3) {
        var r3 = n3.isWebGL2;
        return { convert: function(t4) {
          var n4;
          if (t4 === pt) return 5121;
          if (t4 === wt) return 32819;
          if (t4 === bt) return 32820;
          if (t4 === Mt) return 33635;
          if (t4 === dt) return 5120;
          if (t4 === ft) return 5122;
          if (t4 === mt) return 5123;
          if (t4 === gt) return 5124;
          if (t4 === yt) return 5125;
          if (t4 === vt) return 5126;
          if (t4 === xt) return r3 ? 5131 : null !== (n4 = e3.get("OES_texture_half_float")) ? n4.HALF_FLOAT_OES : null;
          if (t4 === Tt) return 6406;
          if (t4 === Ct) return 6407;
          if (t4 === St) return 6408;
          if (t4 === Dt) return 6409;
          if (t4 === Et) return 6410;
          if (t4 === At) return 6402;
          if (t4 === Pt) return 34041;
          if (t4 === Rt) return 6403;
          if (t4 === Lt) return 36244;
          if (t4 === It) return 33319;
          if (t4 === kt) return 33320;
          if (t4 === jt) return 36248;
          if (t4 === Nt) return 36249;
          if (t4 === Vt || t4 === Ft || t4 === Bt || t4 === Gt) {
            if (null === (n4 = e3.get("WEBGL_compressed_texture_s3tc"))) return null;
            if (t4 === Vt) return n4.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (t4 === Ft) return n4.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (t4 === Bt) return n4.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (t4 === Gt) return n4.COMPRESSED_RGBA_S3TC_DXT5_EXT;
          }
          if (t4 === zt || t4 === Ut || t4 === Ht || t4 === Wt) {
            if (null === (n4 = e3.get("WEBGL_compressed_texture_pvrtc"))) return null;
            if (t4 === zt) return n4.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (t4 === Ut) return n4.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (t4 === Ht) return n4.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (t4 === Wt) return n4.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
          }
          return t4 === Jt ? null !== (n4 = e3.get("WEBGL_compressed_texture_etc1")) ? n4.COMPRESSED_RGB_ETC1_WEBGL : null : t4 === qt || t4 === Xt || t4 === Yt || t4 === Zt || t4 === Kt || t4 === $t || t4 === Qt || t4 === te || t4 === ee || t4 === ne || t4 === re || t4 === ie || t4 === ae || t4 === oe ? null !== (n4 = e3.get("WEBGL_compressed_texture_astc")) ? t4 : null : t4 === _t ? r3 ? 34042 : null !== (n4 = e3.get("WEBGL_depth_texture")) ? n4.UNSIGNED_INT_24_8_WEBGL : null : void 0;
        } };
      }
      function lo(t3, e3, n3, r3) {
        Fe.call(this, t3, e3, r3), this.depthBuffer = false, this.stencilBuffer = false, this.numViews = n3;
      }
      function co(t3) {
        yi.call(this), this.cameras = t3 || [];
      }
      function uo() {
        yn.call(this), this.type = "Group";
      }
      function ho(t3, e3) {
        var n3 = this, r3 = null, i3 = null, a2 = "local-floor", o2 = null, s2 = [], l2 = /* @__PURE__ */ new Map(), c2 = new yi();
        c2.layers.enable(1), c2.viewport = new Ve();
        var u2 = new yi();
        u2.layers.enable(2), u2.viewport = new Ve();
        var h2 = new co([c2, u2]);
        h2.layers.enable(1), h2.layers.enable(2);
        var p2 = null, d2 = null;
        function f2(t4) {
          var e4 = l2.get(t4.inputSource);
          e4 && (e4.targetRay && e4.targetRay.dispatchEvent({ type: t4.type }), e4.grip && e4.grip.dispatchEvent({ type: t4.type }));
        }
        function m2() {
          l2.forEach(function(t4, e4) {
            t4.targetRay && (t4.targetRay.dispatchEvent({ type: "disconnected", data: e4 }), t4.targetRay.visible = false), t4.grip && (t4.grip.dispatchEvent({ type: "disconnected", data: e4 }), t4.grip.visible = false);
          }), l2.clear(), t3.setFramebuffer(null), t3.setRenderTarget(t3.getRenderTarget()), M2.stop(), n3.isPresenting = false, n3.dispatchEvent({ type: "sessionend" });
        }
        function g2(t4) {
          i3 = t4, M2.setContext(r3), M2.start(), n3.isPresenting = true, n3.dispatchEvent({ type: "sessionstart" });
        }
        function y2(t4) {
          for (var e4 = r3.inputSources, n4 = 0; n4 < s2.length; n4++) l2.set(e4[n4], s2[n4]);
          for (n4 = 0; n4 < t4.removed.length; n4++) {
            var i4 = t4.removed[n4];
            (a3 = l2.get(i4)) && (a3.targetRay && a3.targetRay.dispatchEvent({ type: "disconnected", data: i4 }), a3.grip && a3.grip.dispatchEvent({ type: "disconnected", data: i4 }), l2.delete(i4));
          }
          for (n4 = 0; n4 < t4.added.length; n4++) {
            var a3;
            i4 = t4.added[n4], (a3 = l2.get(i4)) && (a3.targetRay && a3.targetRay.dispatchEvent({ type: "connected", data: i4 }), a3.grip && a3.grip.dispatchEvent({ type: "connected", data: i4 }));
          }
        }
        this.enabled = false, this.isPresenting = false, this.getController = function(t4) {
          var e4 = s2[t4];
          return void 0 === e4 && (e4 = {}, s2[t4] = e4), void 0 === e4.targetRay && (e4.targetRay = new uo(), e4.targetRay.matrixAutoUpdate = false, e4.targetRay.visible = false), e4.targetRay;
        }, this.getControllerGrip = function(t4) {
          var e4 = s2[t4];
          return void 0 === e4 && (e4 = {}, s2[t4] = e4), void 0 === e4.grip && (e4.grip = new uo(), e4.grip.matrixAutoUpdate = false, e4.grip.visible = false), e4.grip;
        }, this.setFramebufferScaleFactor = function() {
        }, this.setReferenceSpaceType = function(t4) {
          a2 = t4;
        }, this.getReferenceSpace = function() {
          return i3;
        }, this.getSession = function() {
          return r3;
        }, this.setSession = function(t4) {
          if (null !== (r3 = t4)) {
            r3.addEventListener("select", f2), r3.addEventListener("selectstart", f2), r3.addEventListener("selectend", f2), r3.addEventListener("squeeze", f2), r3.addEventListener("squeezestart", f2), r3.addEventListener("squeezeend", f2), r3.addEventListener("end", m2);
            var n4 = e3.getContextAttributes(), i4 = { antialias: n4.antialias, alpha: n4.alpha, depth: n4.depth, stencil: n4.stencil }, o3 = new XRWebGLLayer(r3, e3, i4);
            r3.updateRenderState({ baseLayer: o3 }), r3.requestReferenceSpace(a2).then(g2), r3.addEventListener("inputsourceschange", y2);
          }
        };
        var v2 = new He(), x2 = new He();
        function w2(t4, e4) {
          null === e4 ? t4.matrixWorld.copy(t4.matrix) : t4.matrixWorld.multiplyMatrices(e4.matrixWorld, t4.matrix), t4.matrixWorldInverse.getInverse(t4.matrixWorld);
        }
        this.getCamera = function(t4) {
          h2.near = u2.near = c2.near = t4.near, h2.far = u2.far = c2.far = t4.far, p2 === h2.near && d2 === h2.far || (r3.updateRenderState({ depthNear: h2.near, depthFar: h2.far }), p2 = h2.near, d2 = h2.far);
          var e4 = t4.parent, n4 = h2.cameras;
          w2(h2, e4);
          for (var i4 = 0; i4 < n4.length; i4++) w2(n4[i4], e4);
          t4.matrixWorld.copy(h2.matrixWorld);
          for (var a3 = t4.children, o3 = (i4 = 0, a3.length); i4 < o3; i4++) a3[i4].updateMatrixWorld(true);
          return function(t5, e5, n5) {
            v2.setFromMatrixPosition(e5.matrixWorld), x2.setFromMatrixPosition(n5.matrixWorld);
            var r4 = v2.distanceTo(x2), i5 = e5.projectionMatrix.elements, a4 = n5.projectionMatrix.elements, o4 = i5[14] / (i5[10] - 1), s3 = i5[14] / (i5[10] + 1), l3 = (i5[9] + 1) / i5[5], c3 = (i5[9] - 1) / i5[5], u3 = (i5[8] - 1) / i5[0], h3 = (a4[8] + 1) / a4[0], p3 = o4 * u3, d3 = o4 * h3, f3 = r4 / (h3 - u3), m3 = f3 * -u3;
            e5.matrixWorld.decompose(t5.position, t5.quaternion, t5.scale), t5.translateX(m3), t5.translateZ(f3), t5.matrixWorld.compose(t5.position, t5.quaternion, t5.scale), t5.matrixWorldInverse.getInverse(t5.matrixWorld);
            var g3 = o4 + f3, y3 = s3 + f3, w3 = p3 - m3, b3 = r4 - m3 + d3, M3 = l3 * s3 / y3 * g3, _2 = c3 * s3 / y3 * g3;
            t5.projectionMatrix.makePerspective(w3, b3, M3, _2, g3, y3);
          }(h2, c2, u2), h2;
        };
        var b2 = null, M2 = new Ci();
        M2.setAnimationLoop(function(e4, n4) {
          if (null !== (o2 = n4.getViewerPose(i3))) {
            var a3 = o2.views, l3 = r3.renderState.baseLayer;
            t3.setFramebuffer(l3.framebuffer);
            for (var c3 = 0; c3 < a3.length; c3++) {
              var u3 = a3[c3], p3 = l3.getViewport(u3), d3 = h2.cameras[c3];
              d3.matrix.fromArray(u3.transform.matrix), d3.projectionMatrix.fromArray(u3.projectionMatrix), d3.viewport.set(p3.x, p3.y, p3.width, p3.height), 0 === c3 && h2.matrix.copy(d3.matrix);
            }
          }
          var f3 = r3.inputSources;
          for (c3 = 0; c3 < s2.length; c3++) {
            var m3 = s2[c3], g3 = f3[c3], y3 = null, v3 = null;
            g3 && (m3.targetRay && null !== (y3 = n4.getPose(g3.targetRaySpace, i3)) && (m3.targetRay.matrix.fromArray(y3.transform.matrix), m3.targetRay.matrix.decompose(m3.targetRay.position, m3.targetRay.rotation, m3.targetRay.scale)), m3.grip && g3.gripSpace && null !== (v3 = n4.getPose(g3.gripSpace, i3)) && (m3.grip.matrix.fromArray(v3.transform.matrix), m3.grip.matrix.decompose(m3.grip.position, m3.grip.rotation, m3.grip.scale))), m3.targetRay && (m3.targetRay.visible = null !== y3), m3.grip && (m3.grip.visible = null !== v3);
          }
          b2 && b2(e4, n4);
        }), this.setAnimationLoop = function(t4) {
          b2 = t4;
        }, this.dispose = function() {
        };
      }
      function po(t3) {
        var e3 = void 0 !== (t3 = t3 || {}).canvas ? t3.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), n3 = void 0 !== t3.context ? t3.context : null, r3 = void 0 !== t3.alpha && t3.alpha, i3 = void 0 === t3.depth || t3.depth, a2 = void 0 === t3.stencil || t3.stencil, o2 = void 0 !== t3.antialias && t3.antialias, s2 = void 0 === t3.premultipliedAlpha || t3.premultipliedAlpha, c2 = void 0 !== t3.preserveDrawingBuffer && t3.preserveDrawingBuffer, u2 = void 0 !== t3.powerPreference ? t3.powerPreference : "default", h2 = void 0 !== t3.failIfMajorPerformanceCaveat && t3.failIfMajorPerformanceCaveat, p2 = null, d2 = null;
        this.domElement = e3, this.debug = { checkShaderErrors: true }, this.autoClear = true, this.autoClearColor = true, this.autoClearDepth = true, this.autoClearStencil = true, this.sortObjects = true, this.clippingPlanes = [], this.localClippingEnabled = false, this.gammaFactor = 2, this.outputEncoding = pe, this.physicallyCorrectLights = false, this.toneMapping = W, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
        var f2, m2, g2, y2, v2, x2, w2, b2, M2, _2, T2, C2, S2, D2, E2, O2, A2, P2, R2 = this, L2 = false, I2 = null, k2 = 0, j2 = 0, N2 = null, V2 = null, F2 = -1, B2 = { geometry: null, program: null, wireframe: false }, G2 = null, z2 = null, U2 = new Ve(), H2 = new Ve(), J2 = null, q2 = e3.width, X2 = e3.height, Y2 = 1, Z2 = null, K2 = null, $3 = new Ve(0, 0, q2, X2), Q2 = new Ve(0, 0, q2, X2), tt2 = false, et2 = new _i(), nt2 = new function() {
          var t4 = this, e4 = null, n4 = 0, r4 = false, i4 = false, a3 = new qn(), o3 = new Ie(), s3 = { value: null, needsUpdate: false };
          function l2() {
            s3.value !== e4 && (s3.value = e4, s3.needsUpdate = 0 < n4), t4.numPlanes = n4, t4.numIntersection = 0;
          }
          function c3(e5, n5, r5, i5) {
            var l3 = null !== e5 ? e5.length : 0, c4 = null;
            if (0 !== l3) {
              if (c4 = s3.value, true !== i5 || null === c4) {
                var u3 = r5 + 4 * l3, h3 = n5.matrixWorldInverse;
                o3.getNormalMatrix(h3), (null === c4 || c4.length < u3) && (c4 = new Float32Array(u3));
                for (var p3 = 0, d3 = r5; p3 !== l3; ++p3, d3 += 4) a3.copy(e5[p3]).applyMatrix4(h3, o3), a3.normal.toArray(c4, d3), c4[d3 + 3] = a3.constant;
              }
              s3.value = c4, s3.needsUpdate = true;
            }
            return t4.numPlanes = l3, c4;
          }
          this.uniform = s3, this.numPlanes = 0, this.numIntersection = 0, this.init = function(t5, i5, a4) {
            var o4 = 0 !== t5.length || i5 || 0 !== n4 || r4;
            return r4 = i5, e4 = c3(t5, a4, 0), n4 = t5.length, o4;
          }, this.beginShadows = function() {
            i4 = true, c3(null);
          }, this.endShadows = function() {
            i4 = false, l2();
          }, this.setState = function(t5, a4, o4, u3, h3, p3) {
            if (!r4 || null === t5 || 0 === t5.length || i4 && !o4) i4 ? c3(null) : l2();
            else {
              var d3 = i4 ? 0 : n4, f3 = 4 * d3, m3 = h3.clippingState || null;
              s3.value = m3, m3 = c3(t5, u3, f3, p3);
              for (var g3 = 0; g3 !== f3; ++g3) m3[g3] = e4[g3];
              h3.clippingState = m3, this.numIntersection = a4 ? this.numPlanes : 0, this.numPlanes += d3;
            }
          };
        }(), rt2 = false, it2 = false, at2 = new $e(), ot2 = new He();
        function st2() {
          return null === N2 ? Y2 : 1;
        }
        try {
          var lt2 = { alpha: r3, depth: i3, stencil: a2, antialias: o2, premultipliedAlpha: s2, preserveDrawingBuffer: c2, powerPreference: u2, failIfMajorPerformanceCaveat: h2, xrCompatible: true };
          e3.addEventListener("webglcontextlost", mt2, false), e3.addEventListener("webglcontextrestored", gt2, false);
          var ct2 = "webgl";
          if (true === t3.webgl2 && (ct2 = "webgl2"), null === (f2 = n3 || e3.getContext(ct2, lt2) || e3.getContext("experimental-webgl", lt2))) throw null !== e3.getContext("webgl") ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
          t3.retver = ct2, void 0 === f2.getShaderPrecisionFormat && (f2.getShaderPrecisionFormat = function() {
            return { rangeMin: 1, rangeMax: 1, precision: 1 };
          });
        } catch (t4) {
          throw console.error("THREE.WebGLRenderer: " + t4.message), t4;
        }
        function ut2() {
          m2 = new function(t4) {
            var e4 = {};
            return { get: function(n4) {
              if (void 0 !== e4[n4]) return e4[n4];
              var r4;
              switch (n4) {
                case "WEBGL_depth_texture":
                  r4 = t4.getExtension("WEBGL_depth_texture") || t4.getExtension("MOZ_WEBGL_depth_texture") || t4.getExtension("WEBKIT_WEBGL_depth_texture");
                  break;
                case "EXT_texture_filter_anisotropic":
                  r4 = t4.getExtension("EXT_texture_filter_anisotropic") || t4.getExtension("MOZ_EXT_texture_filter_anisotropic") || t4.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                  break;
                case "WEBGL_compressed_texture_s3tc":
                  r4 = t4.getExtension("WEBGL_compressed_texture_s3tc") || t4.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t4.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                  break;
                case "WEBGL_compressed_texture_pvrtc":
                  r4 = t4.getExtension("WEBGL_compressed_texture_pvrtc") || t4.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                  break;
                default:
                  r4 = t4.getExtension(n4);
              }
              return null === r4 && console.warn("THREE.WebGLRenderer: " + n4 + " extension not supported."), e4[n4] = r4;
            } };
          }(f2), false === (g2 = new function(t4, e4, n4) {
            var r4;
            function i4(e5) {
              if ("highp" === e5) {
                if (0 < t4.getShaderPrecisionFormat(35633, 36338).precision && 0 < t4.getShaderPrecisionFormat(35632, 36338).precision) return "highp";
                e5 = "mediump";
              }
              return "mediump" === e5 && 0 < t4.getShaderPrecisionFormat(35633, 36337).precision && 0 < t4.getShaderPrecisionFormat(35632, 36337).precision ? "mediump" : "lowp";
            }
            var a3 = "undefined" != typeof WebGL2RenderingContext && t4 instanceof WebGL2RenderingContext || "undefined" != typeof WebGL2ComputeRenderingContext && t4 instanceof WebGL2ComputeRenderingContext, o3 = void 0 !== n4.precision ? n4.precision : "highp", s3 = i4(o3);
            s3 !== o3 && (console.warn("THREE.WebGLRenderer:", o3, "not supported, using", s3, "instead."), o3 = s3);
            var l2 = true === n4.logarithmicDepthBuffer, c3 = t4.getParameter(34930), u3 = t4.getParameter(35660), h3 = t4.getParameter(3379), p3 = t4.getParameter(34076), d3 = t4.getParameter(34921), f3 = t4.getParameter(36347), m3 = t4.getParameter(36348), g3 = t4.getParameter(36349), y3 = 0 < u3, v3 = a3 || !!e4.get("OES_texture_float");
            return { isWebGL2: a3, getMaxAnisotropy: function() {
              if (void 0 !== r4) return r4;
              var n5 = e4.get("EXT_texture_filter_anisotropic");
              return r4 = null !== n5 ? t4.getParameter(n5.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;
            }, getMaxPrecision: i4, precision: o3, logarithmicDepthBuffer: l2, maxTextures: c3, maxVertexTextures: u3, maxTextureSize: h3, maxCubemapSize: p3, maxAttributes: d3, maxVertexUniforms: f3, maxVaryings: m3, maxFragmentUniforms: g3, vertexTextures: y3, floatFragmentTextures: v3, floatVertexTextures: y3 && v3, maxSamples: a3 ? t4.getParameter(36183) : 0 };
          }(f2, m2, t3)).isWebGL2 && (m2.get("WEBGL_depth_texture"), m2.get("OES_texture_float"), m2.get("OES_texture_half_float"), m2.get("OES_texture_half_float_linear"), m2.get("OES_standard_derivatives"), m2.get("OES_element_index_uint"), m2.get("ANGLE_instanced_arrays")), m2.get("OES_texture_float_linear"), P2 = new so(0, m2, g2), (y2 = new ao(f2, m2, g2)).scissor(H2.copy(Q2).multiplyScalar(Y2).floor()), y2.viewport(U2.copy($3).multiplyScalar(Y2).floor()), v2 = new function(t4) {
            var e4 = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
            return { memory: { geometries: 0, textures: 0 }, render: e4, programs: null, autoReset: true, reset: function() {
              e4.frame++, e4.calls = 0, e4.triangles = 0, e4.points = 0, e4.lines = 0;
            }, update: function(t5, n4, r4) {
              switch (r4 = r4 || 1, e4.calls++, n4) {
                case 4:
                  e4.triangles += r4 * (t5 / 3);
                  break;
                case 1:
                  e4.lines += r4 * (t5 / 2);
                  break;
                case 3:
                  e4.lines += r4 * (t5 - 1);
                  break;
                case 2:
                  e4.lines += r4 * t5;
                  break;
                case 0:
                  e4.points += r4 * t5;
                  break;
                default:
                  console.error("THREE.WebGLInfo: Unknown draw mode:", n4);
              }
            } };
          }(), x2 = new function() {
            var t4 = /* @__PURE__ */ new WeakMap();
            return { get: function(e4) {
              var n4 = t4.get(e4);
              return void 0 === n4 && (n4 = {}, t4.set(e4, n4)), n4;
            }, remove: function(e4) {
              t4.delete(e4);
            }, update: function(e4, n4, r4) {
              t4.get(e4)[n4] = r4;
            }, dispose: function() {
              t4 = /* @__PURE__ */ new WeakMap();
            } };
          }(), w2 = new oo(f2, m2, y2, x2, g2, P2, v2), b2 = new function(t4, e4) {
            var n4 = e4.isWebGL2, r4 = /* @__PURE__ */ new WeakMap();
            return { get: function(t5) {
              return t5.isInterleavedBufferAttribute && (t5 = t5.data), r4.get(t5);
            }, remove: function(e5) {
              e5.isInterleavedBufferAttribute && (e5 = e5.data);
              var n5 = r4.get(e5);
              n5 && (t4.deleteBuffer(n5.buffer), r4.delete(e5));
            }, update: function(e5, i4) {
              e5.isInterleavedBufferAttribute && (e5 = e5.data);
              var a3, o3, s3, l2, c3, u3 = r4.get(e5);
              void 0 === u3 ? r4.set(e5, function(e6, n5) {
                var r5 = e6.array, i5 = e6.usage, a4 = t4.createBuffer();
                t4.bindBuffer(n5, a4), t4.bufferData(n5, r5, i5), e6.onUploadCallback();
                var o4 = 5126;
                return r5 instanceof Float32Array ? o4 = 5126 : r5 instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : r5 instanceof Uint16Array ? o4 = 5123 : r5 instanceof Int16Array ? o4 = 5122 : r5 instanceof Uint32Array ? o4 = 5125 : r5 instanceof Int32Array ? o4 = 5124 : r5 instanceof Int8Array ? o4 = 5120 : r5 instanceof Uint8Array && (o4 = 5121), { buffer: a4, type: o4, bytesPerElement: r5.BYTES_PER_ELEMENT, version: e6.version };
              }(e5, i4)) : u3.version < e5.version && (a3 = u3.buffer, s3 = i4, l2 = (o3 = e5).array, c3 = o3.updateRange, t4.bindBuffer(s3, a3), -1 === c3.count ? t4.bufferSubData(s3, 0, l2) : (n4 ? t4.bufferSubData(s3, c3.offset * l2.BYTES_PER_ELEMENT, l2, c3.offset, c3.count) : t4.bufferSubData(s3, c3.offset * l2.BYTES_PER_ELEMENT, l2.subarray(c3.offset, c3.offset + c3.count)), c3.count = -1), u3.version = e5.version);
            } };
          }(f2, g2), M2 = new function(t4, e4, n4) {
            var r4 = /* @__PURE__ */ new WeakMap(), i4 = /* @__PURE__ */ new WeakMap();
            function a3(t5) {
              var o4 = t5.target, s3 = r4.get(o4);
              for (var l2 in null !== s3.index && e4.remove(s3.index), s3.attributes) e4.remove(s3.attributes[l2]);
              o4.removeEventListener("dispose", a3), r4.delete(o4);
              var c3 = i4.get(s3);
              c3 && (e4.remove(c3), i4.delete(s3)), n4.memory.geometries--;
            }
            function o3(t5) {
              var n5 = [], r5 = t5.index, a4 = t5.attributes.position, o4 = 0;
              if (null !== r5) {
                var s3 = r5.array;
                o4 = r5.version;
                for (var l2 = 0, c3 = s3.length; l2 < c3; l2 += 3) {
                  var u3 = s3[l2 + 0], h3 = s3[l2 + 1], p3 = s3[l2 + 2];
                  n5.push(u3, h3, h3, p3, p3, u3);
                }
              } else for (s3 = a4.array, o4 = a4.version, l2 = 0, c3 = s3.length / 3 - 1; l2 < c3; l2 += 3) u3 = l2 + 0, h3 = l2 + 1, p3 = l2 + 2, n5.push(u3, h3, h3, p3, p3, u3);
              var d3 = new (65535 < Er(n5) ? Tr : Mr)(n5, 1);
              d3.version = o4, e4.update(d3, 34963);
              var f3 = i4.get(t5);
              f3 && e4.remove(f3), i4.set(t5, d3);
            }
            return { get: function(t5, e5) {
              var i5 = r4.get(e5);
              return i5 || (e5.addEventListener("dispose", a3), e5.isBufferGeometry ? i5 = e5 : e5.isGeometry && (void 0 === e5._bufferGeometry && (e5._bufferGeometry = new jr().setFromObject(t5)), i5 = e5._bufferGeometry), r4.set(e5, i5), n4.memory.geometries++, i5);
            }, update: function(t5) {
              var n5 = t5.index, r5 = t5.attributes;
              for (var i5 in null !== n5 && e4.update(n5, 34963), r5) e4.update(r5[i5], 34962);
              var a4 = t5.morphAttributes;
              for (var i5 in a4) for (var o4 = a4[i5], s3 = 0, l2 = o4.length; s3 < l2; s3++) e4.update(o4[s3], 34962);
            }, getWireframeAttribute: function(t5) {
              var e5 = i4.get(t5);
              if (e5) {
                var n5 = t5.index;
                null !== n5 && e5.version < n5.version && o3(t5);
              } else o3(t5);
              return i4.get(t5);
            } };
          }(0, b2, v2), _2 = new function(t4, e4, n4, r4) {
            var i4 = {};
            return { update: function(t5) {
              var a3 = r4.render.frame, o3 = t5.geometry, s3 = e4.get(t5, o3);
              return i4[s3.id] !== a3 && (o3.isGeometry && s3.updateFromObject(t5), e4.update(s3), i4[s3.id] = a3), t5.isInstancedMesh && n4.update(t5.instanceMatrix, 34962), s3;
            }, dispose: function() {
              i4 = {};
            } };
          }(0, M2, b2, v2), E2 = new function(t4) {
            var e4 = {}, n4 = new Float32Array(8);
            return { update: function(r4, i4, a3, o3) {
              var s3 = r4.morphTargetInfluences, l2 = void 0 === s3 ? 0 : s3.length, c3 = e4[i4.id];
              if (void 0 === c3) {
                c3 = [];
                for (var u3 = 0; u3 < l2; u3++) c3[u3] = [u3, 0];
                e4[i4.id] = c3;
              }
              var h3 = a3.morphTargets && i4.morphAttributes.position, p3 = a3.morphNormals && i4.morphAttributes.normal;
              for (u3 = 0; u3 < l2; u3++) 0 !== (f3 = c3[u3])[1] && (h3 && i4.deleteAttribute("morphTarget" + u3), p3 && i4.deleteAttribute("morphNormal" + u3));
              for (u3 = 0; u3 < l2; u3++) (f3 = c3[u3])[0] = u3, f3[1] = s3[u3];
              c3.sort(Pi);
              var d3 = 0;
              for (u3 = 0; u3 < 8; u3++) {
                var f3;
                if (f3 = c3[u3]) {
                  var m3 = f3[0], g3 = f3[1];
                  if (g3) {
                    h3 && i4.setAttribute("morphTarget" + u3, h3[m3]), p3 && i4.setAttribute("morphNormal" + u3, p3[m3]), d3 += n4[u3] = g3;
                    continue;
                  }
                }
                n4[u3] = 0;
              }
              var y3 = i4.morphTargetsRelative ? 1 : 1 - d3;
              o3.getUniforms().setValue(t4, "morphTargetBaseInfluence", y3), o3.getUniforms().setValue(t4, "morphTargetInfluences", n4);
            } };
          }(f2), T2 = new Ja(R2, m2, g2), C2 = new function() {
            var t4 = /* @__PURE__ */ new WeakMap();
            function e4(n4) {
              var r4 = n4.target;
              r4.removeEventListener("dispose", e4), t4.delete(r4);
            }
            return { get: function(n4, r4) {
              var i4, a3 = t4.get(n4);
              return void 0 === a3 ? (i4 = new Ya(), t4.set(n4, /* @__PURE__ */ new WeakMap()), t4.get(n4).set(r4, i4), n4.addEventListener("dispose", e4)) : void 0 === (i4 = a3.get(r4)) && (i4 = new Ya(), a3.set(r4, i4)), i4;
            }, dispose: function() {
              t4 = /* @__PURE__ */ new WeakMap();
            } };
          }(), S2 = new function() {
            var t4 = /* @__PURE__ */ new WeakMap();
            function e4(n4) {
              var r4 = n4.target;
              r4.removeEventListener("dispose", e4), t4.delete(r4);
            }
            return { get: function(n4, r4) {
              var i4;
              return false === t4.has(n4) ? (i4 = new Qa(), t4.set(n4, /* @__PURE__ */ new WeakMap()), t4.get(n4).set(r4, i4), n4.addEventListener("dispose", e4)) : false === t4.get(n4).has(r4) ? (i4 = new Qa(), t4.get(n4).set(r4, i4)) : i4 = t4.get(n4).get(r4), i4;
            }, dispose: function() {
              t4 = /* @__PURE__ */ new WeakMap();
            } };
          }(), D2 = new Ai(R2, y2, _2, s2), O2 = new function(t4, e4, n4, r4) {
            var i4, a3 = r4.isWebGL2;
            this.setMode = function(t5) {
              i4 = t5;
            }, this.render = function(e5, r5) {
              t4.drawArrays(i4, e5, r5), n4.update(r5, i4);
            }, this.renderInstances = function(r5, o3, s3, l2) {
              if (0 !== l2) {
                var c3, u3;
                if (a3) c3 = t4, u3 = "drawArraysInstanced";
                else if (u3 = "drawArraysInstancedANGLE", null === (c3 = e4.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                c3[u3](i4, o3, s3, l2), n4.update(s3, i4, l2);
              }
            };
          }(f2, m2, v2, g2), A2 = new function(t4, e4, n4, r4) {
            var i4, a3, o3, s3 = r4.isWebGL2;
            this.setMode = function(t5) {
              i4 = t5;
            }, this.setIndex = function(t5) {
              a3 = t5.type, o3 = t5.bytesPerElement;
            }, this.render = function(e5, r5) {
              t4.drawElements(i4, r5, a3, e5 * o3), n4.update(r5, i4);
            }, this.renderInstances = function(r5, l2, c3, u3) {
              if (0 !== u3) {
                var h3, p3;
                if (s3) h3 = t4, p3 = "drawElementsInstanced";
                else if (p3 = "drawElementsInstancedANGLE", null === (h3 = e4.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                h3[p3](i4, c3, a3, l2 * o3, u3), n4.update(c3, i4, u3);
              }
            };
          }(f2, m2, v2, g2), v2.programs = T2.programs, R2.capabilities = g2, R2.extensions = m2, R2.properties = x2, R2.renderLists = C2, R2.state = y2, R2.info = v2;
        }
        ut2();
        var ht2 = new ho(R2, f2);
        this.xr = ht2;
        var dt2 = new function(t4, e4) {
          var n4, r4, i4, a3, o3, s3, l2, c3 = t4.extensions, u3 = t4.properties, h3 = 0;
          function p3(t5) {
            return t5.isArrayCamera ? t5.cameras : (o3[0] = t5, o3);
          }
          this.isAvailable = function() {
            if (void 0 === l2) {
              var t5 = c3.get("OVR_multiview2");
              if (l2 = null !== t5 && false === e4.getContextAttributes().antialias) {
                h3 = e4.getParameter(t5.MAX_VIEWS_OVR), n4 = new lo(0, 0, 2), s3 = new Le(), a3 = [], i4 = [], o3 = [];
                for (var r5 = 0; r5 < h3; r5++) a3[r5] = new $e(), i4[r5] = new Ie();
              }
            }
            return l2;
          }, this.attachCamera = function(e5) {
            false !== function(t5) {
              if (void 0 === t5.isArrayCamera) return true;
              var e6 = t5.cameras;
              if (e6.length > h3) return false;
              for (var n5 = 1, r5 = e6.length; n5 < r5; n5++) if (e6[0].viewport.z !== e6[n5].viewport.z || e6[0].viewport.w !== e6[n5].viewport.w) return false;
              return true;
            }(e5) && (r4 = t4.getRenderTarget(), function(e6) {
              if (r4 ? s3.set(r4.width, r4.height) : t4.getDrawingBufferSize(s3), e6.isArrayCamera) {
                var i5 = e6.cameras[0].viewport;
                n4.setSize(i5.z, i5.w), n4.setNumViews(e6.cameras.length);
              } else n4.setSize(s3.x, s3.y), n4.setNumViews(2);
            }(e5), t4.setRenderTarget(n4));
          }, this.detachCamera = function(i5) {
            n4 === t4.getRenderTarget() && (t4.setRenderTarget(r4), function(t5) {
              var r5 = n4, i6 = r5.numViews, a4 = u3.get(r5).__webglViewFramebuffers, o4 = r5.width, l3 = r5.height;
              if (t5.isArrayCamera) for (var c4 = 0; c4 < i6; c4++) {
                var h4 = t5.cameras[c4].viewport, p4 = h4.x, d3 = h4.y, f3 = p4 + h4.z, m3 = d3 + h4.w;
                e4.bindFramebuffer(36008, a4[c4]), e4.blitFramebuffer(0, 0, o4, l3, p4, d3, f3, m3, 16384, 9728);
              }
              else e4.bindFramebuffer(36008, a4[0]), e4.blitFramebuffer(0, 0, o4, l3, 0, 0, s3.x, s3.y, 16384, 9728);
            }(i5));
          }, this.updateCameraProjectionMatricesUniform = function(t5, n5) {
            for (var r5 = p3(t5), i5 = 0; i5 < r5.length; i5++) a3[i5].copy(r5[i5].projectionMatrix);
            n5.setValue(e4, "projectionMatrices", a3);
          }, this.updateCameraViewMatricesUniform = function(t5, n5) {
            for (var r5 = p3(t5), i5 = 0; i5 < r5.length; i5++) a3[i5].copy(r5[i5].matrixWorldInverse);
            n5.setValue(e4, "viewMatrices", a3);
          }, this.updateObjectMatricesUniforms = function(t5, n5, r5) {
            for (var o4 = p3(n5), s4 = 0; s4 < o4.length; s4++) a3[s4].multiplyMatrices(o4[s4].matrixWorldInverse, t5.matrixWorld), i4[s4].getNormalMatrix(a3[s4]);
            r5.setValue(e4, "modelViewMatrices", a3), r5.setValue(e4, "normalMatrices", i4);
          };
        }(R2, f2), ft2 = new io(R2, _2, g2.maxTextureSize);
        function mt2(t4) {
          t4.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), L2 = true;
        }
        function gt2() {
          console.log("THREE.WebGLRenderer: Context Restored."), L2 = false, ut2();
        }
        function yt2(t4) {
          var e4, n4 = t4.target;
          n4.removeEventListener("dispose", yt2), wt2(e4 = n4), x2.remove(e4);
        }
        function wt2(t4) {
          var e4 = x2.get(t4).program;
          (t4.program = void 0) !== e4 && T2.releaseProgram(e4);
        }
        this.shadowMap = ft2, this.getContext = function() {
          return f2;
        }, this.getContextAttributes = function() {
          return f2.getContextAttributes();
        }, this.forceContextLoss = function() {
          var t4 = m2.get("WEBGL_lose_context");
          t4 && t4.loseContext();
        }, this.forceContextRestore = function() {
          var t4 = m2.get("WEBGL_lose_context");
          t4 && t4.restoreContext();
        }, this.getPixelRatio = function() {
          return Y2;
        }, this.setPixelRatio = function(t4) {
          void 0 !== t4 && (Y2 = t4, this.setSize(q2, X2, false));
        }, this.getSize = function(t4) {
          return void 0 === t4 && (console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"), t4 = new Le()), t4.set(q2, X2);
        }, this.setSize = function(t4, n4, r4) {
          ht2.isPresenting ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (q2 = t4, X2 = n4, e3.width = Math.floor(t4 * Y2), e3.height = Math.floor(n4 * Y2), false !== r4 && (e3.style.width = t4 + "px", e3.style.height = n4 + "px"), this.setViewport(0, 0, t4, n4));
        }, this.getDrawingBufferSize = function(t4) {
          return void 0 === t4 && (console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"), t4 = new Le()), t4.set(q2 * Y2, X2 * Y2).floor();
        }, this.setDrawingBufferSize = function(t4, n4, r4) {
          q2 = t4, X2 = n4, Y2 = r4, e3.width = Math.floor(t4 * r4), e3.height = Math.floor(n4 * r4), this.setViewport(0, 0, t4, n4);
        }, this.getCurrentViewport = function(t4) {
          return void 0 === t4 && (console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"), t4 = new Ve()), t4.copy(U2);
        }, this.getViewport = function(t4) {
          return t4.copy($3);
        }, this.setViewport = function(t4, e4, n4, r4) {
          t4.isVector4 ? $3.set(t4.x, t4.y, t4.z, t4.w) : $3.set(t4, e4, n4, r4), y2.viewport(U2.copy($3).multiplyScalar(Y2).floor());
        }, this.getScissor = function(t4) {
          return t4.copy(Q2);
        }, this.setScissor = function(t4, e4, n4, r4) {
          t4.isVector4 ? Q2.set(t4.x, t4.y, t4.z, t4.w) : Q2.set(t4, e4, n4, r4), y2.scissor(H2.copy(Q2).multiplyScalar(Y2).floor());
        }, this.getScissorTest = function() {
          return tt2;
        }, this.setScissorTest = function(t4) {
          y2.setScissorTest(tt2 = t4);
        }, this.setOpaqueSort = function(t4) {
          Z2 = t4;
        }, this.setTransparentSort = function(t4) {
          K2 = t4;
        }, this.getClearColor = function() {
          return D2.getClearColor();
        }, this.setClearColor = function() {
          D2.setClearColor.apply(D2, arguments);
        }, this.getClearAlpha = function() {
          return D2.getClearAlpha();
        }, this.setClearAlpha = function() {
          D2.setClearAlpha.apply(D2, arguments);
        }, this.clear = function(t4, e4, n4) {
          var r4 = 0;
          void 0 !== t4 && !t4 || (r4 |= 16384), void 0 !== e4 && !e4 || (r4 |= 256), void 0 !== n4 && !n4 || (r4 |= 1024), f2.clear(r4);
        }, this.clearColor = function() {
          this.clear(true, false, false);
        }, this.clearDepth = function() {
          this.clear(false, true, false);
        }, this.clearStencil = function() {
          this.clear(false, false, true);
        }, this.dispose = function() {
          e3.removeEventListener("webglcontextlost", mt2, false), e3.removeEventListener("webglcontextrestored", gt2, false), C2.dispose(), S2.dispose(), x2.dispose(), _2.dispose(), ht2.dispose(), _t2.stop();
        }, this.renderBufferImmediate = function(t4, e4) {
          y2.initAttributes();
          var n4 = x2.get(t4);
          t4.hasPositions && !n4.position && (n4.position = f2.createBuffer()), t4.hasNormals && !n4.normal && (n4.normal = f2.createBuffer()), t4.hasUvs && !n4.uv && (n4.uv = f2.createBuffer()), t4.hasColors && !n4.color && (n4.color = f2.createBuffer());
          var r4 = e4.getAttributes();
          t4.hasPositions && (f2.bindBuffer(34962, n4.position), f2.bufferData(34962, t4.positionArray, 35048), y2.enableAttribute(r4.position), f2.vertexAttribPointer(r4.position, 3, 5126, false, 0, 0)), t4.hasNormals && (f2.bindBuffer(34962, n4.normal), f2.bufferData(34962, t4.normalArray, 35048), y2.enableAttribute(r4.normal), f2.vertexAttribPointer(r4.normal, 3, 5126, false, 0, 0)), t4.hasUvs && (f2.bindBuffer(34962, n4.uv), f2.bufferData(34962, t4.uvArray, 35048), y2.enableAttribute(r4.uv), f2.vertexAttribPointer(r4.uv, 2, 5126, false, 0, 0)), t4.hasColors && (f2.bindBuffer(34962, n4.color), f2.bufferData(34962, t4.colorArray, 35048), y2.enableAttribute(r4.color), f2.vertexAttribPointer(r4.color, 3, 5126, false, 0, 0)), y2.disableUnusedAttributes(), f2.drawArrays(4, 0, t4.count), t4.count = 0;
        };
        var bt2 = new vn();
        this.renderBufferDirect = function(t4, e4, n4, r4, i4, a3) {
          null === e4 && (e4 = bt2);
          var o3 = i4.isMesh && i4.matrixWorld.determinant() < 0, s3 = Et2(t4, e4, r4, i4);
          y2.setMaterial(r4, o3);
          var l2 = false;
          B2.geometry === n4.id && B2.program === s3.id && B2.wireframe === (true === r4.wireframe) || (B2.geometry = n4.id, B2.program = s3.id, B2.wireframe = true === r4.wireframe, l2 = true), (r4.morphTargets || r4.morphNormals) && (E2.update(i4, n4, r4, s3), l2 = true);
          var c3 = n4.index, u3 = n4.attributes.position;
          if (null === c3) {
            if (void 0 === u3 || 0 === u3.count) return;
          } else if (0 === c3.count) return;
          var h3, p3 = 1;
          true === r4.wireframe && (c3 = M2.getWireframeAttribute(n4), p3 = 2);
          var d3 = O2;
          null !== c3 && ((h3 = b2.get(c3)) ? (d3 = A2).setIndex(h3) : (console.log("mx attribute == null"), c3 = null)), l2 && (function(t5, e5, n5, r5) {
            if (false !== g2.isWebGL2 || !t5.isInstancedMesh && !e5.isInstancedBufferGeometry || null !== m2.get("ANGLE_instanced_arrays")) {
              y2.initAttributes();
              var i5 = e5.attributes, a4 = r5.getAttributes(), o4 = n5.defaultAttributeValues;
              for (var s4 in a4) {
                var l3 = a4[s4];
                if (0 <= l3) {
                  var c4 = i5[s4];
                  if (void 0 !== c4) {
                    var u4 = c4.normalized, h4 = c4.itemSize;
                    if (void 0 === (_4 = b2.get(c4))) continue;
                    var p4 = _4.buffer, d4 = _4.type, v4 = _4.bytesPerElement;
                    if (c4.isInterleavedBufferAttribute) {
                      var x4 = c4.data, w4 = x4.stride, M3 = c4.offset;
                      x4 && x4.isInstancedInterleavedBuffer ? (y2.enableAttributeAndDivisor(l3, x4.meshPerAttribute), void 0 === e5.maxInstancedCount && (e5.maxInstancedCount = x4.meshPerAttribute * x4.count)) : y2.enableAttribute(l3), f2.bindBuffer(34962, p4), f2.vertexAttribPointer(l3, h4, d4, u4, w4 * v4, M3 * v4);
                    } else c4.isInstancedBufferAttribute ? (y2.enableAttributeAndDivisor(l3, c4.meshPerAttribute), void 0 === e5.maxInstancedCount && (e5.maxInstancedCount = c4.meshPerAttribute * c4.count)) : y2.enableAttribute(l3), f2.bindBuffer(34962, p4), f2.vertexAttribPointer(l3, h4, d4, u4, 0, 0);
                  } else if ("instanceMatrix" === s4) {
                    var _4;
                    if (void 0 === (_4 = b2.get(t5.instanceMatrix))) continue;
                    p4 = _4.buffer, d4 = _4.type, y2.enableAttributeAndDivisor(l3 + 0, 1), y2.enableAttributeAndDivisor(l3 + 1, 1), y2.enableAttributeAndDivisor(l3 + 2, 1), y2.enableAttributeAndDivisor(l3 + 3, 1), f2.bindBuffer(34962, p4), f2.vertexAttribPointer(l3 + 0, 4, d4, false, 64, 0), f2.vertexAttribPointer(l3 + 1, 4, d4, false, 64, 16), f2.vertexAttribPointer(l3 + 2, 4, d4, false, 64, 32), f2.vertexAttribPointer(l3 + 3, 4, d4, false, 64, 48);
                  } else if (void 0 !== o4) {
                    var T4 = o4[s4];
                    if (void 0 !== T4) switch (T4.length) {
                      case 2:
                        f2.vertexAttrib2fv(l3, T4);
                        break;
                      case 3:
                        f2.vertexAttrib3fv(l3, T4);
                        break;
                      case 4:
                        f2.vertexAttrib4fv(l3, T4);
                        break;
                      default:
                        f2.vertexAttrib1fv(l3, T4);
                    }
                  }
                }
              }
              y2.disableUnusedAttributes();
            }
          }(i4, n4, r4, s3), null !== c3 && f2.bindBuffer(34963, h3.buffer));
          var v3 = null !== c3 ? c3.count : u3.count, x3 = n4.drawRange.start * p3, w3 = n4.drawRange.count * p3, _3 = null !== a3 ? a3.start * p3 : 0, T3 = null !== a3 ? a3.count * p3 : 1 / 0, C3 = Math.max(x3, _3), S3 = Math.min(v3, x3 + w3, _3 + T3) - 1, D3 = Math.max(0, S3 - C3 + 1);
          if (0 !== D3) {
            if (i4.isMesh) true === r4.wireframe ? (y2.setLineWidth(r4.wireframeLinewidth * st2()), d3.setMode(1)) : d3.setMode(4);
            else if (i4.isLine) {
              var P3 = r4.linewidth;
              void 0 === P3 && (P3 = 1), y2.setLineWidth(P3 * st2()), i4.isLineSegments ? d3.setMode(1) : i4.isLineLoop ? d3.setMode(2) : d3.setMode(3);
            } else i4.isPoints ? d3.setMode(0) : i4.isSprite && d3.setMode(4);
            i4.isInstancedMesh ? d3.renderInstances(n4, C3, D3, i4.count) : n4.isInstancedBufferGeometry ? d3.renderInstances(n4, C3, D3, n4.maxInstancedCount) : d3.render(C3, D3);
          }
        }, this.compile = function(t4, e4) {
          (d2 = S2.get(t4, e4)).init(), t4.traverse(function(t5) {
            t5.isLight && (d2.pushLight(t5), t5.castShadow && d2.pushShadow(t5));
          }), d2.setupLights(e4);
          var n4 = {};
          t4.traverse(function(e5) {
            if (e5.material) if (Array.isArray(e5.material)) for (var r4 = 0; r4 < e5.material.length; r4++) e5.material[r4].uuid in n4 == 0 && (Dt2(e5.material[r4], t4, e5), n4[e5.material[r4].uuid] = true);
            else e5.material.uuid in n4 == 0 && (Dt2(e5.material, t4, e5), n4[e5.material.uuid] = true);
          });
        };
        var Mt2 = null, _t2 = new Ci();
        function Tt2(t4, e4, n4, r4) {
          for (var i4 = 0, a3 = t4.length; i4 < a3; i4++) {
            var o3 = t4[i4], s3 = o3.object, l2 = o3.geometry, c3 = void 0 === r4 ? o3.material : r4, u3 = o3.group;
            if (n4.isArrayCamera) if (z2 = n4, ht2.enabled && dt2.isAvailable()) Ct2(s3, e4, n4, l2, c3, u3);
            else for (var h3 = n4.cameras, p3 = 0, f3 = h3.length; p3 < f3; p3++) {
              var m3 = h3[p3];
              s3.layers.test(m3.layers) && (y2.viewport(U2.copy(m3.viewport)), d2.setupLights(m3), Ct2(s3, e4, m3, l2, c3, u3));
            }
            else z2 = null, Ct2(s3, e4, n4, l2, c3, u3);
          }
        }
        function Ct2(t4, e4, n4, r4, i4, a3) {
          if (t4.onBeforeRender(R2, e4, n4, r4, i4, a3), d2 = S2.get(e4, z2 || n4), t4.modelViewMatrix.multiplyMatrices(n4.matrixWorldInverse, t4.matrixWorld), t4.normalMatrix.getNormalMatrix(t4.modelViewMatrix), t4.isImmediateRenderObject) {
            var o3 = Et2(n4, e4, i4, t4);
            y2.setMaterial(i4), B2.geometry = null, B2.program = null, B2.wireframe = false, s3 = o3, t4.render(function(t5) {
              R2.renderBufferImmediate(t5, s3);
            });
          } else R2.renderBufferDirect(n4, e4, r4, i4, t4, a3);
          var s3;
          t4.onAfterRender(R2, e4, n4, r4, i4, a3), d2 = S2.get(e4, z2 || n4);
        }
        function Dt2(t4, e4, n4) {
          var r4 = x2.get(t4), i4 = d2.state.lights, a3 = d2.state.shadowsArray, o3 = i4.state.version, s3 = T2.getParameters(t4, i4.state, a3, e4, nt2.numPlanes, nt2.numIntersection, n4), l2 = T2.getProgramCacheKey(s3), c3 = r4.program, u3 = true;
          if (void 0 === c3) t4.addEventListener("dispose", yt2);
          else if (c3.cacheKey !== l2) wt2(t4);
          else if (r4.lightsStateVersion !== o3) r4.lightsStateVersion = o3, u3 = false;
          else {
            if (void 0 !== s3.shaderID) return;
            u3 = false;
          }
          u3 && (c3 = T2.acquireProgram(s3, l2), r4.program = c3, r4.uniforms = s3.uniforms, r4.environment = t4.isMeshStandardMaterial ? e4.environment : null, r4.outputEncoding = R2.outputEncoding, t4.program = c3);
          var h3 = c3.getAttributes();
          if (t4.morphTargets) for (var p3 = t4.numSupportedMorphTargets = 0; p3 < R2.maxMorphTargets; p3++) 0 <= h3["morphTarget" + p3] && t4.numSupportedMorphTargets++;
          if (t4.morphNormals) for (p3 = t4.numSupportedMorphNormals = 0; p3 < R2.maxMorphNormals; p3++) 0 <= h3["morphNormal" + p3] && t4.numSupportedMorphNormals++;
          var f3, m3 = r4.uniforms;
          (t4.isShaderMaterial || t4.isRawShaderMaterial) && true !== t4.clipping || (r4.numClippingPlanes = nt2.numPlanes, r4.numIntersection = nt2.numIntersection, m3.clippingPlanes = nt2.uniform), r4.fog = e4.fog, r4.needsLights = (f3 = t4).isMeshLambertMaterial || f3.isMeshToonMaterial || f3.isMeshPhongMaterial || f3.isMeshStandardMaterial || f3.isShadowMaterial || f3.isShaderMaterial && true === f3.lights, r4.lightsStateVersion = o3, r4.needsLights && (m3.ambientLightColor.value = i4.state.ambient, m3.lightProbe.value = i4.state.probe, m3.directionalLights.value = i4.state.directional, m3.spotLights.value = i4.state.spot, m3.rectAreaLights.value = i4.state.rectArea, m3.pointLights.value = i4.state.point, m3.hemisphereLights.value = i4.state.hemi, m3.directionalShadowMap.value = i4.state.directionalShadowMap, m3.directionalShadowMatrix.value = i4.state.directionalShadowMatrix, m3.spotShadowMap.value = i4.state.spotShadowMap, m3.spotShadowMatrix.value = i4.state.spotShadowMatrix, m3.pointShadowMap.value = i4.state.pointShadowMap, m3.pointShadowMatrix.value = i4.state.pointShadowMatrix);
          var g3 = r4.program.getUniforms(), y3 = Oa.seqWithValue(g3.seq, m3);
          r4.uniformsList = y3;
        }
        function Et2(t4, e4, n4, r4) {
          w2.resetTextureUnits();
          var i4 = e4.fog, a3 = n4.isMeshStandardMaterial ? e4.environment : null, o3 = x2.get(n4), s3 = d2.state.lights;
          if (rt2 && (it2 || t4 !== G2)) {
            var c3 = t4 === G2 && n4.id === F2;
            nt2.setState(n4.clippingPlanes, n4.clipIntersection, n4.clipShadows, t4, o3, c3);
          }
          n4.version === o3.__version ? (void 0 === o3.program || n4.fog && o3.fog !== i4 || o3.environment !== a3 || o3.needsLights && o3.lightsStateVersion !== s3.state.version || void 0 !== o3.numClippingPlanes && (o3.numClippingPlanes !== nt2.numPlanes || o3.numIntersection !== nt2.numIntersection) || o3.outputEncoding !== R2.outputEncoding) && Dt2(n4, e4, r4) : (x2.update(n4, "uniforms", n4.uniforms), Dt2(n4, e4, r4), o3.__version = n4.version);
          var u3, h3, p3, m3, v3, b3, M3, _3, T3, C3, S3, D3, E3 = false, O3 = false, A3 = false, P3 = o3.program, L3 = P3.getUniforms(), I3 = o3.uniforms;
          if (y2.useProgram(P3.program) && (A3 = O3 = E3 = true), n4.id !== F2 && (F2 = n4.id, O3 = true), E3 || G2 !== t4) {
            if (0 < P3.numMultiviewViews ? dt2.updateCameraProjectionMatricesUniform(t4, L3) : L3.setValue(f2, "projectionMatrix", t4.projectionMatrix), g2.logarithmicDepthBuffer && L3.setValue(f2, "logDepthBufFC", 2 / (Math.log(t4.far + 1) / Math.LN2)), G2 !== t4 && (G2 = t4, A3 = O3 = true), n4.isShaderMaterial || n4.isMeshPhongMaterial || n4.isMeshToonMaterial || n4.isMeshStandardMaterial || n4.envMap) {
              var k3 = L3.map.cameraPosition;
              void 0 !== k3 && k3.setValue(f2, ot2.setFromMatrixPosition(t4.matrixWorld));
            }
            (n4.isMeshPhongMaterial || n4.isMeshToonMaterial || n4.isMeshLambertMaterial || n4.isMeshBasicMaterial || n4.isMeshStandardMaterial || n4.isShaderMaterial) && L3.setValue(f2, "isOrthographic", true === t4.isOrthographicCamera), (n4.isMeshPhongMaterial || n4.isMeshToonMaterial || n4.isMeshLambertMaterial || n4.isMeshBasicMaterial || n4.isMeshStandardMaterial || n4.isShaderMaterial || n4.skinning) && (0 < P3.numMultiviewViews ? dt2.updateCameraViewMatricesUniform(t4, L3) : L3.setValue(f2, "viewMatrix", t4.matrixWorldInverse));
          }
          if (n4.skinning) {
            L3.setOptional(f2, r4, "bindMatrix"), L3.setOptional(f2, r4, "bindMatrixInverse");
            var j3 = r4.skeleton;
            if (j3) {
              var N3 = j3.bones;
              if (g2.floatVertexTextures) {
                if (void 0 === j3.boneTexture) {
                  var V3 = Math.sqrt(4 * N3.length);
                  V3 = Re.ceilPowerOfTwo(V3), V3 = Math.max(V3, 4);
                  var B3 = new Float32Array(V3 * V3 * 4);
                  B3.set(j3.boneMatrices);
                  var z3 = new wi(B3, V3, V3, St, vt);
                  j3.boneMatrices = B3, j3.boneTexture = z3, j3.boneTextureSize = V3;
                }
                L3.setValue(f2, "boneTexture", j3.boneTexture, w2), L3.setValue(f2, "boneTextureSize", j3.boneTextureSize);
              } else L3.setOptional(f2, j3, "boneMatrices");
            }
          }
          return !O3 && o3.receiveShadow === r4.receiveShadow || (o3.receiveShadow = r4.receiveShadow, L3.setValue(f2, "receiveShadow", r4.receiveShadow)), O3 && (L3.setValue(f2, "toneMappingExposure", R2.toneMappingExposure), L3.setValue(f2, "toneMappingWhitePoint", R2.toneMappingWhitePoint), o3.needsLights && (D3 = A3, (S3 = I3).ambientLightColor.needsUpdate = D3, S3.lightProbe.needsUpdate = D3, S3.directionalLights.needsUpdate = D3, S3.pointLights.needsUpdate = D3, S3.spotLights.needsUpdate = D3, S3.rectAreaLights.needsUpdate = D3, S3.hemisphereLights.needsUpdate = D3), i4 && n4.fog && (C3 = i4, (T3 = I3).fogColor.value.copy(C3.color), C3.isFog ? (T3.fogNear.value = C3.near, T3.fogFar.value = C3.far) : C3.isFogExp2 && (T3.fogDensity.value = C3.density)), n4.isMeshBasicMaterial ? Ot2(I3, n4) : n4.isMeshLambertMaterial ? (Ot2(I3, n4), M3 = I3, (_3 = n4).emissiveMap && (M3.emissiveMap.value = _3.emissiveMap)) : n4.isMeshToonMaterial ? (Ot2(I3, n4), function(t5, e5) {
            t5.specular.value.copy(e5.specular), t5.shininess.value = Math.max(e5.shininess, 1e-4), e5.gradientMap && (t5.gradientMap.value = e5.gradientMap), e5.emissiveMap && (t5.emissiveMap.value = e5.emissiveMap), e5.bumpMap && (t5.bumpMap.value = e5.bumpMap, t5.bumpScale.value = e5.bumpScale, e5.side === l && (t5.bumpScale.value *= -1)), e5.normalMap && (t5.normalMap.value = e5.normalMap, t5.normalScale.value.copy(e5.normalScale), e5.side === l && t5.normalScale.value.negate()), e5.displacementMap && (t5.displacementMap.value = e5.displacementMap, t5.displacementScale.value = e5.displacementScale, t5.displacementBias.value = e5.displacementBias);
          }(I3, n4)) : n4.isMeshPhongMaterial ? (Ot2(I3, n4), function(t5, e5) {
            t5.specular.value.copy(e5.specular), t5.shininess.value = Math.max(e5.shininess, 1e-4), e5.emissiveMap && (t5.emissiveMap.value = e5.emissiveMap), e5.bumpMap && (t5.bumpMap.value = e5.bumpMap, t5.bumpScale.value = e5.bumpScale, e5.side === l && (t5.bumpScale.value *= -1)), e5.normalMap && (t5.normalMap.value = e5.normalMap, t5.normalScale.value.copy(e5.normalScale), e5.side === l && t5.normalScale.value.negate()), e5.displacementMap && (t5.displacementMap.value = e5.displacementMap, t5.displacementScale.value = e5.displacementScale, t5.displacementBias.value = e5.displacementBias);
          }(I3, n4)) : n4.isMeshStandardMaterial ? (Ot2(I3, n4, a3), (n4.isMeshPhysicalMaterial ? function(t5, e5, n5) {
            At2(t5, e5, n5), t5.reflectivity.value = e5.reflectivity, t5.clearcoat.value = e5.clearcoat, t5.clearcoatRoughness.value = e5.clearcoatRoughness, e5.sheen && t5.sheen.value.copy(e5.sheen), e5.clearcoatNormalMap && (t5.clearcoatNormalScale.value.copy(e5.clearcoatNormalScale), t5.clearcoatNormalMap.value = e5.clearcoatNormalMap, e5.side === l && t5.clearcoatNormalScale.value.negate()), t5.transparency.value = e5.transparency;
          } : At2)(I3, n4, a3)) : n4.isMeshMatcapMaterial ? (Ot2(I3, n4), function(t5, e5) {
            e5.matcap && (t5.matcap.value = e5.matcap), e5.bumpMap && (t5.bumpMap.value = e5.bumpMap, t5.bumpScale.value = e5.bumpScale, e5.side === l && (t5.bumpScale.value *= -1)), e5.normalMap && (t5.normalMap.value = e5.normalMap, t5.normalScale.value.copy(e5.normalScale), e5.side === l && t5.normalScale.value.negate()), e5.displacementMap && (t5.displacementMap.value = e5.displacementMap, t5.displacementScale.value = e5.displacementScale, t5.displacementBias.value = e5.displacementBias);
          }(I3, n4)) : n4.isMeshDepthMaterial ? (Ot2(I3, n4), v3 = I3, (b3 = n4).displacementMap && (v3.displacementMap.value = b3.displacementMap, v3.displacementScale.value = b3.displacementScale, v3.displacementBias.value = b3.displacementBias)) : n4.isMeshDistanceMaterial ? (Ot2(I3, n4), function(t5, e5) {
            e5.displacementMap && (t5.displacementMap.value = e5.displacementMap, t5.displacementScale.value = e5.displacementScale, t5.displacementBias.value = e5.displacementBias), t5.referencePosition.value.copy(e5.referencePosition), t5.nearDistance.value = e5.nearDistance, t5.farDistance.value = e5.farDistance;
          }(I3, n4)) : n4.isMeshNormalMaterial ? (Ot2(I3, n4), function(t5, e5) {
            e5.bumpMap && (t5.bumpMap.value = e5.bumpMap, t5.bumpScale.value = e5.bumpScale, e5.side === l && (t5.bumpScale.value *= -1)), e5.normalMap && (t5.normalMap.value = e5.normalMap, t5.normalScale.value.copy(e5.normalScale), e5.side === l && t5.normalScale.value.negate()), e5.displacementMap && (t5.displacementMap.value = e5.displacementMap, t5.displacementScale.value = e5.displacementScale, t5.displacementBias.value = e5.displacementBias);
          }(I3, n4)) : n4.isLineBasicMaterial ? (m3 = n4, (p3 = I3).diffuse.value.copy(m3.color), p3.opacity.value = m3.opacity, n4.isLineDashedMaterial && (h3 = n4, (u3 = I3).dashSize.value = h3.dashSize, u3.totalSize.value = h3.dashSize + h3.gapSize, u3.scale.value = h3.scale)) : n4.isPointsMaterial ? function(t5, e5) {
            var n5;
            t5.diffuse.value.copy(e5.color), t5.opacity.value = e5.opacity, t5.size.value = e5.size * Y2, t5.scale.value = 0.5 * X2, e5.map && (t5.map.value = e5.map), e5.alphaMap && (t5.alphaMap.value = e5.alphaMap), e5.map ? n5 = e5.map : e5.alphaMap && (n5 = e5.alphaMap), void 0 !== n5 && (true === n5.matrixAutoUpdate && n5.updateMatrix(), t5.uvTransform.value.copy(n5.matrix));
          }(I3, n4) : n4.isSpriteMaterial ? function(t5, e5) {
            var n5;
            t5.diffuse.value.copy(e5.color), t5.opacity.value = e5.opacity, t5.rotation.value = e5.rotation, e5.map && (t5.map.value = e5.map), e5.alphaMap && (t5.alphaMap.value = e5.alphaMap), e5.map ? n5 = e5.map : e5.alphaMap && (n5 = e5.alphaMap), void 0 !== n5 && (true === n5.matrixAutoUpdate && n5.updateMatrix(), t5.uvTransform.value.copy(n5.matrix));
          }(I3, n4) : n4.isShadowMaterial && (I3.color.value.copy(n4.color), I3.opacity.value = n4.opacity), void 0 !== I3.ltc_1 && (I3.ltc_1.value = Ti.LTC_1), void 0 !== I3.ltc_2 && (I3.ltc_2.value = Ti.LTC_2), Oa.upload(f2, o3.uniformsList, I3, w2), n4.isShaderMaterial && (n4.uniformsNeedUpdate = false)), n4.isShaderMaterial && true === n4.uniformsNeedUpdate && (Oa.upload(f2, o3.uniformsList, I3, w2), n4.uniformsNeedUpdate = false), n4.isSpriteMaterial && L3.setValue(f2, "center", r4.center), 0 < P3.numMultiviewViews ? dt2.updateObjectMatricesUniforms(r4, t4, L3) : (L3.setValue(f2, "modelViewMatrix", r4.modelViewMatrix), L3.setValue(f2, "normalMatrix", r4.normalMatrix)), L3.setValue(f2, "modelMatrix", r4.matrixWorld), P3;
        }
        function Ot2(t4, e4, n4) {
          t4.opacity.value = e4.opacity, e4.color && t4.diffuse.value.copy(e4.color), e4.emissive && t4.emissive.value.copy(e4.emissive).multiplyScalar(e4.emissiveIntensity), e4.map && (t4.map.value = e4.map), e4.alphaMap && (t4.alphaMap.value = e4.alphaMap), e4.specularMap && (t4.specularMap.value = e4.specularMap);
          var r4, i4, a3 = e4.envMap || n4;
          a3 && (t4.envMap.value = a3, t4.flipEnvMap.value = a3.isCubeTexture ? -1 : 1, t4.reflectivity.value = e4.reflectivity, t4.refractionRatio.value = e4.refractionRatio, t4.maxMipLevel.value = x2.get(a3).__maxMipLevel), e4.lightMap && (t4.lightMap.value = e4.lightMap, t4.lightMapIntensity.value = e4.lightMapIntensity), e4.aoMap && (t4.aoMap.value = e4.aoMap, t4.aoMapIntensity.value = e4.aoMapIntensity), e4.map ? r4 = e4.map : e4.specularMap ? r4 = e4.specularMap : e4.displacementMap ? r4 = e4.displacementMap : e4.normalMap ? r4 = e4.normalMap : e4.bumpMap ? r4 = e4.bumpMap : e4.roughnessMap ? r4 = e4.roughnessMap : e4.metalnessMap ? r4 = e4.metalnessMap : e4.alphaMap ? r4 = e4.alphaMap : e4.emissiveMap && (r4 = e4.emissiveMap), void 0 !== r4 && (r4.isWebGLRenderTarget && (r4 = r4.texture), true === r4.matrixAutoUpdate && r4.updateMatrix(), t4.uvTransform.value.copy(r4.matrix)), e4.aoMap ? i4 = e4.aoMap : e4.lightMap && (i4 = e4.lightMap), void 0 !== i4 && (i4.isWebGLRenderTarget && (i4 = i4.texture), true === i4.matrixAutoUpdate && i4.updateMatrix(), t4.uv2Transform.value.copy(i4.matrix));
        }
        function At2(t4, e4, n4) {
          t4.roughness.value = e4.roughness, t4.metalness.value = e4.metalness, e4.roughnessMap && (t4.roughnessMap.value = e4.roughnessMap), e4.metalnessMap && (t4.metalnessMap.value = e4.metalnessMap), e4.emissiveMap && (t4.emissiveMap.value = e4.emissiveMap), e4.bumpMap && (t4.bumpMap.value = e4.bumpMap, t4.bumpScale.value = e4.bumpScale, e4.side === l && (t4.bumpScale.value *= -1)), e4.normalMap && (t4.normalMap.value = e4.normalMap, t4.normalScale.value.copy(e4.normalScale), e4.side === l && t4.normalScale.value.negate()), e4.displacementMap && (t4.displacementMap.value = e4.displacementMap, t4.displacementScale.value = e4.displacementScale, t4.displacementBias.value = e4.displacementBias), (e4.envMap || n4) && (t4.envMapIntensity.value = e4.envMapIntensity);
        }
        _t2.setAnimationLoop(function(t4) {
          ht2.isPresenting || Mt2 && Mt2(t4);
        }), "undefined" != typeof window && _t2.setContext(window), this.setAnimationLoop = function(t4) {
          Mt2 = t4, ht2.setAnimationLoop(t4), _t2.start();
        }, this.render = function(t4, e4) {
          var n4, r4;
          if (void 0 !== arguments[2] && (console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."), n4 = arguments[2]), void 0 !== arguments[3] && (console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."), r4 = arguments[3]), e4 && e4.isCamera) {
            if (!L2) {
              B2.geometry = null, B2.program = null, B2.wireframe = false, F2 = -1, !(G2 = null) === t4.autoUpdate && t4.updateMatrixWorld(), null === e4.parent && e4.updateMatrixWorld(), ht2.enabled && ht2.isPresenting && (e4 = ht2.getCamera(e4)), (d2 = S2.get(t4, e4)).init(), t4.onBeforeRender(R2, t4, e4, n4 || N2), at2.multiplyMatrices(e4.projectionMatrix, e4.matrixWorldInverse), et2.setFromProjectionMatrix(at2), it2 = this.localClippingEnabled, rt2 = nt2.init(this.clippingPlanes, it2, e4), (p2 = C2.get(t4, e4)).init(), function t5(e5, n5, r5, i5) {
                if (false !== e5.visible) {
                  if (e5.layers.test(n5.layers)) {
                    if (e5.isGroup) r5 = e5.renderOrder;
                    else if (e5.isLOD) true === e5.autoUpdate && e5.update(n5);
                    else if (e5.isLight) d2.pushLight(e5), e5.castShadow && d2.pushShadow(e5);
                    else if (e5.isSprite) {
                      if (!e5.frustumCulled || et2.intersectsSprite(e5)) {
                        i5 && ot2.setFromMatrixPosition(e5.matrixWorld).applyMatrix4(at2);
                        var a4 = _2.update(e5);
                        (o4 = e5.material).visible && p2.push(e5, a4, o4, r5, ot2.z, null);
                      }
                    } else if (e5.isImmediateRenderObject) i5 && ot2.setFromMatrixPosition(e5.matrixWorld).applyMatrix4(at2), p2.push(e5, null, e5.material, r5, ot2.z, null);
                    else if ((e5.isMesh || e5.isLine || e5.isPoints) && (e5.isSkinnedMesh && e5.skeleton.frame !== v2.render.frame && (e5.skeleton.update(), e5.skeleton.frame = v2.render.frame), !e5.frustumCulled || et2.intersectsObject(e5))) {
                      i5 && ot2.setFromMatrixPosition(e5.matrixWorld).applyMatrix4(at2), a4 = _2.update(e5);
                      var o4 = e5.material;
                      if (Array.isArray(o4)) for (var s4 = a4.groups, l2 = 0, c3 = s4.length; l2 < c3; l2++) {
                        var u3 = s4[l2], h3 = o4[u3.materialIndex];
                        h3 && h3.visible && p2.push(e5, a4, h3, r5, ot2.z, u3);
                      }
                      else o4.visible && p2.push(e5, a4, o4, r5, ot2.z, null);
                    }
                  }
                  var f3 = e5.children;
                  for (l2 = 0, c3 = f3.length; l2 < c3; l2++) t5(f3[l2], n5, r5, i5);
                }
              }(t4, e4, 0, R2.sortObjects), true === R2.sortObjects && p2.sort(Z2, K2), rt2 && nt2.beginShadows();
              var i4 = d2.state.shadowsArray;
              ft2.render(i4, t4, e4), d2.setupLights(e4), rt2 && nt2.endShadows(), this.info.autoReset && this.info.reset(), void 0 !== n4 && this.setRenderTarget(n4), ht2.enabled && dt2.isAvailable() && dt2.attachCamera(e4), D2.render(p2, t4, e4, r4);
              var a3 = p2.opaque, o3 = p2.transparent;
              if (t4.overrideMaterial) {
                var s3 = t4.overrideMaterial;
                a3.length && Tt2(a3, t4, e4, s3), o3.length && Tt2(o3, t4, e4, s3);
              } else a3.length && Tt2(a3, t4, e4), o3.length && Tt2(o3, t4, e4);
              t4.onAfterRender(R2, t4, e4), null !== N2 && (w2.updateRenderTargetMipmap(N2), w2.updateMultisampleRenderTarget(N2)), y2.buffers.depth.setTest(true), y2.buffers.depth.setMask(true), y2.buffers.color.setMask(true), y2.setPolygonOffset(false), ht2.enabled && dt2.isAvailable() && dt2.detachCamera(e4), d2 = p2 = null;
            }
          } else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
        }, this.mxRenderObject = function(t4, e4, n4, r4, i4) {
          Ct2(t4, e4, n4, _2.update(t4), r4, i4);
        }, this.setFramebuffer = function(t4) {
          I2 !== t4 && null === N2 && f2.bindFramebuffer(36160, t4), I2 = t4;
        }, this.getActiveCubeFace = function() {
          return k2;
        }, this.getActiveMipmapLevel = function() {
          return j2;
        }, this.getRenderTarget = function() {
          return N2;
        }, this.setRenderTarget = function(t4, e4, n4) {
          k2 = e4, j2 = n4, (N2 = t4) && void 0 === x2.get(t4).__webglFramebuffer && w2.setupRenderTarget(t4);
          var r4 = I2, i4 = false;
          if (t4) {
            var a3 = x2.get(t4).__webglFramebuffer;
            t4.isWebGLCubeRenderTarget ? (r4 = a3[e4 || 0], i4 = true) : r4 = t4.isWebGLMultisampleRenderTarget ? x2.get(t4).__webglMultisampledFramebuffer : a3, U2.copy(t4.viewport), H2.copy(t4.scissor), J2 = t4.scissorTest;
          } else U2.copy($3).multiplyScalar(Y2).floor(), H2.copy(Q2).multiplyScalar(Y2).floor(), J2 = tt2;
          if (V2 !== r4 && (f2.bindFramebuffer(36160, r4), V2 = r4), y2.viewport(U2), y2.scissor(H2), y2.setScissorTest(J2), i4) {
            var o3 = x2.get(t4.texture);
            f2.framebufferTexture2D(36160, 36064, 34069 + (e4 || 0), o3.__webglTexture, n4 || 0);
          }
        }, this.readRenderTargetPixels = function(t4, e4, n4, r4, i4, a3, o3) {
          if (t4 && t4.isWebGLRenderTarget) {
            var s3 = x2.get(t4).__webglFramebuffer;
            if (t4.isWebGLCubeRenderTarget && void 0 !== o3 && (s3 = s3[o3]), s3) {
              var l2 = false;
              s3 !== V2 && (f2.bindFramebuffer(36160, s3), l2 = true);
              try {
                var c3 = t4.texture, u3 = c3.format, h3 = c3.type;
                if (u3 !== St && P2.convert(u3) !== f2.getParameter(35739)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                if (!(h3 === pt || P2.convert(h3) === f2.getParameter(35738) || h3 === vt && (g2.isWebGL2 || m2.get("OES_texture_float") || m2.get("WEBGL_color_buffer_float")) || h3 === xt && (g2.isWebGL2 ? m2.get("EXT_color_buffer_float") : m2.get("EXT_color_buffer_half_float")))) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                36053 === f2.checkFramebufferStatus(36160) ? 0 <= e4 && e4 <= t4.width - r4 && 0 <= n4 && n4 <= t4.height - i4 && f2.readPixels(e4, n4, r4, i4, P2.convert(u3), P2.convert(h3), a3) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
              } finally {
                l2 && f2.bindFramebuffer(36160, V2);
              }
            }
          } else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
        }, this.copyFramebufferToTexture = function(t4, e4, n4) {
          void 0 === n4 && (n4 = 0);
          var r4 = Math.pow(2, -n4), i4 = Math.floor(e4.image.width * r4), a3 = Math.floor(e4.image.height * r4), o3 = P2.convert(e4.format);
          w2.setTexture2D(e4, 0), f2.copyTexImage2D(3553, n4, o3, t4.x, t4.y, i4, a3, 0), y2.unbindTexture();
        }, this.copyTextureToTexture = function(t4, e4, n4, r4) {
          var i4 = e4.image.width, a3 = e4.image.height, o3 = P2.convert(n4.format), s3 = P2.convert(n4.type);
          w2.setTexture2D(n4, 0), e4.isDataTexture ? f2.texSubImage2D(3553, r4 || 0, t4.x, t4.y, i4, a3, o3, s3, e4.image.data) : f2.texSubImage2D(3553, r4 || 0, t4.x, t4.y, o3, s3, e4.image), y2.unbindTexture();
        }, this.initTexture = function(t4) {
          w2.setTexture2D(t4, 0), y2.unbindTexture();
        }, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", { detail: this }));
      }
      function fo(t3, e3) {
        this.name = "", this.color = new lr(t3), this.density = void 0 !== e3 ? e3 : 25e-5;
      }
      function mo(t3, e3, n3) {
        this.name = "", this.color = new lr(t3), this.near = void 0 !== e3 ? e3 : 1, this.far = void 0 !== n3 ? n3 : 1e3;
      }
      function go(t3, e3) {
        this.array = t3, this.stride = e3, this.count = void 0 !== t3 ? t3.length / e3 : 0, this.usage = Se, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
      }
      lo.prototype = Object.assign(Object.create(Fe.prototype), { constructor: lo, isWebGLMultiviewRenderTarget: true, copy: function(t3) {
        return Fe.prototype.copy.call(this, t3), this.numViews = t3.numViews, this;
      }, setNumViews: function(t3) {
        return this.numViews !== t3 && (this.numViews = t3, this.dispose()), this;
      } }), co.prototype = Object.assign(Object.create(yi.prototype), { constructor: co, isArrayCamera: true }), uo.prototype = Object.assign(Object.create(yn.prototype), { constructor: uo, isGroup: true }), Object.assign(ho.prototype, Ee.prototype), Object.assign(fo.prototype, { isFogExp2: true, clone: function() {
        return new fo(this.color, this.density);
      }, toJSON: function() {
        return { type: "FogExp2", color: this.color.getHex(), density: this.density };
      } }), Object.assign(mo.prototype, { isFog: true, clone: function() {
        return new mo(this.color, this.near, this.far);
      }, toJSON: function() {
        return { type: "Fog", color: this.color.getHex(), near: this.near, far: this.far };
      } }), Object.defineProperty(go.prototype, "needsUpdate", { set: function(t3) {
        true === t3 && this.version++;
      } }), Object.assign(go.prototype, { isInterleavedBuffer: true, onUploadCallback: function() {
      }, setUsage: function(t3) {
        return this.usage = t3, this;
      }, copy: function(t3) {
        return this.array = new t3.array.constructor(t3.array), this.count = t3.count, this.stride = t3.stride, this.usage = t3.usage, this;
      }, copyAt: function(t3, e3, n3) {
        t3 *= this.stride, n3 *= e3.stride;
        for (var r3 = 0, i3 = this.stride; r3 < i3; r3++) this.array[t3 + r3] = e3.array[n3 + r3];
        return this;
      }, set: function(t3, e3) {
        return void 0 === e3 && (e3 = 0), this.array.set(t3, e3), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, onUpload: function(t3) {
        return this.onUploadCallback = t3, this;
      } });
      var yo, vo = new He();
      function xo(t3, e3, n3, r3) {
        this.data = t3, this.itemSize = e3, this.offset = n3, this.normalized = true === r3;
      }
      function wo(t3) {
        fr.call(this), this.type = "SpriteMaterial", this.color = new lr(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = true, this.transparent = true, this.setValues(t3);
      }
      Object.defineProperties(xo.prototype, { count: { get: function() {
        return this.data.count;
      } }, array: { get: function() {
        return this.data.array;
      } } }), Object.assign(xo.prototype, { isInterleavedBufferAttribute: true, applyMatrix4: function(t3) {
        for (var e3 = 0, n3 = this.data.count; e3 < n3; e3++) vo.x = this.getX(e3), vo.y = this.getY(e3), vo.z = this.getZ(e3), vo.applyMatrix4(t3), this.setXYZ(e3, vo.x, vo.y, vo.z);
        return this;
      }, setX: function(t3, e3) {
        return this.data.array[t3 * this.data.stride + this.offset] = e3, this;
      }, setY: function(t3, e3) {
        return this.data.array[t3 * this.data.stride + this.offset + 1] = e3, this;
      }, setZ: function(t3, e3) {
        return this.data.array[t3 * this.data.stride + this.offset + 2] = e3, this;
      }, setW: function(t3, e3) {
        return this.data.array[t3 * this.data.stride + this.offset + 3] = e3, this;
      }, getX: function(t3) {
        return this.data.array[t3 * this.data.stride + this.offset];
      }, getY: function(t3) {
        return this.data.array[t3 * this.data.stride + this.offset + 1];
      }, getZ: function(t3) {
        return this.data.array[t3 * this.data.stride + this.offset + 2];
      }, getW: function(t3) {
        return this.data.array[t3 * this.data.stride + this.offset + 3];
      }, setXY: function(t3, e3, n3) {
        return t3 = t3 * this.data.stride + this.offset, this.data.array[t3 + 0] = e3, this.data.array[t3 + 1] = n3, this;
      }, setXYZ: function(t3, e3, n3, r3) {
        return t3 = t3 * this.data.stride + this.offset, this.data.array[t3 + 0] = e3, this.data.array[t3 + 1] = n3, this.data.array[t3 + 2] = r3, this;
      }, setXYZW: function(t3, e3, n3, r3, i3) {
        return t3 = t3 * this.data.stride + this.offset, this.data.array[t3 + 0] = e3, this.data.array[t3 + 1] = n3, this.data.array[t3 + 2] = r3, this.data.array[t3 + 3] = i3, this;
      } }), ((wo.prototype = Object.create(fr.prototype)).constructor = wo).prototype.isSpriteMaterial = true, wo.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.color.copy(t3.color), this.map = t3.map, this.alphaMap = t3.alphaMap, this.rotation = t3.rotation, this.sizeAttenuation = t3.sizeAttenuation, this;
      };
      var bo = new He(), Mo = new He(), _o = new He(), To = new Le(), Co = new Le(), So = new $e(), Do = new He(), Eo = new He(), Oo = new He(), Ao = new Le(), Po = new Le(), Ro = new Le();
      function Lo(t3) {
        if (yn.call(this), this.type = "Sprite", void 0 === yo) {
          yo = new jr();
          var e3 = new go(new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]), 5);
          yo.setIndex([0, 1, 2, 0, 2, 3]), yo.setAttribute("position", new xo(e3, 3, 0, false)), yo.setAttribute("uv", new xo(e3, 2, 3, false));
        }
        this.geometry = yo, this.material = void 0 !== t3 ? t3 : new wo(), this.center = new Le(0.5, 0.5);
      }
      function Io(t3, e3, n3, r3, i3, a2) {
        To.subVectors(t3, n3).addScalar(0.5).multiply(r3), void 0 !== i3 ? (Co.x = a2 * To.x - i3 * To.y, Co.y = i3 * To.x + a2 * To.y) : Co.copy(To), t3.copy(e3), t3.x += Co.x, t3.y += Co.y, t3.applyMatrix4(So);
      }
      Lo.prototype = Object.assign(Object.create(yn.prototype), { constructor: Lo, isSprite: true, raycast: function(t3, e3) {
        null === t3.camera && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), Mo.setFromMatrixScale(this.matrixWorld), So.copy(t3.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(t3.camera.matrixWorldInverse, this.matrixWorld), _o.setFromMatrixPosition(this.modelViewMatrix), t3.camera.isPerspectiveCamera && false === this.material.sizeAttenuation && Mo.multiplyScalar(-_o.z);
        var n3, r3, i3 = this.material.rotation;
        0 !== i3 && (r3 = Math.cos(i3), n3 = Math.sin(i3));
        var a2 = this.center;
        Io(Do.set(-0.5, -0.5, 0), _o, a2, Mo, n3, r3), Io(Eo.set(0.5, -0.5, 0), _o, a2, Mo, n3, r3), Io(Oo.set(0.5, 0.5, 0), _o, a2, Mo, n3, r3), Ao.set(0, 0), Po.set(1, 0), Ro.set(1, 1);
        var o2 = t3.ray.intersectTriangle(Do, Eo, Oo, false, bo);
        if (null !== o2 || (Io(Eo.set(-0.5, 0.5, 0), _o, a2, Mo, n3, r3), Po.set(0, 1), null !== (o2 = t3.ray.intersectTriangle(Do, Oo, Eo, false, bo)))) {
          var s2 = t3.ray.origin.distanceTo(bo);
          s2 < t3.near || s2 > t3.far || e3.push({ distance: s2, point: bo.clone(), uv: ir.getUV(bo, Do, Eo, Oo, Ao, Po, Ro, new Le()), face: null, object: this });
        }
      }, clone: function() {
        return new this.constructor(this.material).copy(this);
      }, copy: function(t3) {
        return yn.prototype.copy.call(this, t3), void 0 !== t3.center && this.center.copy(t3.center), this;
      } });
      var ko = new He(), jo = new He();
      function No() {
        yn.call(this), this.type = "LOD", Object.defineProperties(this, { levels: { enumerable: true, value: [] } }), this.autoUpdate = true;
      }
      function Vo(t3, e3) {
        t3 && t3.isGeometry && console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."), ti.call(this, t3, e3), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new $e(), this.bindMatrixInverse = new $e();
      }
      No.prototype = Object.assign(Object.create(yn.prototype), { constructor: No, isLOD: true, copy: function(t3) {
        yn.prototype.copy.call(this, t3, false);
        for (var e3 = t3.levels, n3 = 0, r3 = e3.length; n3 < r3; n3++) {
          var i3 = e3[n3];
          this.addLevel(i3.object.clone(), i3.distance);
        }
        return this.autoUpdate = t3.autoUpdate, this;
      }, addLevel: function(t3, e3) {
        void 0 === e3 && (e3 = 0), e3 = Math.abs(e3);
        for (var n3 = this.levels, r3 = 0; r3 < n3.length && !(e3 < n3[r3].distance); r3++) ;
        return n3.splice(r3, 0, { distance: e3, object: t3 }), this.add(t3), this;
      }, getObjectForDistance: function(t3) {
        var e3 = this.levels;
        if (0 < e3.length) {
          for (var n3 = 1, r3 = e3.length; n3 < r3 && !(t3 < e3[n3].distance); n3++) ;
          return e3[n3 - 1].object;
        }
        return null;
      }, raycast: function(t3, e3) {
        if (0 < this.levels.length) {
          ko.setFromMatrixPosition(this.matrixWorld);
          var n3 = t3.ray.origin.distanceTo(ko);
          this.getObjectForDistance(n3).raycast(t3, e3);
        }
      }, update: function(t3) {
        var e3 = this.levels;
        if (1 < e3.length) {
          ko.setFromMatrixPosition(t3.matrixWorld), jo.setFromMatrixPosition(this.matrixWorld);
          var n3 = ko.distanceTo(jo);
          e3[0].object.visible = true;
          for (var r3 = 1, i3 = e3.length; r3 < i3 && n3 >= e3[r3].distance; r3++) e3[r3 - 1].object.visible = false, e3[r3].object.visible = true;
          for (; r3 < i3; r3++) e3[r3].object.visible = false;
        }
      }, toJSON: function(t3) {
        var e3 = yn.prototype.toJSON.call(this, t3);
        false === this.autoUpdate && (e3.object.autoUpdate = false), e3.object.levels = [];
        for (var n3 = this.levels, r3 = 0, i3 = n3.length; r3 < i3; r3++) {
          var a2 = n3[r3];
          e3.object.levels.push({ object: a2.object.uuid, distance: a2.distance });
        }
        return e3;
      } }), Vo.prototype = Object.assign(Object.create(ti.prototype), { constructor: Vo, isSkinnedMesh: true, bind: function(t3, e3) {
        this.skeleton = t3, void 0 === e3 && (this.updateMatrixWorld(true), this.skeleton.calculateInverses(), e3 = this.matrixWorld), this.bindMatrix.copy(e3), this.bindMatrixInverse.getInverse(e3);
      }, pose: function() {
        this.skeleton.pose();
      }, normalizeSkinWeights: function() {
        for (var t3 = new Ve(), e3 = this.geometry.attributes.skinWeight, n3 = 0, r3 = e3.count; n3 < r3; n3++) {
          t3.x = e3.getX(n3), t3.y = e3.getY(n3), t3.z = e3.getZ(n3), t3.w = e3.getW(n3);
          var i3 = 1 / t3.manhattanLength();
          i3 != 1 / 0 ? t3.multiplyScalar(i3) : t3.set(1, 0, 0, 0), e3.setXYZW(n3, t3.x, t3.y, t3.z, t3.w);
        }
      }, updateMatrixWorld: function(t3) {
        ti.prototype.updateMatrixWorld.call(this, t3), "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
      }, clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } });
      var Fo = new $e(), Bo = new $e();
      function Go(t3, e3) {
        if (t3 = t3 || [], this.bones = t3.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), this.frame = -1, void 0 === e3) this.calculateInverses();
        else if (this.bones.length === e3.length) this.boneInverses = e3.slice(0);
        else {
          console.warn("THREE.Skeleton boneInverses is the wrong length."), this.boneInverses = [];
          for (var n3 = 0, r3 = this.bones.length; n3 < r3; n3++) this.boneInverses.push(new $e());
        }
      }
      function zo() {
        yn.call(this), this.type = "Bone";
      }
      Object.assign(Go.prototype, { calculateInverses: function() {
        this.boneInverses = [];
        for (var t3 = 0, e3 = this.bones.length; t3 < e3; t3++) {
          var n3 = new $e();
          this.bones[t3] && n3.getInverse(this.bones[t3].matrixWorld), this.boneInverses.push(n3);
        }
      }, pose: function() {
        var t3, e3, n3;
        for (e3 = 0, n3 = this.bones.length; e3 < n3; e3++) (t3 = this.bones[e3]) && t3.matrixWorld.getInverse(this.boneInverses[e3]);
        for (e3 = 0, n3 = this.bones.length; e3 < n3; e3++) (t3 = this.bones[e3]) && (t3.parent && t3.parent.isBone ? (t3.matrix.getInverse(t3.parent.matrixWorld), t3.matrix.multiply(t3.matrixWorld)) : t3.matrix.copy(t3.matrixWorld), t3.matrix.decompose(t3.position, t3.quaternion, t3.scale));
      }, update: function() {
        for (var t3 = this.bones, e3 = this.boneInverses, n3 = this.boneMatrices, r3 = this.boneTexture, i3 = 0, a2 = t3.length; i3 < a2; i3++) {
          var o2 = t3[i3] ? t3[i3].matrixWorld : Bo;
          Fo.multiplyMatrices(o2, e3[i3]), Fo.toArray(n3, 16 * i3);
        }
        void 0 !== r3 && (r3.needsUpdate = true);
      }, clone: function() {
        return new Go(this.bones, this.boneInverses);
      }, getBoneByName: function(t3) {
        for (var e3 = 0, n3 = this.bones.length; e3 < n3; e3++) {
          var r3 = this.bones[e3];
          if (r3.name === t3) return r3;
        }
      } }), zo.prototype = Object.assign(Object.create(yn.prototype), { constructor: zo, isBone: true });
      var Uo = new $e(), Ho = new $e(), Wo = [], Jo = new ti();
      function qo(t3, e3, n3) {
        ti.call(this, t3, e3), this.instanceMatrix = new yr(new Float32Array(16 * n3), 16), this.count = n3, this.frustumCulled = false;
      }
      function Xo(t3) {
        fr.call(this), this.type = "LineBasicMaterial", this.color = new lr(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.setValues(t3);
      }
      qo.prototype = Object.assign(Object.create(ti.prototype), { constructor: qo, isInstancedMesh: true, getMatrixAt: function(t3, e3) {
        e3.fromArray(this.instanceMatrix.array, 16 * t3);
      }, raycast: function(t3, e3) {
        var n3 = this.matrixWorld, r3 = this.count;
        if (Jo.geometry = this.geometry, Jo.material = this.material, void 0 !== Jo.material) for (var i3 = 0; i3 < r3; i3++) this.getMatrixAt(i3, Uo), Ho.multiplyMatrices(n3, Uo), Jo.matrixWorld = Ho, Jo.raycast(t3, Wo), 0 < Wo.length && (Wo[0].instanceId = i3, Wo[0].object = this, e3.push(Wo[0]), Wo.length = 0);
      }, setMatrixAt: function(t3, e3) {
        e3.toArray(this.instanceMatrix.array, 16 * t3);
      }, updateMorphTargets: function() {
      } }), ((Xo.prototype = Object.create(fr.prototype)).constructor = Xo).prototype.isLineBasicMaterial = true, Xo.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.color.copy(t3.color), this.linewidth = t3.linewidth, this.linecap = t3.linecap, this.linejoin = t3.linejoin, this;
      };
      var Yo = new He(), Zo = new He(), Ko = new $e(), $o = new Un(), Qo = new kn();
      function ts(t3, e3, n3) {
        1 === n3 && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."), yn.call(this), this.type = "Line", this.geometry = void 0 !== t3 ? t3 : new jr(), this.material = void 0 !== e3 ? e3 : new Xo();
      }
      ts.prototype = Object.assign(Object.create(yn.prototype), { constructor: ts, isLine: true, computeLineDistances: function() {
        var t3 = this.geometry;
        if (t3.isBufferGeometry) if (null === t3.index) {
          for (var e3 = t3.attributes.position, n3 = [0], r3 = 1, i3 = e3.count; r3 < i3; r3++) Yo.fromBufferAttribute(e3, r3 - 1), Zo.fromBufferAttribute(e3, r3), n3[r3] = n3[r3 - 1], n3[r3] += Yo.distanceTo(Zo);
          t3.setAttribute("lineDistance", new Cr(n3, 1));
        } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else if (t3.isGeometry) {
          var a2 = t3.vertices;
          for ((n3 = t3.lineDistances)[0] = 0, r3 = 1, i3 = a2.length; r3 < i3; r3++) n3[r3] = n3[r3 - 1], n3[r3] += a2[r3 - 1].distanceTo(a2[r3]);
        }
        return this;
      }, raycast: function(t3, e3) {
        var n3 = t3.linePrecision, r3 = this.geometry, i3 = this.matrixWorld;
        if (null === r3.boundingSphere && r3.computeBoundingSphere(), Qo.copy(r3.boundingSphere), Qo.applyMatrix4(i3), Qo.radius += n3, false !== t3.ray.intersectsSphere(Qo)) {
          Ko.getInverse(i3), $o.copy(t3.ray).applyMatrix4(Ko);
          var a2 = n3 / ((this.scale.x + this.scale.y + this.scale.z) / 3), o2 = a2 * a2, s2 = new He(), l2 = new He(), c2 = new He(), u2 = new He(), h2 = this && this.isLineSegments ? 2 : 1;
          if (r3.isBufferGeometry) {
            var p2 = r3.index, d2 = r3.attributes.position.array;
            if (null !== p2) for (var f2 = p2.array, m2 = 0, g2 = f2.length - 1; m2 < g2; m2 += h2) {
              var y2 = f2[m2], v2 = f2[m2 + 1];
              s2.fromArray(d2, 3 * y2), l2.fromArray(d2, 3 * v2), o2 < $o.distanceSqToSegment(s2, l2, u2, c2) || (u2.applyMatrix4(this.matrixWorld), (b2 = t3.ray.origin.distanceTo(u2)) < t3.near || b2 > t3.far || e3.push({ distance: b2, point: c2.clone().applyMatrix4(this.matrixWorld), index: m2, face: null, faceIndex: null, object: this }));
            }
            else for (m2 = 0, g2 = d2.length / 3 - 1; m2 < g2; m2 += h2) s2.fromArray(d2, 3 * m2), l2.fromArray(d2, 3 * m2 + 3), o2 < $o.distanceSqToSegment(s2, l2, u2, c2) || (u2.applyMatrix4(this.matrixWorld), (b2 = t3.ray.origin.distanceTo(u2)) < t3.near || b2 > t3.far || e3.push({ distance: b2, point: c2.clone().applyMatrix4(this.matrixWorld), index: m2, face: null, faceIndex: null, object: this }));
          } else if (r3.isGeometry) {
            var x2 = r3.vertices, w2 = x2.length;
            for (m2 = 0; m2 < w2 - 1; m2 += h2) {
              var b2;
              o2 < $o.distanceSqToSegment(x2[m2], x2[m2 + 1], u2, c2) || (u2.applyMatrix4(this.matrixWorld), (b2 = t3.ray.origin.distanceTo(u2)) < t3.near || b2 > t3.far || e3.push({ distance: b2, point: c2.clone().applyMatrix4(this.matrixWorld), index: m2, face: null, faceIndex: null, object: this }));
            }
          }
        }
      }, clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } });
      var es = new He(), ns = new He();
      function rs(t3, e3) {
        ts.call(this, t3, e3), this.type = "LineSegments";
      }
      function is(t3, e3) {
        ts.call(this, t3, e3), this.type = "LineLoop";
      }
      function as(t3) {
        fr.call(this), this.type = "PointsMaterial", this.color = new lr(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = true, this.morphTargets = false, this.setValues(t3);
      }
      rs.prototype = Object.assign(Object.create(ts.prototype), { constructor: rs, isLineSegments: true, computeLineDistances: function() {
        var t3 = this.geometry;
        if (t3.isBufferGeometry) if (null === t3.index) {
          for (var e3 = t3.attributes.position, n3 = [], r3 = 0, i3 = e3.count; r3 < i3; r3 += 2) es.fromBufferAttribute(e3, r3), ns.fromBufferAttribute(e3, r3 + 1), n3[r3] = 0 === r3 ? 0 : n3[r3 - 1], n3[r3 + 1] = n3[r3] + es.distanceTo(ns);
          t3.setAttribute("lineDistance", new Cr(n3, 1));
        } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else if (t3.isGeometry) {
          var a2 = t3.vertices;
          for (n3 = t3.lineDistances, r3 = 0, i3 = a2.length; r3 < i3; r3 += 2) es.copy(a2[r3]), ns.copy(a2[r3 + 1]), n3[r3] = 0 === r3 ? 0 : n3[r3 - 1], n3[r3 + 1] = n3[r3] + es.distanceTo(ns);
        }
        return this;
      } }), is.prototype = Object.assign(Object.create(ts.prototype), { constructor: is, isLineLoop: true }), ((as.prototype = Object.create(fr.prototype)).constructor = as).prototype.isPointsMaterial = true, as.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.color.copy(t3.color), this.map = t3.map, this.alphaMap = t3.alphaMap, this.size = t3.size, this.sizeAttenuation = t3.sizeAttenuation, this.morphTargets = t3.morphTargets, this;
      };
      var os = new $e(), ss = new Un(), ls = new kn(), cs = new He();
      function us(t3, e3) {
        yn.call(this), this.type = "Points", this.geometry = void 0 !== t3 ? t3 : new jr(), this.material = void 0 !== e3 ? e3 : new as(), this.updateMorphTargets();
      }
      function hs(t3, e3, n3, r3, i3, a2, o2) {
        var s2 = ss.distanceSqToPoint(t3);
        if (s2 < n3) {
          var l2 = new He();
          ss.closestPointToPoint(t3, l2), l2.applyMatrix4(r3);
          var c2 = i3.ray.origin.distanceTo(l2);
          if (c2 < i3.near || c2 > i3.far) return;
          a2.push({ distance: c2, distanceToRay: Math.sqrt(s2), point: l2, index: e3, face: null, object: o2 });
        }
      }
      function ps(t3, e3, n3, r3, i3, a2, o2, s2, l2) {
        Ne.call(this, t3, e3, n3, r3, i3, a2, o2, s2, l2), this.format = void 0 !== o2 ? o2 : Ct, this.minFilter = void 0 !== a2 ? a2 : ct, this.magFilter = void 0 !== i3 ? i3 : ct, this.generateMipmaps = false;
      }
      function ds(t3, e3, n3, r3, i3, a2, o2, s2, l2, c2, u2, h2) {
        Ne.call(this, null, a2, o2, s2, l2, c2, r3, i3, u2, h2), this.image = { width: e3, height: n3 }, this.mipmaps = t3, this.flipY = false, this.generateMipmaps = false;
      }
      function fs(t3, e3, n3, r3, i3, a2, o2, s2, l2) {
        Ne.call(this, t3, e3, n3, r3, i3, a2, o2, s2, l2), this.needsUpdate = true;
      }
      function ms(t3, e3, n3, r3, i3, a2, o2, s2, l2, c2) {
        if ((c2 = void 0 !== c2 ? c2 : At) !== At && c2 !== Pt) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        void 0 === n3 && c2 === At && (n3 = mt), void 0 === n3 && c2 === Pt && (n3 = _t), Ne.call(this, null, r3, i3, a2, o2, s2, c2, n3, l2), this.image = { width: t3, height: e3 }, this.magFilter = void 0 !== o2 ? o2 : ot, this.minFilter = void 0 !== s2 ? s2 : ot, this.flipY = false, this.generateMipmaps = false;
      }
      function gs(t3) {
        jr.call(this), this.type = "WireframeGeometry";
        var e3, n3, r3, i3, a2, o2, s2, l2, c2, u2, h2 = [], p2 = [0, 0], d2 = {}, f2 = ["a", "b", "c"];
        if (t3 && t3.isGeometry) {
          var m2 = t3.faces;
          for (e3 = 0, r3 = m2.length; e3 < r3; e3++) {
            var g2 = m2[e3];
            for (n3 = 0; n3 < 3; n3++) s2 = g2[f2[n3]], l2 = g2[f2[(n3 + 1) % 3]], p2[0] = Math.min(s2, l2), p2[1] = Math.max(s2, l2), void 0 === d2[c2 = p2[0] + "," + p2[1]] && (d2[c2] = { index1: p2[0], index2: p2[1] });
          }
          for (c2 in d2) o2 = d2[c2], u2 = t3.vertices[o2.index1], h2.push(u2.x, u2.y, u2.z), u2 = t3.vertices[o2.index2], h2.push(u2.x, u2.y, u2.z);
        } else if (t3 && t3.isBufferGeometry) {
          var y2, v2, x2, w2, b2, M2;
          if (u2 = new He(), null !== t3.index) {
            for (y2 = t3.attributes.position, v2 = t3.index, 0 === (x2 = t3.groups).length && (x2 = [{ start: 0, count: v2.count, materialIndex: 0 }]), i3 = 0, a2 = x2.length; i3 < a2; ++i3) for (r3 = (e3 = (w2 = x2[i3]).start) + w2.count; e3 < r3; e3 += 3) for (n3 = 0; n3 < 3; n3++) s2 = v2.getX(e3 + n3), l2 = v2.getX(e3 + (n3 + 1) % 3), p2[0] = Math.min(s2, l2), p2[1] = Math.max(s2, l2), void 0 === d2[c2 = p2[0] + "," + p2[1]] && (d2[c2] = { index1: p2[0], index2: p2[1] });
            for (c2 in d2) o2 = d2[c2], u2.fromBufferAttribute(y2, o2.index1), h2.push(u2.x, u2.y, u2.z), u2.fromBufferAttribute(y2, o2.index2), h2.push(u2.x, u2.y, u2.z);
          } else for (e3 = 0, r3 = (y2 = t3.attributes.position).count / 3; e3 < r3; e3++) for (n3 = 0; n3 < 3; n3++) b2 = 3 * e3 + n3, u2.fromBufferAttribute(y2, b2), h2.push(u2.x, u2.y, u2.z), M2 = 3 * e3 + (n3 + 1) % 3, u2.fromBufferAttribute(y2, M2), h2.push(u2.x, u2.y, u2.z);
        }
        this.setAttribute("position", new Cr(h2, 3));
      }
      function ys(t3, e3, n3) {
        si.call(this), this.type = "ParametricGeometry", this.parameters = { func: t3, slices: e3, stacks: n3 }, this.fromBufferGeometry(new vs(t3, e3, n3)), this.mergeVertices();
      }
      function vs(t3, e3, n3) {
        jr.call(this), this.type = "ParametricBufferGeometry", this.parameters = { func: t3, slices: e3, stacks: n3 };
        var r3, i3, a2 = [], o2 = [], s2 = [], l2 = [], c2 = new He(), u2 = new He(), h2 = new He(), p2 = new He(), d2 = new He();
        t3.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
        var f2 = e3 + 1;
        for (r3 = 0; r3 <= n3; r3++) {
          var m2 = r3 / n3;
          for (i3 = 0; i3 <= e3; i3++) {
            var g2 = i3 / e3;
            t3(g2, m2, u2), o2.push(u2.x, u2.y, u2.z), 0 <= g2 - 1e-5 ? (t3(g2 - 1e-5, m2, h2), p2.subVectors(u2, h2)) : (t3(1e-5 + g2, m2, h2), p2.subVectors(h2, u2)), 0 <= m2 - 1e-5 ? (t3(g2, m2 - 1e-5, h2), d2.subVectors(u2, h2)) : (t3(g2, 1e-5 + m2, h2), d2.subVectors(h2, u2)), c2.crossVectors(p2, d2).normalize(), s2.push(c2.x, c2.y, c2.z), l2.push(g2, m2);
          }
        }
        for (r3 = 0; r3 < n3; r3++) for (i3 = 0; i3 < e3; i3++) {
          var y2 = r3 * f2 + i3, v2 = r3 * f2 + i3 + 1, x2 = (r3 + 1) * f2 + i3 + 1, w2 = (r3 + 1) * f2 + i3;
          a2.push(y2, v2, w2), a2.push(v2, x2, w2);
        }
        this.setIndex(a2), this.setAttribute("position", new Cr(o2, 3)), this.setAttribute("normal", new Cr(s2, 3)), this.setAttribute("uv", new Cr(l2, 2));
      }
      function xs(t3, e3, n3, r3) {
        si.call(this), this.type = "PolyhedronGeometry", this.parameters = { vertices: t3, indices: e3, radius: n3, detail: r3 }, this.fromBufferGeometry(new ws(t3, e3, n3, r3)), this.mergeVertices();
      }
      function ws(t3, e3, n3, r3) {
        jr.call(this), this.type = "PolyhedronBufferGeometry", this.parameters = { vertices: t3, indices: e3, radius: n3, detail: r3 }, n3 = n3 || 1;
        var i3 = [], a2 = [];
        function o2(t4, e4, n4, r4) {
          var i4, a3, o3 = Math.pow(2, r4), l3 = [];
          for (i4 = 0; i4 <= o3; i4++) {
            l3[i4] = [];
            var c3 = t4.clone().lerp(n4, i4 / o3), u3 = e4.clone().lerp(n4, i4 / o3), h2 = o3 - i4;
            for (a3 = 0; a3 <= h2; a3++) l3[i4][a3] = 0 === a3 && i4 === o3 ? c3 : c3.clone().lerp(u3, a3 / h2);
          }
          for (i4 = 0; i4 < o3; i4++) for (a3 = 0; a3 < 2 * (o3 - i4) - 1; a3++) {
            var p2 = Math.floor(a3 / 2);
            a3 % 2 == 0 ? (s2(l3[i4][p2 + 1]), s2(l3[i4 + 1][p2]), s2(l3[i4][p2])) : (s2(l3[i4][p2 + 1]), s2(l3[i4 + 1][p2 + 1]), s2(l3[i4 + 1][p2]));
          }
        }
        function s2(t4) {
          i3.push(t4.x, t4.y, t4.z);
        }
        function l2(e4, n4) {
          var r4 = 3 * e4;
          n4.x = t3[0 + r4], n4.y = t3[1 + r4], n4.z = t3[2 + r4];
        }
        function c2(t4, e4, n4, r4) {
          r4 < 0 && 1 === t4.x && (a2[e4] = t4.x - 1), 0 === n4.x && 0 === n4.z && (a2[e4] = r4 / 2 / Math.PI + 0.5);
        }
        function u2(t4) {
          return Math.atan2(t4.z, -t4.x);
        }
        !function(t4) {
          for (var n4 = new He(), r4 = new He(), i4 = new He(), a3 = 0; a3 < e3.length; a3 += 3) l2(e3[a3 + 0], n4), l2(e3[a3 + 1], r4), l2(e3[a3 + 2], i4), o2(n4, r4, i4, t4);
        }(r3 = r3 || 0), function(t4) {
          for (var e4 = new He(), n4 = 0; n4 < i3.length; n4 += 3) e4.x = i3[n4 + 0], e4.y = i3[n4 + 1], e4.z = i3[n4 + 2], e4.normalize().multiplyScalar(t4), i3[n4 + 0] = e4.x, i3[n4 + 1] = e4.y, i3[n4 + 2] = e4.z;
        }(n3), function() {
          for (var t4 = new He(), e4 = 0; e4 < i3.length; e4 += 3) {
            t4.x = i3[e4 + 0], t4.y = i3[e4 + 1], t4.z = i3[e4 + 2];
            var n4 = u2(t4) / 2 / Math.PI + 0.5, r4 = (o3 = t4, Math.atan2(-o3.y, Math.sqrt(o3.x * o3.x + o3.z * o3.z)) / Math.PI + 0.5);
            a2.push(n4, 1 - r4);
          }
          var o3;
          (function() {
            for (var t5 = new He(), e5 = new He(), n5 = new He(), r5 = new He(), o4 = new Le(), s3 = new Le(), l3 = new Le(), h2 = 0, p2 = 0; h2 < i3.length; h2 += 9, p2 += 6) {
              t5.set(i3[h2 + 0], i3[h2 + 1], i3[h2 + 2]), e5.set(i3[h2 + 3], i3[h2 + 4], i3[h2 + 5]), n5.set(i3[h2 + 6], i3[h2 + 7], i3[h2 + 8]), o4.set(a2[p2 + 0], a2[p2 + 1]), s3.set(a2[p2 + 2], a2[p2 + 3]), l3.set(a2[p2 + 4], a2[p2 + 5]), r5.copy(t5).add(e5).add(n5).divideScalar(3);
              var d2 = u2(r5);
              c2(o4, p2 + 0, t5, d2), c2(s3, p2 + 2, e5, d2), c2(l3, p2 + 4, n5, d2);
            }
          })(), function() {
            for (var t5 = 0; t5 < a2.length; t5 += 6) {
              var e5 = a2[t5 + 0], n5 = a2[t5 + 2], r5 = a2[t5 + 4], i4 = Math.max(e5, n5, r5), o4 = Math.min(e5, n5, r5);
              0.9 < i4 && o4 < 0.1 && (e5 < 0.2 && (a2[t5 + 0] += 1), n5 < 0.2 && (a2[t5 + 2] += 1), r5 < 0.2 && (a2[t5 + 4] += 1));
            }
          }();
        }(), this.setAttribute("position", new Cr(i3, 3)), this.setAttribute("normal", new Cr(i3.slice(), 3)), this.setAttribute("uv", new Cr(a2, 2)), 0 === r3 ? this.computeVertexNormals() : this.normalizeNormals();
      }
      function bs(t3, e3) {
        si.call(this), this.type = "TetrahedronGeometry", this.parameters = { radius: t3, detail: e3 }, this.fromBufferGeometry(new Ms(t3, e3)), this.mergeVertices();
      }
      function Ms(t3, e3) {
        ws.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], t3, e3), this.type = "TetrahedronBufferGeometry", this.parameters = { radius: t3, detail: e3 };
      }
      function _s(t3, e3) {
        si.call(this), this.type = "OctahedronGeometry", this.parameters = { radius: t3, detail: e3 }, this.fromBufferGeometry(new Ts(t3, e3)), this.mergeVertices();
      }
      function Ts(t3, e3) {
        ws.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], t3, e3), this.type = "OctahedronBufferGeometry", this.parameters = { radius: t3, detail: e3 };
      }
      function Cs(t3, e3) {
        si.call(this), this.type = "IcosahedronGeometry", this.parameters = { radius: t3, detail: e3 }, this.fromBufferGeometry(new Ss(t3, e3)), this.mergeVertices();
      }
      function Ss(t3, e3) {
        var n3 = (1 + Math.sqrt(5)) / 2;
        ws.call(this, [-1, n3, 0, 1, n3, 0, -1, -n3, 0, 1, -n3, 0, 0, -1, n3, 0, 1, n3, 0, -1, -n3, 0, 1, -n3, n3, 0, -1, n3, 0, 1, -n3, 0, -1, -n3, 0, 1], [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], t3, e3), this.type = "IcosahedronBufferGeometry", this.parameters = { radius: t3, detail: e3 };
      }
      function Ds(t3, e3) {
        si.call(this), this.type = "DodecahedronGeometry", this.parameters = { radius: t3, detail: e3 }, this.fromBufferGeometry(new Es(t3, e3)), this.mergeVertices();
      }
      function Es(t3, e3) {
        var n3 = (1 + Math.sqrt(5)) / 2, r3 = 1 / n3;
        ws.call(this, [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -r3, -n3, 0, -r3, n3, 0, r3, -n3, 0, r3, n3, -r3, -n3, 0, -r3, n3, 0, r3, -n3, 0, r3, n3, 0, -n3, 0, -r3, n3, 0, -r3, -n3, 0, r3, n3, 0, r3], [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], t3, e3), this.type = "DodecahedronBufferGeometry", this.parameters = { radius: t3, detail: e3 };
      }
      function Os(t3, e3, n3, r3, i3, a2) {
        si.call(this), this.type = "TubeGeometry", this.parameters = { path: t3, tubularSegments: e3, radius: n3, radialSegments: r3, closed: i3 }, void 0 !== a2 && console.warn("THREE.TubeGeometry: taper has been removed.");
        var o2 = new As(t3, e3, n3, r3, i3);
        this.tangents = o2.tangents, this.normals = o2.normals, this.binormals = o2.binormals, this.fromBufferGeometry(o2), this.mergeVertices();
      }
      function As(t3, e3, n3, r3, i3) {
        jr.call(this), this.type = "TubeBufferGeometry", this.parameters = { path: t3, tubularSegments: e3, radius: n3, radialSegments: r3, closed: i3 }, e3 = e3 || 64, n3 = n3 || 1, r3 = r3 || 8, i3 = i3 || false;
        var a2 = t3.computeFrenetFrames(e3, i3);
        this.tangents = a2.tangents, this.normals = a2.normals, this.binormals = a2.binormals;
        var o2, s2, l2 = new He(), c2 = new He(), u2 = new Le(), h2 = new He(), p2 = [], d2 = [], f2 = [], m2 = [];
        function g2(i4) {
          h2 = t3.getPointAt(i4 / e3, h2);
          var o3 = a2.normals[i4], u3 = a2.binormals[i4];
          for (s2 = 0; s2 <= r3; s2++) {
            var f3 = s2 / r3 * Math.PI * 2, m3 = Math.sin(f3), g3 = -Math.cos(f3);
            c2.x = g3 * o3.x + m3 * u3.x, c2.y = g3 * o3.y + m3 * u3.y, c2.z = g3 * o3.z + m3 * u3.z, c2.normalize(), d2.push(c2.x, c2.y, c2.z), l2.x = h2.x + n3 * c2.x, l2.y = h2.y + n3 * c2.y, l2.z = h2.z + n3 * c2.z, p2.push(l2.x, l2.y, l2.z);
          }
        }
        !function() {
          for (o2 = 0; o2 < e3; o2++) g2(o2);
          g2(false === i3 ? e3 : 0), function() {
            for (o2 = 0; o2 <= e3; o2++) for (s2 = 0; s2 <= r3; s2++) u2.x = o2 / e3, u2.y = s2 / r3, f2.push(u2.x, u2.y);
          }(), function() {
            for (s2 = 1; s2 <= e3; s2++) for (o2 = 1; o2 <= r3; o2++) {
              var t4 = (r3 + 1) * (s2 - 1) + (o2 - 1), n4 = (r3 + 1) * s2 + (o2 - 1), i4 = (r3 + 1) * s2 + o2, a3 = (r3 + 1) * (s2 - 1) + o2;
              m2.push(t4, n4, a3), m2.push(n4, i4, a3);
            }
          }();
        }(), this.setIndex(m2), this.setAttribute("position", new Cr(p2, 3)), this.setAttribute("normal", new Cr(d2, 3)), this.setAttribute("uv", new Cr(f2, 2));
      }
      function Ps(t3, e3, n3, r3, i3, a2, o2) {
        si.call(this), this.type = "TorusKnotGeometry", this.parameters = { radius: t3, tube: e3, tubularSegments: n3, radialSegments: r3, p: i3, q: a2 }, void 0 !== o2 && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."), this.fromBufferGeometry(new Rs(t3, e3, n3, r3, i3, a2)), this.mergeVertices();
      }
      function Rs(t3, e3, n3, r3, i3, a2) {
        jr.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = { radius: t3, tube: e3, tubularSegments: n3, radialSegments: r3, p: i3, q: a2 }, t3 = t3 || 1, e3 = e3 || 0.4, n3 = Math.floor(n3) || 64, r3 = Math.floor(r3) || 8, i3 = i3 || 2, a2 = a2 || 3;
        var o2, s2, l2 = [], c2 = [], u2 = [], h2 = [], p2 = new He(), d2 = new He(), f2 = new He(), m2 = new He(), g2 = new He(), y2 = new He(), v2 = new He();
        for (o2 = 0; o2 <= n3; ++o2) {
          var x2 = o2 / n3 * i3 * Math.PI * 2;
          for (D2(x2, i3, a2, t3, f2), D2(0.01 + x2, i3, a2, t3, m2), y2.subVectors(m2, f2), v2.addVectors(m2, f2), g2.crossVectors(y2, v2), v2.crossVectors(g2, y2), g2.normalize(), v2.normalize(), s2 = 0; s2 <= r3; ++s2) {
            var w2 = s2 / r3 * Math.PI * 2, b2 = -e3 * Math.cos(w2), M2 = e3 * Math.sin(w2);
            p2.x = f2.x + (b2 * v2.x + M2 * g2.x), p2.y = f2.y + (b2 * v2.y + M2 * g2.y), p2.z = f2.z + (b2 * v2.z + M2 * g2.z), c2.push(p2.x, p2.y, p2.z), d2.subVectors(p2, f2).normalize(), u2.push(d2.x, d2.y, d2.z), h2.push(o2 / n3), h2.push(s2 / r3);
          }
        }
        for (s2 = 1; s2 <= n3; s2++) for (o2 = 1; o2 <= r3; o2++) {
          var _2 = (r3 + 1) * (s2 - 1) + (o2 - 1), T2 = (r3 + 1) * s2 + (o2 - 1), C2 = (r3 + 1) * s2 + o2, S2 = (r3 + 1) * (s2 - 1) + o2;
          l2.push(_2, T2, S2), l2.push(T2, C2, S2);
        }
        function D2(t4, e4, n4, r4, i4) {
          var a3 = Math.cos(t4), o3 = Math.sin(t4), s3 = n4 / e4 * t4, l3 = Math.cos(s3);
          i4.x = r4 * (2 + l3) * 0.5 * a3, i4.y = r4 * (2 + l3) * o3 * 0.5, i4.z = r4 * Math.sin(s3) * 0.5;
        }
        this.setIndex(l2), this.setAttribute("position", new Cr(c2, 3)), this.setAttribute("normal", new Cr(u2, 3)), this.setAttribute("uv", new Cr(h2, 2));
      }
      function Ls(t3, e3, n3, r3, i3) {
        si.call(this), this.type = "TorusGeometry", this.parameters = { radius: t3, tube: e3, radialSegments: n3, tubularSegments: r3, arc: i3 }, this.fromBufferGeometry(new Is(t3, e3, n3, r3, i3)), this.mergeVertices();
      }
      function Is(t3, e3, n3, r3, i3) {
        jr.call(this), this.type = "TorusBufferGeometry", this.parameters = { radius: t3, tube: e3, radialSegments: n3, tubularSegments: r3, arc: i3 }, t3 = t3 || 1, e3 = e3 || 0.4, n3 = Math.floor(n3) || 8, r3 = Math.floor(r3) || 6, i3 = i3 || 2 * Math.PI;
        var a2, o2, s2 = [], l2 = [], c2 = [], u2 = [], h2 = new He(), p2 = new He(), d2 = new He();
        for (a2 = 0; a2 <= n3; a2++) for (o2 = 0; o2 <= r3; o2++) {
          var f2 = o2 / r3 * i3, m2 = a2 / n3 * Math.PI * 2;
          p2.x = (t3 + e3 * Math.cos(m2)) * Math.cos(f2), p2.y = (t3 + e3 * Math.cos(m2)) * Math.sin(f2), p2.z = e3 * Math.sin(m2), l2.push(p2.x, p2.y, p2.z), h2.x = t3 * Math.cos(f2), h2.y = t3 * Math.sin(f2), d2.subVectors(p2, h2).normalize(), c2.push(d2.x, d2.y, d2.z), u2.push(o2 / r3), u2.push(a2 / n3);
        }
        for (a2 = 1; a2 <= n3; a2++) for (o2 = 1; o2 <= r3; o2++) {
          var g2 = (r3 + 1) * a2 + o2 - 1, y2 = (r3 + 1) * (a2 - 1) + o2 - 1, v2 = (r3 + 1) * (a2 - 1) + o2, x2 = (r3 + 1) * a2 + o2;
          s2.push(g2, y2, x2), s2.push(y2, v2, x2);
        }
        this.setIndex(s2), this.setAttribute("position", new Cr(l2, 3)), this.setAttribute("normal", new Cr(c2, 3)), this.setAttribute("uv", new Cr(u2, 2));
      }
      function ks(t3, e3, n3, r3, i3) {
        var a2, o2;
        if (i3 === 0 < function(t4, e4, n4, r4) {
          for (var i4 = 0, a3 = e4, o3 = n4 - r4; a3 < n4; a3 += r4) i4 += (t4[o3] - t4[a3]) * (t4[a3 + 1] + t4[o3 + 1]), o3 = a3;
          return i4;
        }(t3, e3, n3, r3)) for (a2 = e3; a2 < n3; a2 += r3) o2 = $s(a2, t3[a2], t3[a2 + 1], o2);
        else for (a2 = n3 - r3; e3 <= a2; a2 -= r3) o2 = $s(a2, t3[a2], t3[a2 + 1], o2);
        return o2 && Xs(o2, o2.next) && (Qs(o2), o2 = o2.next), o2;
      }
      function js(t3, e3) {
        if (!t3) return t3;
        e3 = e3 || t3;
        var n3, r3 = t3;
        do {
          if (n3 = false, r3.steiner || !Xs(r3, r3.next) && 0 !== qs(r3.prev, r3, r3.next)) r3 = r3.next;
          else {
            if (Qs(r3), (r3 = e3 = r3.prev) === r3.next) break;
            n3 = true;
          }
        } while (n3 || r3 !== e3);
        return e3;
      }
      function Ns(t3, e3, n3, r3, i3, a2, o2) {
        if (t3) {
          !o2 && a2 && function(t4, e4, n4, r4) {
            for (var i4 = t4; null === i4.z && (i4.z = Hs(i4.x, i4.y, e4, n4, r4)), i4.prevZ = i4.prev, i4.nextZ = i4.next, (i4 = i4.next) !== t4; ) ;
            i4.prevZ.nextZ = null, i4.prevZ = null, function(t5) {
              var e5, n5, r5, i5, a3, o3, s3, l3, c3 = 1;
              do {
                for (n5 = t5, a3 = t5 = null, o3 = 0; n5; ) {
                  for (o3++, r5 = n5, e5 = s3 = 0; e5 < c3 && (s3++, r5 = r5.nextZ); e5++) ;
                  for (l3 = c3; 0 < s3 || 0 < l3 && r5; ) 0 !== s3 && (0 === l3 || !r5 || n5.z <= r5.z) ? (n5 = (i5 = n5).nextZ, s3--) : (r5 = (i5 = r5).nextZ, l3--), a3 ? a3.nextZ = i5 : t5 = i5, i5.prevZ = a3, a3 = i5;
                  n5 = r5;
                }
                a3.nextZ = null, c3 *= 2;
              } while (1 < o3);
            }(i4);
          }(t3, r3, i3, a2);
          for (var s2, l2, c2 = t3; t3.prev !== t3.next; ) if (s2 = t3.prev, l2 = t3.next, a2 ? Fs(t3, r3, i3, a2) : Vs(t3)) e3.push(s2.i / n3), e3.push(t3.i / n3), e3.push(l2.i / n3), Qs(t3), t3 = l2.next, c2 = l2.next;
          else if ((t3 = l2) === c2) {
            o2 ? 1 === o2 ? Ns(t3 = Bs(t3, e3, n3), e3, n3, r3, i3, a2, 2) : 2 === o2 && Gs(t3, e3, n3, r3, i3, a2) : Ns(js(t3), e3, n3, r3, i3, a2, 1);
            break;
          }
        }
      }
      function Vs(t3) {
        var e3 = t3.prev, n3 = t3, r3 = t3.next;
        if (!(0 <= qs(e3, n3, r3))) {
          for (var i3 = t3.next.next; i3 !== t3.prev; ) {
            if (Js(e3.x, e3.y, n3.x, n3.y, r3.x, r3.y, i3.x, i3.y) && 0 <= qs(i3.prev, i3, i3.next)) return;
            i3 = i3.next;
          }
          return 1;
        }
      }
      function Fs(t3, e3, n3, r3) {
        var i3 = t3.prev, a2 = t3, o2 = t3.next;
        if (!(0 <= qs(i3, a2, o2))) {
          for (var s2 = i3.x < a2.x ? i3.x < o2.x ? i3.x : o2.x : a2.x < o2.x ? a2.x : o2.x, l2 = i3.y < a2.y ? i3.y < o2.y ? i3.y : o2.y : a2.y < o2.y ? a2.y : o2.y, c2 = i3.x > a2.x ? i3.x > o2.x ? i3.x : o2.x : a2.x > o2.x ? a2.x : o2.x, u2 = i3.y > a2.y ? i3.y > o2.y ? i3.y : o2.y : a2.y > o2.y ? a2.y : o2.y, h2 = Hs(s2, l2, e3, n3, r3), p2 = Hs(c2, u2, e3, n3, r3), d2 = t3.prevZ, f2 = t3.nextZ; d2 && d2.z >= h2 && f2 && f2.z <= p2; ) {
            if (d2 !== t3.prev && d2 !== t3.next && Js(i3.x, i3.y, a2.x, a2.y, o2.x, o2.y, d2.x, d2.y) && 0 <= qs(d2.prev, d2, d2.next)) return;
            if (d2 = d2.prevZ, f2 !== t3.prev && f2 !== t3.next && Js(i3.x, i3.y, a2.x, a2.y, o2.x, o2.y, f2.x, f2.y) && 0 <= qs(f2.prev, f2, f2.next)) return;
            f2 = f2.nextZ;
          }
          for (; d2 && d2.z >= h2; ) {
            if (d2 !== t3.prev && d2 !== t3.next && Js(i3.x, i3.y, a2.x, a2.y, o2.x, o2.y, d2.x, d2.y) && 0 <= qs(d2.prev, d2, d2.next)) return;
            d2 = d2.prevZ;
          }
          for (; f2 && f2.z <= p2; ) {
            if (f2 !== t3.prev && f2 !== t3.next && Js(i3.x, i3.y, a2.x, a2.y, o2.x, o2.y, f2.x, f2.y) && 0 <= qs(f2.prev, f2, f2.next)) return;
            f2 = f2.nextZ;
          }
          return 1;
        }
      }
      function Bs(t3, e3, n3) {
        var r3 = t3;
        do {
          var i3 = r3.prev, a2 = r3.next.next;
          !Xs(i3, a2) && Ys(i3, r3, r3.next, a2) && Zs(i3, a2) && Zs(a2, i3) && (e3.push(i3.i / n3), e3.push(r3.i / n3), e3.push(a2.i / n3), Qs(r3), Qs(r3.next), r3 = t3 = a2), r3 = r3.next;
        } while (r3 !== t3);
        return r3;
      }
      function Gs(t3, e3, n3, r3, i3, a2) {
        var o2, s2, l2 = t3;
        do {
          for (var c2 = l2.next.next; c2 !== l2.prev; ) {
            if (l2.i !== c2.i && (s2 = c2, (o2 = l2).next.i !== s2.i && o2.prev.i !== s2.i && !function(t4, e4) {
              var n4 = t4;
              do {
                if (n4.i !== t4.i && n4.next.i !== t4.i && n4.i !== e4.i && n4.next.i !== e4.i && Ys(n4, n4.next, t4, e4)) return 1;
                n4 = n4.next;
              } while (n4 !== t4);
            }(o2, s2) && Zs(o2, s2) && Zs(s2, o2) && function(t4, e4) {
              for (var n4 = t4, r4 = false, i4 = (t4.x + e4.x) / 2, a3 = (t4.y + e4.y) / 2; n4.y > a3 != n4.next.y > a3 && n4.next.y !== n4.y && i4 < (n4.next.x - n4.x) * (a3 - n4.y) / (n4.next.y - n4.y) + n4.x && (r4 = !r4), (n4 = n4.next) !== t4; ) ;
              return r4;
            }(o2, s2))) {
              var u2 = Ks(l2, c2);
              return l2 = js(l2, l2.next), u2 = js(u2, u2.next), Ns(l2, e3, n3, r3, i3, a2), void Ns(u2, e3, n3, r3, i3, a2);
            }
            c2 = c2.next;
          }
          l2 = l2.next;
        } while (l2 !== t3);
      }
      function zs(t3, e3) {
        return t3.x - e3.x;
      }
      function Us(t3, e3) {
        if (e3 = function(t4, e4) {
          var n4, r3 = e4, i3 = t4.x, a2 = t4.y, o2 = -1 / 0;
          do {
            if (a2 <= r3.y && a2 >= r3.next.y && r3.next.y !== r3.y) {
              var s2 = r3.x + (a2 - r3.y) * (r3.next.x - r3.x) / (r3.next.y - r3.y);
              if (s2 <= i3 && o2 < s2) {
                if ((o2 = s2) === i3) {
                  if (a2 === r3.y) return r3;
                  if (a2 === r3.next.y) return r3.next;
                }
                n4 = r3.x < r3.next.x ? r3 : r3.next;
              }
            }
            r3 = r3.next;
          } while (r3 !== e4);
          if (!n4) return null;
          if (i3 === o2) return n4.prev;
          var l2, c2 = n4, u2 = n4.x, h2 = n4.y, p2 = 1 / 0;
          for (r3 = n4.next; r3 !== c2; ) i3 >= r3.x && r3.x >= u2 && i3 !== r3.x && Js(a2 < h2 ? i3 : o2, a2, u2, h2, a2 < h2 ? o2 : i3, a2, r3.x, r3.y) && ((l2 = Math.abs(a2 - r3.y) / (i3 - r3.x)) < p2 || l2 === p2 && r3.x > n4.x) && Zs(r3, t4) && (n4 = r3, p2 = l2), r3 = r3.next;
          return n4;
        }(t3, e3)) {
          var n3 = Ks(e3, t3);
          js(n3, n3.next);
        }
      }
      function Hs(t3, e3, n3, r3, i3) {
        return (t3 = 1431655765 & ((t3 = 858993459 & ((t3 = 252645135 & ((t3 = 16711935 & ((t3 = 32767 * (t3 - n3) * i3) | t3 << 8)) | t3 << 4)) | t3 << 2)) | t3 << 1)) | (e3 = 1431655765 & ((e3 = 858993459 & ((e3 = 252645135 & ((e3 = 16711935 & ((e3 = 32767 * (e3 - r3) * i3) | e3 << 8)) | e3 << 4)) | e3 << 2)) | e3 << 1)) << 1;
      }
      function Ws(t3) {
        for (var e3 = t3, n3 = t3; (e3.x < n3.x || e3.x === n3.x && e3.y < n3.y) && (n3 = e3), (e3 = e3.next) !== t3; ) ;
        return n3;
      }
      function Js(t3, e3, n3, r3, i3, a2, o2, s2) {
        return 0 <= (i3 - o2) * (e3 - s2) - (t3 - o2) * (a2 - s2) && 0 <= (t3 - o2) * (r3 - s2) - (n3 - o2) * (e3 - s2) && 0 <= (n3 - o2) * (a2 - s2) - (i3 - o2) * (r3 - s2);
      }
      function qs(t3, e3, n3) {
        return (e3.y - t3.y) * (n3.x - e3.x) - (e3.x - t3.x) * (n3.y - e3.y);
      }
      function Xs(t3, e3) {
        return t3.x === e3.x && t3.y === e3.y;
      }
      function Ys(t3, e3, n3, r3) {
        return Xs(t3, n3) && Xs(e3, r3) || Xs(t3, r3) && Xs(n3, e3) || 0 < qs(t3, e3, n3) != 0 < qs(t3, e3, r3) && 0 < qs(n3, r3, t3) != 0 < qs(n3, r3, e3);
      }
      function Zs(t3, e3) {
        return qs(t3.prev, t3, t3.next) < 0 ? 0 <= qs(t3, e3, t3.next) && 0 <= qs(t3, t3.prev, e3) : qs(t3, e3, t3.prev) < 0 || qs(t3, t3.next, e3) < 0;
      }
      function Ks(t3, e3) {
        var n3 = new tl(t3.i, t3.x, t3.y), r3 = new tl(e3.i, e3.x, e3.y), i3 = t3.next, a2 = e3.prev;
        return (t3.next = e3).prev = t3, (n3.next = i3).prev = n3, (r3.next = n3).prev = r3, (a2.next = r3).prev = a2, r3;
      }
      function $s(t3, e3, n3, r3) {
        var i3 = new tl(t3, e3, n3);
        return r3 ? (i3.next = r3.next, (i3.prev = r3).next.prev = i3, r3.next = i3) : (i3.prev = i3).next = i3, i3;
      }
      function Qs(t3) {
        t3.next.prev = t3.prev, t3.prev.next = t3.next, t3.prevZ && (t3.prevZ.nextZ = t3.nextZ), t3.nextZ && (t3.nextZ.prevZ = t3.prevZ);
      }
      function tl(t3, e3, n3) {
        this.i = t3, this.x = e3, this.y = n3, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = false;
      }
      us.prototype = Object.assign(Object.create(yn.prototype), { constructor: us, isPoints: true, raycast: function(t3, e3) {
        var n3 = this.geometry, r3 = this.matrixWorld, i3 = t3.params.Points.threshold;
        if (null === n3.boundingSphere && n3.computeBoundingSphere(), ls.copy(n3.boundingSphere), ls.applyMatrix4(r3), ls.radius += i3, false !== t3.ray.intersectsSphere(ls)) {
          os.getInverse(r3), ss.copy(t3.ray).applyMatrix4(os);
          var a2 = i3 / ((this.scale.x + this.scale.y + this.scale.z) / 3), o2 = a2 * a2;
          if (n3.isBufferGeometry) {
            var s2 = n3.index, l2 = n3.attributes.position.array;
            if (null !== s2) for (var c2 = s2.array, u2 = 0, h2 = c2.length; u2 < h2; u2++) {
              var p2 = c2[u2];
              cs.fromArray(l2, 3 * p2), hs(cs, p2, o2, r3, t3, e3, this);
            }
            else {
              u2 = 0;
              for (var d2 = l2.length / 3; u2 < d2; u2++) cs.fromArray(l2, 3 * u2), hs(cs, u2, o2, r3, t3, e3, this);
            }
          } else {
            var f2 = n3.vertices;
            for (u2 = 0, d2 = f2.length; u2 < d2; u2++) hs(f2[u2], u2, o2, r3, t3, e3, this);
          }
        }
      }, updateMorphTargets: function() {
        var t3, e3, n3, r3 = this.geometry;
        if (r3.isBufferGeometry) {
          var i3 = r3.morphAttributes, a2 = Object.keys(i3);
          if (0 < a2.length) {
            var o2 = i3[a2[0]];
            if (void 0 !== o2) for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, t3 = 0, e3 = o2.length; t3 < e3; t3++) n3 = o2[t3].name || String(t3), this.morphTargetInfluences.push(0), this.morphTargetDictionary[n3] = t3;
          }
        } else {
          var s2 = r3.morphTargets;
          void 0 !== s2 && 0 < s2.length && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
      }, clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), ps.prototype = Object.assign(Object.create(Ne.prototype), { constructor: ps, isVideoTexture: true, update: function() {
        var t3 = this.image;
        t3.readyState >= t3.HAVE_CURRENT_DATA && (this.needsUpdate = true);
      } }), ((ds.prototype = Object.create(Ne.prototype)).constructor = ds).prototype.isCompressedTexture = true, ((fs.prototype = Object.create(Ne.prototype)).constructor = fs).prototype.isCanvasTexture = true, ((ms.prototype = Object.create(Ne.prototype)).constructor = ms).prototype.isDepthTexture = true, (gs.prototype = Object.create(jr.prototype)).constructor = gs, (ys.prototype = Object.create(si.prototype)).constructor = ys, (vs.prototype = Object.create(jr.prototype)).constructor = vs, (xs.prototype = Object.create(si.prototype)).constructor = xs, (ws.prototype = Object.create(jr.prototype)).constructor = ws, (bs.prototype = Object.create(si.prototype)).constructor = bs, (Ms.prototype = Object.create(ws.prototype)).constructor = Ms, (_s.prototype = Object.create(si.prototype)).constructor = _s, (Ts.prototype = Object.create(ws.prototype)).constructor = Ts, (Cs.prototype = Object.create(si.prototype)).constructor = Cs, (Ss.prototype = Object.create(ws.prototype)).constructor = Ss, (Ds.prototype = Object.create(si.prototype)).constructor = Ds, (Es.prototype = Object.create(ws.prototype)).constructor = Es, (Os.prototype = Object.create(si.prototype)).constructor = Os, ((As.prototype = Object.create(jr.prototype)).constructor = As).prototype.toJSON = function() {
        var t3 = jr.prototype.toJSON.call(this);
        return t3.path = this.parameters.path.toJSON(), t3;
      }, (Ps.prototype = Object.create(si.prototype)).constructor = Ps, (Rs.prototype = Object.create(jr.prototype)).constructor = Rs, (Ls.prototype = Object.create(si.prototype)).constructor = Ls, (Is.prototype = Object.create(jr.prototype)).constructor = Is;
      var el = { area: function(t3) {
        for (var e3 = t3.length, n3 = 0, r3 = e3 - 1, i3 = 0; i3 < e3; r3 = i3++) n3 += t3[r3].x * t3[i3].y - t3[i3].x * t3[r3].y;
        return 0.5 * n3;
      }, isClockWise: function(t3) {
        return el.area(t3) < 0;
      }, triangulateShape: function(t3, e3) {
        var n3 = [], r3 = [], i3 = [];
        nl(t3), rl(n3, t3);
        var a2 = t3.length;
        e3.forEach(nl);
        for (var o2 = 0; o2 < e3.length; o2++) r3.push(a2), a2 += e3[o2].length, rl(n3, e3[o2]);
        var s2 = function(t4, e4, n4) {
          n4 = n4 || 2;
          var r4, i4, a3, o3, s3, l2, c2, u2 = e4 && e4.length, h2 = u2 ? e4[0] * n4 : t4.length, p2 = ks(t4, 0, h2, n4, true), d2 = [];
          if (!p2 || p2.next === p2.prev) return d2;
          if (u2 && (p2 = function(t5, e5, n5, r5) {
            var i5, a4, o4, s4 = [];
            for (i5 = 0, a4 = e5.length; i5 < a4; i5++) (o4 = ks(t5, e5[i5] * r5, i5 < a4 - 1 ? e5[i5 + 1] * r5 : t5.length, r5, false)) === o4.next && (o4.steiner = true), s4.push(Ws(o4));
            for (s4.sort(zs), i5 = 0; i5 < s4.length; i5++) Us(s4[i5], n5), n5 = js(n5, n5.next);
            return n5;
          }(t4, e4, p2, n4)), t4.length > 80 * n4) {
            r4 = a3 = t4[0], i4 = o3 = t4[1];
            for (var f2 = n4; f2 < h2; f2 += n4) (s3 = t4[f2]) < r4 && (r4 = s3), (l2 = t4[f2 + 1]) < i4 && (i4 = l2), a3 < s3 && (a3 = s3), o3 < l2 && (o3 = l2);
            c2 = 0 !== (c2 = Math.max(a3 - r4, o3 - i4)) ? 1 / c2 : 0;
          }
          return Ns(p2, d2, n4, r4, i4, c2), d2;
        }(n3, r3);
        for (o2 = 0; o2 < s2.length; o2 += 3) i3.push(s2.slice(o2, o2 + 3));
        return i3;
      } };
      function nl(t3) {
        var e3 = t3.length;
        2 < e3 && t3[e3 - 1].equals(t3[0]) && t3.pop();
      }
      function rl(t3, e3) {
        for (var n3 = 0; n3 < e3.length; n3++) t3.push(e3[n3].x), t3.push(e3[n3].y);
      }
      function il(t3, e3) {
        si.call(this), this.type = "ExtrudeGeometry", this.parameters = { shapes: t3, options: e3 }, this.fromBufferGeometry(new al(t3, e3)), this.mergeVertices();
      }
      function al(t3, e3) {
        jr.call(this), this.type = "ExtrudeBufferGeometry", this.parameters = { shapes: t3, options: e3 };
        for (var n3 = this, r3 = [], i3 = [], a2 = 0, o2 = (t3 = Array.isArray(t3) ? t3 : [t3]).length; a2 < o2; a2++) s2(t3[a2]);
        function s2(t4) {
          var a3 = [], o3 = void 0 !== e3.curveSegments ? e3.curveSegments : 12, s3 = void 0 !== e3.steps ? e3.steps : 1, l2 = void 0 !== e3.depth ? e3.depth : 100, c2 = void 0 === e3.bevelEnabled || e3.bevelEnabled, u2 = void 0 !== e3.bevelThickness ? e3.bevelThickness : 6, h2 = void 0 !== e3.bevelSize ? e3.bevelSize : u2 - 2, p2 = void 0 !== e3.bevelOffset ? e3.bevelOffset : 0, d2 = void 0 !== e3.bevelSegments ? e3.bevelSegments : 3, f2 = e3.extrudePath, m2 = void 0 !== e3.UVGenerator ? e3.UVGenerator : ol;
          void 0 !== e3.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), l2 = e3.amount);
          var g2, y2, v2, x2, w2, b2, M2, _2, T2 = false;
          f2 && (g2 = f2.getSpacedPoints(s3), c2 = !(T2 = true), y2 = f2.computeFrenetFrames(s3, false), v2 = new He(), x2 = new He(), w2 = new He()), c2 || (p2 = h2 = u2 = d2 = 0);
          var C2 = t4.extractPoints(o3), S2 = C2.shape, D2 = C2.holes;
          if (!el.isClockWise(S2)) for (S2 = S2.reverse(), M2 = 0, _2 = D2.length; M2 < _2; M2++) b2 = D2[M2], el.isClockWise(b2) && (D2[M2] = b2.reverse());
          var E2 = el.triangulateShape(S2, D2), O2 = S2;
          for (M2 = 0, _2 = D2.length; M2 < _2; M2++) b2 = D2[M2], S2 = S2.concat(b2);
          function A2(t5, e4, n4) {
            return e4 || console.error("THREE.ExtrudeGeometry: vec does not exist"), e4.clone().multiplyScalar(n4).add(t5);
          }
          var P2, R2, L2, I2, k2, j2, N2 = S2.length, V2 = E2.length;
          function F2(t5, e4, n4) {
            var r4, i4, a4, o4 = t5.x - e4.x, s4 = t5.y - e4.y, l3 = n4.x - t5.x, c3 = n4.y - t5.y, u3 = o4 * o4 + s4 * s4, h3 = o4 * c3 - s4 * l3;
            if (Math.abs(h3) > Number.EPSILON) {
              var p3 = Math.sqrt(u3), d3 = Math.sqrt(l3 * l3 + c3 * c3), f3 = e4.x - s4 / p3, m3 = e4.y + o4 / p3, g3 = ((n4.x - c3 / d3 - f3) * c3 - (n4.y + l3 / d3 - m3) * l3) / (o4 * c3 - s4 * l3), y3 = (r4 = f3 + o4 * g3 - t5.x) * r4 + (i4 = m3 + s4 * g3 - t5.y) * i4;
              if (y3 <= 2) return new Le(r4, i4);
              a4 = Math.sqrt(y3 / 2);
            } else {
              var v3 = false;
              o4 > Number.EPSILON ? l3 > Number.EPSILON && (v3 = true) : o4 < -Number.EPSILON ? l3 < -Number.EPSILON && (v3 = true) : Math.sign(s4) === Math.sign(c3) && (v3 = true), a4 = v3 ? (r4 = -s4, i4 = o4, Math.sqrt(u3)) : (r4 = o4, i4 = s4, Math.sqrt(u3 / 2));
            }
            return new Le(r4 / a4, i4 / a4);
          }
          for (var B2 = [], G2 = 0, z2 = O2.length, U2 = z2 - 1, H2 = G2 + 1; G2 < z2; G2++, U2++, H2++) U2 === z2 && (U2 = 0), H2 === z2 && (H2 = 0), B2[G2] = F2(O2[G2], O2[U2], O2[H2]);
          var W2, J2, q2 = [], X2 = B2.concat();
          for (M2 = 0, _2 = D2.length; M2 < _2; M2++) {
            for (b2 = D2[M2], W2 = [], G2 = 0, U2 = (z2 = b2.length) - 1, H2 = G2 + 1; G2 < z2; G2++, U2++, H2++) U2 === z2 && (U2 = 0), H2 === z2 && (H2 = 0), W2[G2] = F2(b2[G2], b2[U2], b2[H2]);
            q2.push(W2), X2 = X2.concat(W2);
          }
          for (P2 = 0; P2 < d2; P2++) {
            for (L2 = P2 / d2, I2 = u2 * Math.cos(L2 * Math.PI / 2), R2 = h2 * Math.sin(L2 * Math.PI / 2) + p2, G2 = 0, z2 = O2.length; G2 < z2; G2++) Z2((k2 = A2(O2[G2], B2[G2], R2)).x, k2.y, -I2);
            for (M2 = 0, _2 = D2.length; M2 < _2; M2++) for (b2 = D2[M2], W2 = q2[M2], G2 = 0, z2 = b2.length; G2 < z2; G2++) Z2((k2 = A2(b2[G2], W2[G2], R2)).x, k2.y, -I2);
          }
          for (R2 = h2 + p2, G2 = 0; G2 < N2; G2++) k2 = c2 ? A2(S2[G2], X2[G2], R2) : S2[G2], T2 ? (x2.copy(y2.normals[0]).multiplyScalar(k2.x), v2.copy(y2.binormals[0]).multiplyScalar(k2.y), w2.copy(g2[0]).add(x2).add(v2), Z2(w2.x, w2.y, w2.z)) : Z2(k2.x, k2.y, 0);
          for (J2 = 1; J2 <= s3; J2++) for (G2 = 0; G2 < N2; G2++) k2 = c2 ? A2(S2[G2], X2[G2], R2) : S2[G2], T2 ? (x2.copy(y2.normals[J2]).multiplyScalar(k2.x), v2.copy(y2.binormals[J2]).multiplyScalar(k2.y), w2.copy(g2[J2]).add(x2).add(v2), Z2(w2.x, w2.y, w2.z)) : Z2(k2.x, k2.y, l2 / s3 * J2);
          for (P2 = d2 - 1; 0 <= P2; P2--) {
            for (L2 = P2 / d2, I2 = u2 * Math.cos(L2 * Math.PI / 2), R2 = h2 * Math.sin(L2 * Math.PI / 2) + p2, G2 = 0, z2 = O2.length; G2 < z2; G2++) Z2((k2 = A2(O2[G2], B2[G2], R2)).x, k2.y, l2 + I2);
            for (M2 = 0, _2 = D2.length; M2 < _2; M2++) for (b2 = D2[M2], W2 = q2[M2], G2 = 0, z2 = b2.length; G2 < z2; G2++) k2 = A2(b2[G2], W2[G2], R2), T2 ? Z2(k2.x, k2.y + g2[s3 - 1].y, g2[s3 - 1].x + I2) : Z2(k2.x, k2.y, l2 + I2);
          }
          function Y2(t5, e4) {
            var n4, r4;
            for (G2 = t5.length; 0 <= --G2; ) {
              (r4 = (n4 = G2) - 1) < 0 && (r4 = t5.length - 1);
              var i4 = 0, a4 = s3 + 2 * d2;
              for (i4 = 0; i4 < a4; i4++) {
                var o4 = N2 * i4, l3 = N2 * (i4 + 1);
                $3(e4 + n4 + o4, e4 + r4 + o4, e4 + r4 + l3, e4 + n4 + l3);
              }
            }
          }
          function Z2(t5, e4, n4) {
            a3.push(t5), a3.push(e4), a3.push(n4);
          }
          function K2(t5, e4, i4) {
            Q2(t5), Q2(e4), Q2(i4);
            var a4 = r3.length / 3, o4 = m2.generateTopUV(n3, r3, a4 - 3, a4 - 2, a4 - 1);
            tt2(o4[0]), tt2(o4[1]), tt2(o4[2]);
          }
          function $3(t5, e4, i4, a4) {
            Q2(t5), Q2(e4), Q2(a4), Q2(e4), Q2(i4), Q2(a4);
            var o4 = r3.length / 3, s4 = m2.generateSideWallUV(n3, r3, o4 - 6, o4 - 3, o4 - 2, o4 - 1);
            tt2(s4[0]), tt2(s4[1]), tt2(s4[3]), tt2(s4[1]), tt2(s4[2]), tt2(s4[3]);
          }
          function Q2(t5) {
            r3.push(a3[3 * t5 + 0]), r3.push(a3[3 * t5 + 1]), r3.push(a3[3 * t5 + 2]);
          }
          function tt2(t5) {
            i3.push(t5.x), i3.push(t5.y);
          }
          !function() {
            var t5 = r3.length / 3;
            if (c2) {
              var e4 = 0, i4 = N2 * e4;
              for (G2 = 0; G2 < V2; G2++) K2((j2 = E2[G2])[2] + i4, j2[1] + i4, j2[0] + i4);
              for (i4 = N2 * (e4 = s3 + 2 * d2), G2 = 0; G2 < V2; G2++) K2((j2 = E2[G2])[0] + i4, j2[1] + i4, j2[2] + i4);
            } else {
              for (G2 = 0; G2 < V2; G2++) K2((j2 = E2[G2])[2], j2[1], j2[0]);
              for (G2 = 0; G2 < V2; G2++) K2((j2 = E2[G2])[0] + N2 * s3, j2[1] + N2 * s3, j2[2] + N2 * s3);
            }
            n3.addGroup(t5, r3.length / 3 - t5, 0);
          }(), function() {
            var t5 = r3.length / 3, e4 = 0;
            for (Y2(O2, e4), e4 += O2.length, M2 = 0, _2 = D2.length; M2 < _2; M2++) Y2(b2 = D2[M2], e4), e4 += b2.length;
            n3.addGroup(t5, r3.length / 3 - t5, 1);
          }();
        }
        this.setAttribute("position", new Cr(r3, 3)), this.setAttribute("uv", new Cr(i3, 2)), this.computeVertexNormals();
      }
      ((il.prototype = Object.create(si.prototype)).constructor = il).prototype.toJSON = function() {
        var t3 = si.prototype.toJSON.call(this);
        return sl(this.parameters.shapes, this.parameters.options, t3);
      }, ((al.prototype = Object.create(jr.prototype)).constructor = al).prototype.toJSON = function() {
        var t3 = jr.prototype.toJSON.call(this);
        return sl(this.parameters.shapes, this.parameters.options, t3);
      };
      var ol = { generateTopUV: function(t3, e3, n3, r3, i3) {
        var a2 = e3[3 * n3], o2 = e3[3 * n3 + 1], s2 = e3[3 * r3], l2 = e3[3 * r3 + 1], c2 = e3[3 * i3], u2 = e3[3 * i3 + 1];
        return [new Le(a2, o2), new Le(s2, l2), new Le(c2, u2)];
      }, generateSideWallUV: function(t3, e3, n3, r3, i3, a2) {
        var o2 = e3[3 * n3], s2 = e3[3 * n3 + 1], l2 = e3[3 * n3 + 2], c2 = e3[3 * r3], u2 = e3[3 * r3 + 1], h2 = e3[3 * r3 + 2], p2 = e3[3 * i3], d2 = e3[3 * i3 + 1], f2 = e3[3 * i3 + 2], m2 = e3[3 * a2], g2 = e3[3 * a2 + 1], y2 = e3[3 * a2 + 2];
        return Math.abs(s2 - u2) < 0.01 ? [new Le(o2, 1 - l2), new Le(c2, 1 - h2), new Le(p2, 1 - f2), new Le(m2, 1 - y2)] : [new Le(s2, 1 - l2), new Le(u2, 1 - h2), new Le(d2, 1 - f2), new Le(g2, 1 - y2)];
      } };
      function sl(t3, e3, n3) {
        if (n3.shapes = [], Array.isArray(t3)) for (var r3 = 0, i3 = t3.length; r3 < i3; r3++) {
          var a2 = t3[r3];
          n3.shapes.push(a2.uuid);
        }
        else n3.shapes.push(t3.uuid);
        return void 0 !== e3.extrudePath && (n3.options.extrudePath = e3.extrudePath.toJSON()), n3;
      }
      function ll(t3, e3) {
        si.call(this), this.type = "TextGeometry", this.parameters = { text: t3, parameters: e3 }, this.fromBufferGeometry(new cl(t3, e3)), this.mergeVertices();
      }
      function cl(t3, e3) {
        var n3 = (e3 = e3 || {}).font;
        if (!n3 || !n3.isFont) return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new si();
        var r3 = n3.generateShapes(t3, e3.size);
        e3.depth = void 0 !== e3.height ? e3.height : 50, void 0 === e3.bevelThickness && (e3.bevelThickness = 10), void 0 === e3.bevelSize && (e3.bevelSize = 8), void 0 === e3.bevelEnabled && (e3.bevelEnabled = false), al.call(this, r3, e3), this.type = "TextBufferGeometry";
      }
      function ul(t3, e3, n3, r3, i3, a2, o2) {
        si.call(this), this.type = "SphereGeometry", this.parameters = { radius: t3, widthSegments: e3, heightSegments: n3, phiStart: r3, phiLength: i3, thetaStart: a2, thetaLength: o2 }, this.fromBufferGeometry(new hl(t3, e3, n3, r3, i3, a2, o2)), this.mergeVertices();
      }
      function hl(t3, e3, n3, r3, i3, a2, o2) {
        jr.call(this), this.type = "SphereBufferGeometry", this.parameters = { radius: t3, widthSegments: e3, heightSegments: n3, phiStart: r3, phiLength: i3, thetaStart: a2, thetaLength: o2 }, t3 = t3 || 1, e3 = Math.max(3, Math.floor(e3) || 8), n3 = Math.max(2, Math.floor(n3) || 6), r3 = void 0 !== r3 ? r3 : 0, i3 = void 0 !== i3 ? i3 : 2 * Math.PI, a2 = void 0 !== a2 ? a2 : 0, o2 = void 0 !== o2 ? o2 : Math.PI;
        var s2, l2, c2 = Math.min(a2 + o2, Math.PI), u2 = 0, h2 = [], p2 = new He(), d2 = new He(), f2 = [], m2 = [], g2 = [], y2 = [];
        for (l2 = 0; l2 <= n3; l2++) {
          var v2 = [], x2 = l2 / n3, w2 = 0;
          for (0 == l2 && 0 == a2 ? w2 = 0.5 / e3 : l2 == n3 && c2 == Math.PI && (w2 = -0.5 / e3), s2 = 0; s2 <= e3; s2++) {
            var b2 = s2 / e3;
            p2.x = -t3 * Math.cos(r3 + b2 * i3) * Math.sin(a2 + x2 * o2), p2.y = t3 * Math.cos(a2 + x2 * o2), p2.z = t3 * Math.sin(r3 + b2 * i3) * Math.sin(a2 + x2 * o2), m2.push(p2.x, p2.y, p2.z), d2.copy(p2).normalize(), g2.push(d2.x, d2.y, d2.z), y2.push(b2 + w2, 1 - x2), v2.push(u2++);
          }
          h2.push(v2);
        }
        for (l2 = 0; l2 < n3; l2++) for (s2 = 0; s2 < e3; s2++) {
          var M2 = h2[l2][s2 + 1], _2 = h2[l2][s2], T2 = h2[l2 + 1][s2], C2 = h2[l2 + 1][s2 + 1];
          (0 !== l2 || 0 < a2) && f2.push(M2, _2, C2), (l2 !== n3 - 1 || c2 < Math.PI) && f2.push(_2, T2, C2);
        }
        this.setIndex(f2), this.setAttribute("position", new Cr(m2, 3)), this.setAttribute("normal", new Cr(g2, 3)), this.setAttribute("uv", new Cr(y2, 2));
      }
      function pl(t3, e3, n3, r3, i3, a2) {
        si.call(this), this.type = "RingGeometry", this.parameters = { innerRadius: t3, outerRadius: e3, thetaSegments: n3, phiSegments: r3, thetaStart: i3, thetaLength: a2 }, this.fromBufferGeometry(new dl(t3, e3, n3, r3, i3, a2)), this.mergeVertices();
      }
      function dl(t3, e3, n3, r3, i3, a2) {
        jr.call(this), this.type = "RingBufferGeometry", this.parameters = { innerRadius: t3, outerRadius: e3, thetaSegments: n3, phiSegments: r3, thetaStart: i3, thetaLength: a2 }, t3 = t3 || 0.5, e3 = e3 || 1, i3 = void 0 !== i3 ? i3 : 0, a2 = void 0 !== a2 ? a2 : 2 * Math.PI, n3 = void 0 !== n3 ? Math.max(3, n3) : 8;
        var o2, s2, l2, c2 = [], u2 = [], h2 = [], p2 = [], d2 = t3, f2 = (e3 - t3) / (r3 = void 0 !== r3 ? Math.max(1, r3) : 1), m2 = new He(), g2 = new Le();
        for (s2 = 0; s2 <= r3; s2++) {
          for (l2 = 0; l2 <= n3; l2++) o2 = i3 + l2 / n3 * a2, m2.x = d2 * Math.cos(o2), m2.y = d2 * Math.sin(o2), u2.push(m2.x, m2.y, m2.z), h2.push(0, 0, 1), g2.x = (m2.x / e3 + 1) / 2, g2.y = (m2.y / e3 + 1) / 2, p2.push(g2.x, g2.y);
          d2 += f2;
        }
        for (s2 = 0; s2 < r3; s2++) {
          var y2 = s2 * (n3 + 1);
          for (l2 = 0; l2 < n3; l2++) {
            var v2 = o2 = l2 + y2, x2 = o2 + n3 + 1, w2 = o2 + n3 + 2, b2 = o2 + 1;
            c2.push(v2, x2, b2), c2.push(x2, w2, b2);
          }
        }
        this.setIndex(c2), this.setAttribute("position", new Cr(u2, 3)), this.setAttribute("normal", new Cr(h2, 3)), this.setAttribute("uv", new Cr(p2, 2));
      }
      function fl(t3, e3, n3, r3) {
        si.call(this), this.type = "LatheGeometry", this.parameters = { points: t3, segments: e3, phiStart: n3, phiLength: r3 }, this.fromBufferGeometry(new ml(t3, e3, n3, r3)), this.mergeVertices();
      }
      function ml(t3, e3, n3, r3) {
        jr.call(this), this.type = "LatheBufferGeometry", this.parameters = { points: t3, segments: e3, phiStart: n3, phiLength: r3 }, e3 = Math.floor(e3) || 12, n3 = n3 || 0, r3 = r3 || 2 * Math.PI, r3 = Re.clamp(r3, 0, 2 * Math.PI);
        var i3, a2, o2, s2 = [], l2 = [], c2 = [], u2 = 1 / e3, h2 = new He(), p2 = new Le();
        for (a2 = 0; a2 <= e3; a2++) {
          var d2 = n3 + a2 * u2 * r3, f2 = Math.sin(d2), m2 = Math.cos(d2);
          for (o2 = 0; o2 <= t3.length - 1; o2++) h2.x = t3[o2].x * f2, h2.y = t3[o2].y, h2.z = t3[o2].x * m2, l2.push(h2.x, h2.y, h2.z), p2.x = a2 / e3, p2.y = o2 / (t3.length - 1), c2.push(p2.x, p2.y);
        }
        for (a2 = 0; a2 < e3; a2++) for (o2 = 0; o2 < t3.length - 1; o2++) {
          var g2 = i3 = o2 + a2 * t3.length, y2 = i3 + t3.length, v2 = i3 + t3.length + 1, x2 = i3 + 1;
          s2.push(g2, y2, x2), s2.push(y2, v2, x2);
        }
        if (this.setIndex(s2), this.setAttribute("position", new Cr(l2, 3)), this.setAttribute("uv", new Cr(c2, 2)), this.computeVertexNormals(), r3 === 2 * Math.PI) {
          var w2 = this.attributes.normal.array, b2 = new He(), M2 = new He(), _2 = new He();
          for (i3 = e3 * t3.length * 3, o2 = a2 = 0; a2 < t3.length; a2++, o2 += 3) b2.x = w2[o2 + 0], b2.y = w2[o2 + 1], b2.z = w2[o2 + 2], M2.x = w2[i3 + o2 + 0], M2.y = w2[i3 + o2 + 1], M2.z = w2[i3 + o2 + 2], _2.addVectors(b2, M2).normalize(), w2[o2 + 0] = w2[i3 + o2 + 0] = _2.x, w2[o2 + 1] = w2[i3 + o2 + 1] = _2.y, w2[o2 + 2] = w2[i3 + o2 + 2] = _2.z;
        }
      }
      function gl(t3, e3) {
        si.call(this), this.type = "ShapeGeometry", "object" == typeof e3 && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."), e3 = e3.curveSegments), this.parameters = { shapes: t3, curveSegments: e3 }, this.fromBufferGeometry(new yl(t3, e3)), this.mergeVertices();
      }
      function yl(t3, e3) {
        jr.call(this), this.type = "ShapeBufferGeometry", this.parameters = { shapes: t3, curveSegments: e3 }, e3 = e3 || 12;
        var n3 = [], r3 = [], i3 = [], a2 = [], o2 = 0, s2 = 0;
        if (false === Array.isArray(t3)) c2(t3);
        else for (var l2 = 0; l2 < t3.length; l2++) c2(t3[l2]), this.addGroup(o2, s2, l2), o2 += s2, s2 = 0;
        function c2(t4) {
          var o3, l3, c3, u2 = r3.length / 3, h2 = t4.extractPoints(e3), p2 = h2.shape, d2 = h2.holes;
          for (false === el.isClockWise(p2) && (p2 = p2.reverse()), o3 = 0, l3 = d2.length; o3 < l3; o3++) c3 = d2[o3], true === el.isClockWise(c3) && (d2[o3] = c3.reverse());
          var f2 = el.triangulateShape(p2, d2);
          for (o3 = 0, l3 = d2.length; o3 < l3; o3++) c3 = d2[o3], p2 = p2.concat(c3);
          for (o3 = 0, l3 = p2.length; o3 < l3; o3++) {
            var m2 = p2[o3];
            r3.push(m2.x, m2.y, 0), i3.push(0, 0, 1), a2.push(m2.x, m2.y);
          }
          for (o3 = 0, l3 = f2.length; o3 < l3; o3++) {
            var g2 = f2[o3], y2 = g2[0] + u2, v2 = g2[1] + u2, x2 = g2[2] + u2;
            n3.push(y2, v2, x2), s2 += 3;
          }
        }
        this.setIndex(n3), this.setAttribute("position", new Cr(r3, 3)), this.setAttribute("normal", new Cr(i3, 3)), this.setAttribute("uv", new Cr(a2, 2));
      }
      function vl(t3, e3) {
        if (e3.shapes = [], Array.isArray(t3)) for (var n3 = 0, r3 = t3.length; n3 < r3; n3++) {
          var i3 = t3[n3];
          e3.shapes.push(i3.uuid);
        }
        else e3.shapes.push(t3.uuid);
        return e3;
      }
      function xl(t3, e3) {
        jr.call(this), this.type = "EdgesGeometry", this.parameters = { thresholdAngle: e3 }, e3 = void 0 !== e3 ? e3 : 1;
        var n3, r3, i3, a2, o2 = [], s2 = Math.cos(Re.DEG2RAD * e3), l2 = [0, 0], c2 = {}, u2 = ["a", "b", "c"];
        t3.isBufferGeometry ? (a2 = new si()).fromBufferGeometry(t3) : a2 = t3.clone(), a2.mergeVertices(), a2.computeFaceNormals();
        for (var h2 = a2.vertices, p2 = a2.faces, d2 = 0, f2 = p2.length; d2 < f2; d2++) for (var m2 = p2[d2], g2 = 0; g2 < 3; g2++) n3 = m2[u2[g2]], r3 = m2[u2[(g2 + 1) % 3]], l2[0] = Math.min(n3, r3), l2[1] = Math.max(n3, r3), void 0 === c2[i3 = l2[0] + "," + l2[1]] ? c2[i3] = { index1: l2[0], index2: l2[1], face1: d2, face2: void 0 } : c2[i3].face2 = d2;
        for (i3 in c2) {
          var y2 = c2[i3];
          if (void 0 === y2.face2 || p2[y2.face1].normal.dot(p2[y2.face2].normal) <= s2) {
            var v2 = h2[y2.index1];
            o2.push(v2.x, v2.y, v2.z), v2 = h2[y2.index2], o2.push(v2.x, v2.y, v2.z);
          }
        }
        this.setAttribute("position", new Cr(o2, 3));
      }
      function wl(t3, e3, n3, r3, i3, a2, o2, s2) {
        si.call(this), this.type = "CylinderGeometry", this.parameters = { radiusTop: t3, radiusBottom: e3, height: n3, radialSegments: r3, heightSegments: i3, openEnded: a2, thetaStart: o2, thetaLength: s2 }, this.fromBufferGeometry(new bl(t3, e3, n3, r3, i3, a2, o2, s2)), this.mergeVertices();
      }
      function bl(t3, e3, n3, r3, i3, a2, o2, s2) {
        jr.call(this), this.type = "CylinderBufferGeometry", this.parameters = { radiusTop: t3, radiusBottom: e3, height: n3, radialSegments: r3, heightSegments: i3, openEnded: a2, thetaStart: o2, thetaLength: s2 };
        var l2 = this;
        t3 = void 0 !== t3 ? t3 : 1, e3 = void 0 !== e3 ? e3 : 1, n3 = n3 || 1, r3 = Math.floor(r3) || 8, i3 = Math.floor(i3) || 1, a2 = void 0 !== a2 && a2, o2 = void 0 !== o2 ? o2 : 0, s2 = void 0 !== s2 ? s2 : 2 * Math.PI;
        var c2 = [], u2 = [], h2 = [], p2 = [], d2 = 0, f2 = [], m2 = n3 / 2, g2 = 0;
        function y2(n4) {
          var i4, a3, f3, y3 = new Le(), v2 = new He(), x2 = 0, w2 = true === n4 ? t3 : e3, b2 = true === n4 ? 1 : -1;
          for (a3 = d2, i4 = 1; i4 <= r3; i4++) u2.push(0, m2 * b2, 0), h2.push(0, b2, 0), p2.push(0.5, 0.5), d2++;
          for (f3 = d2, i4 = 0; i4 <= r3; i4++) {
            var M2 = i4 / r3 * s2 + o2, _2 = Math.cos(M2), T2 = Math.sin(M2);
            v2.x = w2 * T2, v2.y = m2 * b2, v2.z = w2 * _2, u2.push(v2.x, v2.y, v2.z), h2.push(0, b2, 0), y3.x = 0.5 * _2 + 0.5, y3.y = 0.5 * T2 * b2 + 0.5, p2.push(y3.x, y3.y), d2++;
          }
          for (i4 = 0; i4 < r3; i4++) {
            var C2 = a3 + i4, S2 = f3 + i4;
            true === n4 ? c2.push(S2, S2 + 1, C2) : c2.push(S2 + 1, S2, C2), x2 += 3;
          }
          l2.addGroup(g2, x2, true === n4 ? 1 : 2), g2 += x2;
        }
        !function() {
          var a3, y3, v2 = new He(), x2 = new He(), w2 = 0, b2 = (e3 - t3) / n3;
          for (y3 = 0; y3 <= i3; y3++) {
            var M2 = [], _2 = y3 / i3, T2 = _2 * (e3 - t3) + t3;
            for (a3 = 0; a3 <= r3; a3++) {
              var C2 = a3 / r3, S2 = C2 * s2 + o2, D2 = Math.sin(S2), E2 = Math.cos(S2);
              x2.x = T2 * D2, x2.y = -_2 * n3 + m2, x2.z = T2 * E2, u2.push(x2.x, x2.y, x2.z), v2.set(D2, b2, E2).normalize(), h2.push(v2.x, v2.y, v2.z), p2.push(C2, 1 - _2), M2.push(d2++);
            }
            f2.push(M2);
          }
          for (a3 = 0; a3 < r3; a3++) for (y3 = 0; y3 < i3; y3++) {
            var O2 = f2[y3][a3], A2 = f2[y3 + 1][a3], P2 = f2[y3 + 1][a3 + 1], R2 = f2[y3][a3 + 1];
            c2.push(O2, A2, R2), c2.push(A2, P2, R2), w2 += 6;
          }
          l2.addGroup(g2, w2, 0), g2 += w2;
        }(), false === a2 && (0 < t3 && y2(true), 0 < e3 && y2(false)), this.setIndex(c2), this.setAttribute("position", new Cr(u2, 3)), this.setAttribute("normal", new Cr(h2, 3)), this.setAttribute("uv", new Cr(p2, 2));
      }
      function Ml(t3, e3, n3, r3, i3, a2, o2) {
        wl.call(this, 0, t3, e3, n3, r3, i3, a2, o2), this.type = "ConeGeometry", this.parameters = { radius: t3, height: e3, radialSegments: n3, heightSegments: r3, openEnded: i3, thetaStart: a2, thetaLength: o2 };
      }
      function _l(t3, e3, n3, r3, i3, a2, o2) {
        bl.call(this, 0, t3, e3, n3, r3, i3, a2, o2), this.type = "ConeBufferGeometry", this.parameters = { radius: t3, height: e3, radialSegments: n3, heightSegments: r3, openEnded: i3, thetaStart: a2, thetaLength: o2 };
      }
      function Tl(t3, e3, n3, r3) {
        si.call(this), this.type = "CircleGeometry", this.parameters = { radius: t3, segments: e3, thetaStart: n3, thetaLength: r3 }, this.fromBufferGeometry(new Cl(t3, e3, n3, r3)), this.mergeVertices();
      }
      function Cl(t3, e3, n3, r3) {
        jr.call(this), this.type = "CircleBufferGeometry", this.parameters = { radius: t3, segments: e3, thetaStart: n3, thetaLength: r3 }, t3 = t3 || 1, e3 = void 0 !== e3 ? Math.max(3, e3) : 8, n3 = void 0 !== n3 ? n3 : 0, r3 = void 0 !== r3 ? r3 : 2 * Math.PI;
        var i3, a2, o2 = [], s2 = [], l2 = [], c2 = [], u2 = new He(), h2 = new Le();
        for (s2.push(0, 0, 0), l2.push(0, 0, 1), c2.push(0.5, 0.5), a2 = 0, i3 = 3; a2 <= e3; a2++, i3 += 3) {
          var p2 = n3 + a2 / e3 * r3;
          u2.x = t3 * Math.cos(p2), u2.y = t3 * Math.sin(p2), s2.push(u2.x, u2.y, u2.z), l2.push(0, 0, 1), h2.x = (s2[i3] / t3 + 1) / 2, h2.y = (s2[i3 + 1] / t3 + 1) / 2, c2.push(h2.x, h2.y);
        }
        for (i3 = 1; i3 <= e3; i3++) o2.push(i3, i3 + 1, 0);
        this.setIndex(o2), this.setAttribute("position", new Cr(s2, 3)), this.setAttribute("normal", new Cr(l2, 3)), this.setAttribute("uv", new Cr(c2, 2));
      }
      (ll.prototype = Object.create(si.prototype)).constructor = ll, (cl.prototype = Object.create(al.prototype)).constructor = cl, (ul.prototype = Object.create(si.prototype)).constructor = ul, (hl.prototype = Object.create(jr.prototype)).constructor = hl, (pl.prototype = Object.create(si.prototype)).constructor = pl, (dl.prototype = Object.create(jr.prototype)).constructor = dl, (fl.prototype = Object.create(si.prototype)).constructor = fl, (ml.prototype = Object.create(jr.prototype)).constructor = ml, ((gl.prototype = Object.create(si.prototype)).constructor = gl).prototype.toJSON = function() {
        var t3 = si.prototype.toJSON.call(this);
        return vl(this.parameters.shapes, t3);
      }, ((yl.prototype = Object.create(jr.prototype)).constructor = yl).prototype.toJSON = function() {
        var t3 = jr.prototype.toJSON.call(this);
        return vl(this.parameters.shapes, t3);
      }, (xl.prototype = Object.create(jr.prototype)).constructor = xl, (wl.prototype = Object.create(si.prototype)).constructor = wl, (bl.prototype = Object.create(jr.prototype)).constructor = bl, (Ml.prototype = Object.create(wl.prototype)).constructor = Ml, (_l.prototype = Object.create(bl.prototype)).constructor = _l, (Tl.prototype = Object.create(si.prototype)).constructor = Tl, (Cl.prototype = Object.create(jr.prototype)).constructor = Cl;
      var Sl = Object.freeze({ __proto__: null, WireframeGeometry: gs, ParametricGeometry: ys, ParametricBufferGeometry: vs, TetrahedronGeometry: bs, TetrahedronBufferGeometry: Ms, OctahedronGeometry: _s, OctahedronBufferGeometry: Ts, IcosahedronGeometry: Cs, IcosahedronBufferGeometry: Ss, DodecahedronGeometry: Ds, DodecahedronBufferGeometry: Es, PolyhedronGeometry: xs, PolyhedronBufferGeometry: ws, TubeGeometry: Os, TubeBufferGeometry: As, TorusKnotGeometry: Ps, TorusKnotBufferGeometry: Rs, TorusGeometry: Ls, TorusBufferGeometry: Is, TextGeometry: ll, TextBufferGeometry: cl, SphereGeometry: ul, SphereBufferGeometry: hl, RingGeometry: pl, RingBufferGeometry: dl, PlaneGeometry: Si, PlaneBufferGeometry: Di, LatheGeometry: fl, LatheBufferGeometry: ml, ShapeGeometry: gl, ShapeBufferGeometry: yl, ExtrudeGeometry: il, ExtrudeBufferGeometry: al, EdgesGeometry: xl, ConeGeometry: Ml, ConeBufferGeometry: _l, CylinderGeometry: wl, CylinderBufferGeometry: bl, CircleGeometry: Tl, CircleBufferGeometry: Cl, BoxGeometry: li, BoxBufferGeometry: ci });
      function Dl(t3) {
        fr.call(this), this.type = "ShadowMaterial", this.color = new lr(0), this.transparent = true, this.setValues(t3);
      }
      function El(t3) {
        mi.call(this, t3), this.type = "RawShaderMaterial";
      }
      function Ol(t3) {
        fr.call(this), this.defines = { STANDARD: "" }, this.type = "MeshStandardMaterial", this.color = new lr(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new lr(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Me, this.normalScale = new Le(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(t3);
      }
      function Al(t3) {
        Ol.call(this), this.defines = { STANDARD: "", PHYSICAL: "" }, this.type = "MeshPhysicalMaterial", this.reflectivity = 0.5, this.clearcoat = 0, this.clearcoatRoughness = 0, this.sheen = null, this.clearcoatNormalScale = new Le(1, 1), this.clearcoatNormalMap = null, this.transparency = 0, this.setValues(t3);
      }
      function Pl(t3) {
        fr.call(this), this.type = "MeshPhongMaterial", this.color = new lr(16777215), this.specular = new lr(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new lr(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Me, this.normalScale = new Le(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = G, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(t3);
      }
      function Rl(t3) {
        fr.call(this), this.defines = { TOON: "" }, this.type = "MeshToonMaterial", this.color = new lr(16777215), this.specular = new lr(1118481), this.shininess = 30, this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new lr(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Me, this.normalScale = new Le(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(t3);
      }
      function Ll(t3) {
        fr.call(this), this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Me, this.normalScale = new Le(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = false, this.wireframeLinewidth = 1, this.fog = false, this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(t3);
      }
      function Il(t3) {
        fr.call(this), this.type = "MeshLambertMaterial", this.color = new lr(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new lr(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = G, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(t3);
      }
      function kl(t3) {
        fr.call(this), this.defines = { MATCAP: "" }, this.type = "MeshMatcapMaterial", this.color = new lr(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Me, this.normalScale = new Le(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(t3);
      }
      function jl(t3) {
        Xo.call(this), this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(t3);
      }
      ((Dl.prototype = Object.create(fr.prototype)).constructor = Dl).prototype.isShadowMaterial = true, Dl.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.color.copy(t3.color), this;
      }, ((El.prototype = Object.create(mi.prototype)).constructor = El).prototype.isRawShaderMaterial = true, ((Ol.prototype = Object.create(fr.prototype)).constructor = Ol).prototype.isMeshStandardMaterial = true, Ol.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.defines = { STANDARD: "" }, this.color.copy(t3.color), this.roughness = t3.roughness, this.metalness = t3.metalness, this.map = t3.map, this.lightMap = t3.lightMap, this.lightMapIntensity = t3.lightMapIntensity, this.aoMap = t3.aoMap, this.aoMapIntensity = t3.aoMapIntensity, this.emissive.copy(t3.emissive), this.emissiveMap = t3.emissiveMap, this.emissiveIntensity = t3.emissiveIntensity, this.bumpMap = t3.bumpMap, this.bumpScale = t3.bumpScale, this.normalMap = t3.normalMap, this.normalMapType = t3.normalMapType, this.normalScale.copy(t3.normalScale), this.displacementMap = t3.displacementMap, this.displacementScale = t3.displacementScale, this.displacementBias = t3.displacementBias, this.roughnessMap = t3.roughnessMap, this.metalnessMap = t3.metalnessMap, this.alphaMap = t3.alphaMap, this.envMap = t3.envMap, this.envMapIntensity = t3.envMapIntensity, this.refractionRatio = t3.refractionRatio, this.wireframe = t3.wireframe, this.wireframeLinewidth = t3.wireframeLinewidth, this.wireframeLinecap = t3.wireframeLinecap, this.wireframeLinejoin = t3.wireframeLinejoin, this.skinning = t3.skinning, this.morphTargets = t3.morphTargets, this.morphNormals = t3.morphNormals, this;
      }, ((Al.prototype = Object.create(Ol.prototype)).constructor = Al).prototype.isMeshPhysicalMaterial = true, Al.prototype.copy = function(t3) {
        return Ol.prototype.copy.call(this, t3), this.defines = { STANDARD: "", PHYSICAL: "" }, this.reflectivity = t3.reflectivity, this.clearcoat = t3.clearcoat, this.clearcoatRoughness = t3.clearcoatRoughness, t3.sheen ? this.sheen = (this.sheen || new lr()).copy(t3.sheen) : this.sheen = null, this.clearcoatNormalMap = t3.clearcoatNormalMap, this.clearcoatNormalScale.copy(t3.clearcoatNormalScale), this.transparency = t3.transparency, this;
      }, ((Pl.prototype = Object.create(fr.prototype)).constructor = Pl).prototype.isMeshPhongMaterial = true, Pl.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.color.copy(t3.color), this.specular.copy(t3.specular), this.shininess = t3.shininess, this.map = t3.map, this.lightMap = t3.lightMap, this.lightMapIntensity = t3.lightMapIntensity, this.aoMap = t3.aoMap, this.aoMapIntensity = t3.aoMapIntensity, this.emissive.copy(t3.emissive), this.emissiveMap = t3.emissiveMap, this.emissiveIntensity = t3.emissiveIntensity, this.bumpMap = t3.bumpMap, this.bumpScale = t3.bumpScale, this.normalMap = t3.normalMap, this.normalMapType = t3.normalMapType, this.normalScale.copy(t3.normalScale), this.displacementMap = t3.displacementMap, this.displacementScale = t3.displacementScale, this.displacementBias = t3.displacementBias, this.specularMap = t3.specularMap, this.alphaMap = t3.alphaMap, this.envMap = t3.envMap, this.combine = t3.combine, this.reflectivity = t3.reflectivity, this.refractionRatio = t3.refractionRatio, this.wireframe = t3.wireframe, this.wireframeLinewidth = t3.wireframeLinewidth, this.wireframeLinecap = t3.wireframeLinecap, this.wireframeLinejoin = t3.wireframeLinejoin, this.skinning = t3.skinning, this.morphTargets = t3.morphTargets, this.morphNormals = t3.morphNormals, this;
      }, ((Rl.prototype = Object.create(fr.prototype)).constructor = Rl).prototype.isMeshToonMaterial = true, Rl.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.color.copy(t3.color), this.specular.copy(t3.specular), this.shininess = t3.shininess, this.map = t3.map, this.gradientMap = t3.gradientMap, this.lightMap = t3.lightMap, this.lightMapIntensity = t3.lightMapIntensity, this.aoMap = t3.aoMap, this.aoMapIntensity = t3.aoMapIntensity, this.emissive.copy(t3.emissive), this.emissiveMap = t3.emissiveMap, this.emissiveIntensity = t3.emissiveIntensity, this.bumpMap = t3.bumpMap, this.bumpScale = t3.bumpScale, this.normalMap = t3.normalMap, this.normalMapType = t3.normalMapType, this.normalScale.copy(t3.normalScale), this.displacementMap = t3.displacementMap, this.displacementScale = t3.displacementScale, this.displacementBias = t3.displacementBias, this.specularMap = t3.specularMap, this.alphaMap = t3.alphaMap, this.wireframe = t3.wireframe, this.wireframeLinewidth = t3.wireframeLinewidth, this.wireframeLinecap = t3.wireframeLinecap, this.wireframeLinejoin = t3.wireframeLinejoin, this.skinning = t3.skinning, this.morphTargets = t3.morphTargets, this.morphNormals = t3.morphNormals, this;
      }, ((Ll.prototype = Object.create(fr.prototype)).constructor = Ll).prototype.isMeshNormalMaterial = true, Ll.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.bumpMap = t3.bumpMap, this.bumpScale = t3.bumpScale, this.normalMap = t3.normalMap, this.normalMapType = t3.normalMapType, this.normalScale.copy(t3.normalScale), this.displacementMap = t3.displacementMap, this.displacementScale = t3.displacementScale, this.displacementBias = t3.displacementBias, this.wireframe = t3.wireframe, this.wireframeLinewidth = t3.wireframeLinewidth, this.skinning = t3.skinning, this.morphTargets = t3.morphTargets, this.morphNormals = t3.morphNormals, this;
      }, ((Il.prototype = Object.create(fr.prototype)).constructor = Il).prototype.isMeshLambertMaterial = true, Il.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.color.copy(t3.color), this.map = t3.map, this.lightMap = t3.lightMap, this.lightMapIntensity = t3.lightMapIntensity, this.aoMap = t3.aoMap, this.aoMapIntensity = t3.aoMapIntensity, this.emissive.copy(t3.emissive), this.emissiveMap = t3.emissiveMap, this.emissiveIntensity = t3.emissiveIntensity, this.specularMap = t3.specularMap, this.alphaMap = t3.alphaMap, this.envMap = t3.envMap, this.combine = t3.combine, this.reflectivity = t3.reflectivity, this.refractionRatio = t3.refractionRatio, this.wireframe = t3.wireframe, this.wireframeLinewidth = t3.wireframeLinewidth, this.wireframeLinecap = t3.wireframeLinecap, this.wireframeLinejoin = t3.wireframeLinejoin, this.skinning = t3.skinning, this.morphTargets = t3.morphTargets, this.morphNormals = t3.morphNormals, this;
      }, ((kl.prototype = Object.create(fr.prototype)).constructor = kl).prototype.isMeshMatcapMaterial = true, kl.prototype.copy = function(t3) {
        return fr.prototype.copy.call(this, t3), this.defines = { MATCAP: "" }, this.color.copy(t3.color), this.matcap = t3.matcap, this.map = t3.map, this.bumpMap = t3.bumpMap, this.bumpScale = t3.bumpScale, this.normalMap = t3.normalMap, this.normalMapType = t3.normalMapType, this.normalScale.copy(t3.normalScale), this.displacementMap = t3.displacementMap, this.displacementScale = t3.displacementScale, this.displacementBias = t3.displacementBias, this.alphaMap = t3.alphaMap, this.skinning = t3.skinning, this.morphTargets = t3.morphTargets, this.morphNormals = t3.morphNormals, this;
      }, ((jl.prototype = Object.create(Xo.prototype)).constructor = jl).prototype.isLineDashedMaterial = true, jl.prototype.copy = function(t3) {
        return Xo.prototype.copy.call(this, t3), this.scale = t3.scale, this.dashSize = t3.dashSize, this.gapSize = t3.gapSize, this;
      };
      var Nl = Object.freeze({ __proto__: null, ShadowMaterial: Dl, SpriteMaterial: wo, RawShaderMaterial: El, ShaderMaterial: mi, PointsMaterial: as, MeshPhysicalMaterial: Al, MeshStandardMaterial: Ol, MeshPhongMaterial: Pl, MeshToonMaterial: Rl, MeshNormalMaterial: Ll, MeshLambertMaterial: Il, MeshDepthMaterial: to, MeshDistanceMaterial: eo, MeshBasicMaterial: mr, MeshMatcapMaterial: kl, LineDashedMaterial: jl, LineBasicMaterial: Xo, Material: fr }), Vl = { arraySlice: function(t3, e3, n3) {
        return Vl.isTypedArray(t3) ? new t3.constructor(t3.subarray(e3, void 0 !== n3 ? n3 : t3.length)) : t3.slice(e3, n3);
      }, convertArray: function(t3, e3, n3) {
        return !t3 || !n3 && t3.constructor === e3 ? t3 : "number" == typeof e3.BYTES_PER_ELEMENT ? new e3(t3) : Array.prototype.slice.call(t3);
      }, isTypedArray: function(t3) {
        return ArrayBuffer.isView(t3) && !(t3 instanceof DataView);
      }, getKeyframeOrder: function(t3) {
        for (var e3 = t3.length, n3 = new Array(e3), r3 = 0; r3 !== e3; ++r3) n3[r3] = r3;
        return n3.sort(function(e4, n4) {
          return t3[e4] - t3[n4];
        }), n3;
      }, sortedArray: function(t3, e3, n3) {
        for (var r3 = t3.length, i3 = new t3.constructor(r3), a2 = 0, o2 = 0; o2 !== r3; ++a2) for (var s2 = n3[a2] * e3, l2 = 0; l2 !== e3; ++l2) i3[o2++] = t3[s2 + l2];
        return i3;
      }, flattenJSON: function(t3, e3, n3, r3) {
        for (var i3 = 1, a2 = t3[0]; void 0 !== a2 && void 0 === a2[r3]; ) a2 = t3[i3++];
        if (void 0 !== a2) {
          var o2 = a2[r3];
          if (void 0 !== o2) if (Array.isArray(o2)) for (; void 0 !== (o2 = a2[r3]) && (e3.push(a2.time), n3.push.apply(n3, o2)), void 0 !== (a2 = t3[i3++]); ) ;
          else if (void 0 !== o2.toArray) for (; void 0 !== (o2 = a2[r3]) && (e3.push(a2.time), o2.toArray(n3, n3.length)), void 0 !== (a2 = t3[i3++]); ) ;
          else for (; void 0 !== (o2 = a2[r3]) && (e3.push(a2.time), n3.push(o2)), void 0 !== (a2 = t3[i3++]); ) ;
        }
      }, subclip: function(t3, e3, n3, r3, i3) {
        i3 = i3 || 30;
        var a2 = t3.clone();
        a2.name = e3;
        for (var o2 = [], s2 = 0; s2 < a2.tracks.length; ++s2) {
          for (var l2 = a2.tracks[s2], c2 = l2.getValueSize(), u2 = [], h2 = [], p2 = 0; p2 < l2.times.length; ++p2) {
            var d2 = l2.times[p2] * i3;
            if (!(d2 < n3 || r3 <= d2)) {
              u2.push(l2.times[p2]);
              for (var f2 = 0; f2 < c2; ++f2) h2.push(l2.values[p2 * c2 + f2]);
            }
          }
          0 !== u2.length && (l2.times = Vl.convertArray(u2, l2.times.constructor), l2.values = Vl.convertArray(h2, l2.values.constructor), o2.push(l2));
        }
        a2.tracks = o2;
        var m2 = 1 / 0;
        for (s2 = 0; s2 < a2.tracks.length; ++s2) m2 > a2.tracks[s2].times[0] && (m2 = a2.tracks[s2].times[0]);
        for (s2 = 0; s2 < a2.tracks.length; ++s2) a2.tracks[s2].shift(-1 * m2);
        return a2.resetDuration(), a2;
      } };
      function Fl(t3, e3, n3, r3) {
        this.parameterPositions = t3, this._cachedIndex = 0, this.resultBuffer = void 0 !== r3 ? r3 : new e3.constructor(n3), this.sampleValues = e3, this.valueSize = n3;
      }
      function Bl(t3, e3, n3, r3) {
        Fl.call(this, t3, e3, n3, r3), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0;
      }
      function Gl(t3, e3, n3, r3) {
        Fl.call(this, t3, e3, n3, r3);
      }
      function zl(t3, e3, n3, r3) {
        Fl.call(this, t3, e3, n3, r3);
      }
      function Ul(t3, e3, n3, r3) {
        if (void 0 === t3) throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (void 0 === e3 || 0 === e3.length) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + t3);
        this.name = t3, this.times = Vl.convertArray(e3, this.TimeBufferType), this.values = Vl.convertArray(n3, this.ValueBufferType), this.setInterpolation(r3 || this.DefaultInterpolation);
      }
      function Hl(t3, e3, n3) {
        Ul.call(this, t3, e3, n3);
      }
      function Wl(t3, e3, n3, r3) {
        Ul.call(this, t3, e3, n3, r3);
      }
      function Jl(t3, e3, n3, r3) {
        Ul.call(this, t3, e3, n3, r3);
      }
      function ql(t3, e3, n3, r3) {
        Fl.call(this, t3, e3, n3, r3);
      }
      function Xl(t3, e3, n3, r3) {
        Ul.call(this, t3, e3, n3, r3);
      }
      function Yl(t3, e3, n3, r3) {
        Ul.call(this, t3, e3, n3, r3);
      }
      function Zl(t3, e3, n3, r3) {
        Ul.call(this, t3, e3, n3, r3);
      }
      function Kl(t3, e3, n3) {
        this.name = t3, this.tracks = n3, this.duration = void 0 !== e3 ? e3 : -1, this.uuid = Re.generateUUID(), this.duration < 0 && this.resetDuration();
      }
      function $l(t3) {
        if (void 0 === t3.type) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
        var e3 = function(t4) {
          switch (t4.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
              return Jl;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
              return Zl;
            case "color":
              return Wl;
            case "quaternion":
              return Xl;
            case "bool":
            case "boolean":
              return Hl;
            case "string":
              return Yl;
          }
          throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + t4);
        }(t3.type);
        if (void 0 === t3.times) {
          var n3 = [], r3 = [];
          Vl.flattenJSON(t3.keys, n3, r3, "value"), t3.times = n3, t3.values = r3;
        }
        return void 0 !== e3.parse ? e3.parse(t3) : new e3(t3.name, t3.times, t3.values, t3.interpolation);
      }
      Object.assign(Fl.prototype, { evaluate: function(t3) {
        var e3 = this.parameterPositions, n3 = this._cachedIndex, r3 = e3[n3], i3 = e3[n3 - 1];
        t: {
          e: {
            var a2;
            n: {
              r: if (!(t3 < r3)) {
                for (var o2 = n3 + 2; ; ) {
                  if (void 0 === r3) {
                    if (t3 < i3) break r;
                    return n3 = e3.length, this._cachedIndex = n3, this.afterEnd_(n3 - 1, t3, i3);
                  }
                  if (n3 === o2) break;
                  if (i3 = r3, t3 < (r3 = e3[++n3])) break e;
                }
                a2 = e3.length;
                break n;
              }
              if (i3 <= t3) break t;
              var s2 = e3[1];
              for (t3 < s2 && (n3 = 2, i3 = s2), o2 = n3 - 2; ; ) {
                if (void 0 === i3) return this._cachedIndex = 0, this.beforeStart_(0, t3, r3);
                if (n3 === o2) break;
                if (r3 = i3, (i3 = e3[--n3 - 1]) <= t3) break e;
              }
              a2 = n3, n3 = 0;
            }
            for (; n3 < a2; ) {
              var l2 = n3 + a2 >>> 1;
              t3 < e3[l2] ? a2 = l2 : n3 = 1 + l2;
            }
            if (r3 = e3[n3], void 0 === (i3 = e3[n3 - 1])) return this._cachedIndex = 0, this.beforeStart_(0, t3, r3);
            if (void 0 === r3) return n3 = e3.length, this._cachedIndex = n3, this.afterEnd_(n3 - 1, i3, t3);
          }
          this._cachedIndex = n3, this.intervalChanged_(n3, i3, r3);
        }
        return this.interpolate_(n3, i3, t3, r3);
      }, settings: null, DefaultSettings_: {}, getSettings_: function() {
        return this.settings || this.DefaultSettings_;
      }, copySampleValue_: function(t3) {
        for (var e3 = this.resultBuffer, n3 = this.sampleValues, r3 = this.valueSize, i3 = t3 * r3, a2 = 0; a2 !== r3; ++a2) e3[a2] = n3[i3 + a2];
        return e3;
      }, interpolate_: function() {
        throw new Error("call to abstract method");
      }, intervalChanged_: function() {
      } }), Object.assign(Fl.prototype, { beforeStart_: Fl.prototype.copySampleValue_, afterEnd_: Fl.prototype.copySampleValue_ }), Bl.prototype = Object.assign(Object.create(Fl.prototype), { constructor: Bl, DefaultSettings_: { endingStart: ce, endingEnd: ce }, intervalChanged_: function(t3, e3, n3) {
        var r3 = this.parameterPositions, i3 = t3 - 2, a2 = t3 + 1, o2 = r3[i3], s2 = r3[a2];
        if (void 0 === o2) switch (this.getSettings_().endingStart) {
          case ue:
            i3 = t3, o2 = 2 * e3 - n3;
            break;
          case he:
            o2 = e3 + r3[i3 = r3.length - 2] - r3[i3 + 1];
            break;
          default:
            i3 = t3, o2 = n3;
        }
        if (void 0 === s2) switch (this.getSettings_().endingEnd) {
          case ue:
            a2 = t3, s2 = 2 * n3 - e3;
            break;
          case he:
            s2 = n3 + r3[a2 = 1] - r3[0];
            break;
          default:
            a2 = t3 - 1, s2 = e3;
        }
        var l2 = 0.5 * (n3 - e3), c2 = this.valueSize;
        this._weightPrev = l2 / (e3 - o2), this._weightNext = l2 / (s2 - n3), this._offsetPrev = i3 * c2, this._offsetNext = a2 * c2;
      }, interpolate_: function(t3, e3, n3, r3) {
        for (var i3 = this.resultBuffer, a2 = this.sampleValues, o2 = this.valueSize, s2 = t3 * o2, l2 = s2 - o2, c2 = this._offsetPrev, u2 = this._offsetNext, h2 = this._weightPrev, p2 = this._weightNext, d2 = (n3 - e3) / (r3 - e3), f2 = d2 * d2, m2 = f2 * d2, g2 = -h2 * m2 + 2 * h2 * f2 - h2 * d2, y2 = (1 + h2) * m2 + (-1.5 - 2 * h2) * f2 + (-0.5 + h2) * d2 + 1, v2 = (-1 - p2) * m2 + (1.5 + p2) * f2 + 0.5 * d2, x2 = p2 * m2 - p2 * f2, w2 = 0; w2 !== o2; ++w2) i3[w2] = g2 * a2[c2 + w2] + y2 * a2[l2 + w2] + v2 * a2[s2 + w2] + x2 * a2[u2 + w2];
        return i3;
      } }), Gl.prototype = Object.assign(Object.create(Fl.prototype), { constructor: Gl, interpolate_: function(t3, e3, n3, r3) {
        for (var i3 = this.resultBuffer, a2 = this.sampleValues, o2 = this.valueSize, s2 = t3 * o2, l2 = s2 - o2, c2 = (n3 - e3) / (r3 - e3), u2 = 1 - c2, h2 = 0; h2 !== o2; ++h2) i3[h2] = a2[l2 + h2] * u2 + a2[s2 + h2] * c2;
        return i3;
      } }), zl.prototype = Object.assign(Object.create(Fl.prototype), { constructor: zl, interpolate_: function(t3) {
        return this.copySampleValue_(t3 - 1);
      } }), Object.assign(Ul, { toJSON: function(t3) {
        var e3, n3 = t3.constructor;
        if (void 0 !== n3.toJSON) e3 = n3.toJSON(t3);
        else {
          e3 = { name: t3.name, times: Vl.convertArray(t3.times, Array), values: Vl.convertArray(t3.values, Array) };
          var r3 = t3.getInterpolation();
          r3 !== t3.DefaultInterpolation && (e3.interpolation = r3);
        }
        return e3.type = t3.ValueTypeName, e3;
      } }), Object.assign(Ul.prototype, { constructor: Ul, TimeBufferType: Float32Array, ValueBufferType: Float32Array, DefaultInterpolation: le, InterpolantFactoryMethodDiscrete: function(t3) {
        return new zl(this.times, this.values, this.getValueSize(), t3);
      }, InterpolantFactoryMethodLinear: function(t3) {
        return new Gl(this.times, this.values, this.getValueSize(), t3);
      }, InterpolantFactoryMethodSmooth: function(t3) {
        return new Bl(this.times, this.values, this.getValueSize(), t3);
      }, setInterpolation: function(t3) {
        var e3;
        switch (t3) {
          case se:
            e3 = this.InterpolantFactoryMethodDiscrete;
            break;
          case le:
            e3 = this.InterpolantFactoryMethodLinear;
            break;
          case 2302:
            e3 = this.InterpolantFactoryMethodSmooth;
        }
        if (void 0 !== e3) return this.createInterpolant = e3, this;
        var n3 = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
        if (void 0 === this.createInterpolant) {
          if (t3 === this.DefaultInterpolation) throw new Error(n3);
          this.setInterpolation(this.DefaultInterpolation);
        }
        return console.warn("THREE.KeyframeTrack:", n3), this;
      }, getInterpolation: function() {
        switch (this.createInterpolant) {
          case this.InterpolantFactoryMethodDiscrete:
            return se;
          case this.InterpolantFactoryMethodLinear:
            return le;
          case this.InterpolantFactoryMethodSmooth:
            return 2302;
        }
      }, getValueSize: function() {
        return this.values.length / this.times.length;
      }, shift: function(t3) {
        if (0 !== t3) for (var e3 = this.times, n3 = 0, r3 = e3.length; n3 !== r3; ++n3) e3[n3] += t3;
        return this;
      }, scale: function(t3) {
        if (1 !== t3) for (var e3 = this.times, n3 = 0, r3 = e3.length; n3 !== r3; ++n3) e3[n3] *= t3;
        return this;
      }, trim: function(t3, e3) {
        for (var n3 = this.times, r3 = n3.length, i3 = 0, a2 = r3 - 1; i3 !== r3 && n3[i3] < t3; ) ++i3;
        for (; -1 !== a2 && n3[a2] > e3; ) --a2;
        if (++a2, 0 !== i3 || a2 !== r3) {
          a2 <= i3 && (i3 = (a2 = Math.max(a2, 1)) - 1);
          var o2 = this.getValueSize();
          this.times = Vl.arraySlice(n3, i3, a2), this.values = Vl.arraySlice(this.values, i3 * o2, a2 * o2);
        }
        return this;
      }, validate: function() {
        var t3 = true, e3 = this.getValueSize();
        e3 - Math.floor(e3) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), t3 = false);
        var n3 = this.times, r3 = this.values, i3 = n3.length;
        0 === i3 && (console.error("THREE.KeyframeTrack: Track is empty.", this), t3 = false);
        for (var a2 = null, o2 = 0; o2 !== i3; o2++) {
          var s2 = n3[o2];
          if ("number" == typeof s2 && isNaN(s2)) {
            console.error("THREE.KeyframeTrack: Time is not a valid number.", this, o2, s2), t3 = false;
            break;
          }
          if (null !== a2 && s2 < a2) {
            console.error("THREE.KeyframeTrack: Out of order keys.", this, o2, s2, a2), t3 = false;
            break;
          }
          a2 = s2;
        }
        if (void 0 !== r3 && Vl.isTypedArray(r3)) {
          o2 = 0;
          for (var l2 = r3.length; o2 !== l2; ++o2) {
            var c2 = r3[o2];
            if (isNaN(c2)) {
              console.error("THREE.KeyframeTrack: Value is not a valid number.", this, o2, c2), t3 = false;
              break;
            }
          }
        }
        return t3;
      }, optimize: function() {
        for (var t3 = Vl.arraySlice(this.times), e3 = Vl.arraySlice(this.values), n3 = this.getValueSize(), r3 = 2302 === this.getInterpolation(), i3 = 1, a2 = t3.length - 1, o2 = 1; o2 < a2; ++o2) {
          var s2 = false, l2 = t3[o2];
          if (l2 !== t3[o2 + 1] && (1 !== o2 || l2 !== l2[0])) if (r3) s2 = true;
          else for (var c2 = o2 * n3, u2 = c2 - n3, h2 = c2 + n3, p2 = 0; p2 !== n3; ++p2) {
            var d2 = e3[c2 + p2];
            if (d2 !== e3[u2 + p2] || d2 !== e3[h2 + p2]) {
              s2 = true;
              break;
            }
          }
          if (s2) {
            if (o2 !== i3) {
              t3[i3] = t3[o2];
              var f2 = o2 * n3, m2 = i3 * n3;
              for (p2 = 0; p2 !== n3; ++p2) e3[m2 + p2] = e3[f2 + p2];
            }
            ++i3;
          }
        }
        if (0 < a2) {
          for (t3[i3] = t3[a2], f2 = a2 * n3, m2 = i3 * n3, p2 = 0; p2 !== n3; ++p2) e3[m2 + p2] = e3[f2 + p2];
          ++i3;
        }
        return i3 !== t3.length ? (this.times = Vl.arraySlice(t3, 0, i3), this.values = Vl.arraySlice(e3, 0, i3 * n3)) : (this.times = t3, this.values = e3), this;
      }, clone: function() {
        var t3 = Vl.arraySlice(this.times, 0), e3 = Vl.arraySlice(this.values, 0), n3 = new this.constructor(this.name, t3, e3);
        return n3.createInterpolant = this.createInterpolant, n3;
      } }), Hl.prototype = Object.assign(Object.create(Ul.prototype), { constructor: Hl, ValueTypeName: "bool", ValueBufferType: Array, DefaultInterpolation: se, InterpolantFactoryMethodLinear: void 0, InterpolantFactoryMethodSmooth: void 0 }), Wl.prototype = Object.assign(Object.create(Ul.prototype), { constructor: Wl, ValueTypeName: "color" }), Jl.prototype = Object.assign(Object.create(Ul.prototype), { constructor: Jl, ValueTypeName: "number" }), ql.prototype = Object.assign(Object.create(Fl.prototype), { constructor: ql, interpolate_: function(t3, e3, n3, r3) {
        for (var i3 = this.resultBuffer, a2 = this.sampleValues, o2 = this.valueSize, s2 = t3 * o2, l2 = (n3 - e3) / (r3 - e3), c2 = s2 + o2; s2 !== c2; s2 += 4) Ge.slerpFlat(i3, 0, a2, s2 - o2, a2, s2, l2);
        return i3;
      } }), Xl.prototype = Object.assign(Object.create(Ul.prototype), { constructor: Xl, ValueTypeName: "quaternion", DefaultInterpolation: le, InterpolantFactoryMethodLinear: function(t3) {
        return new ql(this.times, this.values, this.getValueSize(), t3);
      }, InterpolantFactoryMethodSmooth: void 0 }), Yl.prototype = Object.assign(Object.create(Ul.prototype), { constructor: Yl, ValueTypeName: "string", ValueBufferType: Array, DefaultInterpolation: se, InterpolantFactoryMethodLinear: void 0, InterpolantFactoryMethodSmooth: void 0 }), Zl.prototype = Object.assign(Object.create(Ul.prototype), { constructor: Zl, ValueTypeName: "vector" }), Object.assign(Kl, { parse: function(t3) {
        for (var e3 = [], n3 = t3.tracks, r3 = 1 / (t3.fps || 1), i3 = 0, a2 = n3.length; i3 !== a2; ++i3) e3.push($l(n3[i3]).scale(r3));
        return new Kl(t3.name, t3.duration, e3);
      }, toJSON: function(t3) {
        for (var e3 = [], n3 = t3.tracks, r3 = { name: t3.name, duration: t3.duration, tracks: e3, uuid: t3.uuid }, i3 = 0, a2 = n3.length; i3 !== a2; ++i3) e3.push(Ul.toJSON(n3[i3]));
        return r3;
      }, CreateFromMorphTargetSequence: function(t3, e3, n3, r3) {
        for (var i3 = e3.length, a2 = [], o2 = 0; o2 < i3; o2++) {
          var s2 = [], l2 = [];
          s2.push((o2 + i3 - 1) % i3, o2, (o2 + 1) % i3), l2.push(0, 1, 0);
          var c2 = Vl.getKeyframeOrder(s2);
          s2 = Vl.sortedArray(s2, 1, c2), l2 = Vl.sortedArray(l2, 1, c2), r3 || 0 !== s2[0] || (s2.push(i3), l2.push(l2[0])), a2.push(new Jl(".morphTargetInfluences[" + e3[o2].name + "]", s2, l2).scale(1 / n3));
        }
        return new Kl(t3, -1, a2);
      }, findByName: function(t3, e3) {
        var n3 = t3;
        Array.isArray(t3) || (n3 = t3.geometry && t3.geometry.animations || t3.animations);
        for (var r3 = 0; r3 < n3.length; r3++) if (n3[r3].name === e3) return n3[r3];
        return null;
      }, CreateClipsFromMorphTargetSequences: function(t3, e3, n3) {
        for (var r3 = {}, i3 = /^([\w-]*?)([\d]+)$/, a2 = 0, o2 = t3.length; a2 < o2; a2++) {
          var s2 = t3[a2], l2 = s2.name.match(i3);
          if (l2 && 1 < l2.length) {
            var c2 = r3[h2 = l2[1]];
            c2 || (r3[h2] = c2 = []), c2.push(s2);
          }
        }
        var u2 = [];
        for (var h2 in r3) u2.push(Kl.CreateFromMorphTargetSequence(h2, r3[h2], e3, n3));
        return u2;
      }, parseAnimation: function(t3, e3) {
        if (!t3) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
        for (var n3 = function(t4, e4, n4, r4, i4) {
          if (0 !== n4.length) {
            var a3 = [], o3 = [];
            Vl.flattenJSON(n4, a3, o3, r4), 0 !== a3.length && i4.push(new t4(e4, a3, o3));
          }
        }, r3 = [], i3 = t3.name || "default", a2 = t3.length || -1, o2 = t3.fps || 30, s2 = t3.hierarchy || [], l2 = 0; l2 < s2.length; l2++) {
          var c2 = s2[l2].keys;
          if (c2 && 0 !== c2.length) if (c2[0].morphTargets) {
            for (var u2 = {}, h2 = 0; h2 < c2.length; h2++) if (c2[h2].morphTargets) for (var p2 = 0; p2 < c2[h2].morphTargets.length; p2++) u2[c2[h2].morphTargets[p2]] = -1;
            for (var d2 in u2) {
              var f2 = [], m2 = [];
              for (p2 = 0; p2 !== c2[h2].morphTargets.length; ++p2) {
                var g2 = c2[h2];
                f2.push(g2.time), m2.push(g2.morphTarget === d2 ? 1 : 0);
              }
              r3.push(new Jl(".morphTargetInfluence[" + d2 + "]", f2, m2));
            }
            a2 = u2.length * (o2 || 1);
          } else {
            var y2 = ".bones[" + e3[l2].name + "]";
            n3(Zl, y2 + ".position", c2, "pos", r3), n3(Xl, y2 + ".quaternion", c2, "rot", r3), n3(Zl, y2 + ".scale", c2, "scl", r3);
          }
        }
        return 0 === r3.length ? null : new Kl(i3, a2, r3);
      } }), Object.assign(Kl.prototype, { resetDuration: function() {
        for (var t3 = 0, e3 = 0, n3 = this.tracks.length; e3 !== n3; ++e3) {
          var r3 = this.tracks[e3];
          t3 = Math.max(t3, r3.times[r3.times.length - 1]);
        }
        return this.duration = t3, this;
      }, trim: function() {
        for (var t3 = 0; t3 < this.tracks.length; t3++) this.tracks[t3].trim(0, this.duration);
        return this;
      }, validate: function() {
        for (var t3 = true, e3 = 0; e3 < this.tracks.length; e3++) t3 = t3 && this.tracks[e3].validate();
        return t3;
      }, optimize: function() {
        for (var t3 = 0; t3 < this.tracks.length; t3++) this.tracks[t3].optimize();
        return this;
      }, clone: function() {
        for (var t3 = [], e3 = 0; e3 < this.tracks.length; e3++) t3.push(this.tracks[e3].clone());
        return new Kl(this.name, this.duration, t3);
      } });
      var Ql = { enabled: false, files: {}, add: function(t3, e3) {
        false !== this.enabled && (this.files[t3] = e3);
      }, get: function(t3) {
        if (false !== this.enabled) return this.files[t3];
      }, remove: function(t3) {
        delete this.files[t3];
      }, clear: function() {
        this.files = {};
      } };
      function tc(t3, e3, n3) {
        var r3 = this, i3 = false, a2 = 0, o2 = 0, s2 = void 0, l2 = [];
        this.onStart = void 0, this.onLoad = t3, this.onProgress = e3, this.onError = n3, this.itemStart = function(t4) {
          o2++, false === i3 && void 0 !== r3.onStart && r3.onStart(t4, a2, o2), i3 = true;
        }, this.itemEnd = function(t4) {
          a2++, void 0 !== r3.onProgress && r3.onProgress(t4, a2, o2), a2 === o2 && (i3 = false, void 0 !== r3.onLoad && r3.onLoad());
        }, this.itemError = function(t4) {
          void 0 !== r3.onError && r3.onError(t4);
        }, this.resolveURL = function(t4) {
          return s2 ? s2(t4) : t4;
        }, this.setURLModifier = function(t4) {
          return s2 = t4, this;
        }, this.addHandler = function(t4, e4) {
          return l2.push(t4, e4), this;
        }, this.removeHandler = function(t4) {
          var e4 = l2.indexOf(t4);
          return -1 !== e4 && l2.splice(e4, 2), this;
        }, this.getHandler = function(t4) {
          for (var e4 = 0, n4 = l2.length; e4 < n4; e4 += 2) {
            var r4 = l2[e4], i4 = l2[e4 + 1];
            if (r4.global && (r4.lastIndex = 0), r4.test(t4)) return i4;
          }
          return null;
        };
      }
      var ec = new tc();
      function nc(t3) {
        this.manager = void 0 !== t3 ? t3 : ec, this.crossOrigin = "anonymous", this.path = "", this.resourcePath = "";
      }
      Object.assign(nc.prototype, { load: function() {
      }, parse: function() {
      }, setCrossOrigin: function(t3) {
        return this.crossOrigin = t3, this;
      }, setPath: function(t3) {
        return this.path = t3, this;
      }, setResourcePath: function(t3) {
        return this.resourcePath = t3, this;
      } });
      var rc = {};
      function ic(t3) {
        nc.call(this, t3);
      }
      function ac(t3) {
        nc.call(this, t3);
      }
      function oc(t3) {
        nc.call(this, t3);
      }
      function sc(t3) {
        nc.call(this, t3);
      }
      function lc(t3) {
        nc.call(this, t3);
      }
      function cc(t3) {
        nc.call(this, t3);
      }
      function uc(t3) {
        nc.call(this, t3);
      }
      function hc() {
        this.type = "Curve", this.arcLengthDivisions = 200;
      }
      function pc(t3, e3, n3, r3, i3, a2, o2, s2) {
        hc.call(this), this.type = "EllipseCurve", this.aX = t3 || 0, this.aY = e3 || 0, this.xRadius = n3 || 1, this.yRadius = r3 || 1, this.aStartAngle = i3 || 0, this.aEndAngle = a2 || 2 * Math.PI, this.aClockwise = o2 || false, this.aRotation = s2 || 0;
      }
      function dc(t3, e3, n3, r3, i3, a2) {
        pc.call(this, t3, e3, n3, n3, r3, i3, a2), this.type = "ArcCurve";
      }
      function fc() {
        var t3 = 0, e3 = 0, n3 = 0, r3 = 0;
        function i3(i4, a2, o2, s2) {
          n3 = -3 * (t3 = i4) + 3 * a2 - 2 * (e3 = o2) - s2, r3 = 2 * i4 - 2 * a2 + o2 + s2;
        }
        return { initCatmullRom: function(t4, e4, n4, r4, a2) {
          i3(e4, n4, a2 * (n4 - t4), a2 * (r4 - e4));
        }, initNonuniformCatmullRom: function(t4, e4, n4, r4, a2, o2, s2) {
          var l2 = (e4 - t4) / a2 - (n4 - t4) / (a2 + o2) + (n4 - e4) / o2, c2 = (n4 - e4) / o2 - (r4 - e4) / (o2 + s2) + (r4 - n4) / s2;
          i3(e4, n4, l2 *= o2, c2 *= o2);
        }, calc: function(i4) {
          var a2 = i4 * i4;
          return t3 + e3 * i4 + n3 * a2 + r3 * (a2 * i4);
        } };
      }
      ic.prototype = Object.assign(Object.create(nc.prototype), { constructor: ic, load: function(t3, e3, n3, r3) {
        void 0 === t3 && (t3 = ""), void 0 !== this.path && (t3 = this.path + t3), t3 = this.manager.resolveURL(t3);
        var i3 = this, a2 = Ql.get(t3);
        if (void 0 !== a2) return i3.manager.itemStart(t3), setTimeout(function() {
          e3 && e3(a2), i3.manager.itemEnd(t3);
        }, 0), a2;
        if (void 0 === rc[t3]) {
          var o2 = t3.match(/^data:(.*?)(;base64)?,(.*)$/);
          if (o2) {
            var s2 = o2[1], l2 = !!o2[2], c2 = o2[3];
            c2 = decodeURIComponent(c2), l2 && (c2 = atob(c2));
            try {
              var u2, h2 = (this.responseType || "").toLowerCase();
              switch (h2) {
                case "arraybuffer":
                case "blob":
                  for (var p2 = new Uint8Array(c2.length), d2 = 0; d2 < c2.length; d2++) p2[d2] = c2.charCodeAt(d2);
                  u2 = "blob" === h2 ? new Blob([p2.buffer], { type: s2 }) : p2.buffer;
                  break;
                case "document":
                  var f2 = new DOMParser();
                  u2 = f2.parseFromString(c2, s2);
                  break;
                case "json":
                  u2 = JSON.parse(c2);
                  break;
                default:
                  u2 = c2;
              }
              setTimeout(function() {
                e3 && e3(u2), i3.manager.itemEnd(t3);
              }, 0);
            } catch (e4) {
              setTimeout(function() {
                r3 && r3(e4), i3.manager.itemError(t3), i3.manager.itemEnd(t3);
              }, 0);
            }
          } else {
            rc[t3] = [], rc[t3].push({ onLoad: e3, onProgress: n3, onError: r3 });
            var m2 = new XMLHttpRequest();
            for (var g2 in m2.open("GET", t3, true), m2.addEventListener("load", function(e4) {
              var n4 = this.response, r4 = rc[t3];
              if (delete rc[t3], 200 === this.status || 0 === this.status) {
                0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received."), Ql.add(t3, n4);
                for (var a3 = 0, o3 = r4.length; a3 < o3; a3++) (s3 = r4[a3]).onLoad && s3.onLoad(n4);
                i3.manager.itemEnd(t3);
              } else {
                for (a3 = 0, o3 = r4.length; a3 < o3; a3++) {
                  var s3;
                  (s3 = r4[a3]).onError && s3.onError(e4);
                }
                i3.manager.itemError(t3), i3.manager.itemEnd(t3);
              }
            }, false), m2.addEventListener("progress", function(e4) {
              for (var n4 = rc[t3], r4 = 0, i4 = n4.length; r4 < i4; r4++) {
                var a3 = n4[r4];
                a3.onProgress && a3.onProgress(e4);
              }
            }, false), m2.addEventListener("error", function(e4) {
              var n4 = rc[t3];
              delete rc[t3];
              for (var r4 = 0, a3 = n4.length; r4 < a3; r4++) {
                var o3 = n4[r4];
                o3.onError && o3.onError(e4);
              }
              i3.manager.itemError(t3), i3.manager.itemEnd(t3);
            }, false), m2.addEventListener("abort", function(e4) {
              var n4 = rc[t3];
              delete rc[t3];
              for (var r4 = 0, a3 = n4.length; r4 < a3; r4++) {
                var o3 = n4[r4];
                o3.onError && o3.onError(e4);
              }
              i3.manager.itemError(t3), i3.manager.itemEnd(t3);
            }, false), void 0 !== this.responseType && (m2.responseType = this.responseType), void 0 !== this.withCredentials && (m2.withCredentials = this.withCredentials), m2.overrideMimeType && m2.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain"), this.requestHeader) m2.setRequestHeader(g2, this.requestHeader[g2]);
            m2.send(null);
          }
          return i3.manager.itemStart(t3), m2;
        }
        rc[t3].push({ onLoad: e3, onProgress: n3, onError: r3 });
      }, setResponseType: function(t3) {
        return this.responseType = t3, this;
      }, setWithCredentials: function(t3) {
        return this.withCredentials = t3, this;
      }, setMimeType: function(t3) {
        return this.mimeType = t3, this;
      }, setRequestHeader: function(t3) {
        return this.requestHeader = t3, this;
      } }), ac.prototype = Object.assign(Object.create(nc.prototype), { constructor: ac, load: function(t3, e3, n3, r3) {
        var i3 = this, a2 = new ic(i3.manager);
        a2.setPath(i3.path), a2.load(t3, function(t4) {
          e3(i3.parse(JSON.parse(t4)));
        }, n3, r3);
      }, parse: function(t3) {
        for (var e3 = [], n3 = 0; n3 < t3.length; n3++) {
          var r3 = Kl.parse(t3[n3]);
          e3.push(r3);
        }
        return e3;
      } }), oc.prototype = Object.assign(Object.create(nc.prototype), { constructor: oc, load: function(t3, e3, n3, r3) {
        var i3 = this, a2 = [], o2 = new ds();
        o2.image = a2;
        var s2 = new ic(this.manager);
        function l2(l3) {
          s2.load(t3[l3], function(t4) {
            var n4 = i3.parse(t4, true);
            a2[l3] = { width: n4.width, height: n4.height, format: n4.format, mipmaps: n4.mipmaps }, 6 === (c2 += 1) && (1 === n4.mipmapCount && (o2.minFilter = ct), o2.format = n4.format, o2.needsUpdate = true, e3 && e3(o2));
          }, n3, r3);
        }
        if (s2.setPath(this.path), s2.setResponseType("arraybuffer"), Array.isArray(t3)) for (var c2 = 0, u2 = 0, h2 = t3.length; u2 < h2; ++u2) l2(u2);
        else s2.load(t3, function(t4) {
          var n4 = i3.parse(t4, true);
          if (n4.isCubemap) for (var r4 = n4.mipmaps.length / n4.mipmapCount, s3 = 0; s3 < r4; s3++) {
            a2[s3] = { mipmaps: [] };
            for (var l3 = 0; l3 < n4.mipmapCount; l3++) a2[s3].mipmaps.push(n4.mipmaps[s3 * n4.mipmapCount + l3]), a2[s3].format = n4.format, a2[s3].width = n4.width, a2[s3].height = n4.height;
          }
          else o2.image.width = n4.width, o2.image.height = n4.height, o2.mipmaps = n4.mipmaps;
          1 === n4.mipmapCount && (o2.minFilter = ct), o2.format = n4.format, o2.needsUpdate = true, e3 && e3(o2);
        }, n3, r3);
        return o2;
      } }), sc.prototype = Object.assign(Object.create(nc.prototype), { constructor: sc, load: function(t3, e3, n3, r3) {
        var i3 = this, a2 = new wi(), o2 = new ic(this.manager);
        return o2.setResponseType("arraybuffer"), o2.setPath(this.path), o2.load(t3, function(t4) {
          var n4 = i3.parse(t4);
          n4 && (void 0 !== n4.image ? a2.image = n4.image : void 0 !== n4.data && (a2.image.width = n4.width, a2.image.height = n4.height, a2.image.data = n4.data), a2.wrapS = void 0 !== n4.wrapS ? n4.wrapS : it, a2.wrapT = void 0 !== n4.wrapT ? n4.wrapT : it, a2.magFilter = void 0 !== n4.magFilter ? n4.magFilter : ct, a2.minFilter = void 0 !== n4.minFilter ? n4.minFilter : ct, a2.anisotropy = void 0 !== n4.anisotropy ? n4.anisotropy : 1, void 0 !== n4.format && (a2.format = n4.format), void 0 !== n4.type && (a2.type = n4.type), void 0 !== n4.mipmaps && (a2.mipmaps = n4.mipmaps, a2.minFilter = ht), 1 === n4.mipmapCount && (a2.minFilter = ct), a2.needsUpdate = true, e3 && e3(a2, n4));
        }, n3, r3), a2;
      } }), lc.prototype = Object.assign(Object.create(nc.prototype), { constructor: lc, load: function(t3, e3, n3, r3) {
        void 0 !== this.path && (t3 = this.path + t3), t3 = this.manager.resolveURL(t3);
        var i3 = this, a2 = Ql.get(t3);
        if (void 0 !== a2) return i3.manager.itemStart(t3), setTimeout(function() {
          e3 && e3(a2), i3.manager.itemEnd(t3);
        }, 0), a2;
        var o2 = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
        function s2() {
          o2.removeEventListener("load", s2, false), o2.removeEventListener("error", l2, false), Ql.add(t3, this), e3 && e3(this), i3.manager.itemEnd(t3);
        }
        function l2(e4) {
          o2.removeEventListener("load", s2, false), o2.removeEventListener("error", l2, false), r3 && r3(e4), i3.manager.itemError(t3), i3.manager.itemEnd(t3);
        }
        return o2.addEventListener("load", s2, false), o2.addEventListener("error", l2, false), "data:" !== t3.substr(0, 5) && void 0 !== this.crossOrigin && (o2.crossOrigin = this.crossOrigin), i3.manager.itemStart(t3), o2.src = t3, o2;
      } }), cc.prototype = Object.assign(Object.create(nc.prototype), { constructor: cc, load: function(t3, e3, n3, r3) {
        var i3 = new Ri(), a2 = new lc(this.manager);
        a2.setCrossOrigin(this.crossOrigin), a2.setPath(this.path);
        var o2 = 0;
        function s2(n4) {
          a2.load(t3[n4], function(t4) {
            i3.images[n4] = t4, 6 == ++o2 && (i3.needsUpdate = true, e3 && e3(i3));
          }, void 0, r3);
        }
        for (var l2 = 0; l2 < t3.length; ++l2) s2(l2);
        return i3;
      } }), uc.prototype = Object.assign(Object.create(nc.prototype), { constructor: uc, load: function(t3, e3, n3, r3) {
        var i3 = new Ne(), a2 = new lc(this.manager);
        return a2.setCrossOrigin(this.crossOrigin), a2.setPath(this.path), a2.load(t3, function(n4) {
          i3.image = n4;
          var r4 = 0 < t3.search(/\.jpe?g($|\?)/i) || 0 === t3.search(/^data\:image\/jpeg/);
          i3.format = r4 ? Ct : St, i3.needsUpdate = true, void 0 !== e3 && e3(i3);
        }, n3, r3), i3;
      } }), Object.assign(hc.prototype, { getPoint: function() {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
      }, getPointAt: function(t3, e3) {
        var n3 = this.getUtoTmapping(t3);
        return this.getPoint(n3, e3);
      }, getPoints: function(t3) {
        void 0 === t3 && (t3 = 5);
        for (var e3 = [], n3 = 0; n3 <= t3; n3++) e3.push(this.getPoint(n3 / t3));
        return e3;
      }, getSpacedPoints: function(t3) {
        void 0 === t3 && (t3 = 5);
        for (var e3 = [], n3 = 0; n3 <= t3; n3++) e3.push(this.getPointAt(n3 / t3));
        return e3;
      }, getLength: function() {
        var t3 = this.getLengths();
        return t3[t3.length - 1];
      }, getLengths: function(t3) {
        if (void 0 === t3 && (t3 = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === t3 + 1 && !this.needsUpdate) return this.cacheArcLengths;
        this.needsUpdate = false;
        var e3, n3, r3 = [], i3 = this.getPoint(0), a2 = 0;
        for (r3.push(0), n3 = 1; n3 <= t3; n3++) a2 += (e3 = this.getPoint(n3 / t3)).distanceTo(i3), r3.push(a2), i3 = e3;
        return this.cacheArcLengths = r3;
      }, updateArcLengths: function() {
        this.needsUpdate = true, this.getLengths();
      }, getUtoTmapping: function(t3, e3) {
        var n3, r3 = this.getLengths(), i3 = 0, a2 = r3.length;
        n3 = e3 || t3 * r3[a2 - 1];
        for (var o2, s2 = 0, l2 = a2 - 1; s2 <= l2; ) if ((o2 = r3[i3 = Math.floor(s2 + (l2 - s2) / 2)] - n3) < 0) s2 = i3 + 1;
        else {
          if (!(0 < o2)) {
            l2 = i3;
            break;
          }
          l2 = i3 - 1;
        }
        if (r3[i3 = l2] === n3) return i3 / (a2 - 1);
        var c2 = r3[i3];
        return (i3 + (n3 - c2) / (r3[i3 + 1] - c2)) / (a2 - 1);
      }, getTangent: function(t3) {
        var e3 = t3 - 1e-4, n3 = t3 + 1e-4;
        e3 < 0 && (e3 = 0), 1 < n3 && (n3 = 1);
        var r3 = this.getPoint(e3);
        return this.getPoint(n3).clone().sub(r3).normalize();
      }, getTangentAt: function(t3) {
        var e3 = this.getUtoTmapping(t3);
        return this.getTangent(e3);
      }, computeFrenetFrames: function(t3, e3) {
        var n3, r3, i3, a2 = new He(), o2 = [], s2 = [], l2 = [], c2 = new He(), u2 = new $e();
        for (n3 = 0; n3 <= t3; n3++) r3 = n3 / t3, o2[n3] = this.getTangentAt(r3), o2[n3].normalize();
        s2[0] = new He(), l2[0] = new He();
        var h2 = Number.MAX_VALUE, p2 = Math.abs(o2[0].x), d2 = Math.abs(o2[0].y), f2 = Math.abs(o2[0].z);
        for (p2 <= h2 && (h2 = p2, a2.set(1, 0, 0)), d2 <= h2 && (h2 = d2, a2.set(0, 1, 0)), f2 <= h2 && a2.set(0, 0, 1), c2.crossVectors(o2[0], a2).normalize(), s2[0].crossVectors(o2[0], c2), l2[0].crossVectors(o2[0], s2[0]), n3 = 1; n3 <= t3; n3++) s2[n3] = s2[n3 - 1].clone(), l2[n3] = l2[n3 - 1].clone(), c2.crossVectors(o2[n3 - 1], o2[n3]), c2.length() > Number.EPSILON && (c2.normalize(), i3 = Math.acos(Re.clamp(o2[n3 - 1].dot(o2[n3]), -1, 1)), s2[n3].applyMatrix4(u2.makeRotationAxis(c2, i3))), l2[n3].crossVectors(o2[n3], s2[n3]);
        if (true === e3) for (i3 = Math.acos(Re.clamp(s2[0].dot(s2[t3]), -1, 1)), i3 /= t3, 0 < o2[0].dot(c2.crossVectors(s2[0], s2[t3])) && (i3 = -i3), n3 = 1; n3 <= t3; n3++) s2[n3].applyMatrix4(u2.makeRotationAxis(o2[n3], i3 * n3)), l2[n3].crossVectors(o2[n3], s2[n3]);
        return { tangents: o2, normals: s2, binormals: l2 };
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.arcLengthDivisions = t3.arcLengthDivisions, this;
      }, toJSON: function() {
        var t3 = { metadata: { version: 4.5, type: "Curve", generator: "Curve.toJSON" } };
        return t3.arcLengthDivisions = this.arcLengthDivisions, t3.type = this.type, t3;
      }, fromJSON: function(t3) {
        return this.arcLengthDivisions = t3.arcLengthDivisions, this;
      } }), ((pc.prototype = Object.create(hc.prototype)).constructor = pc).prototype.isEllipseCurve = true, pc.prototype.getPoint = function(t3, e3) {
        for (var n3 = e3 || new Le(), r3 = 2 * Math.PI, i3 = this.aEndAngle - this.aStartAngle, a2 = Math.abs(i3) < Number.EPSILON; i3 < 0; ) i3 += r3;
        for (; r3 < i3; ) i3 -= r3;
        i3 < Number.EPSILON && (i3 = a2 ? 0 : r3), true !== this.aClockwise || a2 || (i3 === r3 ? i3 = -r3 : i3 -= r3);
        var o2 = this.aStartAngle + t3 * i3, s2 = this.aX + this.xRadius * Math.cos(o2), l2 = this.aY + this.yRadius * Math.sin(o2);
        if (0 !== this.aRotation) {
          var c2 = Math.cos(this.aRotation), u2 = Math.sin(this.aRotation), h2 = s2 - this.aX, p2 = l2 - this.aY;
          s2 = h2 * c2 - p2 * u2 + this.aX, l2 = h2 * u2 + p2 * c2 + this.aY;
        }
        return n3.set(s2, l2);
      }, pc.prototype.copy = function(t3) {
        return hc.prototype.copy.call(this, t3), this.aX = t3.aX, this.aY = t3.aY, this.xRadius = t3.xRadius, this.yRadius = t3.yRadius, this.aStartAngle = t3.aStartAngle, this.aEndAngle = t3.aEndAngle, this.aClockwise = t3.aClockwise, this.aRotation = t3.aRotation, this;
      }, pc.prototype.toJSON = function() {
        var t3 = hc.prototype.toJSON.call(this);
        return t3.aX = this.aX, t3.aY = this.aY, t3.xRadius = this.xRadius, t3.yRadius = this.yRadius, t3.aStartAngle = this.aStartAngle, t3.aEndAngle = this.aEndAngle, t3.aClockwise = this.aClockwise, t3.aRotation = this.aRotation, t3;
      }, pc.prototype.fromJSON = function(t3) {
        return hc.prototype.fromJSON.call(this, t3), this.aX = t3.aX, this.aY = t3.aY, this.xRadius = t3.xRadius, this.yRadius = t3.yRadius, this.aStartAngle = t3.aStartAngle, this.aEndAngle = t3.aEndAngle, this.aClockwise = t3.aClockwise, this.aRotation = t3.aRotation, this;
      }, ((dc.prototype = Object.create(pc.prototype)).constructor = dc).prototype.isArcCurve = true;
      var mc = new He(), gc = new fc(), yc = new fc(), vc = new fc();
      function xc(t3, e3, n3, r3) {
        hc.call(this), this.type = "CatmullRomCurve3", this.points = t3 || [], this.closed = e3 || false, this.curveType = n3 || "centripetal", this.tension = r3 || 0.5;
      }
      function wc(t3, e3, n3, r3, i3) {
        var a2 = 0.5 * (r3 - e3), o2 = 0.5 * (i3 - n3), s2 = t3 * t3;
        return (2 * n3 - 2 * r3 + a2 + o2) * (t3 * s2) + (-3 * n3 + 3 * r3 - 2 * a2 - o2) * s2 + a2 * t3 + n3;
      }
      function bc(t3, e3, n3, r3) {
        return (o2 = 1 - t3) * o2 * e3 + 2 * (1 - (a2 = t3)) * a2 * n3 + (i3 = t3) * i3 * r3;
        var i3, a2, o2;
      }
      function Mc(t3, e3, n3, r3, i3) {
        return (c2 = 1 - t3) * c2 * c2 * e3 + 3 * (l2 = 1 - (s2 = t3)) * l2 * s2 * n3 + 3 * (1 - (o2 = t3)) * o2 * o2 * r3 + (a2 = t3) * a2 * a2 * i3;
        var a2, o2, s2, l2, c2;
      }
      function _c(t3, e3, n3, r3) {
        hc.call(this), this.type = "CubicBezierCurve", this.v0 = t3 || new Le(), this.v1 = e3 || new Le(), this.v2 = n3 || new Le(), this.v3 = r3 || new Le();
      }
      function Tc(t3, e3, n3, r3) {
        hc.call(this), this.type = "CubicBezierCurve3", this.v0 = t3 || new He(), this.v1 = e3 || new He(), this.v2 = n3 || new He(), this.v3 = r3 || new He();
      }
      function Cc(t3, e3) {
        hc.call(this), this.type = "LineCurve", this.v1 = t3 || new Le(), this.v2 = e3 || new Le();
      }
      function Sc(t3, e3) {
        hc.call(this), this.type = "LineCurve3", this.v1 = t3 || new He(), this.v2 = e3 || new He();
      }
      function Dc(t3, e3, n3) {
        hc.call(this), this.type = "QuadraticBezierCurve", this.v0 = t3 || new Le(), this.v1 = e3 || new Le(), this.v2 = n3 || new Le();
      }
      function Ec(t3, e3, n3) {
        hc.call(this), this.type = "QuadraticBezierCurve3", this.v0 = t3 || new He(), this.v1 = e3 || new He(), this.v2 = n3 || new He();
      }
      function Oc(t3) {
        hc.call(this), this.type = "SplineCurve", this.points = t3 || [];
      }
      ((xc.prototype = Object.create(hc.prototype)).constructor = xc).prototype.isCatmullRomCurve3 = true, xc.prototype.getPoint = function(t3, e3) {
        var n3, r3, i3, a2, o2 = e3 || new He(), s2 = this.points, l2 = s2.length, c2 = (l2 - (this.closed ? 0 : 1)) * t3, u2 = Math.floor(c2), h2 = c2 - u2;
        if (this.closed ? u2 += 0 < u2 ? 0 : (Math.floor(Math.abs(u2) / l2) + 1) * l2 : 0 === h2 && u2 === l2 - 1 && (u2 = l2 - 2, h2 = 1), n3 = this.closed || 0 < u2 ? s2[(u2 - 1) % l2] : (mc.subVectors(s2[0], s2[1]).add(s2[0]), mc), r3 = s2[u2 % l2], i3 = s2[(u2 + 1) % l2], a2 = this.closed || u2 + 2 < l2 ? s2[(u2 + 2) % l2] : (mc.subVectors(s2[l2 - 1], s2[l2 - 2]).add(s2[l2 - 1]), mc), "centripetal" === this.curveType || "chordal" === this.curveType) {
          var p2 = "chordal" === this.curveType ? 0.5 : 0.25, d2 = Math.pow(n3.distanceToSquared(r3), p2), f2 = Math.pow(r3.distanceToSquared(i3), p2), m2 = Math.pow(i3.distanceToSquared(a2), p2);
          f2 < 1e-4 && (f2 = 1), d2 < 1e-4 && (d2 = f2), m2 < 1e-4 && (m2 = f2), gc.initNonuniformCatmullRom(n3.x, r3.x, i3.x, a2.x, d2, f2, m2), yc.initNonuniformCatmullRom(n3.y, r3.y, i3.y, a2.y, d2, f2, m2), vc.initNonuniformCatmullRom(n3.z, r3.z, i3.z, a2.z, d2, f2, m2);
        } else "catmullrom" === this.curveType && (gc.initCatmullRom(n3.x, r3.x, i3.x, a2.x, this.tension), yc.initCatmullRom(n3.y, r3.y, i3.y, a2.y, this.tension), vc.initCatmullRom(n3.z, r3.z, i3.z, a2.z, this.tension));
        return o2.set(gc.calc(h2), yc.calc(h2), vc.calc(h2)), o2;
      }, xc.prototype.copy = function(t3) {
        hc.prototype.copy.call(this, t3), this.points = [];
        for (var e3 = 0, n3 = t3.points.length; e3 < n3; e3++) {
          var r3 = t3.points[e3];
          this.points.push(r3.clone());
        }
        return this.closed = t3.closed, this.curveType = t3.curveType, this.tension = t3.tension, this;
      }, xc.prototype.toJSON = function() {
        var t3 = hc.prototype.toJSON.call(this);
        t3.points = [];
        for (var e3 = 0, n3 = this.points.length; e3 < n3; e3++) {
          var r3 = this.points[e3];
          t3.points.push(r3.toArray());
        }
        return t3.closed = this.closed, t3.curveType = this.curveType, t3.tension = this.tension, t3;
      }, xc.prototype.fromJSON = function(t3) {
        hc.prototype.fromJSON.call(this, t3), this.points = [];
        for (var e3 = 0, n3 = t3.points.length; e3 < n3; e3++) {
          var r3 = t3.points[e3];
          this.points.push(new He().fromArray(r3));
        }
        return this.closed = t3.closed, this.curveType = t3.curveType, this.tension = t3.tension, this;
      }, ((_c.prototype = Object.create(hc.prototype)).constructor = _c).prototype.isCubicBezierCurve = true, _c.prototype.getPoint = function(t3, e3) {
        var n3 = e3 || new Le(), r3 = this.v0, i3 = this.v1, a2 = this.v2, o2 = this.v3;
        return n3.set(Mc(t3, r3.x, i3.x, a2.x, o2.x), Mc(t3, r3.y, i3.y, a2.y, o2.y)), n3;
      }, _c.prototype.copy = function(t3) {
        return hc.prototype.copy.call(this, t3), this.v0.copy(t3.v0), this.v1.copy(t3.v1), this.v2.copy(t3.v2), this.v3.copy(t3.v3), this;
      }, _c.prototype.toJSON = function() {
        var t3 = hc.prototype.toJSON.call(this);
        return t3.v0 = this.v0.toArray(), t3.v1 = this.v1.toArray(), t3.v2 = this.v2.toArray(), t3.v3 = this.v3.toArray(), t3;
      }, _c.prototype.fromJSON = function(t3) {
        return hc.prototype.fromJSON.call(this, t3), this.v0.fromArray(t3.v0), this.v1.fromArray(t3.v1), this.v2.fromArray(t3.v2), this.v3.fromArray(t3.v3), this;
      }, ((Tc.prototype = Object.create(hc.prototype)).constructor = Tc).prototype.isCubicBezierCurve3 = true, Tc.prototype.getPoint = function(t3, e3) {
        var n3 = e3 || new He(), r3 = this.v0, i3 = this.v1, a2 = this.v2, o2 = this.v3;
        return n3.set(Mc(t3, r3.x, i3.x, a2.x, o2.x), Mc(t3, r3.y, i3.y, a2.y, o2.y), Mc(t3, r3.z, i3.z, a2.z, o2.z)), n3;
      }, Tc.prototype.copy = function(t3) {
        return hc.prototype.copy.call(this, t3), this.v0.copy(t3.v0), this.v1.copy(t3.v1), this.v2.copy(t3.v2), this.v3.copy(t3.v3), this;
      }, Tc.prototype.toJSON = function() {
        var t3 = hc.prototype.toJSON.call(this);
        return t3.v0 = this.v0.toArray(), t3.v1 = this.v1.toArray(), t3.v2 = this.v2.toArray(), t3.v3 = this.v3.toArray(), t3;
      }, Tc.prototype.fromJSON = function(t3) {
        return hc.prototype.fromJSON.call(this, t3), this.v0.fromArray(t3.v0), this.v1.fromArray(t3.v1), this.v2.fromArray(t3.v2), this.v3.fromArray(t3.v3), this;
      }, ((Cc.prototype = Object.create(hc.prototype)).constructor = Cc).prototype.isLineCurve = true, Cc.prototype.getPoint = function(t3, e3) {
        var n3 = e3 || new Le();
        return 1 === t3 ? n3.copy(this.v2) : (n3.copy(this.v2).sub(this.v1), n3.multiplyScalar(t3).add(this.v1)), n3;
      }, Cc.prototype.getPointAt = function(t3, e3) {
        return this.getPoint(t3, e3);
      }, Cc.prototype.getTangent = function() {
        return this.v2.clone().sub(this.v1).normalize();
      }, Cc.prototype.copy = function(t3) {
        return hc.prototype.copy.call(this, t3), this.v1.copy(t3.v1), this.v2.copy(t3.v2), this;
      }, Cc.prototype.toJSON = function() {
        var t3 = hc.prototype.toJSON.call(this);
        return t3.v1 = this.v1.toArray(), t3.v2 = this.v2.toArray(), t3;
      }, Cc.prototype.fromJSON = function(t3) {
        return hc.prototype.fromJSON.call(this, t3), this.v1.fromArray(t3.v1), this.v2.fromArray(t3.v2), this;
      }, ((Sc.prototype = Object.create(hc.prototype)).constructor = Sc).prototype.isLineCurve3 = true, Sc.prototype.getPoint = function(t3, e3) {
        var n3 = e3 || new He();
        return 1 === t3 ? n3.copy(this.v2) : (n3.copy(this.v2).sub(this.v1), n3.multiplyScalar(t3).add(this.v1)), n3;
      }, Sc.prototype.getPointAt = function(t3, e3) {
        return this.getPoint(t3, e3);
      }, Sc.prototype.copy = function(t3) {
        return hc.prototype.copy.call(this, t3), this.v1.copy(t3.v1), this.v2.copy(t3.v2), this;
      }, Sc.prototype.toJSON = function() {
        var t3 = hc.prototype.toJSON.call(this);
        return t3.v1 = this.v1.toArray(), t3.v2 = this.v2.toArray(), t3;
      }, Sc.prototype.fromJSON = function(t3) {
        return hc.prototype.fromJSON.call(this, t3), this.v1.fromArray(t3.v1), this.v2.fromArray(t3.v2), this;
      }, ((Dc.prototype = Object.create(hc.prototype)).constructor = Dc).prototype.isQuadraticBezierCurve = true, Dc.prototype.getPoint = function(t3, e3) {
        var n3 = e3 || new Le(), r3 = this.v0, i3 = this.v1, a2 = this.v2;
        return n3.set(bc(t3, r3.x, i3.x, a2.x), bc(t3, r3.y, i3.y, a2.y)), n3;
      }, Dc.prototype.copy = function(t3) {
        return hc.prototype.copy.call(this, t3), this.v0.copy(t3.v0), this.v1.copy(t3.v1), this.v2.copy(t3.v2), this;
      }, Dc.prototype.toJSON = function() {
        var t3 = hc.prototype.toJSON.call(this);
        return t3.v0 = this.v0.toArray(), t3.v1 = this.v1.toArray(), t3.v2 = this.v2.toArray(), t3;
      }, Dc.prototype.fromJSON = function(t3) {
        return hc.prototype.fromJSON.call(this, t3), this.v0.fromArray(t3.v0), this.v1.fromArray(t3.v1), this.v2.fromArray(t3.v2), this;
      }, ((Ec.prototype = Object.create(hc.prototype)).constructor = Ec).prototype.isQuadraticBezierCurve3 = true, Ec.prototype.getPoint = function(t3, e3) {
        var n3 = e3 || new He(), r3 = this.v0, i3 = this.v1, a2 = this.v2;
        return n3.set(bc(t3, r3.x, i3.x, a2.x), bc(t3, r3.y, i3.y, a2.y), bc(t3, r3.z, i3.z, a2.z)), n3;
      }, Ec.prototype.copy = function(t3) {
        return hc.prototype.copy.call(this, t3), this.v0.copy(t3.v0), this.v1.copy(t3.v1), this.v2.copy(t3.v2), this;
      }, Ec.prototype.toJSON = function() {
        var t3 = hc.prototype.toJSON.call(this);
        return t3.v0 = this.v0.toArray(), t3.v1 = this.v1.toArray(), t3.v2 = this.v2.toArray(), t3;
      }, Ec.prototype.fromJSON = function(t3) {
        return hc.prototype.fromJSON.call(this, t3), this.v0.fromArray(t3.v0), this.v1.fromArray(t3.v1), this.v2.fromArray(t3.v2), this;
      }, ((Oc.prototype = Object.create(hc.prototype)).constructor = Oc).prototype.isSplineCurve = true, Oc.prototype.getPoint = function(t3, e3) {
        var n3 = e3 || new Le(), r3 = this.points, i3 = (r3.length - 1) * t3, a2 = Math.floor(i3), o2 = i3 - a2, s2 = r3[0 === a2 ? a2 : a2 - 1], l2 = r3[a2], c2 = r3[a2 > r3.length - 2 ? r3.length - 1 : a2 + 1], u2 = r3[a2 > r3.length - 3 ? r3.length - 1 : a2 + 2];
        return n3.set(wc(o2, s2.x, l2.x, c2.x, u2.x), wc(o2, s2.y, l2.y, c2.y, u2.y)), n3;
      }, Oc.prototype.copy = function(t3) {
        hc.prototype.copy.call(this, t3), this.points = [];
        for (var e3 = 0, n3 = t3.points.length; e3 < n3; e3++) {
          var r3 = t3.points[e3];
          this.points.push(r3.clone());
        }
        return this;
      }, Oc.prototype.toJSON = function() {
        var t3 = hc.prototype.toJSON.call(this);
        t3.points = [];
        for (var e3 = 0, n3 = this.points.length; e3 < n3; e3++) {
          var r3 = this.points[e3];
          t3.points.push(r3.toArray());
        }
        return t3;
      }, Oc.prototype.fromJSON = function(t3) {
        hc.prototype.fromJSON.call(this, t3), this.points = [];
        for (var e3 = 0, n3 = t3.points.length; e3 < n3; e3++) {
          var r3 = t3.points[e3];
          this.points.push(new Le().fromArray(r3));
        }
        return this;
      };
      var Ac = Object.freeze({ __proto__: null, ArcCurve: dc, CatmullRomCurve3: xc, CubicBezierCurve: _c, CubicBezierCurve3: Tc, EllipseCurve: pc, LineCurve: Cc, LineCurve3: Sc, QuadraticBezierCurve: Dc, QuadraticBezierCurve3: Ec, SplineCurve: Oc });
      function Pc() {
        hc.call(this), this.type = "CurvePath", this.curves = [], this.autoClose = false;
      }
      function Rc(t3) {
        Pc.call(this), this.type = "Path", this.currentPoint = new Le(), t3 && this.setFromPoints(t3);
      }
      function Lc(t3) {
        Rc.call(this, t3), this.uuid = Re.generateUUID(), this.type = "Shape", this.holes = [];
      }
      function Ic(t3, e3) {
        yn.call(this), this.type = "Light", this.color = new lr(t3), this.intensity = void 0 !== e3 ? e3 : 1, this.receiveShadow = void 0;
      }
      function kc(t3, e3, n3) {
        Ic.call(this, t3, n3), this.type = "HemisphereLight", this.castShadow = void 0, this.position.copy(yn.DefaultUp), this.updateMatrix(), this.groundColor = new lr(e3);
      }
      function jc(t3) {
        this.camera = t3, this.bias = 0, this.radius = 1, this.mapSize = new Le(512, 512), this.map = null, this.mapPass = null, this.matrix = new $e(), this._frustum = new _i(), this._frameExtents = new Le(1, 1), this._viewportCount = 1, this._viewports = [new Ve(0, 0, 1, 1)];
      }
      function Nc() {
        jc.call(this, new yi(50, 1, 0.5, 500));
      }
      function Vc(t3, e3, n3, r3, i3, a2) {
        Ic.call(this, t3, e3), this.type = "SpotLight", this.position.copy(yn.DefaultUp), this.updateMatrix(), this.target = new yn(), Object.defineProperty(this, "power", { get: function() {
          return this.intensity * Math.PI;
        }, set: function(t4) {
          this.intensity = t4 / Math.PI;
        } }), this.distance = void 0 !== n3 ? n3 : 0, this.angle = void 0 !== r3 ? r3 : Math.PI / 3, this.penumbra = void 0 !== i3 ? i3 : 0, this.decay = void 0 !== a2 ? a2 : 1, this.shadow = new Nc();
      }
      function Fc() {
        jc.call(this, new yi(90, 1, 0.5, 500)), this._frameExtents = new Le(4, 2), this._viewportCount = 6, this._viewports = [new Ve(2, 1, 1, 1), new Ve(0, 1, 1, 1), new Ve(3, 1, 1, 1), new Ve(1, 1, 1, 1), new Ve(3, 0, 1, 1), new Ve(1, 0, 1, 1)], this._cubeDirections = [new He(1, 0, 0), new He(-1, 0, 0), new He(0, 0, 1), new He(0, 0, -1), new He(0, 1, 0), new He(0, -1, 0)], this._cubeUps = [new He(0, 1, 0), new He(0, 1, 0), new He(0, 1, 0), new He(0, 1, 0), new He(0, 0, 1), new He(0, 0, -1)];
      }
      function Bc(t3, e3, n3, r3) {
        Ic.call(this, t3, e3), this.type = "PointLight", Object.defineProperty(this, "power", { get: function() {
          return 4 * this.intensity * Math.PI;
        }, set: function(t4) {
          this.intensity = t4 / (4 * Math.PI);
        } }), this.distance = void 0 !== n3 ? n3 : 0, this.decay = void 0 !== r3 ? r3 : 1, this.shadow = new Fc();
      }
      function Gc(t3, e3, n3, r3, i3, a2) {
        gi.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = void 0 !== t3 ? t3 : -1, this.right = void 0 !== e3 ? e3 : 1, this.top = void 0 !== n3 ? n3 : 1, this.bottom = void 0 !== r3 ? r3 : -1, this.near = void 0 !== i3 ? i3 : 0.1, this.far = void 0 !== a2 ? a2 : 2e3, this.updateProjectionMatrix();
      }
      function zc() {
        jc.call(this, new Gc(-5, 5, 5, -5, 0.5, 500));
      }
      function Uc(t3, e3) {
        Ic.call(this, t3, e3), this.type = "DirectionalLight", this.position.copy(yn.DefaultUp), this.updateMatrix(), this.target = new yn(), this.shadow = new zc();
      }
      function Hc(t3, e3) {
        Ic.call(this, t3, e3), this.type = "AmbientLight", this.castShadow = void 0;
      }
      function Wc(t3, e3, n3, r3) {
        Ic.call(this, t3, e3), this.type = "RectAreaLight", this.width = void 0 !== n3 ? n3 : 10, this.height = void 0 !== r3 ? r3 : 10;
      }
      function Jc(t3) {
        nc.call(this, t3), this.textures = {};
      }
      Pc.prototype = Object.assign(Object.create(hc.prototype), { constructor: Pc, add: function(t3) {
        this.curves.push(t3);
      }, closePath: function() {
        var t3 = this.curves[0].getPoint(0), e3 = this.curves[this.curves.length - 1].getPoint(1);
        t3.equals(e3) || this.curves.push(new Cc(e3, t3));
      }, getPoint: function(t3) {
        for (var e3 = t3 * this.getLength(), n3 = this.getCurveLengths(), r3 = 0; r3 < n3.length; ) {
          if (n3[r3] >= e3) {
            var i3 = n3[r3] - e3, a2 = this.curves[r3], o2 = a2.getLength(), s2 = 0 === o2 ? 0 : 1 - i3 / o2;
            return a2.getPointAt(s2);
          }
          r3++;
        }
        return null;
      }, getLength: function() {
        var t3 = this.getCurveLengths();
        return t3[t3.length - 1];
      }, updateArcLengths: function() {
        this.needsUpdate = true, this.cacheLengths = null, this.getCurveLengths();
      }, getCurveLengths: function() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
        for (var t3 = [], e3 = 0, n3 = 0, r3 = this.curves.length; n3 < r3; n3++) e3 += this.curves[n3].getLength(), t3.push(e3);
        return this.cacheLengths = t3;
      }, getSpacedPoints: function(t3) {
        void 0 === t3 && (t3 = 40);
        for (var e3 = [], n3 = 0; n3 <= t3; n3++) e3.push(this.getPoint(n3 / t3));
        return this.autoClose && e3.push(e3[0]), e3;
      }, getPoints: function(t3) {
        t3 = t3 || 12;
        for (var e3, n3 = [], r3 = 0, i3 = this.curves; r3 < i3.length; r3++) for (var a2 = i3[r3], o2 = a2 && a2.isEllipseCurve ? 2 * t3 : a2 && (a2.isLineCurve || a2.isLineCurve3) ? 1 : a2 && a2.isSplineCurve ? t3 * a2.points.length : t3, s2 = a2.getPoints(o2), l2 = 0; l2 < s2.length; l2++) {
          var c2 = s2[l2];
          e3 && e3.equals(c2) || (n3.push(c2), e3 = c2);
        }
        return this.autoClose && 1 < n3.length && !n3[n3.length - 1].equals(n3[0]) && n3.push(n3[0]), n3;
      }, copy: function(t3) {
        hc.prototype.copy.call(this, t3), this.curves = [];
        for (var e3 = 0, n3 = t3.curves.length; e3 < n3; e3++) {
          var r3 = t3.curves[e3];
          this.curves.push(r3.clone());
        }
        return this.autoClose = t3.autoClose, this;
      }, toJSON: function() {
        var t3 = hc.prototype.toJSON.call(this);
        t3.autoClose = this.autoClose, t3.curves = [];
        for (var e3 = 0, n3 = this.curves.length; e3 < n3; e3++) {
          var r3 = this.curves[e3];
          t3.curves.push(r3.toJSON());
        }
        return t3;
      }, fromJSON: function(t3) {
        hc.prototype.fromJSON.call(this, t3), this.autoClose = t3.autoClose, this.curves = [];
        for (var e3 = 0, n3 = t3.curves.length; e3 < n3; e3++) {
          var r3 = t3.curves[e3];
          this.curves.push(new Ac[r3.type]().fromJSON(r3));
        }
        return this;
      } }), Rc.prototype = Object.assign(Object.create(Pc.prototype), { constructor: Rc, setFromPoints: function(t3) {
        this.moveTo(t3[0].x, t3[0].y);
        for (var e3 = 1, n3 = t3.length; e3 < n3; e3++) this.lineTo(t3[e3].x, t3[e3].y);
        return this;
      }, moveTo: function(t3, e3) {
        return this.currentPoint.set(t3, e3), this;
      }, lineTo: function(t3, e3) {
        var n3 = new Cc(this.currentPoint.clone(), new Le(t3, e3));
        return this.curves.push(n3), this.currentPoint.set(t3, e3), this;
      }, quadraticCurveTo: function(t3, e3, n3, r3) {
        var i3 = new Dc(this.currentPoint.clone(), new Le(t3, e3), new Le(n3, r3));
        return this.curves.push(i3), this.currentPoint.set(n3, r3), this;
      }, bezierCurveTo: function(t3, e3, n3, r3, i3, a2) {
        var o2 = new _c(this.currentPoint.clone(), new Le(t3, e3), new Le(n3, r3), new Le(i3, a2));
        return this.curves.push(o2), this.currentPoint.set(i3, a2), this;
      }, splineThru: function(t3) {
        var e3 = new Oc([this.currentPoint.clone()].concat(t3));
        return this.curves.push(e3), this.currentPoint.copy(t3[t3.length - 1]), this;
      }, arc: function(t3, e3, n3, r3, i3, a2) {
        var o2 = this.currentPoint.x, s2 = this.currentPoint.y;
        return this.absarc(t3 + o2, e3 + s2, n3, r3, i3, a2), this;
      }, absarc: function(t3, e3, n3, r3, i3, a2) {
        return this.absellipse(t3, e3, n3, n3, r3, i3, a2), this;
      }, ellipse: function(t3, e3, n3, r3, i3, a2, o2, s2) {
        var l2 = this.currentPoint.x, c2 = this.currentPoint.y;
        return this.absellipse(t3 + l2, e3 + c2, n3, r3, i3, a2, o2, s2), this;
      }, absellipse: function(t3, e3, n3, r3, i3, a2, o2, s2) {
        var l2 = new pc(t3, e3, n3, r3, i3, a2, o2, s2);
        if (0 < this.curves.length) {
          var c2 = l2.getPoint(0);
          c2.equals(this.currentPoint) || this.lineTo(c2.x, c2.y);
        }
        this.curves.push(l2);
        var u2 = l2.getPoint(1);
        return this.currentPoint.copy(u2), this;
      }, copy: function(t3) {
        return Pc.prototype.copy.call(this, t3), this.currentPoint.copy(t3.currentPoint), this;
      }, toJSON: function() {
        var t3 = Pc.prototype.toJSON.call(this);
        return t3.currentPoint = this.currentPoint.toArray(), t3;
      }, fromJSON: function(t3) {
        return Pc.prototype.fromJSON.call(this, t3), this.currentPoint.fromArray(t3.currentPoint), this;
      } }), Lc.prototype = Object.assign(Object.create(Rc.prototype), { constructor: Lc, getPointsHoles: function(t3) {
        for (var e3 = [], n3 = 0, r3 = this.holes.length; n3 < r3; n3++) e3[n3] = this.holes[n3].getPoints(t3);
        return e3;
      }, extractPoints: function(t3) {
        return { shape: this.getPoints(t3), holes: this.getPointsHoles(t3) };
      }, copy: function(t3) {
        Rc.prototype.copy.call(this, t3), this.holes = [];
        for (var e3 = 0, n3 = t3.holes.length; e3 < n3; e3++) {
          var r3 = t3.holes[e3];
          this.holes.push(r3.clone());
        }
        return this;
      }, toJSON: function() {
        var t3 = Rc.prototype.toJSON.call(this);
        t3.uuid = this.uuid, t3.holes = [];
        for (var e3 = 0, n3 = this.holes.length; e3 < n3; e3++) {
          var r3 = this.holes[e3];
          t3.holes.push(r3.toJSON());
        }
        return t3;
      }, fromJSON: function(t3) {
        Rc.prototype.fromJSON.call(this, t3), this.uuid = t3.uuid, this.holes = [];
        for (var e3 = 0, n3 = t3.holes.length; e3 < n3; e3++) {
          var r3 = t3.holes[e3];
          this.holes.push(new Rc().fromJSON(r3));
        }
        return this;
      } }), Ic.prototype = Object.assign(Object.create(yn.prototype), { constructor: Ic, isLight: true, copy: function(t3) {
        return yn.prototype.copy.call(this, t3), this.color.copy(t3.color), this.intensity = t3.intensity, this;
      }, toJSON: function(t3) {
        var e3 = yn.prototype.toJSON.call(this, t3);
        return e3.object.color = this.color.getHex(), e3.object.intensity = this.intensity, void 0 !== this.groundColor && (e3.object.groundColor = this.groundColor.getHex()), void 0 !== this.distance && (e3.object.distance = this.distance), void 0 !== this.angle && (e3.object.angle = this.angle), void 0 !== this.decay && (e3.object.decay = this.decay), void 0 !== this.penumbra && (e3.object.penumbra = this.penumbra), void 0 !== this.shadow && (e3.object.shadow = this.shadow.toJSON()), e3;
      } }), kc.prototype = Object.assign(Object.create(Ic.prototype), { constructor: kc, isHemisphereLight: true, copy: function(t3) {
        return Ic.prototype.copy.call(this, t3), this.groundColor.copy(t3.groundColor), this;
      } }), Object.assign(jc.prototype, { _projScreenMatrix: new $e(), _lightPositionWorld: new He(), _lookTarget: new He(), getViewportCount: function() {
        return this._viewportCount;
      }, getFrustum: function() {
        return this._frustum;
      }, updateMatrices: function(t3) {
        var e3 = this.camera, n3 = this.matrix, r3 = this._projScreenMatrix, i3 = this._lookTarget, a2 = this._lightPositionWorld;
        a2.setFromMatrixPosition(t3.matrixWorld), e3.position.copy(a2), i3.setFromMatrixPosition(t3.target.matrixWorld), e3.lookAt(i3), e3.updateMatrixWorld(), r3.multiplyMatrices(e3.projectionMatrix, e3.matrixWorldInverse), this._frustum.setFromProjectionMatrix(r3), n3.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1), n3.multiply(e3.projectionMatrix), n3.multiply(e3.matrixWorldInverse);
      }, getViewport: function(t3) {
        return this._viewports[t3];
      }, getFrameExtents: function() {
        return this._frameExtents;
      }, copy: function(t3) {
        return this.camera = t3.camera.clone(), this.bias = t3.bias, this.radius = t3.radius, this.mapSize.copy(t3.mapSize), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, toJSON: function() {
        var t3 = {};
        return 0 !== this.bias && (t3.bias = this.bias), 1 !== this.radius && (t3.radius = this.radius), 512 === this.mapSize.x && 512 === this.mapSize.y || (t3.mapSize = this.mapSize.toArray()), t3.camera = this.camera.toJSON(false).object, delete t3.camera.matrix, t3;
      } }), Nc.prototype = Object.assign(Object.create(jc.prototype), { constructor: Nc, isSpotLightShadow: true, updateMatrices: function(t3) {
        var e3 = this.camera, n3 = 2 * Re.RAD2DEG * t3.angle, r3 = this.mapSize.width / this.mapSize.height, i3 = t3.distance || e3.far;
        n3 === e3.fov && r3 === e3.aspect && i3 === e3.far || (e3.fov = n3, e3.aspect = r3, e3.far = i3, e3.updateProjectionMatrix()), jc.prototype.updateMatrices.call(this, t3);
      } }), Vc.prototype = Object.assign(Object.create(Ic.prototype), { constructor: Vc, isSpotLight: true, copy: function(t3) {
        return Ic.prototype.copy.call(this, t3), this.distance = t3.distance, this.angle = t3.angle, this.penumbra = t3.penumbra, this.decay = t3.decay, this.target = t3.target.clone(), this.shadow = t3.shadow.clone(), this;
      } }), Fc.prototype = Object.assign(Object.create(jc.prototype), { constructor: Fc, isPointLightShadow: true, updateMatrices: function(t3, e3) {
        void 0 === e3 && (e3 = 0);
        var n3 = this.camera, r3 = this.matrix, i3 = this._lightPositionWorld, a2 = this._lookTarget, o2 = this._projScreenMatrix;
        i3.setFromMatrixPosition(t3.matrixWorld), n3.position.copy(i3), a2.copy(n3.position), a2.add(this._cubeDirections[e3]), n3.up.copy(this._cubeUps[e3]), n3.lookAt(a2), n3.updateMatrixWorld(), r3.makeTranslation(-i3.x, -i3.y, -i3.z), o2.multiplyMatrices(n3.projectionMatrix, n3.matrixWorldInverse), this._frustum.setFromProjectionMatrix(o2);
      } }), Bc.prototype = Object.assign(Object.create(Ic.prototype), { constructor: Bc, isPointLight: true, copy: function(t3) {
        return Ic.prototype.copy.call(this, t3), this.distance = t3.distance, this.decay = t3.decay, this.shadow = t3.shadow.clone(), this;
      } }), Gc.prototype = Object.assign(Object.create(gi.prototype), { constructor: Gc, isOrthographicCamera: true, copy: function(t3, e3) {
        return gi.prototype.copy.call(this, t3, e3), this.left = t3.left, this.right = t3.right, this.top = t3.top, this.bottom = t3.bottom, this.near = t3.near, this.far = t3.far, this.zoom = t3.zoom, this.view = null === t3.view ? null : Object.assign({}, t3.view), this;
      }, setViewOffset: function(t3, e3, n3, r3, i3, a2) {
        null === this.view && (this.view = { enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = true, this.view.fullWidth = t3, this.view.fullHeight = e3, this.view.offsetX = n3, this.view.offsetY = r3, this.view.width = i3, this.view.height = a2, this.updateProjectionMatrix();
      }, clearViewOffset: function() {
        null !== this.view && (this.view.enabled = false), this.updateProjectionMatrix();
      }, updateProjectionMatrix: function() {
        var t3 = (this.right - this.left) / (2 * this.zoom), e3 = (this.top - this.bottom) / (2 * this.zoom), n3 = (this.right + this.left) / 2, r3 = (this.top + this.bottom) / 2, i3 = n3 - t3, a2 = n3 + t3, o2 = r3 + e3, s2 = r3 - e3;
        if (null !== this.view && this.view.enabled) {
          var l2 = (this.right - this.left) / this.view.fullWidth / this.zoom, c2 = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
          a2 = (i3 += l2 * this.view.offsetX) + l2 * this.view.width, s2 = (o2 -= c2 * this.view.offsetY) - c2 * this.view.height;
        }
        this.projectionMatrix.makeOrthographic(i3, a2, o2, s2, this.near, this.far), this.projectionMatrixInverse.getInverse(this.projectionMatrix);
      }, toJSON: function(t3) {
        var e3 = yn.prototype.toJSON.call(this, t3);
        return e3.object.zoom = this.zoom, e3.object.left = this.left, e3.object.right = this.right, e3.object.top = this.top, e3.object.bottom = this.bottom, e3.object.near = this.near, e3.object.far = this.far, null !== this.view && (e3.object.view = Object.assign({}, this.view)), e3;
      } }), zc.prototype = Object.assign(Object.create(jc.prototype), { constructor: zc, isDirectionalLightShadow: true, updateMatrices: function(t3) {
        jc.prototype.updateMatrices.call(this, t3);
      } }), Uc.prototype = Object.assign(Object.create(Ic.prototype), { constructor: Uc, isDirectionalLight: true, copy: function(t3) {
        return Ic.prototype.copy.call(this, t3), this.target = t3.target.clone(), this.shadow = t3.shadow.clone(), this;
      } }), Hc.prototype = Object.assign(Object.create(Ic.prototype), { constructor: Hc, isAmbientLight: true }), Wc.prototype = Object.assign(Object.create(Ic.prototype), { constructor: Wc, isRectAreaLight: true, copy: function(t3) {
        return Ic.prototype.copy.call(this, t3), this.width = t3.width, this.height = t3.height, this;
      }, toJSON: function(t3) {
        var e3 = Ic.prototype.toJSON.call(this, t3);
        return e3.object.width = this.width, e3.object.height = this.height, e3;
      } }), Jc.prototype = Object.assign(Object.create(nc.prototype), { constructor: Jc, load: function(t3, e3, n3, r3) {
        var i3 = this, a2 = new ic(i3.manager);
        a2.setPath(i3.path), a2.load(t3, function(t4) {
          e3(i3.parse(JSON.parse(t4)));
        }, n3, r3);
      }, parse: function(t3) {
        var e3 = this.textures;
        function n3(t4) {
          return void 0 === e3[t4] && console.warn("THREE.MaterialLoader: Undefined texture", t4), e3[t4];
        }
        var r3 = new Nl[t3.type]();
        if (void 0 !== t3.uuid && (r3.uuid = t3.uuid), void 0 !== t3.name && (r3.name = t3.name), void 0 !== t3.color && r3.color.setHex(t3.color), void 0 !== t3.roughness && (r3.roughness = t3.roughness), void 0 !== t3.metalness && (r3.metalness = t3.metalness), void 0 !== t3.sheen && (r3.sheen = new lr().setHex(t3.sheen)), void 0 !== t3.emissive && r3.emissive.setHex(t3.emissive), void 0 !== t3.specular && r3.specular.setHex(t3.specular), void 0 !== t3.shininess && (r3.shininess = t3.shininess), void 0 !== t3.clearcoat && (r3.clearcoat = t3.clearcoat), void 0 !== t3.clearcoatRoughness && (r3.clearcoatRoughness = t3.clearcoatRoughness), void 0 !== t3.vertexColors && (r3.vertexColors = t3.vertexColors), void 0 !== t3.fog && (r3.fog = t3.fog), void 0 !== t3.flatShading && (r3.flatShading = t3.flatShading), void 0 !== t3.blending && (r3.blending = t3.blending), void 0 !== t3.combine && (r3.combine = t3.combine), void 0 !== t3.side && (r3.side = t3.side), void 0 !== t3.opacity && (r3.opacity = t3.opacity), void 0 !== t3.transparent && (r3.transparent = t3.transparent), void 0 !== t3.alphaTest && (r3.alphaTest = t3.alphaTest), void 0 !== t3.depthTest && (r3.depthTest = t3.depthTest), void 0 !== t3.depthWrite && (r3.depthWrite = t3.depthWrite), void 0 !== t3.colorWrite && (r3.colorWrite = t3.colorWrite), void 0 !== t3.stencilWrite && (r3.stencilWrite = t3.stencilWrite), void 0 !== t3.stencilWriteMask && (r3.stencilWriteMask = t3.stencilWriteMask), void 0 !== t3.stencilFunc && (r3.stencilFunc = t3.stencilFunc), void 0 !== t3.stencilRef && (r3.stencilRef = t3.stencilRef), void 0 !== t3.stencilFuncMask && (r3.stencilFuncMask = t3.stencilFuncMask), void 0 !== t3.stencilFail && (r3.stencilFail = t3.stencilFail), void 0 !== t3.stencilZFail && (r3.stencilZFail = t3.stencilZFail), void 0 !== t3.stencilZPass && (r3.stencilZPass = t3.stencilZPass), void 0 !== t3.wireframe && (r3.wireframe = t3.wireframe), void 0 !== t3.wireframeLinewidth && (r3.wireframeLinewidth = t3.wireframeLinewidth), void 0 !== t3.wireframeLinecap && (r3.wireframeLinecap = t3.wireframeLinecap), void 0 !== t3.wireframeLinejoin && (r3.wireframeLinejoin = t3.wireframeLinejoin), void 0 !== t3.rotation && (r3.rotation = t3.rotation), 1 !== t3.linewidth && (r3.linewidth = t3.linewidth), void 0 !== t3.dashSize && (r3.dashSize = t3.dashSize), void 0 !== t3.gapSize && (r3.gapSize = t3.gapSize), void 0 !== t3.scale && (r3.scale = t3.scale), void 0 !== t3.polygonOffset && (r3.polygonOffset = t3.polygonOffset), void 0 !== t3.polygonOffsetFactor && (r3.polygonOffsetFactor = t3.polygonOffsetFactor), void 0 !== t3.polygonOffsetUnits && (r3.polygonOffsetUnits = t3.polygonOffsetUnits), void 0 !== t3.skinning && (r3.skinning = t3.skinning), void 0 !== t3.morphTargets && (r3.morphTargets = t3.morphTargets), void 0 !== t3.morphNormals && (r3.morphNormals = t3.morphNormals), void 0 !== t3.dithering && (r3.dithering = t3.dithering), void 0 !== t3.visible && (r3.visible = t3.visible), void 0 !== t3.toneMapped && (r3.toneMapped = t3.toneMapped), void 0 !== t3.userData && (r3.userData = t3.userData), void 0 !== t3.uniforms) for (var i3 in t3.uniforms) {
          var a2 = t3.uniforms[i3];
          switch (r3.uniforms[i3] = {}, a2.type) {
            case "t":
              r3.uniforms[i3].value = n3(a2.value);
              break;
            case "c":
              r3.uniforms[i3].value = new lr().setHex(a2.value);
              break;
            case "v2":
              r3.uniforms[i3].value = new Le().fromArray(a2.value);
              break;
            case "v3":
              r3.uniforms[i3].value = new He().fromArray(a2.value);
              break;
            case "v4":
              r3.uniforms[i3].value = new Ve().fromArray(a2.value);
              break;
            case "m3":
              r3.uniforms[i3].value = new Ie().fromArray(a2.value);
            case "m4":
              r3.uniforms[i3].value = new $e().fromArray(a2.value);
              break;
            default:
              r3.uniforms[i3].value = a2.value;
          }
        }
        if (void 0 !== t3.defines && (r3.defines = t3.defines), void 0 !== t3.vertexShader && (r3.vertexShader = t3.vertexShader), void 0 !== t3.fragmentShader && (r3.fragmentShader = t3.fragmentShader), void 0 !== t3.extensions) for (var o2 in t3.extensions) r3.extensions[o2] = t3.extensions[o2];
        if (void 0 !== t3.shading && (r3.flatShading = 1 === t3.shading), void 0 !== t3.size && (r3.size = t3.size), void 0 !== t3.sizeAttenuation && (r3.sizeAttenuation = t3.sizeAttenuation), void 0 !== t3.map && (r3.map = n3(t3.map)), void 0 !== t3.matcap && (r3.matcap = n3(t3.matcap)), void 0 !== t3.alphaMap && (r3.alphaMap = n3(t3.alphaMap), r3.transparent = true), void 0 !== t3.bumpMap && (r3.bumpMap = n3(t3.bumpMap)), void 0 !== t3.bumpScale && (r3.bumpScale = t3.bumpScale), void 0 !== t3.normalMap && (r3.normalMap = n3(t3.normalMap)), void 0 !== t3.normalMapType && (r3.normalMapType = t3.normalMapType), void 0 !== t3.normalScale) {
          var s2 = t3.normalScale;
          false === Array.isArray(s2) && (s2 = [s2, s2]), r3.normalScale = new Le().fromArray(s2);
        }
        return void 0 !== t3.displacementMap && (r3.displacementMap = n3(t3.displacementMap)), void 0 !== t3.displacementScale && (r3.displacementScale = t3.displacementScale), void 0 !== t3.displacementBias && (r3.displacementBias = t3.displacementBias), void 0 !== t3.roughnessMap && (r3.roughnessMap = n3(t3.roughnessMap)), void 0 !== t3.metalnessMap && (r3.metalnessMap = n3(t3.metalnessMap)), void 0 !== t3.emissiveMap && (r3.emissiveMap = n3(t3.emissiveMap)), void 0 !== t3.emissiveIntensity && (r3.emissiveIntensity = t3.emissiveIntensity), void 0 !== t3.specularMap && (r3.specularMap = n3(t3.specularMap)), void 0 !== t3.envMap && (r3.envMap = n3(t3.envMap)), void 0 !== t3.envMapIntensity && (r3.envMapIntensity = t3.envMapIntensity), void 0 !== t3.reflectivity && (r3.reflectivity = t3.reflectivity), void 0 !== t3.refractionRatio && (r3.refractionRatio = t3.refractionRatio), void 0 !== t3.lightMap && (r3.lightMap = n3(t3.lightMap)), void 0 !== t3.lightMapIntensity && (r3.lightMapIntensity = t3.lightMapIntensity), void 0 !== t3.aoMap && (r3.aoMap = n3(t3.aoMap)), void 0 !== t3.aoMapIntensity && (r3.aoMapIntensity = t3.aoMapIntensity), void 0 !== t3.gradientMap && (r3.gradientMap = n3(t3.gradientMap)), void 0 !== t3.clearcoatNormalMap && (r3.clearcoatNormalMap = n3(t3.clearcoatNormalMap)), void 0 !== t3.clearcoatNormalScale && (r3.clearcoatNormalScale = new Le().fromArray(t3.clearcoatNormalScale)), r3;
      }, setTextures: function(t3) {
        return this.textures = t3, this;
      } });
      var qc = { decodeText: function(t3) {
        if ("undefined" != typeof TextDecoder) return new TextDecoder().decode(t3);
        for (var e3 = "", n3 = 0, r3 = t3.length; n3 < r3; n3++) e3 += String.fromCharCode(t3[n3]);
        try {
          return decodeURIComponent(escape(e3));
        } catch (t4) {
          return e3;
        }
      }, extractUrlBase: function(t3) {
        var e3 = t3.lastIndexOf("/");
        return -1 === e3 ? "./" : t3.substr(0, e3 + 1);
      } };
      function Xc() {
        jr.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = void 0;
      }
      function Yc(t3, e3, n3, r3) {
        "number" == typeof n3 && (r3 = n3, n3 = false, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")), yr.call(this, t3, e3, n3), this.meshPerAttribute = r3 || 1;
      }
      function Zc(t3) {
        nc.call(this, t3);
      }
      Xc.prototype = Object.assign(Object.create(jr.prototype), { constructor: Xc, isInstancedBufferGeometry: true, copy: function(t3) {
        return jr.prototype.copy.call(this, t3), this.maxInstancedCount = t3.maxInstancedCount, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, toJSON: function() {
        var t3 = jr.prototype.toJSON.call(this);
        return t3.maxInstancedCount = this.maxInstancedCount, t3.isInstancedBufferGeometry = true, t3;
      } }), Yc.prototype = Object.assign(Object.create(yr.prototype), { constructor: Yc, isInstancedBufferAttribute: true, copy: function(t3) {
        return yr.prototype.copy.call(this, t3), this.meshPerAttribute = t3.meshPerAttribute, this;
      }, toJSON: function() {
        var t3 = yr.prototype.toJSON.call(this);
        return t3.meshPerAttribute = this.meshPerAttribute, t3.isInstancedBufferAttribute = true, t3;
      } }), Zc.prototype = Object.assign(Object.create(nc.prototype), { constructor: Zc, load: function(t3, e3, n3, r3) {
        var i3 = this, a2 = new ic(i3.manager);
        a2.setPath(i3.path), a2.load(t3, function(t4) {
          e3(i3.parse(JSON.parse(t4)));
        }, n3, r3);
      }, parse: function(t3) {
        var e3 = new (t3.isInstancedBufferGeometry ? Xc : jr)(), n3 = t3.data.index;
        if (void 0 !== n3) {
          var r3 = new Kc[n3.type](n3.array);
          e3.setIndex(new yr(r3, 1));
        }
        var i3 = t3.data.attributes;
        for (var a2 in i3) {
          var o2 = i3[a2], s2 = (r3 = new Kc[o2.type](o2.array), new (o2.isInstancedBufferAttribute ? Yc : yr)(r3, o2.itemSize, o2.normalized));
          void 0 !== o2.name && (s2.name = o2.name), e3.setAttribute(a2, s2);
        }
        var l2 = t3.data.morphAttributes;
        if (l2) for (var a2 in l2) {
          for (var c2 = l2[a2], u2 = [], h2 = 0, p2 = c2.length; h2 < p2; h2++) o2 = c2[h2], s2 = new yr(r3 = new Kc[o2.type](o2.array), o2.itemSize, o2.normalized), void 0 !== o2.name && (s2.name = o2.name), u2.push(s2);
          e3.morphAttributes[a2] = u2;
        }
        t3.data.morphTargetsRelative && (e3.morphTargetsRelative = true);
        var d2 = t3.data.groups || t3.data.drawcalls || t3.data.offsets;
        if (void 0 !== d2) {
          h2 = 0;
          for (var f2 = d2.length; h2 !== f2; ++h2) {
            var m2 = d2[h2];
            e3.addGroup(m2.start, m2.count, m2.materialIndex);
          }
        }
        var g2 = t3.data.boundingSphere;
        if (void 0 !== g2) {
          var y2 = new He();
          void 0 !== g2.center && y2.fromArray(g2.center), e3.boundingSphere = new kn(y2, g2.radius);
        }
        return t3.name && (e3.name = t3.name), t3.userData && (e3.userData = t3.userData), e3;
      } });
      var Kc = { Int8Array, Uint8Array, Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array };
      function $c(t3) {
        nc.call(this, t3);
      }
      $c.prototype = Object.assign(Object.create(nc.prototype), { constructor: $c, load: function(t3, e3, n3, r3) {
        var i3 = this, a2 = "" === this.path ? qc.extractUrlBase(t3) : this.path;
        this.resourcePath = this.resourcePath || a2;
        var o2 = new ic(i3.manager);
        o2.setPath(this.path), o2.load(t3, function(n4) {
          var a3 = null;
          try {
            a3 = JSON.parse(n4);
          } catch (n5) {
            return void 0 !== r3 && r3(n5), void console.error("THREE:ObjectLoader: Can't parse " + t3 + ".", n5.message);
          }
          var o3 = a3.metadata;
          void 0 !== o3 && void 0 !== o3.type && "geometry" !== o3.type.toLowerCase() ? i3.parse(a3, e3) : console.error("THREE.ObjectLoader: Can't load " + t3);
        }, n3, r3);
      }, parse: function(t3, e3) {
        var n3 = this.parseShape(t3.shapes), r3 = this.parseGeometries(t3.geometries, n3), i3 = this.parseImages(t3.images, function() {
          void 0 !== e3 && e3(s2);
        }), a2 = this.parseTextures(t3.textures, i3), o2 = this.parseMaterials(t3.materials, a2), s2 = this.parseObject(t3.object, r3, o2);
        return t3.animations && (s2.animations = this.parseAnimations(t3.animations)), void 0 !== t3.images && 0 !== t3.images.length || void 0 !== e3 && e3(s2), s2;
      }, parseShape: function(t3) {
        var e3 = {};
        if (void 0 !== t3) for (var n3 = 0, r3 = t3.length; n3 < r3; n3++) {
          var i3 = new Lc().fromJSON(t3[n3]);
          e3[i3.uuid] = i3;
        }
        return e3;
      }, parseGeometries: function(t3, e3) {
        var n3 = {};
        if (void 0 !== t3) for (var r3 = new Zc(), i3 = 0, a2 = t3.length; i3 < a2; i3++) {
          var o2, s2 = t3[i3];
          switch (s2.type) {
            case "PlaneGeometry":
            case "PlaneBufferGeometry":
              o2 = new Sl[s2.type](s2.width, s2.height, s2.widthSegments, s2.heightSegments);
              break;
            case "BoxGeometry":
            case "BoxBufferGeometry":
            case "CubeGeometry":
              o2 = new Sl[s2.type](s2.width, s2.height, s2.depth, s2.widthSegments, s2.heightSegments, s2.depthSegments);
              break;
            case "CircleGeometry":
            case "CircleBufferGeometry":
              o2 = new Sl[s2.type](s2.radius, s2.segments, s2.thetaStart, s2.thetaLength);
              break;
            case "CylinderGeometry":
            case "CylinderBufferGeometry":
              o2 = new Sl[s2.type](s2.radiusTop, s2.radiusBottom, s2.height, s2.radialSegments, s2.heightSegments, s2.openEnded, s2.thetaStart, s2.thetaLength);
              break;
            case "ConeGeometry":
            case "ConeBufferGeometry":
              o2 = new Sl[s2.type](s2.radius, s2.height, s2.radialSegments, s2.heightSegments, s2.openEnded, s2.thetaStart, s2.thetaLength);
              break;
            case "SphereGeometry":
            case "SphereBufferGeometry":
              o2 = new Sl[s2.type](s2.radius, s2.widthSegments, s2.heightSegments, s2.phiStart, s2.phiLength, s2.thetaStart, s2.thetaLength);
              break;
            case "DodecahedronGeometry":
            case "DodecahedronBufferGeometry":
            case "IcosahedronGeometry":
            case "IcosahedronBufferGeometry":
            case "OctahedronGeometry":
            case "OctahedronBufferGeometry":
            case "TetrahedronGeometry":
            case "TetrahedronBufferGeometry":
              o2 = new Sl[s2.type](s2.radius, s2.detail);
              break;
            case "RingGeometry":
            case "RingBufferGeometry":
              o2 = new Sl[s2.type](s2.innerRadius, s2.outerRadius, s2.thetaSegments, s2.phiSegments, s2.thetaStart, s2.thetaLength);
              break;
            case "TorusGeometry":
            case "TorusBufferGeometry":
              o2 = new Sl[s2.type](s2.radius, s2.tube, s2.radialSegments, s2.tubularSegments, s2.arc);
              break;
            case "TorusKnotGeometry":
            case "TorusKnotBufferGeometry":
              o2 = new Sl[s2.type](s2.radius, s2.tube, s2.tubularSegments, s2.radialSegments, s2.p, s2.q);
              break;
            case "TubeGeometry":
            case "TubeBufferGeometry":
              o2 = new Sl[s2.type](new Ac[s2.path.type]().fromJSON(s2.path), s2.tubularSegments, s2.radius, s2.radialSegments, s2.closed);
              break;
            case "LatheGeometry":
            case "LatheBufferGeometry":
              o2 = new Sl[s2.type](s2.points, s2.segments, s2.phiStart, s2.phiLength);
              break;
            case "PolyhedronGeometry":
            case "PolyhedronBufferGeometry":
              o2 = new Sl[s2.type](s2.vertices, s2.indices, s2.radius, s2.details);
              break;
            case "ShapeGeometry":
            case "ShapeBufferGeometry":
              for (var l2 = [], c2 = 0, u2 = s2.shapes.length; c2 < u2; c2++) {
                var h2 = e3[s2.shapes[c2]];
                l2.push(h2);
              }
              o2 = new Sl[s2.type](l2, s2.curveSegments);
              break;
            case "ExtrudeGeometry":
            case "ExtrudeBufferGeometry":
              for (l2 = [], c2 = 0, u2 = s2.shapes.length; c2 < u2; c2++) h2 = e3[s2.shapes[c2]], l2.push(h2);
              var p2 = s2.options.extrudePath;
              void 0 !== p2 && (s2.options.extrudePath = new Ac[p2.type]().fromJSON(p2)), o2 = new Sl[s2.type](l2, s2.options);
              break;
            case "BufferGeometry":
            case "InstancedBufferGeometry":
              o2 = r3.parse(s2);
              break;
            case "Geometry":
              "THREE" in window && "LegacyJSONLoader" in THREE ? o2 = new THREE.LegacyJSONLoader().parse(s2, this.resourcePath).geometry : console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');
              break;
            default:
              console.warn('THREE.ObjectLoader: Unsupported geometry type "' + s2.type + '"');
              continue;
          }
          o2.uuid = s2.uuid, void 0 !== s2.name && (o2.name = s2.name), true === o2.isBufferGeometry && void 0 !== s2.userData && (o2.userData = s2.userData), n3[s2.uuid] = o2;
        }
        return n3;
      }, parseMaterials: function(t3, e3) {
        var n3 = {}, r3 = {};
        if (void 0 !== t3) {
          var i3 = new Jc();
          i3.setTextures(e3);
          for (var a2 = 0, o2 = t3.length; a2 < o2; a2++) {
            var s2 = t3[a2];
            if ("MultiMaterial" === s2.type) {
              for (var l2 = [], c2 = 0; c2 < s2.materials.length; c2++) {
                var u2 = s2.materials[c2];
                void 0 === n3[u2.uuid] && (n3[u2.uuid] = i3.parse(u2)), l2.push(n3[u2.uuid]);
              }
              r3[s2.uuid] = l2;
            } else void 0 === n3[s2.uuid] && (n3[s2.uuid] = i3.parse(s2)), r3[s2.uuid] = n3[s2.uuid];
          }
        }
        return r3;
      }, parseAnimations: function(t3) {
        for (var e3 = [], n3 = 0; n3 < t3.length; n3++) {
          var r3 = t3[n3], i3 = Kl.parse(r3);
          void 0 !== r3.uuid && (i3.uuid = r3.uuid), e3.push(i3);
        }
        return e3;
      }, parseImages: function(t3, e3) {
        var n3 = this, r3 = {};
        function i3(t4) {
          return n3.manager.itemStart(t4), a2.load(t4, function() {
            n3.manager.itemEnd(t4);
          }, void 0, function() {
            n3.manager.itemError(t4), n3.manager.itemEnd(t4);
          });
        }
        if (void 0 !== t3 && 0 < t3.length) {
          var a2 = new lc(new tc(e3));
          a2.setCrossOrigin(this.crossOrigin);
          for (var o2 = 0, s2 = t3.length; o2 < s2; o2++) {
            var l2 = t3[o2], c2 = l2.url;
            if (Array.isArray(c2)) {
              r3[l2.uuid] = [];
              for (var u2 = 0, h2 = c2.length; u2 < h2; u2++) {
                var p2 = c2[u2], d2 = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(p2) ? p2 : n3.resourcePath + p2;
                r3[l2.uuid].push(i3(d2));
              }
            } else d2 = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(l2.url) ? l2.url : n3.resourcePath + l2.url, r3[l2.uuid] = i3(d2);
          }
        }
        return r3;
      }, parseTextures: function(t3, e3) {
        function n3(t4, e4) {
          return "number" == typeof t4 ? t4 : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", t4), e4[t4]);
        }
        var r3 = {};
        if (void 0 !== t3) for (var i3 = 0, a2 = t3.length; i3 < a2; i3++) {
          var o2, s2 = t3[i3];
          void 0 === s2.image && console.warn('THREE.ObjectLoader: No "image" specified for', s2.uuid), void 0 === e3[s2.image] && console.warn("THREE.ObjectLoader: Undefined image", s2.image), (o2 = new (Array.isArray(e3[s2.image]) ? Ri : Ne)(e3[s2.image])).needsUpdate = true, o2.uuid = s2.uuid, void 0 !== s2.name && (o2.name = s2.name), void 0 !== s2.mapping && (o2.mapping = n3(s2.mapping, tu)), void 0 !== s2.offset && o2.offset.fromArray(s2.offset), void 0 !== s2.repeat && o2.repeat.fromArray(s2.repeat), void 0 !== s2.center && o2.center.fromArray(s2.center), void 0 !== s2.rotation && (o2.rotation = s2.rotation), void 0 !== s2.wrap && (o2.wrapS = n3(s2.wrap[0], eu), o2.wrapT = n3(s2.wrap[1], eu)), void 0 !== s2.format && (o2.format = s2.format), void 0 !== s2.type && (o2.type = s2.type), void 0 !== s2.encoding && (o2.encoding = s2.encoding), void 0 !== s2.minFilter && (o2.minFilter = n3(s2.minFilter, nu)), void 0 !== s2.magFilter && (o2.magFilter = n3(s2.magFilter, nu)), void 0 !== s2.anisotropy && (o2.anisotropy = s2.anisotropy), void 0 !== s2.flipY && (o2.flipY = s2.flipY), void 0 !== s2.premultiplyAlpha && (o2.premultiplyAlpha = s2.premultiplyAlpha), void 0 !== s2.unpackAlignment && (o2.unpackAlignment = s2.unpackAlignment), r3[s2.uuid] = o2;
        }
        return r3;
      }, parseObject: function(t3, e3, n3) {
        var r3;
        function i3(t4) {
          return void 0 === e3[t4] && console.warn("THREE.ObjectLoader: Undefined geometry", t4), e3[t4];
        }
        function a2(t4) {
          if (void 0 !== t4) {
            if (Array.isArray(t4)) {
              for (var e4 = [], r4 = 0, i4 = t4.length; r4 < i4; r4++) {
                var a3 = t4[r4];
                void 0 === n3[a3] && console.warn("THREE.ObjectLoader: Undefined material", a3), e4.push(n3[a3]);
              }
              return e4;
            }
            return void 0 === n3[t4] && console.warn("THREE.ObjectLoader: Undefined material", t4), n3[t4];
          }
        }
        switch (t3.type) {
          case "Scene":
            r3 = new vn(), void 0 !== t3.background && Number.isInteger(t3.background) && (r3.background = new lr(t3.background)), void 0 !== t3.fog && ("Fog" === t3.fog.type ? r3.fog = new mo(t3.fog.color, t3.fog.near, t3.fog.far) : "FogExp2" === t3.fog.type && (r3.fog = new fo(t3.fog.color, t3.fog.density)));
            break;
          case "PerspectiveCamera":
            r3 = new yi(t3.fov, t3.aspect, t3.near, t3.far), void 0 !== t3.focus && (r3.focus = t3.focus), void 0 !== t3.zoom && (r3.zoom = t3.zoom), void 0 !== t3.filmGauge && (r3.filmGauge = t3.filmGauge), void 0 !== t3.filmOffset && (r3.filmOffset = t3.filmOffset), void 0 !== t3.view && (r3.view = Object.assign({}, t3.view));
            break;
          case "OrthographicCamera":
            r3 = new Gc(t3.left, t3.right, t3.top, t3.bottom, t3.near, t3.far), void 0 !== t3.zoom && (r3.zoom = t3.zoom), void 0 !== t3.view && (r3.view = Object.assign({}, t3.view));
            break;
          case "AmbientLight":
            r3 = new Hc(t3.color, t3.intensity);
            break;
          case "DirectionalLight":
            r3 = new Uc(t3.color, t3.intensity);
            break;
          case "PointLight":
            r3 = new Bc(t3.color, t3.intensity, t3.distance, t3.decay);
            break;
          case "RectAreaLight":
            r3 = new Wc(t3.color, t3.intensity, t3.width, t3.height);
            break;
          case "SpotLight":
            r3 = new Vc(t3.color, t3.intensity, t3.distance, t3.angle, t3.penumbra, t3.decay);
            break;
          case "HemisphereLight":
            r3 = new kc(t3.color, t3.groundColor, t3.intensity);
            break;
          case "SkinnedMesh":
            console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
          case "Mesh":
            var o2 = i3(t3.geometry), s2 = a2(t3.material);
            r3 = new (o2.bones && 0 < o2.bones.length ? Vo : ti)(o2, s2);
            break;
          case "InstancedMesh":
            o2 = i3(t3.geometry), s2 = a2(t3.material);
            var l2 = t3.count, c2 = t3.instanceMatrix;
            (r3 = new qo(o2, s2, l2)).instanceMatrix = new yr(new Float32Array(c2.array), 16);
            break;
          case "LOD":
            r3 = new No();
            break;
          case "Line":
            r3 = new ts(i3(t3.geometry), a2(t3.material), t3.mode);
            break;
          case "LineLoop":
            r3 = new is(i3(t3.geometry), a2(t3.material));
            break;
          case "LineSegments":
            r3 = new rs(i3(t3.geometry), a2(t3.material));
            break;
          case "PointCloud":
          case "Points":
            r3 = new us(i3(t3.geometry), a2(t3.material));
            break;
          case "Sprite":
            r3 = new Lo(a2(t3.material));
            break;
          case "Group":
            r3 = new uo();
            break;
          default:
            r3 = new yn();
        }
        if (r3.uuid = t3.uuid, void 0 !== t3.name && (r3.name = t3.name), void 0 !== t3.matrix ? (r3.matrix.fromArray(t3.matrix), void 0 !== t3.matrixAutoUpdate && (r3.matrixAutoUpdate = t3.matrixAutoUpdate), r3.matrixAutoUpdate && r3.matrix.decompose(r3.position, r3.quaternion, r3.scale)) : (void 0 !== t3.position && r3.position.fromArray(t3.position), void 0 !== t3.rotation && r3.rotation.fromArray(t3.rotation), void 0 !== t3.quaternion && r3.quaternion.fromArray(t3.quaternion), void 0 !== t3.scale && r3.scale.fromArray(t3.scale)), void 0 !== t3.castShadow && (r3.castShadow = t3.castShadow), void 0 !== t3.receiveShadow && (r3.receiveShadow = t3.receiveShadow), t3.shadow && (void 0 !== t3.shadow.bias && (r3.shadow.bias = t3.shadow.bias), void 0 !== t3.shadow.radius && (r3.shadow.radius = t3.shadow.radius), void 0 !== t3.shadow.mapSize && r3.shadow.mapSize.fromArray(t3.shadow.mapSize), void 0 !== t3.shadow.camera && (r3.shadow.camera = this.parseObject(t3.shadow.camera))), void 0 !== t3.visible && (r3.visible = t3.visible), void 0 !== t3.frustumCulled && (r3.frustumCulled = t3.frustumCulled), void 0 !== t3.renderOrder && (r3.renderOrder = t3.renderOrder), void 0 !== t3.userData && (r3.userData = t3.userData), void 0 !== t3.layers && (r3.layers.mask = t3.layers), void 0 !== t3.children) for (var u2 = t3.children, h2 = 0; h2 < u2.length; h2++) r3.add(this.parseObject(u2[h2], e3, n3));
        if ("LOD" === t3.type) {
          void 0 !== t3.autoUpdate && (r3.autoUpdate = t3.autoUpdate);
          for (var p2 = t3.levels, d2 = 0; d2 < p2.length; d2++) {
            var f2 = p2[d2], m2 = r3.getObjectByProperty("uuid", f2.object);
            void 0 !== m2 && r3.addLevel(m2, f2.distance);
          }
        }
        return r3;
      } });
      var Qc, tu = { UVMapping: 300, CubeReflectionMapping: Z, CubeRefractionMapping: K, EquirectangularReflectionMapping: $2, EquirectangularRefractionMapping: Q, SphericalReflectionMapping: tt, CubeUVReflectionMapping: et, CubeUVRefractionMapping: nt }, eu = { RepeatWrapping: rt, ClampToEdgeWrapping: it, MirroredRepeatWrapping: at }, nu = { NearestFilter: ot, NearestMipmapNearestFilter: st, NearestMipmapLinearFilter: lt, LinearFilter: ct, LinearMipmapNearestFilter: ut, LinearMipmapLinearFilter: ht };
      function ru(t3) {
        "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), nc.call(this, t3), this.options = void 0;
      }
      function iu() {
        this.type = "ShapePath", this.color = new lr(), this.subPaths = [], this.currentPath = null;
      }
      function au(t3) {
        this.type = "Font", this.data = t3;
      }
      function ou(t3, e3, n3, r3, i3) {
        var a2 = i3.glyphs[t3] || i3.glyphs["?"];
        if (a2) {
          var o2, s2, l2, c2, u2, h2, p2, d2, f2 = new iu();
          if (a2.o) for (var m2 = a2._cachedOutline || (a2._cachedOutline = a2.o.split(" ")), g2 = 0, y2 = m2.length; g2 < y2; ) switch (m2[g2++]) {
            case "m":
              o2 = m2[g2++] * e3 + n3, s2 = m2[g2++] * e3 + r3, f2.moveTo(o2, s2);
              break;
            case "l":
              o2 = m2[g2++] * e3 + n3, s2 = m2[g2++] * e3 + r3, f2.lineTo(o2, s2);
              break;
            case "q":
              l2 = m2[g2++] * e3 + n3, c2 = m2[g2++] * e3 + r3, u2 = m2[g2++] * e3 + n3, h2 = m2[g2++] * e3 + r3, f2.quadraticCurveTo(u2, h2, l2, c2);
              break;
            case "b":
              l2 = m2[g2++] * e3 + n3, c2 = m2[g2++] * e3 + r3, u2 = m2[g2++] * e3 + n3, h2 = m2[g2++] * e3 + r3, p2 = m2[g2++] * e3 + n3, d2 = m2[g2++] * e3 + r3, f2.bezierCurveTo(u2, h2, p2, d2, l2, c2);
          }
          return { offsetX: a2.ha * e3, path: f2 };
        }
        console.error('THREE.Font: character "' + t3 + '" does not exists in font family ' + i3.familyName + ".");
      }
      function su(t3) {
        nc.call(this, t3);
      }
      ru.prototype = Object.assign(Object.create(nc.prototype), { constructor: ru, setOptions: function(t3) {
        return this.options = t3, this;
      }, load: function(t3, e3, n3, r3) {
        void 0 === t3 && (t3 = ""), void 0 !== this.path && (t3 = this.path + t3), t3 = this.manager.resolveURL(t3);
        var i3 = this, a2 = Ql.get(t3);
        if (void 0 !== a2) return i3.manager.itemStart(t3), setTimeout(function() {
          e3 && e3(a2), i3.manager.itemEnd(t3);
        }, 0), a2;
        fetch(t3).then(function(t4) {
          return t4.blob();
        }).then(function(t4) {
          return void 0 === i3.options ? createImageBitmap(t4) : createImageBitmap(t4, i3.options);
        }).then(function(n4) {
          Ql.add(t3, n4), e3 && e3(n4), i3.manager.itemEnd(t3);
        }).catch(function(e4) {
          r3 && r3(e4), i3.manager.itemError(t3), i3.manager.itemEnd(t3);
        }), i3.manager.itemStart(t3);
      } }), Object.assign(iu.prototype, { moveTo: function(t3, e3) {
        return this.currentPath = new Rc(), this.subPaths.push(this.currentPath), this.currentPath.moveTo(t3, e3), this;
      }, lineTo: function(t3, e3) {
        return this.currentPath.lineTo(t3, e3), this;
      }, quadraticCurveTo: function(t3, e3, n3, r3) {
        return this.currentPath.quadraticCurveTo(t3, e3, n3, r3), this;
      }, bezierCurveTo: function(t3, e3, n3, r3, i3, a2) {
        return this.currentPath.bezierCurveTo(t3, e3, n3, r3, i3, a2), this;
      }, splineThru: function(t3) {
        return this.currentPath.splineThru(t3), this;
      }, toShapes: function(t3, e3) {
        function n3(t4) {
          for (var e4 = [], n4 = 0, r4 = t4.length; n4 < r4; n4++) {
            var i4 = t4[n4], a3 = new Lc();
            a3.curves = i4.curves, e4.push(a3);
          }
          return e4;
        }
        function r3(t4, e4) {
          for (var n4 = e4.length, r4 = false, i4 = n4 - 1, a3 = 0; a3 < n4; i4 = a3++) {
            var o3 = e4[i4], s3 = e4[a3], l3 = s3.x - o3.x, c3 = s3.y - o3.y;
            if (Math.abs(c3) > Number.EPSILON) {
              if (c3 < 0 && (o3 = e4[a3], l3 = -l3, s3 = e4[i4], c3 = -c3), t4.y < o3.y || t4.y > s3.y) continue;
              if (t4.y === o3.y) {
                if (t4.x === o3.x) return 1;
              } else {
                var u3 = c3 * (t4.x - o3.x) - l3 * (t4.y - o3.y);
                if (0 == u3) return 1;
                if (u3 < 0) continue;
                r4 = !r4;
              }
            } else {
              if (t4.y !== o3.y) continue;
              if (s3.x <= t4.x && t4.x <= o3.x || o3.x <= t4.x && t4.x <= s3.x) return 1;
            }
          }
          return r4;
        }
        var i3 = el.isClockWise, a2 = this.subPaths;
        if (0 === a2.length) return [];
        if (true === e3) return n3(a2);
        var o2, s2, l2, c2 = [];
        if (1 === a2.length) return s2 = a2[0], (l2 = new Lc()).curves = s2.curves, c2.push(l2), c2;
        var u2 = !i3(a2[0].getPoints());
        u2 = t3 ? !u2 : u2;
        var h2, p2, d2 = [], f2 = [], m2 = [], g2 = 0;
        f2[g2] = void 0, m2[g2] = [];
        for (var y2 = 0, v2 = a2.length; y2 < v2; y2++) o2 = i3(h2 = (s2 = a2[y2]).getPoints()), (o2 = t3 ? !o2 : o2) ? (!u2 && f2[g2] && g2++, f2[g2] = { s: new Lc(), p: h2 }, f2[g2].s.curves = s2.curves, u2 && g2++, m2[g2] = []) : m2[g2].push({ h: s2, p: h2[0] });
        if (!f2[0]) return n3(a2);
        if (1 < f2.length) {
          for (var x2 = false, w2 = [], b2 = 0, M2 = f2.length; b2 < M2; b2++) d2[b2] = [];
          for (b2 = 0, M2 = f2.length; b2 < M2; b2++) for (var _2 = m2[b2], T2 = 0; T2 < _2.length; T2++) {
            for (var C2 = _2[T2], S2 = true, D2 = 0; D2 < f2.length; D2++) r3(C2.p, f2[D2].p) && (b2 !== D2 && w2.push({ froms: b2, tos: D2, hole: T2 }), S2 ? (S2 = false, d2[D2].push(C2)) : x2 = true);
            S2 && d2[b2].push(C2);
          }
          0 < w2.length && (x2 || (m2 = d2));
        }
        y2 = 0;
        for (var E2 = f2.length; y2 < E2; y2++) {
          l2 = f2[y2].s, c2.push(l2);
          for (var O2 = 0, A2 = (p2 = m2[y2]).length; O2 < A2; O2++) l2.holes.push(p2[O2].h);
        }
        return c2;
      } }), Object.assign(au.prototype, { isFont: true, generateShapes: function(t3, e3) {
        void 0 === e3 && (e3 = 100);
        for (var n3 = [], r3 = function(t4, e4, n4) {
          for (var r4 = Array.from ? Array.from(t4) : String(t4).split(""), i4 = e4 / n4.resolution, a3 = (n4.boundingBox.yMax - n4.boundingBox.yMin + n4.underlineThickness) * i4, o2 = [], s2 = 0, l2 = 0, c2 = 0; c2 < r4.length; c2++) {
            var u2 = r4[c2];
            if ("\n" === u2) s2 = 0, l2 -= a3;
            else {
              var h2 = ou(u2, i4, s2, l2, n4);
              s2 += h2.offsetX, o2.push(h2.path);
            }
          }
          return o2;
        }(t3, e3, this.data), i3 = 0, a2 = r3.length; i3 < a2; i3++) Array.prototype.push.apply(n3, r3[i3].toShapes());
        return n3;
      } }), su.prototype = Object.assign(Object.create(nc.prototype), { constructor: su, load: function(t3, e3, n3, r3) {
        var i3 = this, a2 = new ic(this.manager);
        a2.setPath(this.path), a2.load(t3, function(t4) {
          var n4;
          try {
            n4 = JSON.parse(t4);
          } catch (r5) {
            console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), n4 = JSON.parse(t4.substring(65, t4.length - 2));
          }
          var r4 = i3.parse(n4);
          e3 && e3(r4);
        }, n3, r3);
      }, parse: function(t3) {
        return new au(t3);
      } });
      var lu = { getContext: function() {
        return void 0 === Qc && (Qc = new (window.AudioContext || window.webkitAudioContext)()), Qc;
      }, setContext: function(t3) {
        Qc = t3;
      } };
      function cu(t3) {
        nc.call(this, t3);
      }
      function uu() {
        this.coefficients = [];
        for (var t3 = 0; t3 < 9; t3++) this.coefficients.push(new He());
      }
      function hu(t3, e3) {
        Ic.call(this, void 0, e3), this.sh = void 0 !== t3 ? t3 : new uu();
      }
      function pu(t3, e3, n3) {
        hu.call(this, void 0, n3);
        var r3 = new lr().set(t3), i3 = new lr().set(e3), a2 = new He(r3.r, r3.g, r3.b), o2 = new He(i3.r, i3.g, i3.b), s2 = Math.sqrt(Math.PI), l2 = s2 * Math.sqrt(0.75);
        this.sh.coefficients[0].copy(a2).add(o2).multiplyScalar(s2), this.sh.coefficients[1].copy(a2).sub(o2).multiplyScalar(l2);
      }
      function du(t3, e3) {
        hu.call(this, void 0, e3);
        var n3 = new lr().set(t3);
        this.sh.coefficients[0].set(n3.r, n3.g, n3.b).multiplyScalar(2 * Math.sqrt(Math.PI));
      }
      cu.prototype = Object.assign(Object.create(nc.prototype), { constructor: cu, load: function(t3, e3, n3, r3) {
        var i3 = new ic(this.manager);
        i3.setResponseType("arraybuffer"), i3.setPath(this.path), i3.load(t3, function(t4) {
          var n4 = t4.slice(0);
          lu.getContext().decodeAudioData(n4, function(t5) {
            e3(t5);
          });
        }, n3, r3);
      } }), Object.assign(uu.prototype, { isSphericalHarmonics3: true, set: function(t3) {
        for (var e3 = 0; e3 < 9; e3++) this.coefficients[e3].copy(t3[e3]);
        return this;
      }, zero: function() {
        for (var t3 = 0; t3 < 9; t3++) this.coefficients[t3].set(0, 0, 0);
        return this;
      }, getAt: function(t3, e3) {
        var n3 = t3.x, r3 = t3.y, i3 = t3.z, a2 = this.coefficients;
        return e3.copy(a2[0]).multiplyScalar(0.282095), e3.addScale(a2[1], 0.488603 * r3), e3.addScale(a2[2], 0.488603 * i3), e3.addScale(a2[3], 0.488603 * n3), e3.addScale(a2[4], n3 * r3 * 1.092548), e3.addScale(a2[5], r3 * i3 * 1.092548), e3.addScale(a2[6], 0.315392 * (3 * i3 * i3 - 1)), e3.addScale(a2[7], n3 * i3 * 1.092548), e3.addScale(a2[8], 0.546274 * (n3 * n3 - r3 * r3)), e3;
      }, getIrradianceAt: function(t3, e3) {
        var n3 = t3.x, r3 = t3.y, i3 = t3.z, a2 = this.coefficients;
        return e3.copy(a2[0]).multiplyScalar(0.886227), e3.addScale(a2[1], 1.023328 * r3), e3.addScale(a2[2], 1.023328 * i3), e3.addScale(a2[3], 1.023328 * n3), e3.addScale(a2[4], 0.858086 * n3 * r3), e3.addScale(a2[5], 0.858086 * r3 * i3), e3.addScale(a2[6], 0.743125 * i3 * i3 - 0.247708), e3.addScale(a2[7], 0.858086 * n3 * i3), e3.addScale(a2[8], 0.429043 * (n3 * n3 - r3 * r3)), e3;
      }, add: function(t3) {
        for (var e3 = 0; e3 < 9; e3++) this.coefficients[e3].add(t3.coefficients[e3]);
        return this;
      }, scale: function(t3) {
        for (var e3 = 0; e3 < 9; e3++) this.coefficients[e3].multiplyScalar(t3);
        return this;
      }, lerp: function(t3, e3) {
        for (var n3 = 0; n3 < 9; n3++) this.coefficients[n3].lerp(t3.coefficients[n3], e3);
        return this;
      }, equals: function(t3) {
        for (var e3 = 0; e3 < 9; e3++) if (!this.coefficients[e3].equals(t3.coefficients[e3])) return false;
        return true;
      }, copy: function(t3) {
        return this.set(t3.coefficients);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, fromArray: function(t3, e3) {
        void 0 === e3 && (e3 = 0);
        for (var n3 = this.coefficients, r3 = 0; r3 < 9; r3++) n3[r3].fromArray(t3, e3 + 3 * r3);
        return this;
      }, toArray: function(t3, e3) {
        void 0 === t3 && (t3 = []), void 0 === e3 && (e3 = 0);
        for (var n3 = this.coefficients, r3 = 0; r3 < 9; r3++) n3[r3].toArray(t3, e3 + 3 * r3);
        return t3;
      } }), Object.assign(uu, { getBasisAt: function(t3, e3) {
        var n3 = t3.x, r3 = t3.y, i3 = t3.z;
        e3[0] = 0.282095, e3[1] = 0.488603 * r3, e3[2] = 0.488603 * i3, e3[3] = 0.488603 * n3, e3[4] = 1.092548 * n3 * r3, e3[5] = 1.092548 * r3 * i3, e3[6] = 0.315392 * (3 * i3 * i3 - 1), e3[7] = 1.092548 * n3 * i3, e3[8] = 0.546274 * (n3 * n3 - r3 * r3);
      } }), hu.prototype = Object.assign(Object.create(Ic.prototype), { constructor: hu, isLightProbe: true, copy: function(t3) {
        return Ic.prototype.copy.call(this, t3), this.sh.copy(t3.sh), this.intensity = t3.intensity, this;
      }, toJSON: function(t3) {
        return Ic.prototype.toJSON.call(this, t3);
      } }), pu.prototype = Object.assign(Object.create(hu.prototype), { constructor: pu, isHemisphereLightProbe: true, copy: function(t3) {
        return hu.prototype.copy.call(this, t3), this;
      }, toJSON: function(t3) {
        return hu.prototype.toJSON.call(this, t3);
      } }), du.prototype = Object.assign(Object.create(hu.prototype), { constructor: du, isAmbientLightProbe: true, copy: function(t3) {
        return hu.prototype.copy.call(this, t3), this;
      }, toJSON: function(t3) {
        return hu.prototype.toJSON.call(this, t3);
      } });
      var fu = new $e(), mu = new $e();
      function gu() {
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = 0.064, this.cameraL = new yi(), this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = false, this.cameraR = new yi(), this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = false, this._cache = { focus: null, fov: null, aspect: null, near: null, far: null, zoom: null, eyeSep: null };
      }
      function yu(t3) {
        this.autoStart = void 0 === t3 || t3, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = false;
      }
      Object.assign(gu.prototype, { update: function(t3) {
        var e3 = this._cache;
        if (e3.focus !== t3.focus || e3.fov !== t3.fov || e3.aspect !== t3.aspect * this.aspect || e3.near !== t3.near || e3.far !== t3.far || e3.zoom !== t3.zoom || e3.eyeSep !== this.eyeSep) {
          e3.focus = t3.focus, e3.fov = t3.fov, e3.aspect = t3.aspect * this.aspect, e3.near = t3.near, e3.far = t3.far, e3.zoom = t3.zoom, e3.eyeSep = this.eyeSep;
          var n3, r3, i3 = t3.projectionMatrix.clone(), a2 = e3.eyeSep / 2, o2 = a2 * e3.near / e3.focus, s2 = e3.near * Math.tan(Re.DEG2RAD * e3.fov * 0.5) / e3.zoom;
          mu.elements[12] = -a2, fu.elements[12] = a2, n3 = -s2 * e3.aspect + o2, r3 = s2 * e3.aspect + o2, i3.elements[0] = 2 * e3.near / (r3 - n3), i3.elements[8] = (r3 + n3) / (r3 - n3), this.cameraL.projectionMatrix.copy(i3), n3 = -s2 * e3.aspect - o2, r3 = s2 * e3.aspect - o2, i3.elements[0] = 2 * e3.near / (r3 - n3), i3.elements[8] = (r3 + n3) / (r3 - n3), this.cameraR.projectionMatrix.copy(i3);
        }
        this.cameraL.matrixWorld.copy(t3.matrixWorld).multiply(mu), this.cameraR.matrixWorld.copy(t3.matrixWorld).multiply(fu);
      } }), Object.assign(yu.prototype, { start: function() {
        this.startTime = ("undefined" == typeof performance ? Date : performance).now(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = true;
      }, stop: function() {
        this.getElapsedTime(), this.running = false, this.autoStart = false;
      }, getElapsedTime: function() {
        return this.getDelta(), this.elapsedTime;
      }, getDelta: function() {
        var t3 = 0;
        if (this.autoStart && !this.running) return this.start(), 0;
        if (this.running) {
          var e3 = ("undefined" == typeof performance ? Date : performance).now();
          t3 = (e3 - this.oldTime) / 1e3, this.oldTime = e3, this.elapsedTime += t3;
        }
        return t3;
      } });
      var vu = new He(), xu = new Ge(), wu = new He(), bu = new He();
      function Mu() {
        yn.call(this), this.type = "AudioListener", this.context = lu.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new yu();
      }
      function _u(t3) {
        yn.call(this), this.type = "Audio", this.listener = t3, this.context = t3.context, this.gain = this.context.createGain(), this.gain.connect(t3.getInput()), this.autoplay = false, this.buffer = null, this.detune = 0, this.loop = false, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = false, this.hasPlaybackControl = true, this.sourceType = "empty", this._startedAt = 0, this._pausedAt = 0, this.filters = [];
      }
      Mu.prototype = Object.assign(Object.create(yn.prototype), { constructor: Mu, getInput: function() {
        return this.gain;
      }, removeFilter: function() {
        return null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
      }, getFilter: function() {
        return this.filter;
      }, setFilter: function(t3) {
        return null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = t3, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
      }, getMasterVolume: function() {
        return this.gain.gain.value;
      }, setMasterVolume: function(t3) {
        return this.gain.gain.setTargetAtTime(t3, this.context.currentTime, 0.01), this;
      }, updateMatrixWorld: function(t3) {
        yn.prototype.updateMatrixWorld.call(this, t3);
        var e3 = this.context.listener, n3 = this.up;
        if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(vu, xu, wu), bu.set(0, 0, -1).applyQuaternion(xu), e3.positionX) {
          var r3 = this.context.currentTime + this.timeDelta;
          e3.positionX.linearRampToValueAtTime(vu.x, r3), e3.positionY.linearRampToValueAtTime(vu.y, r3), e3.positionZ.linearRampToValueAtTime(vu.z, r3), e3.forwardX.linearRampToValueAtTime(bu.x, r3), e3.forwardY.linearRampToValueAtTime(bu.y, r3), e3.forwardZ.linearRampToValueAtTime(bu.z, r3), e3.upX.linearRampToValueAtTime(n3.x, r3), e3.upY.linearRampToValueAtTime(n3.y, r3), e3.upZ.linearRampToValueAtTime(n3.z, r3);
        } else e3.setPosition(vu.x, vu.y, vu.z), e3.setOrientation(bu.x, bu.y, bu.z, n3.x, n3.y, n3.z);
      } }), _u.prototype = Object.assign(Object.create(yn.prototype), { constructor: _u, getOutput: function() {
        return this.gain;
      }, setNodeSource: function(t3) {
        return this.hasPlaybackControl = false, this.sourceType = "audioNode", this.source = t3, this.connect(), this;
      }, setMediaElementSource: function(t3) {
        return this.hasPlaybackControl = false, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(t3), this.connect(), this;
      }, setMediaStreamSource: function(t3) {
        return this.hasPlaybackControl = false, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(t3), this.connect(), this;
      }, setBuffer: function(t3) {
        return this.buffer = t3, this.sourceType = "buffer", this.autoplay && this.play(), this;
      }, play: function(t3) {
        if (void 0 === t3 && (t3 = 0), true !== this.isPlaying) {
          if (false !== this.hasPlaybackControl) {
            this._startedAt = this.context.currentTime + t3;
            var e3 = this.context.createBufferSource();
            return e3.buffer = this.buffer, e3.loop = this.loop, e3.loopStart = this.loopStart, e3.loopEnd = this.loopEnd, e3.onended = this.onEnded.bind(this), e3.start(this._startedAt, this._pausedAt + this.offset, this.duration), this.isPlaying = true, this.source = e3, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
          }
          console.warn("THREE.Audio: this Audio has no playback control.");
        } else console.warn("THREE.Audio: Audio is already playing.");
      }, pause: function() {
        if (false !== this.hasPlaybackControl) return true === this.isPlaying && (this._pausedAt = (this.context.currentTime - this._startedAt) * this.playbackRate, this.source.stop(), this.source.onended = null, this.isPlaying = false), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, stop: function() {
        if (false !== this.hasPlaybackControl) return this._pausedAt = 0, this.source.stop(), this.source.onended = null, this.isPlaying = false, this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, connect: function() {
        if (0 < this.filters.length) {
          this.source.connect(this.filters[0]);
          for (var t3 = 1, e3 = this.filters.length; t3 < e3; t3++) this.filters[t3 - 1].connect(this.filters[t3]);
          this.filters[this.filters.length - 1].connect(this.getOutput());
        } else this.source.connect(this.getOutput());
        return this;
      }, disconnect: function() {
        if (0 < this.filters.length) {
          this.source.disconnect(this.filters[0]);
          for (var t3 = 1, e3 = this.filters.length; t3 < e3; t3++) this.filters[t3 - 1].disconnect(this.filters[t3]);
          this.filters[this.filters.length - 1].disconnect(this.getOutput());
        } else this.source.disconnect(this.getOutput());
        return this;
      }, getFilters: function() {
        return this.filters;
      }, setFilters: function(t3) {
        return t3 = t3 || [], true === this.isPlaying ? (this.disconnect(), this.filters = t3, this.connect()) : this.filters = t3, this;
      }, setDetune: function(t3) {
        if (this.detune = t3, void 0 !== this.source.detune) return true === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01), this;
      }, getDetune: function() {
        return this.detune;
      }, getFilter: function() {
        return this.getFilters()[0];
      }, setFilter: function(t3) {
        return this.setFilters(t3 ? [t3] : []);
      }, setPlaybackRate: function(t3) {
        if (false !== this.hasPlaybackControl) return this.playbackRate = t3, true === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, getPlaybackRate: function() {
        return this.playbackRate;
      }, onEnded: function() {
        this.isPlaying = false;
      }, getLoop: function() {
        return false === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."), false) : this.loop;
      }, setLoop: function(t3) {
        if (false !== this.hasPlaybackControl) return this.loop = t3, true === this.isPlaying && (this.source.loop = this.loop), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, setLoopStart: function(t3) {
        return this.loopStart = t3, this;
      }, setLoopEnd: function(t3) {
        return this.loopEnd = t3, this;
      }, getVolume: function() {
        return this.gain.gain.value;
      }, setVolume: function(t3) {
        return this.gain.gain.setTargetAtTime(t3, this.context.currentTime, 0.01), this;
      } });
      var Tu = new He(), Cu = new Ge(), Su = new He(), Du = new He();
      function Eu(t3) {
        _u.call(this, t3), this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
      }
      function Ou(t3, e3) {
        this.analyser = t3.context.createAnalyser(), this.analyser.fftSize = void 0 !== e3 ? e3 : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), t3.getOutput().connect(this.analyser);
      }
      function Au(t3, e3, n3) {
        this.binding = t3, this.valueSize = n3;
        var r3, i3 = Float64Array;
        switch (e3) {
          case "quaternion":
            r3 = this._slerp;
            break;
          case "string":
          case "bool":
            i3 = Array, r3 = this._select;
            break;
          default:
            r3 = this._lerp;
        }
        this.buffer = new i3(4 * n3), this._mixBufferRegion = r3, this.cumulativeWeight = 0, this.useCount = 0, this.referenceCount = 0;
      }
      Eu.prototype = Object.assign(Object.create(_u.prototype), { constructor: Eu, getOutput: function() {
        return this.panner;
      }, getRefDistance: function() {
        return this.panner.refDistance;
      }, setRefDistance: function(t3) {
        return this.panner.refDistance = t3, this;
      }, getRolloffFactor: function() {
        return this.panner.rolloffFactor;
      }, setRolloffFactor: function(t3) {
        return this.panner.rolloffFactor = t3, this;
      }, getDistanceModel: function() {
        return this.panner.distanceModel;
      }, setDistanceModel: function(t3) {
        return this.panner.distanceModel = t3, this;
      }, getMaxDistance: function() {
        return this.panner.maxDistance;
      }, setMaxDistance: function(t3) {
        return this.panner.maxDistance = t3, this;
      }, setDirectionalCone: function(t3, e3, n3) {
        return this.panner.coneInnerAngle = t3, this.panner.coneOuterAngle = e3, this.panner.coneOuterGain = n3, this;
      }, updateMatrixWorld: function(t3) {
        if (yn.prototype.updateMatrixWorld.call(this, t3), true !== this.hasPlaybackControl || false !== this.isPlaying) {
          this.matrixWorld.decompose(Tu, Cu, Su), Du.set(0, 0, 1).applyQuaternion(Cu);
          var e3 = this.panner;
          if (e3.positionX) {
            var n3 = this.context.currentTime + this.listener.timeDelta;
            e3.positionX.linearRampToValueAtTime(Tu.x, n3), e3.positionY.linearRampToValueAtTime(Tu.y, n3), e3.positionZ.linearRampToValueAtTime(Tu.z, n3), e3.orientationX.linearRampToValueAtTime(Du.x, n3), e3.orientationY.linearRampToValueAtTime(Du.y, n3), e3.orientationZ.linearRampToValueAtTime(Du.z, n3);
          } else e3.setPosition(Tu.x, Tu.y, Tu.z), e3.setOrientation(Du.x, Du.y, Du.z);
        }
      } }), Object.assign(Ou.prototype, { getFrequencyData: function() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
      }, getAverageFrequency: function() {
        for (var t3 = 0, e3 = this.getFrequencyData(), n3 = 0; n3 < e3.length; n3++) t3 += e3[n3];
        return t3 / e3.length;
      } }), Object.assign(Au.prototype, { accumulate: function(t3, e3) {
        var n3 = this.buffer, r3 = this.valueSize, i3 = t3 * r3 + r3, a2 = this.cumulativeWeight;
        if (0 === a2) {
          for (var o2 = 0; o2 !== r3; ++o2) n3[i3 + o2] = n3[o2];
          a2 = e3;
        } else {
          var s2 = e3 / (a2 += e3);
          this._mixBufferRegion(n3, i3, 0, s2, r3);
        }
        this.cumulativeWeight = a2;
      }, apply: function(t3) {
        var e3 = this.valueSize, n3 = this.buffer, r3 = t3 * e3 + e3, i3 = this.cumulativeWeight, a2 = this.binding;
        if (this.cumulativeWeight = 0, i3 < 1) {
          var o2 = 3 * e3;
          this._mixBufferRegion(n3, r3, o2, 1 - i3, e3);
        }
        for (var s2 = e3, l2 = e3 + e3; s2 !== l2; ++s2) if (n3[s2] !== n3[s2 + e3]) {
          a2.setValue(n3, r3);
          break;
        }
      }, saveOriginalState: function() {
        var t3 = this.binding, e3 = this.buffer, n3 = this.valueSize, r3 = 3 * n3;
        t3.getValue(e3, r3);
        for (var i3 = n3, a2 = r3; i3 !== a2; ++i3) e3[i3] = e3[r3 + i3 % n3];
        this.cumulativeWeight = 0;
      }, restoreOriginalState: function() {
        var t3 = 3 * this.valueSize;
        this.binding.setValue(this.buffer, t3);
      }, _select: function(t3, e3, n3, r3, i3) {
        if (0.5 <= r3) for (var a2 = 0; a2 !== i3; ++a2) t3[e3 + a2] = t3[n3 + a2];
      }, _slerp: function(t3, e3, n3, r3) {
        Ge.slerpFlat(t3, e3, t3, e3, t3, n3, r3);
      }, _lerp: function(t3, e3, n3, r3, i3) {
        for (var a2 = 1 - r3, o2 = 0; o2 !== i3; ++o2) {
          var s2 = e3 + o2;
          t3[s2] = t3[s2] * a2 + t3[n3 + o2] * r3;
        }
      } });
      var Pu = "\\[\\]\\.:\\/", Ru = new RegExp("[" + Pu + "]", "g"), Lu = "[^" + Pu + "]", Iu = "[^" + Pu.replace("\\.", "") + "]", ku = /((?:WC+[\/:])*)/.source.replace("WC", Lu), ju = /(WCOD+)?/.source.replace("WCOD", Iu), Nu = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", Lu), Vu = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", Lu), Fu = new RegExp("^" + ku + ju + Nu + Vu + "$"), Bu = ["material", "materials", "bones"];
      function Gu(t3, e3, n3) {
        var r3 = n3 || zu.parseTrackName(e3);
        this._targetGroup = t3, this._bindings = t3.subscribe_(e3, r3);
      }
      function zu(t3, e3, n3) {
        this.path = e3, this.parsedPath = n3 || zu.parseTrackName(e3), this.node = zu.findNode(t3, this.parsedPath.nodeName) || t3, this.rootNode = t3;
      }
      function Uu() {
        this.uuid = Re.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        var t3 = {};
        this._indicesByUUID = t3;
        for (var e3 = 0, n3 = arguments.length; e3 !== n3; ++e3) t3[arguments[e3].uuid] = e3;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        var r3 = this;
        this.stats = { objects: { get total() {
          return r3._objects.length;
        }, get inUse() {
          return this.total - r3.nCachedObjects_;
        } }, get bindingsPerObject() {
          return r3._bindings.length;
        } };
      }
      function Hu(t3, e3, n3) {
        this._mixer = t3, this._clip = e3, this._localRoot = n3 || null;
        for (var r3 = e3.tracks, i3 = r3.length, a2 = new Array(i3), o2 = { endingStart: ce, endingEnd: ce }, s2 = 0; s2 !== i3; ++s2) {
          var l2 = r3[s2].createInterpolant(null);
          (a2[s2] = l2).settings = o2;
        }
        this._interpolantSettings = o2, this._interpolants = a2, this._propertyBindings = new Array(i3), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = 2201, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = false, this.enabled = true, this.clampWhenFinished = false, this.zeroSlopeAtStart = true, this.zeroSlopeAtEnd = true;
      }
      function Wu(t3) {
        this._root = t3, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
      }
      function Ju(t3) {
        "string" == typeof t3 && (console.warn("THREE.Uniform: Type parameter is no longer needed."), t3 = arguments[1]), this.value = t3;
      }
      function qu(t3, e3, n3) {
        go.call(this, t3, e3), this.meshPerAttribute = n3 || 1;
      }
      function Xu(t3, e3, n3, r3) {
        this.ray = new Un(t3, e3), this.near = n3 || 0, this.far = r3 || 1 / 0, this.camera = null, this.params = { Mesh: {}, Line: {}, LOD: {}, Points: { threshold: 1 }, Sprite: {} }, Object.defineProperties(this.params, { PointCloud: { get: function() {
          return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points;
        } } });
      }
      function Yu(t3, e3) {
        return t3.distance - e3.distance;
      }
      function Zu(t3, e3, n3, r3) {
        if (false !== t3.visible && (t3.raycast(e3, n3), true === r3)) for (var i3 = t3.children, a2 = 0, o2 = i3.length; a2 < o2; a2++) Zu(i3[a2], e3, n3, true);
      }
      function Ku(t3, e3, n3) {
        return this.radius = void 0 !== t3 ? t3 : 1, this.phi = void 0 !== e3 ? e3 : 0, this.theta = void 0 !== n3 ? n3 : 0, this;
      }
      function $u(t3, e3, n3) {
        return this.radius = void 0 !== t3 ? t3 : 1, this.theta = void 0 !== e3 ? e3 : 0, this.y = void 0 !== n3 ? n3 : 0, this;
      }
      Object.assign(Gu.prototype, { getValue: function(t3, e3) {
        this.bind();
        var n3 = this._targetGroup.nCachedObjects_, r3 = this._bindings[n3];
        void 0 !== r3 && r3.getValue(t3, e3);
      }, setValue: function(t3, e3) {
        for (var n3 = this._bindings, r3 = this._targetGroup.nCachedObjects_, i3 = n3.length; r3 !== i3; ++r3) n3[r3].setValue(t3, e3);
      }, bind: function() {
        for (var t3 = this._bindings, e3 = this._targetGroup.nCachedObjects_, n3 = t3.length; e3 !== n3; ++e3) t3[e3].bind();
      }, unbind: function() {
        for (var t3 = this._bindings, e3 = this._targetGroup.nCachedObjects_, n3 = t3.length; e3 !== n3; ++e3) t3[e3].unbind();
      } }), Object.assign(zu, { Composite: Gu, create: function(t3, e3, n3) {
        return t3 && t3.isAnimationObjectGroup ? new zu.Composite(t3, e3, n3) : new zu(t3, e3, n3);
      }, sanitizeNodeName: function(t3) {
        return t3.replace(/\s/g, "_").replace(Ru, "");
      }, parseTrackName: function(t3) {
        var e3 = Fu.exec(t3);
        if (!e3) throw new Error("PropertyBinding: Cannot parse trackName: " + t3);
        var n3 = { nodeName: e3[2], objectName: e3[3], objectIndex: e3[4], propertyName: e3[5], propertyIndex: e3[6] }, r3 = n3.nodeName && n3.nodeName.lastIndexOf(".");
        if (void 0 !== r3 && -1 !== r3) {
          var i3 = n3.nodeName.substring(r3 + 1);
          -1 !== Bu.indexOf(i3) && (n3.nodeName = n3.nodeName.substring(0, r3), n3.objectName = i3);
        }
        if (null === n3.propertyName || 0 === n3.propertyName.length) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + t3);
        return n3;
      }, findNode: function(t3, e3) {
        if (!e3 || "" === e3 || "root" === e3 || "." === e3 || -1 === e3 || e3 === t3.name || e3 === t3.uuid) return t3;
        if (t3.skeleton) {
          var n3 = t3.skeleton.getBoneByName(e3);
          if (void 0 !== n3) return n3;
        }
        if (t3.children) {
          var r3 = function(t4) {
            for (var n4 = 0; n4 < t4.length; n4++) {
              var i4 = t4[n4];
              if (i4.name === e3 || i4.uuid === e3) return i4;
              var a2 = r3(i4.children);
              if (a2) return a2;
            }
            return null;
          }, i3 = r3(t3.children);
          if (i3) return i3;
        }
        return null;
      } }), Object.assign(zu.prototype, { _getValue_unavailable: function() {
      }, _setValue_unavailable: function() {
      }, BindingType: { Direct: 0, EntireArray: 1, ArrayElement: 2, HasFromToArray: 3 }, Versioning: { None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2 }, GetterByBindingType: [function(t3, e3) {
        t3[e3] = this.node[this.propertyName];
      }, function(t3, e3) {
        for (var n3 = this.resolvedProperty, r3 = 0, i3 = n3.length; r3 !== i3; ++r3) t3[e3++] = n3[r3];
      }, function(t3, e3) {
        t3[e3] = this.resolvedProperty[this.propertyIndex];
      }, function(t3, e3) {
        this.resolvedProperty.toArray(t3, e3);
      }], SetterByBindingTypeAndVersioning: [[function(t3, e3) {
        this.targetObject[this.propertyName] = t3[e3];
      }, function(t3, e3) {
        this.targetObject[this.propertyName] = t3[e3], this.targetObject.needsUpdate = true;
      }, function(t3, e3) {
        this.targetObject[this.propertyName] = t3[e3], this.targetObject.matrixWorldNeedsUpdate = true;
      }], [function(t3, e3) {
        for (var n3 = this.resolvedProperty, r3 = 0, i3 = n3.length; r3 !== i3; ++r3) n3[r3] = t3[e3++];
      }, function(t3, e3) {
        for (var n3 = this.resolvedProperty, r3 = 0, i3 = n3.length; r3 !== i3; ++r3) n3[r3] = t3[e3++];
        this.targetObject.needsUpdate = true;
      }, function(t3, e3) {
        for (var n3 = this.resolvedProperty, r3 = 0, i3 = n3.length; r3 !== i3; ++r3) n3[r3] = t3[e3++];
        this.targetObject.matrixWorldNeedsUpdate = true;
      }], [function(t3, e3) {
        this.resolvedProperty[this.propertyIndex] = t3[e3];
      }, function(t3, e3) {
        this.resolvedProperty[this.propertyIndex] = t3[e3], this.targetObject.needsUpdate = true;
      }, function(t3, e3) {
        this.resolvedProperty[this.propertyIndex] = t3[e3], this.targetObject.matrixWorldNeedsUpdate = true;
      }], [function(t3, e3) {
        this.resolvedProperty.fromArray(t3, e3);
      }, function(t3, e3) {
        this.resolvedProperty.fromArray(t3, e3), this.targetObject.needsUpdate = true;
      }, function(t3, e3) {
        this.resolvedProperty.fromArray(t3, e3), this.targetObject.matrixWorldNeedsUpdate = true;
      }]], getValue: function(t3, e3) {
        this.bind(), this.getValue(t3, e3);
      }, setValue: function(t3, e3) {
        this.bind(), this.setValue(t3, e3);
      }, bind: function() {
        var t3 = this.node, e3 = this.parsedPath, n3 = e3.objectName, r3 = e3.propertyName, i3 = e3.propertyIndex;
        if (t3 || (t3 = zu.findNode(this.rootNode, e3.nodeName) || this.rootNode, this.node = t3), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, t3) {
          if (n3) {
            var a2 = e3.objectIndex;
            switch (n3) {
              case "materials":
                if (!t3.material) return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                if (!t3.material.materials) return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                t3 = t3.material.materials;
                break;
              case "bones":
                if (!t3.skeleton) return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                t3 = t3.skeleton.bones;
                for (var o2 = 0; o2 < t3.length; o2++) if (t3[o2].name === a2) {
                  a2 = o2;
                  break;
                }
                break;
              default:
                if (void 0 === t3[n3]) return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                t3 = t3[n3];
            }
            if (void 0 !== a2) {
              if (void 0 === t3[a2]) return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, t3);
              t3 = t3[a2];
            }
          }
          var s2 = t3[r3];
          if (void 0 !== s2) {
            var l2 = this.Versioning.None;
            void 0 !== (this.targetObject = t3).needsUpdate ? l2 = this.Versioning.NeedsUpdate : void 0 !== t3.matrixWorldNeedsUpdate && (l2 = this.Versioning.MatrixWorldNeedsUpdate);
            var c2 = this.BindingType.Direct;
            if (void 0 !== i3) {
              if ("morphTargetInfluences" === r3) {
                if (!t3.geometry) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                if (t3.geometry.isBufferGeometry) {
                  if (!t3.geometry.morphAttributes) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                  for (o2 = 0; o2 < this.node.geometry.morphAttributes.position.length; o2++) if (t3.geometry.morphAttributes.position[o2].name === i3) {
                    i3 = o2;
                    break;
                  }
                } else {
                  if (!t3.geometry.morphTargets) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                  for (o2 = 0; o2 < this.node.geometry.morphTargets.length; o2++) if (t3.geometry.morphTargets[o2].name === i3) {
                    i3 = o2;
                    break;
                  }
                }
              }
              c2 = this.BindingType.ArrayElement, this.resolvedProperty = s2, this.propertyIndex = i3;
            } else void 0 !== s2.fromArray && void 0 !== s2.toArray ? (c2 = this.BindingType.HasFromToArray, this.resolvedProperty = s2) : Array.isArray(s2) ? (c2 = this.BindingType.EntireArray, this.resolvedProperty = s2) : this.propertyName = r3;
            this.getValue = this.GetterByBindingType[c2], this.setValue = this.SetterByBindingTypeAndVersioning[c2][l2];
          } else {
            var u2 = e3.nodeName;
            console.error("THREE.PropertyBinding: Trying to update property for track: " + u2 + "." + r3 + " but it wasn't found.", t3);
          }
        } else console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
      }, unbind: function() {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
      } }), Object.assign(zu.prototype, { _getValue_unbound: zu.prototype.getValue, _setValue_unbound: zu.prototype.setValue }), Object.assign(Uu.prototype, { isAnimationObjectGroup: true, add: function() {
        for (var t3 = this._objects, e3 = t3.length, n3 = this.nCachedObjects_, r3 = this._indicesByUUID, i3 = this._paths, a2 = this._parsedPaths, o2 = this._bindings, s2 = o2.length, l2 = void 0, c2 = 0, u2 = arguments.length; c2 !== u2; ++c2) {
          var h2 = arguments[c2], p2 = h2.uuid, d2 = r3[p2];
          if (void 0 === d2) {
            d2 = e3++, r3[p2] = d2, t3.push(h2);
            for (var f2 = 0, m2 = s2; f2 !== m2; ++f2) o2[f2].push(new zu(h2, i3[f2], a2[f2]));
          } else if (d2 < n3) {
            l2 = t3[d2];
            var g2 = --n3, y2 = t3[g2];
            for (t3[r3[y2.uuid] = d2] = y2, t3[r3[p2] = g2] = h2, f2 = 0, m2 = s2; f2 !== m2; ++f2) {
              var v2 = o2[f2], x2 = v2[g2], w2 = v2[d2];
              v2[d2] = x2, void 0 === w2 && (w2 = new zu(h2, i3[f2], a2[f2])), v2[g2] = w2;
            }
          } else t3[d2] !== l2 && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
        }
        this.nCachedObjects_ = n3;
      }, remove: function() {
        for (var t3 = this._objects, e3 = this.nCachedObjects_, n3 = this._indicesByUUID, r3 = this._bindings, i3 = r3.length, a2 = 0, o2 = arguments.length; a2 !== o2; ++a2) {
          var s2 = arguments[a2], l2 = s2.uuid, c2 = n3[l2];
          if (void 0 !== c2 && e3 <= c2) {
            var u2 = e3++, h2 = t3[u2];
            t3[n3[h2.uuid] = c2] = h2, t3[n3[l2] = u2] = s2;
            for (var p2 = 0, d2 = i3; p2 !== d2; ++p2) {
              var f2 = r3[p2], m2 = f2[u2], g2 = f2[c2];
              f2[c2] = m2, f2[u2] = g2;
            }
          }
        }
        this.nCachedObjects_ = e3;
      }, uncache: function() {
        for (var t3 = this._objects, e3 = t3.length, n3 = this.nCachedObjects_, r3 = this._indicesByUUID, i3 = this._bindings, a2 = i3.length, o2 = 0, s2 = arguments.length; o2 !== s2; ++o2) {
          var l2 = arguments[o2].uuid, c2 = r3[l2];
          if (void 0 !== c2) if (delete r3[l2], c2 < n3) {
            var u2 = --n3, h2 = t3[u2], p2 = t3[y2 = --e3];
            t3[r3[h2.uuid] = c2] = h2, t3[r3[p2.uuid] = u2] = p2, t3.pop();
            for (var d2 = 0, f2 = a2; d2 !== f2; ++d2) {
              var m2 = (v2 = i3[d2])[u2], g2 = v2[y2];
              v2[c2] = m2, v2[u2] = g2, v2.pop();
            }
          } else {
            var y2;
            for (t3[r3[(p2 = t3[y2 = --e3]).uuid] = c2] = p2, t3.pop(), d2 = 0, f2 = a2; d2 !== f2; ++d2) {
              var v2;
              (v2 = i3[d2])[c2] = v2[y2], v2.pop();
            }
          }
        }
        this.nCachedObjects_ = n3;
      }, subscribe_: function(t3, e3) {
        var n3 = this._bindingsIndicesByPath, r3 = n3[t3], i3 = this._bindings;
        if (void 0 !== r3) return i3[r3];
        var a2 = this._paths, o2 = this._parsedPaths, s2 = this._objects, l2 = s2.length, c2 = this.nCachedObjects_, u2 = new Array(l2);
        r3 = i3.length, n3[t3] = r3, a2.push(t3), o2.push(e3), i3.push(u2);
        for (var h2 = c2, p2 = s2.length; h2 !== p2; ++h2) {
          var d2 = s2[h2];
          u2[h2] = new zu(d2, t3, e3);
        }
        return u2;
      }, unsubscribe_: function(t3) {
        var e3 = this._bindingsIndicesByPath, n3 = e3[t3];
        if (void 0 !== n3) {
          var r3 = this._paths, i3 = this._parsedPaths, a2 = this._bindings, o2 = a2.length - 1, s2 = a2[o2];
          a2[e3[t3[o2]] = n3] = s2, a2.pop(), i3[n3] = i3[o2], i3.pop(), r3[n3] = r3[o2], r3.pop();
        }
      } }), Object.assign(Hu.prototype, { play: function() {
        return this._mixer._activateAction(this), this;
      }, stop: function() {
        return this._mixer._deactivateAction(this), this.reset();
      }, reset: function() {
        return this.paused = false, this.enabled = true, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
      }, isRunning: function() {
        return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this);
      }, isScheduled: function() {
        return this._mixer._isActiveAction(this);
      }, startAt: function(t3) {
        return this._startTime = t3, this;
      }, setLoop: function(t3, e3) {
        return this.loop = t3, this.repetitions = e3, this;
      }, setEffectiveWeight: function(t3) {
        return this.weight = t3, this._effectiveWeight = this.enabled ? t3 : 0, this.stopFading();
      }, getEffectiveWeight: function() {
        return this._effectiveWeight;
      }, fadeIn: function(t3) {
        return this._scheduleFading(t3, 0, 1);
      }, fadeOut: function(t3) {
        return this._scheduleFading(t3, 1, 0);
      }, crossFadeFrom: function(t3, e3, n3) {
        if (t3.fadeOut(e3), this.fadeIn(e3), n3) {
          var r3 = this._clip.duration, i3 = t3._clip.duration, a2 = i3 / r3, o2 = r3 / i3;
          t3.warp(1, a2, e3), this.warp(o2, 1, e3);
        }
        return this;
      }, crossFadeTo: function(t3, e3, n3) {
        return t3.crossFadeFrom(this, e3, n3);
      }, stopFading: function() {
        var t3 = this._weightInterpolant;
        return null !== t3 && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(t3)), this;
      }, setEffectiveTimeScale: function(t3) {
        return this.timeScale = t3, this._effectiveTimeScale = this.paused ? 0 : t3, this.stopWarping();
      }, getEffectiveTimeScale: function() {
        return this._effectiveTimeScale;
      }, setDuration: function(t3) {
        return this.timeScale = this._clip.duration / t3, this.stopWarping();
      }, syncWith: function(t3) {
        return this.time = t3.time, this.timeScale = t3.timeScale, this.stopWarping();
      }, halt: function(t3) {
        return this.warp(this._effectiveTimeScale, 0, t3);
      }, warp: function(t3, e3, n3) {
        var r3 = this._mixer, i3 = r3.time, a2 = this._timeScaleInterpolant, o2 = this.timeScale;
        null === a2 && (a2 = r3._lendControlInterpolant(), this._timeScaleInterpolant = a2);
        var s2 = a2.parameterPositions, l2 = a2.sampleValues;
        return s2[0] = i3, s2[1] = i3 + n3, l2[0] = t3 / o2, l2[1] = e3 / o2, this;
      }, stopWarping: function() {
        var t3 = this._timeScaleInterpolant;
        return null !== t3 && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(t3)), this;
      }, getMixer: function() {
        return this._mixer;
      }, getClip: function() {
        return this._clip;
      }, getRoot: function() {
        return this._localRoot || this._mixer._root;
      }, _update: function(t3, e3, n3, r3) {
        if (this.enabled) {
          var i3 = this._startTime;
          if (null !== i3) {
            var a2 = (t3 - i3) * n3;
            if (a2 < 0 || 0 === n3) return;
            this._startTime = null, e3 = n3 * a2;
          }
          e3 *= this._updateTimeScale(t3);
          var o2 = this._updateTime(e3), s2 = this._updateWeight(t3);
          if (0 < s2) for (var l2 = this._interpolants, c2 = this._propertyBindings, u2 = 0, h2 = l2.length; u2 !== h2; ++u2) l2[u2].evaluate(o2), c2[u2].accumulate(r3, s2);
        } else this._updateWeight(t3);
      }, _updateWeight: function(t3) {
        var e3 = 0;
        if (this.enabled) {
          e3 = this.weight;
          var n3 = this._weightInterpolant;
          if (null !== n3) {
            var r3 = n3.evaluate(t3)[0];
            e3 *= r3, t3 > n3.parameterPositions[1] && (this.stopFading(), 0 === r3 && (this.enabled = false));
          }
        }
        return this._effectiveWeight = e3;
      }, _updateTimeScale: function(t3) {
        var e3 = 0;
        if (!this.paused) {
          e3 = this.timeScale;
          var n3 = this._timeScaleInterpolant;
          null !== n3 && (e3 *= n3.evaluate(t3)[0], t3 > n3.parameterPositions[1] && (this.stopWarping(), 0 === e3 ? this.paused = true : this.timeScale = e3));
        }
        return this._effectiveTimeScale = e3;
      }, _updateTime: function(t3) {
        var e3 = this.time + t3, n3 = this._clip.duration, r3 = this.loop, i3 = this._loopCount, a2 = 2202 === r3;
        if (0 === t3) return -1 !== i3 && a2 && 1 == (1 & i3) ? n3 - e3 : e3;
        if (2200 === r3) {
          -1 === i3 && (this._loopCount = 0, this._setEndings(true, true, false));
          t: {
            if (n3 <= e3) e3 = n3;
            else {
              if (!(e3 < 0)) {
                this.time = e3;
                break t;
              }
              e3 = 0;
            }
            this.clampWhenFinished ? this.paused = true : this.enabled = false, this.time = e3, this._mixer.dispatchEvent({ type: "finished", action: this, direction: t3 < 0 ? -1 : 1 });
          }
        } else {
          if (-1 === i3 && (0 <= t3 ? (i3 = 0, this._setEndings(true, 0 === this.repetitions, a2)) : this._setEndings(0 === this.repetitions, true, a2)), n3 <= e3 || e3 < 0) {
            var o2 = Math.floor(e3 / n3);
            e3 -= n3 * o2, i3 += Math.abs(o2);
            var s2 = this.repetitions - i3;
            if (s2 <= 0) this.clampWhenFinished ? this.paused = true : this.enabled = false, e3 = 0 < t3 ? n3 : 0, this.time = e3, this._mixer.dispatchEvent({ type: "finished", action: this, direction: 0 < t3 ? 1 : -1 });
            else {
              if (1 == s2) {
                var l2 = t3 < 0;
                this._setEndings(l2, !l2, a2);
              } else this._setEndings(false, false, a2);
              this._loopCount = i3, this.time = e3, this._mixer.dispatchEvent({ type: "loop", action: this, loopDelta: o2 });
            }
          } else this.time = e3;
          if (a2 && 1 == (1 & i3)) return n3 - e3;
        }
        return e3;
      }, _setEndings: function(t3, e3, n3) {
        var r3 = this._interpolantSettings;
        n3 ? (r3.endingStart = ue, r3.endingEnd = ue) : (r3.endingStart = t3 ? this.zeroSlopeAtStart ? ue : ce : he, r3.endingEnd = e3 ? this.zeroSlopeAtEnd ? ue : ce : he);
      }, _scheduleFading: function(t3, e3, n3) {
        var r3 = this._mixer, i3 = r3.time, a2 = this._weightInterpolant;
        null === a2 && (a2 = r3._lendControlInterpolant(), this._weightInterpolant = a2);
        var o2 = a2.parameterPositions, s2 = a2.sampleValues;
        return o2[0] = i3, s2[0] = e3, o2[1] = i3 + t3, s2[1] = n3, this;
      } }), Wu.prototype = Object.assign(Object.create(Ee.prototype), { constructor: Wu, _bindAction: function(t3, e3) {
        var n3 = t3._localRoot || this._root, r3 = t3._clip.tracks, i3 = r3.length, a2 = t3._propertyBindings, o2 = t3._interpolants, s2 = n3.uuid, l2 = this._bindingsByRootAndName, c2 = l2[s2];
        void 0 === c2 && (c2 = {}, l2[s2] = c2);
        for (var u2 = 0; u2 !== i3; ++u2) {
          var h2 = r3[u2], p2 = h2.name, d2 = c2[p2];
          if (void 0 !== d2) a2[u2] = d2;
          else {
            if (void 0 !== (d2 = a2[u2])) {
              null === d2._cacheIndex && (++d2.referenceCount, this._addInactiveBinding(d2, s2, p2));
              continue;
            }
            var f2 = e3 && e3._propertyBindings[u2].binding.parsedPath;
            ++(d2 = new Au(zu.create(n3, p2, f2), h2.ValueTypeName, h2.getValueSize())).referenceCount, this._addInactiveBinding(d2, s2, p2), a2[u2] = d2;
          }
          o2[u2].resultBuffer = d2.buffer;
        }
      }, _activateAction: function(t3) {
        if (!this._isActiveAction(t3)) {
          if (null === t3._cacheIndex) {
            var e3 = (t3._localRoot || this._root).uuid, n3 = t3._clip.uuid, r3 = this._actionsByClip[n3];
            this._bindAction(t3, r3 && r3.knownActions[0]), this._addInactiveAction(t3, n3, e3);
          }
          for (var i3 = t3._propertyBindings, a2 = 0, o2 = i3.length; a2 !== o2; ++a2) {
            var s2 = i3[a2];
            0 == s2.useCount++ && (this._lendBinding(s2), s2.saveOriginalState());
          }
          this._lendAction(t3);
        }
      }, _deactivateAction: function(t3) {
        if (this._isActiveAction(t3)) {
          for (var e3 = t3._propertyBindings, n3 = 0, r3 = e3.length; n3 !== r3; ++n3) {
            var i3 = e3[n3];
            0 == --i3.useCount && (i3.restoreOriginalState(), this._takeBackBinding(i3));
          }
          this._takeBackAction(t3);
        }
      }, _initMemoryManager: function() {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        var t3 = this;
        this.stats = { actions: { get total() {
          return t3._actions.length;
        }, get inUse() {
          return t3._nActiveActions;
        } }, bindings: { get total() {
          return t3._bindings.length;
        }, get inUse() {
          return t3._nActiveBindings;
        } }, controlInterpolants: { get total() {
          return t3._controlInterpolants.length;
        }, get inUse() {
          return t3._nActiveControlInterpolants;
        } } };
      }, _isActiveAction: function(t3) {
        var e3 = t3._cacheIndex;
        return null !== e3 && e3 < this._nActiveActions;
      }, _addInactiveAction: function(t3, e3, n3) {
        var r3 = this._actions, i3 = this._actionsByClip, a2 = i3[e3];
        if (void 0 === a2) a2 = { knownActions: [t3], actionByRoot: {} }, t3._byClipCacheIndex = 0, i3[e3] = a2;
        else {
          var o2 = a2.knownActions;
          t3._byClipCacheIndex = o2.length, o2.push(t3);
        }
        t3._cacheIndex = r3.length, r3.push(t3), a2.actionByRoot[n3] = t3;
      }, _removeInactiveAction: function(t3) {
        var e3 = this._actions, n3 = e3[e3.length - 1], r3 = t3._cacheIndex;
        e3[n3._cacheIndex = r3] = n3, e3.pop(), t3._cacheIndex = null;
        var i3 = t3._clip.uuid, a2 = this._actionsByClip, o2 = a2[i3], s2 = o2.knownActions, l2 = s2[s2.length - 1], c2 = t3._byClipCacheIndex;
        s2[l2._byClipCacheIndex = c2] = l2, s2.pop(), t3._byClipCacheIndex = null, delete o2.actionByRoot[(t3._localRoot || this._root).uuid], 0 === s2.length && delete a2[i3], this._removeInactiveBindingsForAction(t3);
      }, _removeInactiveBindingsForAction: function(t3) {
        for (var e3 = t3._propertyBindings, n3 = 0, r3 = e3.length; n3 !== r3; ++n3) {
          var i3 = e3[n3];
          0 == --i3.referenceCount && this._removeInactiveBinding(i3);
        }
      }, _lendAction: function(t3) {
        var e3 = this._actions, n3 = t3._cacheIndex, r3 = this._nActiveActions++, i3 = e3[r3];
        e3[t3._cacheIndex = r3] = t3, e3[i3._cacheIndex = n3] = i3;
      }, _takeBackAction: function(t3) {
        var e3 = this._actions, n3 = t3._cacheIndex, r3 = --this._nActiveActions, i3 = e3[r3];
        e3[t3._cacheIndex = r3] = t3, e3[i3._cacheIndex = n3] = i3;
      }, _addInactiveBinding: function(t3, e3, n3) {
        var r3 = this._bindingsByRootAndName, i3 = r3[e3], a2 = this._bindings;
        void 0 === i3 && (i3 = {}, r3[e3] = i3), (i3[n3] = t3)._cacheIndex = a2.length, a2.push(t3);
      }, _removeInactiveBinding: function(t3) {
        var e3 = this._bindings, n3 = t3.binding, r3 = n3.rootNode.uuid, i3 = n3.path, a2 = this._bindingsByRootAndName, o2 = a2[r3], s2 = e3[e3.length - 1], l2 = t3._cacheIndex;
        e3[s2._cacheIndex = l2] = s2, e3.pop(), delete o2[i3], 0 === Object.keys(o2).length && delete a2[r3];
      }, _lendBinding: function(t3) {
        var e3 = this._bindings, n3 = t3._cacheIndex, r3 = this._nActiveBindings++, i3 = e3[r3];
        e3[t3._cacheIndex = r3] = t3, e3[i3._cacheIndex = n3] = i3;
      }, _takeBackBinding: function(t3) {
        var e3 = this._bindings, n3 = t3._cacheIndex, r3 = --this._nActiveBindings, i3 = e3[r3];
        e3[t3._cacheIndex = r3] = t3, e3[i3._cacheIndex = n3] = i3;
      }, _lendControlInterpolant: function() {
        var t3 = this._controlInterpolants, e3 = this._nActiveControlInterpolants++, n3 = t3[e3];
        return void 0 === n3 && (t3[(n3 = new Gl(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = e3] = n3), n3;
      }, _takeBackControlInterpolant: function(t3) {
        var e3 = this._controlInterpolants, n3 = t3.__cacheIndex, r3 = --this._nActiveControlInterpolants, i3 = e3[r3];
        e3[t3.__cacheIndex = r3] = t3, e3[i3.__cacheIndex = n3] = i3;
      }, _controlInterpolantsResultBuffer: new Float32Array(1), clipAction: function(t3, e3) {
        var n3 = e3 || this._root, r3 = n3.uuid, i3 = "string" == typeof t3 ? Kl.findByName(n3, t3) : t3, a2 = null !== i3 ? i3.uuid : t3, o2 = this._actionsByClip[a2], s2 = null;
        if (void 0 !== o2) {
          var l2 = o2.actionByRoot[r3];
          if (void 0 !== l2) return l2;
          s2 = o2.knownActions[0], null === i3 && (i3 = s2._clip);
        }
        if (null === i3) return null;
        var c2 = new Hu(this, i3, e3);
        return this._bindAction(c2, s2), this._addInactiveAction(c2, a2, r3), c2;
      }, existingAction: function(t3, e3) {
        var n3 = e3 || this._root, r3 = n3.uuid, i3 = "string" == typeof t3 ? Kl.findByName(n3, t3) : t3, a2 = i3 ? i3.uuid : t3, o2 = this._actionsByClip[a2];
        return void 0 !== o2 && o2.actionByRoot[r3] || null;
      }, stopAllAction: function() {
        var t3 = this._actions, e3 = this._nActiveActions, n3 = this._bindings, r3 = this._nActiveBindings;
        this._nActiveActions = 0;
        for (var i3 = this._nActiveBindings = 0; i3 !== e3; ++i3) t3[i3].reset();
        for (i3 = 0; i3 !== r3; ++i3) n3[i3].useCount = 0;
        return this;
      }, update: function(t3) {
        t3 *= this.timeScale;
        for (var e3 = this._actions, n3 = this._nActiveActions, r3 = this.time += t3, i3 = Math.sign(t3), a2 = this._accuIndex ^= 1, o2 = 0; o2 !== n3; ++o2) e3[o2]._update(r3, t3, i3, a2);
        var s2 = this._bindings, l2 = this._nActiveBindings;
        for (o2 = 0; o2 !== l2; ++o2) s2[o2].apply(a2);
        return this;
      }, setTime: function(t3) {
        for (var e3 = this.time = 0; e3 < this._actions.length; e3++) this._actions[e3].time = 0;
        return this.update(t3);
      }, getRoot: function() {
        return this._root;
      }, uncacheClip: function(t3) {
        var e3 = this._actions, n3 = t3.uuid, r3 = this._actionsByClip, i3 = r3[n3];
        if (void 0 !== i3) {
          for (var a2 = i3.knownActions, o2 = 0, s2 = a2.length; o2 !== s2; ++o2) {
            var l2 = a2[o2];
            this._deactivateAction(l2);
            var c2 = l2._cacheIndex, u2 = e3[e3.length - 1];
            l2._cacheIndex = null, l2._byClipCacheIndex = null, e3[u2._cacheIndex = c2] = u2, e3.pop(), this._removeInactiveBindingsForAction(l2);
          }
          delete r3[n3];
        }
      }, uncacheRoot: function(t3) {
        var e3 = t3.uuid, n3 = this._actionsByClip;
        for (var r3 in n3) {
          var i3 = n3[r3].actionByRoot[e3];
          void 0 !== i3 && (this._deactivateAction(i3), this._removeInactiveAction(i3));
        }
        var a2 = this._bindingsByRootAndName[e3];
        if (void 0 !== a2) for (var o2 in a2) {
          var s2 = a2[o2];
          s2.restoreOriginalState(), this._removeInactiveBinding(s2);
        }
      }, uncacheAction: function(t3, e3) {
        var n3 = this.existingAction(t3, e3);
        null !== n3 && (this._deactivateAction(n3), this._removeInactiveAction(n3));
      } }), Ju.prototype.clone = function() {
        return new Ju(void 0 === this.value.clone ? this.value : this.value.clone());
      }, qu.prototype = Object.assign(Object.create(go.prototype), { constructor: qu, isInstancedInterleavedBuffer: true, copy: function(t3) {
        return go.prototype.copy.call(this, t3), this.meshPerAttribute = t3.meshPerAttribute, this;
      } }), Object.assign(Xu.prototype, { linePrecision: 1, set: function(t3, e3) {
        this.ray.set(t3, e3);
      }, setFromCamera: function(t3, e3) {
        e3 && e3.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(e3.matrixWorld), this.ray.direction.set(t3.x, t3.y, 0.5).unproject(e3).sub(this.ray.origin).normalize(), this.camera = e3) : e3 && e3.isOrthographicCamera ? (this.ray.origin.set(t3.x, t3.y, (e3.near + e3.far) / (e3.near - e3.far)).unproject(e3), this.ray.direction.set(0, 0, -1).transformDirection(e3.matrixWorld), this.camera = e3) : console.error("THREE.Raycaster: Unsupported camera type.");
      }, intersectObject: function(t3, e3, n3) {
        var r3 = n3 || [];
        return Zu(t3, this, r3, e3), r3.sort(Yu), r3;
      }, intersectObjects: function(t3, e3, n3) {
        var r3 = n3 || [];
        if (false === Array.isArray(t3)) return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), r3;
        for (var i3 = 0, a2 = t3.length; i3 < a2; i3++) Zu(t3[i3], this, r3, e3);
        return r3.sort(Yu), r3;
      } }), Object.assign(Ku.prototype, { set: function(t3, e3, n3) {
        return this.radius = t3, this.phi = e3, this.theta = n3, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.radius = t3.radius, this.phi = t3.phi, this.theta = t3.theta, this;
      }, makeSafe: function() {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
      }, setFromVector3: function(t3) {
        return this.setFromCartesianCoords(t3.x, t3.y, t3.z);
      }, setFromCartesianCoords: function(t3, e3, n3) {
        return this.radius = Math.sqrt(t3 * t3 + e3 * e3 + n3 * n3), 0 === this.radius ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(t3, n3), this.phi = Math.acos(Re.clamp(e3 / this.radius, -1, 1))), this;
      } }), Object.assign($u.prototype, { set: function(t3, e3, n3) {
        return this.radius = t3, this.theta = e3, this.y = n3, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.radius = t3.radius, this.theta = t3.theta, this.y = t3.y, this;
      }, setFromVector3: function(t3) {
        return this.setFromCartesianCoords(t3.x, t3.y, t3.z);
      }, setFromCartesianCoords: function(t3, e3, n3) {
        return this.radius = Math.sqrt(t3 * t3 + n3 * n3), this.theta = Math.atan2(t3, n3), this.y = e3, this;
      } });
      var Qu = new Le();
      function th(t3, e3) {
        this.min = void 0 !== t3 ? t3 : new Le(1 / 0, 1 / 0), this.max = void 0 !== e3 ? e3 : new Le(-1 / 0, -1 / 0);
      }
      Object.assign(th.prototype, { set: function(t3, e3) {
        return this.min.copy(t3), this.max.copy(e3), this;
      }, setFromPoints: function(t3) {
        this.makeEmpty();
        for (var e3 = 0, n3 = t3.length; e3 < n3; e3++) this.expandByPoint(t3[e3]);
        return this;
      }, setFromCenterAndSize: function(t3, e3) {
        var n3 = Qu.copy(e3).multiplyScalar(0.5);
        return this.min.copy(t3).sub(n3), this.max.copy(t3).add(n3), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.min.copy(t3.min), this.max.copy(t3.max), this;
      }, makeEmpty: function() {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
      }, isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
      }, getCenter: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Box2: .getCenter() target is now required"), t3 = new Le()), this.isEmpty() ? t3.set(0, 0) : t3.addVectors(this.min, this.max).multiplyScalar(0.5);
      }, getSize: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Box2: .getSize() target is now required"), t3 = new Le()), this.isEmpty() ? t3.set(0, 0) : t3.subVectors(this.max, this.min);
      }, expandByPoint: function(t3) {
        return this.min.min(t3), this.max.max(t3), this;
      }, expandByVector: function(t3) {
        return this.min.sub(t3), this.max.add(t3), this;
      }, expandByScalar: function(t3) {
        return this.min.addScalar(-t3), this.max.addScalar(t3), this;
      }, containsPoint: function(t3) {
        return !(t3.x < this.min.x || t3.x > this.max.x || t3.y < this.min.y || t3.y > this.max.y);
      }, containsBox: function(t3) {
        return this.min.x <= t3.min.x && t3.max.x <= this.max.x && this.min.y <= t3.min.y && t3.max.y <= this.max.y;
      }, getParameter: function(t3, e3) {
        return void 0 === e3 && (console.warn("THREE.Box2: .getParameter() target is now required"), e3 = new Le()), e3.set((t3.x - this.min.x) / (this.max.x - this.min.x), (t3.y - this.min.y) / (this.max.y - this.min.y));
      }, intersectsBox: function(t3) {
        return !(t3.max.x < this.min.x || t3.min.x > this.max.x || t3.max.y < this.min.y || t3.min.y > this.max.y);
      }, clampPoint: function(t3, e3) {
        return void 0 === e3 && (console.warn("THREE.Box2: .clampPoint() target is now required"), e3 = new Le()), e3.copy(t3).clamp(this.min, this.max);
      }, distanceToPoint: function(t3) {
        return Qu.copy(t3).clamp(this.min, this.max).sub(t3).length();
      }, intersect: function(t3) {
        return this.min.max(t3.min), this.max.min(t3.max), this;
      }, union: function(t3) {
        return this.min.min(t3.min), this.max.max(t3.max), this;
      }, translate: function(t3) {
        return this.min.add(t3), this.max.add(t3), this;
      }, equals: function(t3) {
        return t3.min.equals(this.min) && t3.max.equals(this.max);
      } });
      var eh = new He(), nh = new He();
      function rh(t3, e3) {
        this.start = void 0 !== t3 ? t3 : new He(), this.end = void 0 !== e3 ? e3 : new He();
      }
      function ih(t3) {
        yn.call(this), this.material = t3, this.render = function() {
        };
      }
      Object.assign(rh.prototype, { set: function(t3, e3) {
        return this.start.copy(t3), this.end.copy(e3), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t3) {
        return this.start.copy(t3.start), this.end.copy(t3.end), this;
      }, getCenter: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Line3: .getCenter() target is now required"), t3 = new He()), t3.addVectors(this.start, this.end).multiplyScalar(0.5);
      }, delta: function(t3) {
        return void 0 === t3 && (console.warn("THREE.Line3: .delta() target is now required"), t3 = new He()), t3.subVectors(this.end, this.start);
      }, distanceSq: function() {
        return this.start.distanceToSquared(this.end);
      }, distance: function() {
        return this.start.distanceTo(this.end);
      }, at: function(t3, e3) {
        return void 0 === e3 && (console.warn("THREE.Line3: .at() target is now required"), e3 = new He()), this.delta(e3).multiplyScalar(t3).add(this.start);
      }, closestPointToPointParameter: function(t3, e3) {
        eh.subVectors(t3, this.start), nh.subVectors(this.end, this.start);
        var n3 = nh.dot(nh), r3 = nh.dot(eh) / n3;
        return e3 && (r3 = Re.clamp(r3, 0, 1)), r3;
      }, closestPointToPoint: function(t3, e3, n3) {
        var r3 = this.closestPointToPointParameter(t3, e3);
        return void 0 === n3 && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"), n3 = new He()), this.delta(n3).multiplyScalar(r3).add(this.start);
      }, applyMatrix4: function(t3) {
        return this.start.applyMatrix4(t3), this.end.applyMatrix4(t3), this;
      }, equals: function(t3) {
        return t3.start.equals(this.start) && t3.end.equals(this.end);
      } }), ((ih.prototype = Object.create(yn.prototype)).constructor = ih).prototype.isImmediateRenderObject = true;
      var ah = new He();
      function oh(t3, e3) {
        yn.call(this), this.light = t3, this.light.updateMatrixWorld(), this.matrix = t3.matrixWorld, this.matrixAutoUpdate = false, this.color = e3;
        for (var n3 = new jr(), r3 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], i3 = 0, a2 = 1; i3 < 32; i3++, a2++) {
          var o2 = i3 / 32 * Math.PI * 2, s2 = a2 / 32 * Math.PI * 2;
          r3.push(Math.cos(o2), Math.sin(o2), 1, Math.cos(s2), Math.sin(s2), 1);
        }
        n3.setAttribute("position", new Cr(r3, 3));
        var l2 = new Xo({ fog: false });
        this.cone = new rs(n3, l2), this.add(this.cone), this.update();
      }
      ((oh.prototype = Object.create(yn.prototype)).constructor = oh).prototype.dispose = function() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
      }, oh.prototype.update = function() {
        this.light.updateMatrixWorld();
        var t3 = this.light.distance ? this.light.distance : 1e3, e3 = t3 * Math.tan(this.light.angle);
        this.cone.scale.set(e3, e3, t3), ah.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(ah), void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
      };
      var sh = new He(), lh = new $e(), ch = new $e();
      function uh(t3) {
        for (var e3 = function t4(e4) {
          var n4 = [];
          e4 && e4.isBone && n4.push(e4);
          for (var r4 = 0; r4 < e4.children.length; r4++) n4.push.apply(n4, t4(e4.children[r4]));
          return n4;
        }(t3), n3 = new jr(), r3 = [], i3 = [], a2 = new lr(0, 0, 1), o2 = new lr(0, 1, 0), s2 = 0; s2 < e3.length; s2++) {
          var l2 = e3[s2];
          l2.parent && l2.parent.isBone && (r3.push(0, 0, 0), r3.push(0, 0, 0), i3.push(a2.r, a2.g, a2.b), i3.push(o2.r, o2.g, o2.b));
        }
        n3.setAttribute("position", new Cr(r3, 3)), n3.setAttribute("color", new Cr(i3, 3));
        var c2 = new Xo({ vertexColors: 2, depthTest: false, depthWrite: false, transparent: true });
        rs.call(this, n3, c2), this.root = t3, this.bones = e3, this.matrix = t3.matrixWorld, this.matrixAutoUpdate = false;
      }
      function hh(t3, e3, n3) {
        this.light = t3, this.light.updateMatrixWorld(), this.color = n3;
        var r3 = new hl(e3, 4, 2), i3 = new mr({ wireframe: true, fog: false });
        ti.call(this, r3, i3), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = false, this.update();
      }
      ((uh.prototype = Object.create(rs.prototype)).constructor = uh).prototype.updateMatrixWorld = function(t3) {
        var e3 = this.bones, n3 = this.geometry, r3 = n3.getAttribute("position");
        ch.getInverse(this.root.matrixWorld);
        for (var i3 = 0, a2 = 0; i3 < e3.length; i3++) {
          var o2 = e3[i3];
          o2.parent && o2.parent.isBone && (lh.multiplyMatrices(ch, o2.matrixWorld), sh.setFromMatrixPosition(lh), r3.setXYZ(a2, sh.x, sh.y, sh.z), lh.multiplyMatrices(ch, o2.parent.matrixWorld), sh.setFromMatrixPosition(lh), r3.setXYZ(a2 + 1, sh.x, sh.y, sh.z), a2 += 2);
        }
        n3.getAttribute("position").needsUpdate = true, yn.prototype.updateMatrixWorld.call(this, t3);
      }, ((hh.prototype = Object.create(ti.prototype)).constructor = hh).prototype.dispose = function() {
        this.geometry.dispose(), this.material.dispose();
      }, hh.prototype.update = function() {
        void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
      };
      var ph = new He(), dh = new lr(), fh = new lr();
      function mh(t3, e3, n3) {
        yn.call(this), this.light = t3, this.light.updateMatrixWorld(), this.matrix = t3.matrixWorld, this.matrixAutoUpdate = false, this.color = n3;
        var r3 = new Ts(e3);
        r3.rotateY(0.5 * Math.PI), this.material = new mr({ wireframe: true, fog: false }), void 0 === this.color && (this.material.vertexColors = 2);
        var i3 = r3.getAttribute("position"), a2 = new Float32Array(3 * i3.count);
        r3.setAttribute("color", new yr(a2, 3)), this.add(new ti(r3, this.material)), this.update();
      }
      function gh(t3, e3, n3, r3) {
        t3 = t3 || 10, e3 = e3 || 10, n3 = new lr(void 0 !== n3 ? n3 : 4473924), r3 = new lr(void 0 !== r3 ? r3 : 8947848);
        for (var i3 = e3 / 2, a2 = t3 / e3, o2 = t3 / 2, s2 = [], l2 = [], c2 = 0, u2 = 0, h2 = -o2; c2 <= e3; c2++, h2 += a2) {
          s2.push(-o2, 0, h2, o2, 0, h2), s2.push(h2, 0, -o2, h2, 0, o2);
          var p2 = c2 === i3 ? n3 : r3;
          p2.toArray(l2, u2), u2 += 3, p2.toArray(l2, u2), u2 += 3, p2.toArray(l2, u2), u2 += 3, p2.toArray(l2, u2), u2 += 3;
        }
        var d2 = new jr();
        d2.setAttribute("position", new Cr(s2, 3)), d2.setAttribute("color", new Cr(l2, 3));
        var f2 = new Xo({ vertexColors: 2 });
        rs.call(this, d2, f2);
      }
      function yh(t3, e3, n3, r3, i3, a2) {
        t3 = t3 || 10, e3 = e3 || 16, n3 = n3 || 8, r3 = r3 || 64, i3 = new lr(void 0 !== i3 ? i3 : 4473924), a2 = new lr(void 0 !== a2 ? a2 : 8947848);
        var o2, s2, l2, c2, u2, h2, p2, d2 = [], f2 = [];
        for (c2 = 0; c2 <= e3; c2++) l2 = c2 / e3 * (2 * Math.PI), o2 = Math.sin(l2) * t3, s2 = Math.cos(l2) * t3, d2.push(0, 0, 0), d2.push(o2, 0, s2), p2 = 1 & c2 ? i3 : a2, f2.push(p2.r, p2.g, p2.b), f2.push(p2.r, p2.g, p2.b);
        for (c2 = 0; c2 <= n3; c2++) for (p2 = 1 & c2 ? i3 : a2, h2 = t3 - t3 / n3 * c2, u2 = 0; u2 < r3; u2++) l2 = u2 / r3 * (2 * Math.PI), o2 = Math.sin(l2) * h2, s2 = Math.cos(l2) * h2, d2.push(o2, 0, s2), f2.push(p2.r, p2.g, p2.b), l2 = (u2 + 1) / r3 * (2 * Math.PI), o2 = Math.sin(l2) * h2, s2 = Math.cos(l2) * h2, d2.push(o2, 0, s2), f2.push(p2.r, p2.g, p2.b);
        var m2 = new jr();
        m2.setAttribute("position", new Cr(d2, 3)), m2.setAttribute("color", new Cr(f2, 3));
        var g2 = new Xo({ vertexColors: 2 });
        rs.call(this, m2, g2);
      }
      ((mh.prototype = Object.create(yn.prototype)).constructor = mh).prototype.dispose = function() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
      }, mh.prototype.update = function() {
        var t3 = this.children[0];
        if (void 0 !== this.color) this.material.color.set(this.color);
        else {
          var e3 = t3.geometry.getAttribute("color");
          dh.copy(this.light.color), fh.copy(this.light.groundColor);
          for (var n3 = 0, r3 = e3.count; n3 < r3; n3++) {
            var i3 = n3 < r3 / 2 ? dh : fh;
            e3.setXYZ(n3, i3.r, i3.g, i3.b);
          }
          e3.needsUpdate = true;
        }
        t3.lookAt(ph.setFromMatrixPosition(this.light.matrixWorld).negate());
      }, gh.prototype = Object.assign(Object.create(rs.prototype), { constructor: gh, copy: function(t3) {
        return rs.prototype.copy.call(this, t3), this.geometry.copy(t3.geometry), this.material.copy(t3.material), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      } }), (yh.prototype = Object.create(rs.prototype)).constructor = yh;
      var vh = new He(), xh = new He(), wh = new He();
      function bh(t3, e3, n3) {
        yn.call(this), this.light = t3, this.light.updateMatrixWorld(), this.matrix = t3.matrixWorld, this.matrixAutoUpdate = false, this.color = n3, void 0 === e3 && (e3 = 1);
        var r3 = new jr();
        r3.setAttribute("position", new Cr([-e3, e3, 0, e3, e3, 0, e3, -e3, 0, -e3, -e3, 0, -e3, e3, 0], 3));
        var i3 = new Xo({ fog: false });
        this.lightPlane = new ts(r3, i3), this.add(this.lightPlane), (r3 = new jr()).setAttribute("position", new Cr([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new ts(r3, i3), this.add(this.targetLine), this.update();
      }
      ((bh.prototype = Object.create(yn.prototype)).constructor = bh).prototype.dispose = function() {
        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
      }, bh.prototype.update = function() {
        vh.setFromMatrixPosition(this.light.matrixWorld), xh.setFromMatrixPosition(this.light.target.matrixWorld), wh.subVectors(xh, vh), this.lightPlane.lookAt(xh), void 0 !== this.color ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(xh), this.targetLine.scale.z = wh.length();
      };
      var Mh = new He(), _h = new gi();
      function Th(t3) {
        var e3 = new jr(), n3 = new Xo({ color: 16777215, vertexColors: 1 }), r3 = [], i3 = [], a2 = {}, o2 = new lr(16755200), s2 = new lr(16711680), l2 = new lr(43775), c2 = new lr(16777215), u2 = new lr(3355443);
        function h2(t4, e4, n4) {
          p2(t4, n4), p2(e4, n4);
        }
        function p2(t4, e4) {
          r3.push(0, 0, 0), i3.push(e4.r, e4.g, e4.b), void 0 === a2[t4] && (a2[t4] = []), a2[t4].push(r3.length / 3 - 1);
        }
        h2("n1", "n2", o2), h2("n2", "n4", o2), h2("n4", "n3", o2), h2("n3", "n1", o2), h2("f1", "f2", o2), h2("f2", "f4", o2), h2("f4", "f3", o2), h2("f3", "f1", o2), h2("n1", "f1", o2), h2("n2", "f2", o2), h2("n3", "f3", o2), h2("n4", "f4", o2), h2("p", "n1", s2), h2("p", "n2", s2), h2("p", "n3", s2), h2("p", "n4", s2), h2("u1", "u2", l2), h2("u2", "u3", l2), h2("u3", "u1", l2), h2("c", "t", c2), h2("p", "c", u2), h2("cn1", "cn2", u2), h2("cn3", "cn4", u2), h2("cf1", "cf2", u2), h2("cf3", "cf4", u2), e3.setAttribute("position", new Cr(r3, 3)), e3.setAttribute("color", new Cr(i3, 3)), rs.call(this, e3, n3), this.camera = t3, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = t3.matrixWorld, this.matrixAutoUpdate = false, this.pointMap = a2, this.update();
      }
      function Ch(t3, e3, n3, r3, i3, a2, o2) {
        Mh.set(i3, a2, o2).unproject(r3);
        var s2 = e3[t3];
        if (void 0 !== s2) for (var l2 = n3.getAttribute("position"), c2 = 0, u2 = s2.length; c2 < u2; c2++) l2.setXYZ(s2[c2], Mh.x, Mh.y, Mh.z);
      }
      ((Th.prototype = Object.create(rs.prototype)).constructor = Th).prototype.update = function() {
        var t3 = this.geometry, e3 = this.pointMap;
        _h.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), Ch("c", e3, t3, _h, 0, 0, -1), Ch("t", e3, t3, _h, 0, 0, 1), Ch("n1", e3, t3, _h, -1, -1, -1), Ch("n2", e3, t3, _h, 1, -1, -1), Ch("n3", e3, t3, _h, -1, 1, -1), Ch("n4", e3, t3, _h, 1, 1, -1), Ch("f1", e3, t3, _h, -1, -1, 1), Ch("f2", e3, t3, _h, 1, -1, 1), Ch("f3", e3, t3, _h, -1, 1, 1), Ch("f4", e3, t3, _h, 1, 1, 1), Ch("u1", e3, t3, _h, 0.7, 1.1, -1), Ch("u2", e3, t3, _h, -0.7, 1.1, -1), Ch("u3", e3, t3, _h, 0, 2, -1), Ch("cf1", e3, t3, _h, -1, 0, 1), Ch("cf2", e3, t3, _h, 1, 0, 1), Ch("cf3", e3, t3, _h, 0, -1, 1), Ch("cf4", e3, t3, _h, 0, 1, 1), Ch("cn1", e3, t3, _h, -1, 0, -1), Ch("cn2", e3, t3, _h, 1, 0, -1), Ch("cn3", e3, t3, _h, 0, -1, -1), Ch("cn4", e3, t3, _h, 0, 1, -1), t3.getAttribute("position").needsUpdate = true;
      };
      var Sh = new Rn();
      function Dh(t3, e3) {
        this.object = t3, void 0 === e3 && (e3 = 16776960);
        var n3 = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), r3 = new Float32Array(24), i3 = new jr();
        i3.setIndex(new yr(n3, 1)), i3.setAttribute("position", new yr(r3, 3)), rs.call(this, i3, new Xo({ color: e3 })), this.matrixAutoUpdate = false, this.update();
      }
      function Eh(t3, e3) {
        this.type = "Box3Helper", this.box = t3, e3 = e3 || 16776960;
        var n3 = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), r3 = new jr();
        r3.setIndex(new yr(n3, 1)), r3.setAttribute("position", new Cr([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)), rs.call(this, r3, new Xo({ color: e3 })), this.geometry.computeBoundingSphere();
      }
      function Oh(t3, e3, n3) {
        this.type = "PlaneHelper", this.plane = t3, this.size = void 0 === e3 ? 1 : e3;
        var r3 = void 0 !== n3 ? n3 : 16776960, i3 = new jr();
        i3.setAttribute("position", new Cr([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)), i3.computeBoundingSphere(), ts.call(this, i3, new Xo({ color: r3 }));
        var a2 = new jr();
        a2.setAttribute("position", new Cr([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)), a2.computeBoundingSphere(), this.add(new ti(a2, new mr({ color: r3, opacity: 0.2, transparent: true, depthWrite: false })));
      }
      ((Dh.prototype = Object.create(rs.prototype)).constructor = Dh).prototype.update = function(t3) {
        if (void 0 !== t3 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), void 0 !== this.object && Sh.setFromObject(this.object), !Sh.isEmpty()) {
          var e3 = Sh.min, n3 = Sh.max, r3 = this.geometry.attributes.position, i3 = r3.array;
          i3[0] = n3.x, i3[1] = n3.y, i3[2] = n3.z, i3[3] = e3.x, i3[4] = n3.y, i3[5] = n3.z, i3[6] = e3.x, i3[7] = e3.y, i3[8] = n3.z, i3[9] = n3.x, i3[10] = e3.y, i3[11] = n3.z, i3[12] = n3.x, i3[13] = n3.y, i3[14] = e3.z, i3[15] = e3.x, i3[16] = n3.y, i3[17] = e3.z, i3[18] = e3.x, i3[19] = e3.y, i3[20] = e3.z, i3[21] = n3.x, i3[22] = e3.y, i3[23] = e3.z, r3.needsUpdate = true, this.geometry.computeBoundingSphere();
        }
      }, Dh.prototype.setFromObject = function(t3) {
        return this.object = t3, this.update(), this;
      }, Dh.prototype.copy = function(t3) {
        return rs.prototype.copy.call(this, t3), this.object = t3.object, this;
      }, Dh.prototype.clone = function() {
        return new this.constructor().copy(this);
      }, ((Eh.prototype = Object.create(rs.prototype)).constructor = Eh).prototype.updateMatrixWorld = function(t3) {
        var e3 = this.box;
        e3.isEmpty() || (e3.getCenter(this.position), e3.getSize(this.scale), this.scale.multiplyScalar(0.5), yn.prototype.updateMatrixWorld.call(this, t3));
      }, ((Oh.prototype = Object.create(ts.prototype)).constructor = Oh).prototype.updateMatrixWorld = function(t3) {
        var e3 = -this.plane.constant;
        Math.abs(e3) < 1e-8 && (e3 = 1e-8), this.scale.set(0.5 * this.size, 0.5 * this.size, e3), this.children[0].material.side = e3 < 0 ? l : s, this.lookAt(this.plane.normal), yn.prototype.updateMatrixWorld.call(this, t3);
      };
      var Ah, Ph, Rh = new He();
      function Lh(t3, e3, n3, r3, i3, a2) {
        yn.call(this), void 0 === t3 && (t3 = new He(0, 0, 1)), void 0 === e3 && (e3 = new He(0, 0, 0)), void 0 === n3 && (n3 = 1), void 0 === r3 && (r3 = 16776960), void 0 === i3 && (i3 = 0.2 * n3), void 0 === a2 && (a2 = 0.2 * i3), void 0 === Ah && ((Ah = new jr()).setAttribute("position", new Cr([0, 0, 0, 0, 1, 0], 3)), (Ph = new bl(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)), this.position.copy(e3), this.line = new ts(Ah, new Xo({ color: r3 })), this.line.matrixAutoUpdate = false, this.add(this.line), this.cone = new ti(Ph, new mr({ color: r3 })), this.cone.matrixAutoUpdate = false, this.add(this.cone), this.setDirection(t3), this.setLength(n3, i3, a2);
      }
      function Ih(t3) {
        var e3 = [0, 0, 0, t3 = t3 || 1, 0, 0, 0, 0, 0, 0, t3, 0, 0, 0, 0, 0, 0, t3], n3 = new jr();
        n3.setAttribute("position", new Cr(e3, 3)), n3.setAttribute("color", new Cr([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1], 3));
        var r3 = new Xo({ vertexColors: 2 });
        rs.call(this, n3, r3);
      }
      ((Lh.prototype = Object.create(yn.prototype)).constructor = Lh).prototype.setDirection = function(t3) {
        if (0.99999 < t3.y) this.quaternion.set(0, 0, 0, 1);
        else if (t3.y < -0.99999) this.quaternion.set(1, 0, 0, 0);
        else {
          Rh.set(t3.z, 0, -t3.x).normalize();
          var e3 = Math.acos(t3.y);
          this.quaternion.setFromAxisAngle(Rh, e3);
        }
      }, Lh.prototype.setLength = function(t3, e3, n3) {
        void 0 === e3 && (e3 = 0.2 * t3), void 0 === n3 && (n3 = 0.2 * e3), this.line.scale.set(1, Math.max(1e-4, t3 - e3), 1), this.line.updateMatrix(), this.cone.scale.set(n3, e3, n3), this.cone.position.y = t3, this.cone.updateMatrix();
      }, Lh.prototype.setColor = function(t3) {
        this.line.material.color.set(t3), this.cone.material.color.set(t3);
      }, Lh.prototype.copy = function(t3) {
        return yn.prototype.copy.call(this, t3, false), this.line.copy(t3.line), this.cone.copy(t3.cone), this;
      }, Lh.prototype.clone = function() {
        return new this.constructor().copy(this);
      }, (Ih.prototype = Object.create(rs.prototype)).constructor = Ih;
      var kh = 4, jh = 8, Nh = Math.pow(2, jh), Vh = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582], Fh = jh - kh + 1 + Vh.length, Bh = 20, Gh = {};
      Gh[pe] = 0, Gh[de] = 1, Gh[me] = 2, Gh[ye] = 3, Gh[ve] = 4, Gh[xe] = 5, Gh[fe] = 6;
      var zh, Uh, Hh = new Gc(), Wh = ((Uh = new El({ defines: { n: zh = Bh }, uniforms: { envMap: { value: null }, samples: { value: 1 }, weights: { value: new Float32Array(zh) }, latitudinal: { value: false }, dTheta: { value: 0 }, mipInt: { value: 0 }, poleAxis: { value: new He(0, 1, 0) }, inputEncoding: { value: Gh[pe] }, outputEncoding: { value: Gh[pe] } }, vertexShader: "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n	uv = 2.0 * uv - 1.0;\n	vec3 direction = vec3(uv, 1.0);\n	if (face == 0.0) {\n		direction = direction.zyx;\n		direction.z *= -1.0;\n	} else if (face == 1.0) {\n		direction = direction.xzy;\n		direction.z *= -1.0;\n	} else if (face == 3.0) {\n		direction = direction.zyx;\n		direction.x *= -1.0;\n	} else if (face == 4.0) {\n		direction = direction.xzy;\n		direction.y *= -1.0;\n	} else if (face == 5.0) {\n		direction.xz *= -1.0;\n	}\n	return direction;\n}\nvoid main() {\n	vOutputDirection = getDirection(uv, faceIndex);\n	gl_Position = vec4( position, 1.0 );\n}\n	", fragmentShader: "\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n	if(inputEncoding == 0){\n		return value;\n	}else if(inputEncoding == 1){\n		return sRGBToLinear(value);\n	}else if(inputEncoding == 2){\n		return RGBEToLinear(value);\n	}else if(inputEncoding == 3){\n		return RGBMToLinear(value, 7.0);\n	}else if(inputEncoding == 4){\n		return RGBMToLinear(value, 16.0);\n	}else if(inputEncoding == 5){\n		return RGBDToLinear(value, 256.0);\n	}else{\n		return GammaToLinear(value, 2.2);\n	}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n	if(outputEncoding == 0){\n		return value;\n	}else if(outputEncoding == 1){\n		return LinearTosRGB(value);\n	}else if(outputEncoding == 2){\n		return LinearToRGBE(value);\n	}else if(outputEncoding == 3){\n		return LinearToRGBM(value, 7.0);\n	}else if(outputEncoding == 4){\n		return LinearToRGBM(value, 16.0);\n	}else if(outputEncoding == 5){\n		return LinearToRGBD(value, 256.0);\n	}else{\n		return LinearToGamma(value, 2.2);\n	}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n	return inputTexelToLinear(color);\n}\n	\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n	gl_FragColor = vec4(0.0);\n	for (int i = 0; i < n; i++) {\n		if (i >= samples)\n			break;\n		for (int dir = -1; dir < 2; dir += 2) {\n			if (i == 0 && dir == 1)\n				continue;\n			vec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n			if (all(equal(axis, vec3(0.0))))\n				axis = cross(vec3(0.0, 1.0, 0.0), vOutputDirection);\n			axis = normalize(axis);\n			float theta = dTheta * float(dir * i);\n			float cosTheta = cos(theta);\n			// Rodrigues' axis-angle rotation\n			vec3 sampleDirection = vOutputDirection * cosTheta\n					+ cross(axis, vOutputDirection) * sin(theta)\n					+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n			gl_FragColor.rgb +=\n					weights[i] * bilinearCubeUV(envMap, sampleDirection, mipInt);\n		}\n	}\n	gl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n		", blending: h, depthTest: false, depthWrite: false })).type = "SphericalGaussianBlur", Uh), Jh = null, qh = null, Xh = function() {
        for (var t3 = [], e3 = [], n3 = [], r3 = jh, i3 = 0; i3 < Fh; i3++) {
          var a2 = Math.pow(2, r3);
          e3.push(a2);
          var o2 = 1 / a2;
          jh - kh < i3 ? o2 = Vh[i3 - jh + kh - 1] : 0 == i3 && (o2 = 0), n3.push(o2);
          for (var s2 = 1 / (a2 - 1), l2 = -s2 / 2, c2 = 1 + s2 / 2, u2 = [l2, l2, c2, l2, c2, c2, l2, l2, c2, c2, l2, c2], h2 = new Float32Array(108), p2 = new Float32Array(72), d2 = new Float32Array(36), f2 = 0; f2 < 6; f2++) {
            var m2 = f2 % 3 * 2 / 3 - 1, g2 = 2 < f2 ? 0 : -1, y2 = [m2, g2, 0, m2 + 2 / 3, g2, 0, m2 + 2 / 3, 1 + g2, 0, m2, g2, 0, m2 + 2 / 3, 1 + g2, 0, m2, 1 + g2, 0];
            h2.set(y2, 18 * f2), p2.set(u2, 12 * f2);
            var v2 = [f2, f2, f2, f2, f2, f2];
            d2.set(v2, 6 * f2);
          }
          var x2 = new jr();
          x2.setAttribute("position", new yr(h2, 3)), x2.setAttribute("uv", new yr(p2, 2)), x2.setAttribute("faceIndex", new yr(d2, 1)), t3.push(x2), kh < r3 && r3--;
        }
        return { _lodPlanes: t3, _sizeLods: e3, _sigmas: n3 };
      }(), Yh = Xh._lodPlanes, Zh = Xh._sizeLods, Kh = Xh._sigmas, $h = null, Qh = null, tp = null, ep = (1 + Math.sqrt(5)) / 2, np = 1 / ep, rp = [new He(1, 1, 1), new He(-1, 1, 1), new He(1, 1, -1), new He(-1, 1, -1), new He(0, ep, np), new He(0, ep, -np), new He(np, 0, ep), new He(-np, 0, ep), new He(ep, np, 0), new He(-ep, np, 0)];
      function ip(t3) {
        Qh = t3, sp(Wh);
      }
      function ap(t3) {
        var e3 = { magFilter: ot, minFilter: ot, generateMipmaps: false, type: t3 ? t3.type : pt, format: t3 ? t3.format : Ot, encoding: t3 ? t3.encoding : me, depthBuffer: false, stencilBuffer: false }, n3 = lp(e3);
        return n3.depthBuffer = !t3, $h = lp(e3), n3;
      }
      function op(t3) {
        $h.dispose(), Qh.setRenderTarget(tp), t3.scissorTest = false, t3.setSize(t3.width, t3.height);
      }
      function sp(t3) {
        var e3 = new vn();
        e3.add(new ti(Yh[0], t3)), Qh.compile(e3, Hh);
      }
      function lp(t3) {
        var e3 = new Fe(3 * Nh, 3 * Nh, t3);
        return e3.texture.mapping = et, e3.texture.name = "PMREM.cubeUv", e3.scissorTest = true, e3;
      }
      function cp(t3, e3, n3, r3, i3) {
        t3.viewport.set(e3, n3, r3, i3), t3.scissor.set(e3, n3, r3, i3);
      }
      function up(t3) {
        var e3 = Qh.autoClear;
        Qh.autoClear = false;
        for (var n3 = 1; n3 < Fh; n3++) hp(t3, n3 - 1, n3, Math.sqrt(Kh[n3] * Kh[n3] - Kh[n3 - 1] * Kh[n3 - 1]), rp[(n3 - 1) % rp.length]);
        Qh.autoClear = e3;
      }
      function hp(t3, e3, n3, r3, i3) {
        pp(t3, $h, e3, n3, r3, "latitudinal", i3), pp($h, t3, n3, n3, r3, "longitudinal", i3);
      }
      function pp(t3, e3, n3, r3, i3, a2, o2) {
        "latitudinal" !== a2 && "longitudinal" !== a2 && console.error("blur direction must be either latitudinal or longitudinal!");
        var s2 = new vn();
        s2.add(new ti(Yh[r3], Wh));
        var l2 = Wh.uniforms, c2 = Zh[n3] - 1, u2 = isFinite(i3) ? Math.PI / (2 * c2) : 2 * Math.PI / (2 * Bh - 1), h2 = i3 / u2, p2 = isFinite(i3) ? 1 + Math.floor(3 * h2) : Bh;
        Bh < p2 && console.warn("sigmaRadians, " + i3 + ", is too large and will clip, as it requested " + p2 + " samples when the maximum is set to " + Bh);
        for (var d2 = [], f2 = 0, m2 = 0; m2 < Bh; ++m2) {
          var g2 = m2 / h2, y2 = Math.exp(-g2 * g2 / 2);
          d2.push(y2), 0 == m2 ? f2 += y2 : m2 < p2 && (f2 += 2 * y2);
        }
        for (m2 = 0; m2 < d2.length; m2++) d2[m2] = d2[m2] / f2;
        l2.envMap.value = t3.texture, l2.samples.value = p2, l2.weights.value = d2, l2.latitudinal.value = "latitudinal" === a2, o2 && (l2.poleAxis.value = o2), l2.dTheta.value = u2, l2.mipInt.value = jh - n3, l2.inputEncoding.value = Gh[t3.texture.encoding], l2.outputEncoding.value = Gh[t3.texture.encoding];
        var v2 = Zh[r3];
        cp(e3, g2 = 3 * Math.max(0, Nh - 2 * v2), (0 === r3 ? 0 : 2 * Nh) + 2 * v2 * (jh - kh < r3 ? r3 - jh + kh : 0), 3 * v2, 2 * v2), Qh.setRenderTarget(e3), Qh.render(s2, Hh);
      }
      function dp() {
        var t3 = new El({ uniforms: { envMap: { value: null }, texelSize: { value: new Le(1, 1) }, inputEncoding: { value: Gh[pe] }, outputEncoding: { value: Gh[pe] } }, vertexShader: "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n	uv = 2.0 * uv - 1.0;\n	vec3 direction = vec3(uv, 1.0);\n	if (face == 0.0) {\n		direction = direction.zyx;\n		direction.z *= -1.0;\n	} else if (face == 1.0) {\n		direction = direction.xzy;\n		direction.z *= -1.0;\n	} else if (face == 3.0) {\n		direction = direction.zyx;\n		direction.x *= -1.0;\n	} else if (face == 4.0) {\n		direction = direction.xzy;\n		direction.y *= -1.0;\n	} else if (face == 5.0) {\n		direction.xz *= -1.0;\n	}\n	return direction;\n}\nvoid main() {\n	vOutputDirection = getDirection(uv, faceIndex);\n	gl_Position = vec4( position, 1.0 );\n}\n	", fragmentShader: "\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n	if(inputEncoding == 0){\n		return value;\n	}else if(inputEncoding == 1){\n		return sRGBToLinear(value);\n	}else if(inputEncoding == 2){\n		return RGBEToLinear(value);\n	}else if(inputEncoding == 3){\n		return RGBMToLinear(value, 7.0);\n	}else if(inputEncoding == 4){\n		return RGBMToLinear(value, 16.0);\n	}else if(inputEncoding == 5){\n		return RGBDToLinear(value, 256.0);\n	}else{\n		return GammaToLinear(value, 2.2);\n	}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n	if(outputEncoding == 0){\n		return value;\n	}else if(outputEncoding == 1){\n		return LinearTosRGB(value);\n	}else if(outputEncoding == 2){\n		return LinearToRGBE(value);\n	}else if(outputEncoding == 3){\n		return LinearToRGBM(value, 7.0);\n	}else if(outputEncoding == 4){\n		return LinearToRGBM(value, 16.0);\n	}else if(outputEncoding == 5){\n		return LinearToRGBD(value, 256.0);\n	}else{\n		return LinearToGamma(value, 2.2);\n	}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n	return inputTexelToLinear(color);\n}\n	\n\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n\nvoid main() {\n	gl_FragColor = vec4(0.0);\n	vec3 outputDirection = normalize(vOutputDirection);\n	vec2 uv;\n	uv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;\n	uv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;\n	vec2 f = fract(uv / texelSize - 0.5);\n	uv -= f * texelSize;\n	vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n	uv.x += texelSize.x;\n	vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n	uv.y += texelSize.y;\n	vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n	uv.x -= texelSize.x;\n	vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n	vec3 tm = mix(tl, tr, f.x);\n	vec3 bm = mix(bl, br, f.x);\n	gl_FragColor.rgb = mix(tm, bm, f.y);\n	gl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n		", blending: h, depthTest: false, depthWrite: false });
        return t3.type = "EquirectangularToCubeUV", t3;
      }
      function fp() {
        var t3 = new El({ uniforms: { envMap: { value: null }, inputEncoding: { value: Gh[pe] }, outputEncoding: { value: Gh[pe] } }, vertexShader: "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n	uv = 2.0 * uv - 1.0;\n	vec3 direction = vec3(uv, 1.0);\n	if (face == 0.0) {\n		direction = direction.zyx;\n		direction.z *= -1.0;\n	} else if (face == 1.0) {\n		direction = direction.xzy;\n		direction.z *= -1.0;\n	} else if (face == 3.0) {\n		direction = direction.zyx;\n		direction.x *= -1.0;\n	} else if (face == 4.0) {\n		direction = direction.xzy;\n		direction.y *= -1.0;\n	} else if (face == 5.0) {\n		direction.xz *= -1.0;\n	}\n	return direction;\n}\nvoid main() {\n	vOutputDirection = getDirection(uv, faceIndex);\n	gl_Position = vec4( position, 1.0 );\n}\n	", fragmentShader: "\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n	if(inputEncoding == 0){\n		return value;\n	}else if(inputEncoding == 1){\n		return sRGBToLinear(value);\n	}else if(inputEncoding == 2){\n		return RGBEToLinear(value);\n	}else if(inputEncoding == 3){\n		return RGBMToLinear(value, 7.0);\n	}else if(inputEncoding == 4){\n		return RGBMToLinear(value, 16.0);\n	}else if(inputEncoding == 5){\n		return RGBDToLinear(value, 256.0);\n	}else{\n		return GammaToLinear(value, 2.2);\n	}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n	if(outputEncoding == 0){\n		return value;\n	}else if(outputEncoding == 1){\n		return LinearTosRGB(value);\n	}else if(outputEncoding == 2){\n		return LinearToRGBE(value);\n	}else if(outputEncoding == 3){\n		return LinearToRGBM(value, 7.0);\n	}else if(outputEncoding == 4){\n		return LinearToRGBM(value, 16.0);\n	}else if(outputEncoding == 5){\n		return LinearToRGBD(value, 256.0);\n	}else{\n		return LinearToGamma(value, 2.2);\n	}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n	return inputTexelToLinear(color);\n}\n	\n\nvoid main() {\n	gl_FragColor = vec4(0.0);\n	gl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n	gl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n		", blending: h, depthTest: false, depthWrite: false });
        return t3.type = "CubemapToCubeUV", t3;
      }
      function mp(t3) {
        console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), xc.call(this, t3), this.type = "catmullrom", this.closed = true;
      }
      function gp(t3) {
        console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), xc.call(this, t3), this.type = "catmullrom";
      }
      function yp(t3) {
        console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."), xc.call(this, t3), this.type = "catmullrom";
      }
      ip.prototype = { constructor: ip, fromScene: function(t3, e3, n3, r3) {
        void 0 === e3 && (e3 = 0), void 0 === n3 && (n3 = 0.1), void 0 === r3 && (r3 = 100), tp = Qh.getRenderTarget();
        var i3 = ap();
        return function(t4, e4, n4, r4) {
          var i4 = new yi(90, 1, e4, n4), a2 = [1, 1, 1, 1, -1, 1], o2 = [1, 1, -1, -1, -1, 1], s2 = Qh.outputEncoding, l2 = Qh.toneMapping, c2 = Qh.toneMappingExposure, u2 = Qh.getClearColor(), h2 = Qh.getClearAlpha();
          Qh.toneMapping = W, Qh.toneMappingExposure = 1, Qh.outputEncoding = pe, t4.scale.z *= -1;
          var p2 = t4.background;
          if (p2 && p2.isColor) {
            p2.convertSRGBToLinear();
            var d2 = Math.max(p2.r, p2.g, p2.b), f2 = Math.min(Math.max(Math.ceil(Math.log2(d2)), -128), 127);
            p2 = p2.multiplyScalar(Math.pow(2, -f2));
            var m2 = (f2 + 128) / 255;
            Qh.setClearColor(p2, m2), t4.background = null;
          }
          for (var g2 = 0; g2 < 6; g2++) {
            var y2 = g2 % 3;
            0 == y2 ? (i4.up.set(0, a2[g2], 0), i4.lookAt(o2[g2], 0, 0)) : 1 == y2 ? (i4.up.set(0, 0, a2[g2]), i4.lookAt(0, o2[g2], 0)) : (i4.up.set(0, a2[g2], 0), i4.lookAt(0, 0, o2[g2])), cp(r4, y2 * Nh, 2 < g2 ? Nh : 0, Nh, Nh), Qh.setRenderTarget(r4), Qh.render(t4, i4);
          }
          Qh.toneMapping = l2, Qh.toneMappingExposure = c2, Qh.outputEncoding = s2, Qh.setClearColor(u2, h2), t4.scale.z *= -1;
        }(t3, n3, r3, i3), 0 < e3 && hp(i3, 0, 0, e3), up(i3), op(i3), i3;
      }, fromEquirectangular: function(t3) {
        return t3.magFilter = ot, t3.minFilter = ot, t3.generateMipmaps = false, this.fromCubemap(t3);
      }, fromCubemap: function(t3) {
        tp = Qh.getRenderTarget();
        var e3 = ap(t3);
        return function(t4, e4) {
          var n3 = new vn();
          t4.isCubeTexture ? null == qh && (qh = fp()) : null == Jh && (Jh = dp());
          var r3 = t4.isCubeTexture ? qh : Jh;
          n3.add(new ti(Yh[0], r3));
          var i3 = r3.uniforms;
          (i3.envMap.value = t4).isCubeTexture || i3.texelSize.value.set(1 / t4.image.width, 1 / t4.image.height), i3.inputEncoding.value = Gh[t4.encoding], i3.outputEncoding.value = Gh[t4.encoding], cp(e4, 0, 0, 3 * Nh, 2 * Nh), Qh.setRenderTarget(e4), Qh.render(n3, Hh);
        }(t3, e3), up(e3), op(e3), e3;
      }, compileCubemapShader: function() {
        null == qh && sp(qh = fp());
      }, compileEquirectangularShader: function() {
        null == Jh && sp(Jh = dp());
      }, dispose: function() {
        Wh.dispose(), null != qh && qh.dispose(), null != Jh && Jh.dispose();
        for (var t3 = 0; t3 < Yh.length; t3++) Yh[t3].dispose();
      } }, hc.create = function(t3, e3) {
        return console.log("THREE.Curve.create() has been deprecated"), t3.prototype = Object.create(hc.prototype), (t3.prototype.constructor = t3).prototype.getPoint = e3, t3;
      }, Object.assign(Pc.prototype, { createPointsGeometry: function(t3) {
        console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var e3 = this.getPoints(t3);
        return this.createGeometry(e3);
      }, createSpacedPointsGeometry: function(t3) {
        console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var e3 = this.getSpacedPoints(t3);
        return this.createGeometry(e3);
      }, createGeometry: function(t3) {
        console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        for (var e3 = new si(), n3 = 0, r3 = t3.length; n3 < r3; n3++) {
          var i3 = t3[n3];
          e3.vertices.push(new He(i3.x, i3.y, i3.z || 0));
        }
        return e3;
      } }), Object.assign(Rc.prototype, { fromPoints: function(t3) {
        return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(t3);
      } }), mp.prototype = Object.create(xc.prototype), gp.prototype = Object.create(xc.prototype), yp.prototype = Object.create(xc.prototype), Object.assign(yp.prototype, { initFromArray: function() {
        console.error("THREE.Spline: .initFromArray() has been removed.");
      }, getControlPointsArray: function() {
        console.error("THREE.Spline: .getControlPointsArray() has been removed.");
      }, reparametrizeByArcLength: function() {
        console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.");
      } }), gh.prototype.setColors = function() {
        console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
      }, uh.prototype.update = function() {
        console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
      }, Object.assign(nc.prototype, { extractUrlBase: function(t3) {
        return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), qc.extractUrlBase(t3);
      } }), nc.Handlers = { add: function() {
        console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.");
      }, get: function() {
        console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.");
      } }, Object.assign($c.prototype, { setTexturePath: function(t3) {
        return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."), this.setResourcePath(t3);
      } }), Object.assign(th.prototype, { center: function(t3) {
        return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(t3);
      }, empty: function() {
        return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
      }, isIntersectionBox: function(t3) {
        return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t3);
      }, size: function(t3) {
        return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(t3);
      } }), Object.assign(Rn.prototype, { center: function(t3) {
        return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(t3);
      }, empty: function() {
        return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
      }, isIntersectionBox: function(t3) {
        return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t3);
      }, isIntersectionSphere: function(t3) {
        return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(t3);
      }, size: function(t3) {
        return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(t3);
      } }), _i.prototype.setFromMatrix = function(t3) {
        return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."), this.setFromProjectionMatrix(t3);
      }, rh.prototype.center = function(t3) {
        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(t3);
      }, Object.assign(Re, { random16: function() {
        return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."), Math.random();
      }, nearestPowerOfTwo: function(t3) {
        return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."), Re.floorPowerOfTwo(t3);
      }, nextPowerOfTwo: function(t3) {
        return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."), Re.ceilPowerOfTwo(t3);
      } }), Object.assign(Ie.prototype, { flattenToArrayOffset: function(t3, e3) {
        return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(t3, e3);
      }, multiplyVector3: function(t3) {
        return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), t3.applyMatrix3(this);
      }, multiplyVector3Array: function() {
        console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
      }, applyToBufferAttribute: function(t3) {
        return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."), t3.applyMatrix3(this);
      }, applyToVector3Array: function() {
        console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
      } }), Object.assign($e.prototype, { extractPosition: function(t3) {
        return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(t3);
      }, flattenToArrayOffset: function(t3, e3) {
        return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(t3, e3);
      }, getPosition: function() {
        return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), new He().setFromMatrixColumn(this, 3);
      }, setRotationFromQuaternion: function(t3) {
        return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(t3);
      }, multiplyToArray: function() {
        console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
      }, multiplyVector3: function(t3) {
        return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), t3.applyMatrix4(this);
      }, multiplyVector4: function(t3) {
        return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), t3.applyMatrix4(this);
      }, multiplyVector3Array: function() {
        console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
      }, rotateAxis: function(t3) {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), t3.transformDirection(this);
      }, crossVector: function(t3) {
        return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), t3.applyMatrix4(this);
      }, translate: function() {
        console.error("THREE.Matrix4: .translate() has been removed.");
      }, rotateX: function() {
        console.error("THREE.Matrix4: .rotateX() has been removed.");
      }, rotateY: function() {
        console.error("THREE.Matrix4: .rotateY() has been removed.");
      }, rotateZ: function() {
        console.error("THREE.Matrix4: .rotateZ() has been removed.");
      }, rotateByAxis: function() {
        console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
      }, applyToBufferAttribute: function(t3) {
        return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."), t3.applyMatrix4(this);
      }, applyToVector3Array: function() {
        console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
      }, makeFrustum: function(t3, e3, n3, r3, i3, a2) {
        return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(t3, e3, r3, n3, i3, a2);
      } }), qn.prototype.isIntersectionLine = function(t3) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(t3);
      }, Ge.prototype.multiplyVector3 = function(t3) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), t3.applyQuaternion(this);
      }, Object.assign(Un.prototype, { isIntersectionBox: function(t3) {
        return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t3);
      }, isIntersectionPlane: function(t3) {
        return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(t3);
      }, isIntersectionSphere: function(t3) {
        return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(t3);
      } }), Object.assign(ir.prototype, { area: function() {
        return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
      }, barycoordFromPoint: function(t3, e3) {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(t3, e3);
      }, midpoint: function(t3) {
        return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(t3);
      }, normal: function(t3) {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(t3);
      }, plane: function(t3) {
        return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(t3);
      } }), Object.assign(ir, { barycoordFromPoint: function(t3, e3, n3, r3, i3) {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), ir.getBarycoord(t3, e3, n3, r3, i3);
      }, normal: function(t3, e3, n3, r3) {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), ir.getNormal(t3, e3, n3, r3);
      } }), Object.assign(Lc.prototype, { extractAllPoints: function(t3) {
        return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(t3);
      }, extrude: function(t3) {
        return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new il(this, t3);
      }, makeGeometry: function(t3) {
        return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new gl(this, t3);
      } }), Object.assign(Le.prototype, { fromAttribute: function(t3, e3, n3) {
        return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(t3, e3, n3);
      }, distanceToManhattan: function(t3) {
        return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(t3);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(He.prototype, { setEulerFromRotationMatrix: function() {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
      }, setEulerFromQuaternion: function() {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
      }, getPositionFromMatrix: function(t3) {
        return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(t3);
      }, getScaleFromMatrix: function(t3) {
        return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(t3);
      }, getColumnFromMatrix: function(t3, e3) {
        return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(e3, t3);
      }, applyProjection: function(t3) {
        return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(t3);
      }, fromAttribute: function(t3, e3, n3) {
        return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(t3, e3, n3);
      }, distanceToManhattan: function(t3) {
        return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(t3);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(Ve.prototype, { fromAttribute: function(t3, e3, n3) {
        return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(t3, e3, n3);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(si.prototype, { computeTangents: function() {
        console.error("THREE.Geometry: .computeTangents() has been removed.");
      }, computeLineDistances: function() {
        console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.");
      }, applyMatrix: function(t3) {
        return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(t3);
      } }), Object.assign(yn.prototype, { getChildByName: function(t3) {
        return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(t3);
      }, renderDepth: function() {
        console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
      }, translate: function(t3, e3) {
        return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(e3, t3);
      }, getWorldRotation: function() {
        console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
      }, applyMatrix: function(t3) {
        return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(t3);
      } }), Object.defineProperties(yn.prototype, { eulerOrder: { get: function() {
        return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
      }, set: function(t3) {
        console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = t3;
      } }, useQuaternion: { get: function() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
      }, set: function() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
      } } }), Object.assign(ti.prototype, { setDrawMode: function() {
        console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
      } }), Object.defineProperties(ti.prototype, { drawMode: { get: function() {
        return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."), 0;
      }, set: function() {
        console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
      } } }), Object.defineProperties(No.prototype, { objects: { get: function() {
        return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels;
      } } }), Object.defineProperty(Go.prototype, "useVertexTexture", { get: function() {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.");
      }, set: function() {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.");
      } }), Vo.prototype.initBones = function() {
        console.error("THREE.SkinnedMesh: initBones() has been removed.");
      }, Object.defineProperty(hc.prototype, "__arcLengthDivisions", { get: function() {
        return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions;
      }, set: function(t3) {
        console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions = t3;
      } }), yi.prototype.setLens = function(t3, e3) {
        console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), void 0 !== e3 && (this.filmGauge = e3), this.setFocalLength(t3);
      }, Object.defineProperties(Ic.prototype, { onlyShadow: { set: function() {
        console.warn("THREE.Light: .onlyShadow has been removed.");
      } }, shadowCameraFov: { set: function(t3) {
        console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = t3;
      } }, shadowCameraLeft: { set: function(t3) {
        console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = t3;
      } }, shadowCameraRight: { set: function(t3) {
        console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = t3;
      } }, shadowCameraTop: { set: function(t3) {
        console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = t3;
      } }, shadowCameraBottom: { set: function(t3) {
        console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = t3;
      } }, shadowCameraNear: { set: function(t3) {
        console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = t3;
      } }, shadowCameraFar: { set: function(t3) {
        console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = t3;
      } }, shadowCameraVisible: { set: function() {
        console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
      } }, shadowBias: { set: function(t3) {
        console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = t3;
      } }, shadowDarkness: { set: function() {
        console.warn("THREE.Light: .shadowDarkness has been removed.");
      } }, shadowMapWidth: { set: function(t3) {
        console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = t3;
      } }, shadowMapHeight: { set: function(t3) {
        console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = t3;
      } } }), Object.defineProperties(yr.prototype, { length: { get: function() {
        return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
      } }, dynamic: { get: function() {
        return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.usage === De;
      }, set: function() {
        console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.setUsage(De);
      } } }), Object.assign(yr.prototype, { setDynamic: function(t3) {
        return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(true === t3 ? De : Se), this;
      }, copyIndicesArray: function() {
        console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
      }, setArray: function() {
        console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
      } }), Object.assign(jr.prototype, { addIndex: function(t3) {
        console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(t3);
      }, addAttribute: function(t3, e3) {
        return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."), e3 && e3.isBufferAttribute || e3 && e3.isInterleavedBufferAttribute ? "index" === t3 ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(e3), this) : this.setAttribute(t3, e3) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.setAttribute(t3, new yr(e3, arguments[2])));
      }, addDrawCall: function(t3, e3, n3) {
        void 0 !== n3 && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(t3, e3);
      }, clearDrawCalls: function() {
        console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
      }, computeTangents: function() {
        console.warn("THREE.BufferGeometry: .computeTangents() has been removed.");
      }, computeOffsets: function() {
        console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
      }, removeAttribute: function(t3) {
        return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."), this.deleteAttribute(t3);
      }, applyMatrix: function(t3) {
        return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(t3);
      } }), Object.defineProperties(jr.prototype, { drawcalls: { get: function() {
        return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
      } }, offsets: { get: function() {
        return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
      } } }), Object.defineProperties(go.prototype, { dynamic: { get: function() {
        return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."), this.usage === De;
      }, set: function(t3) {
        console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."), this.setUsage(t3);
      } } }), Object.assign(go.prototype, { setDynamic: function(t3) {
        return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(true === t3 ? De : Se), this;
      }, setArray: function() {
        console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
      } }), Object.assign(al.prototype, { getArrays: function() {
        console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.");
      }, addShapeList: function() {
        console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.");
      }, addShape: function() {
        console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.");
      } }), Object.defineProperties(Ju.prototype, { dynamic: { set: function() {
        console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.");
      } }, onUpdate: { value: function() {
        return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
      } } }), Object.defineProperties(fr.prototype, { wrapAround: { get: function() {
        console.warn("THREE.Material: .wrapAround has been removed.");
      }, set: function() {
        console.warn("THREE.Material: .wrapAround has been removed.");
      } }, overdraw: { get: function() {
        console.warn("THREE.Material: .overdraw has been removed.");
      }, set: function() {
        console.warn("THREE.Material: .overdraw has been removed.");
      } }, wrapRGB: { get: function() {
        return console.warn("THREE.Material: .wrapRGB has been removed."), new lr();
      } }, shading: { get: function() {
        console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
      }, set: function(t3) {
        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === t3;
      } }, stencilMask: { get: function() {
        return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask;
      }, set: function(t3) {
        console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask = t3;
      } } }), Object.defineProperties(Pl.prototype, { metal: { get: function() {
        return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), false;
      }, set: function() {
        console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead");
      } } }), Object.defineProperties(mi.prototype, { derivatives: { get: function() {
        return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
      }, set: function(t3) {
        console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = t3;
      } } }), Object.assign(po.prototype, { clearTarget: function(t3, e3, n3, r3) {
        console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(t3), this.clear(e3, n3, r3);
      }, animate: function(t3) {
        console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(t3);
      }, getCurrentRenderTarget: function() {
        return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
      }, getMaxAnisotropy: function() {
        return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
      }, getPrecision: function() {
        return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
      }, resetGLState: function() {
        return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
      }, supportsFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
      }, supportsHalfFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
      }, supportsStandardDerivatives: function() {
        return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
      }, supportsCompressedTextureS3TC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
      }, supportsCompressedTexturePVRTC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
      }, supportsBlendMinMax: function() {
        return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
      }, supportsVertexTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
      }, supportsInstancedArrays: function() {
        return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
      }, enableScissorTest: function(t3) {
        console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(t3);
      }, initMaterial: function() {
        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
      }, addPrePlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
      }, addPostPlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
      }, updateShadowMap: function() {
        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
      }, setFaceCulling: function() {
        console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
      }, allocTextureUnit: function() {
        console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.");
      }, setTexture: function() {
        console.warn("THREE.WebGLRenderer: .setTexture() has been removed.");
      }, setTexture2D: function() {
        console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.");
      }, setTextureCube: function() {
        console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.");
      }, getActiveMipMapLevel: function() {
        return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel();
      } }), Object.defineProperties(po.prototype, { shadowMapEnabled: { get: function() {
        return this.shadowMap.enabled;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = t3;
      } }, shadowMapType: { get: function() {
        return this.shadowMap.type;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = t3;
      } }, shadowMapCullFace: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
      } }, context: { get: function() {
        return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext();
      } }, vr: { get: function() {
        return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"), this.xr;
      } }, gammaInput: { get: function() {
        return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."), false;
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.");
      } }, gammaOutput: { get: function() {
        return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), false;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), this.outputEncoding = true === t3 ? de : pe;
      } } }), Object.defineProperties(io.prototype, { cullFace: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
      } }, renderReverseSided: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
      } }, renderSingleSided: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
      } } }), Object.defineProperties(Fe.prototype, { wrapS: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = t3;
      } }, wrapT: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = t3;
      } }, magFilter: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = t3;
      } }, minFilter: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = t3;
      } }, anisotropy: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = t3;
      } }, offset: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = t3;
      } }, repeat: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = t3;
      } }, format: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = t3;
      } }, type: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = t3;
      } }, generateMipmaps: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
      }, set: function(t3) {
        console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = t3;
      } } }), Object.defineProperties(_u.prototype, { load: { value: function(t3) {
        console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
        var e3 = this;
        return new cu().load(t3, function(t4) {
          e3.setBuffer(t4);
        }), this;
      } }, startTime: { set: function() {
        console.warn("THREE.Audio: .startTime is now .play( delay ).");
      } } }), Ou.prototype.getData = function() {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
      }, vi.prototype.updateCubeMap = function(t3, e3) {
        return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(t3, e3);
      };
      var vp = { merge: function(t3, e3, n3) {
        var r3;
        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."), e3.isMesh && (e3.matrixAutoUpdate && e3.updateMatrix(), r3 = e3.matrix, e3 = e3.geometry), t3.merge(e3, r3, n3);
      }, center: function(t3) {
        return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."), t3.center();
      } };
      ke.crossOrigin = void 0, ke.loadTexture = function(t3, e3, n3, r3) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var i3 = new uc();
        i3.setCrossOrigin(this.crossOrigin);
        var a2 = i3.load(t3, n3, void 0, r3);
        return e3 && (a2.mapping = e3), a2;
      }, ke.loadTextureCube = function(t3, e3, n3, r3) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var i3 = new cc();
        i3.setCrossOrigin(this.crossOrigin);
        var a2 = i3.load(t3, n3, void 0, r3);
        return e3 && (a2.mapping = e3), a2;
      }, ke.loadCompressedTexture = function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
      }, ke.loadCompressedTextureCube = function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
      };
      var xp = { createMultiMaterialObject: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      }, detach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      }, attach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      } };
      "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", { detail: { revision: "113" } })), t2.ACESFilmicToneMapping = Y, t2.AddEquation = y, t2.AddOperation = U, t2.AdditiveBlending = d, t2.AlphaFormat = Tt, t2.AlwaysDepth = I, t2.AlwaysStencilFunc = Ce, t2.AmbientLight = Hc, t2.AmbientLightProbe = du, t2.AnimationClip = Kl, t2.AnimationLoader = ac, t2.AnimationMixer = Wu, t2.AnimationObjectGroup = Uu, t2.AnimationUtils = Vl, t2.ArcCurve = dc, t2.ArrayCamera = co, t2.ArrowHelper = Lh, t2.Audio = _u, t2.AudioAnalyser = Ou, t2.AudioContext = lu, t2.AudioListener = Mu, t2.AudioLoader = cu, t2.AxesHelper = Ih, t2.AxisHelper = function(t3) {
        return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new Ih(t3);
      }, t2.BackSide = l, t2.BasicDepthPacking = we, t2.BasicShadowMap = 0, t2.BinaryTextureLoader = function(t3) {
        return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new sc(t3);
      }, t2.Bone = zo, t2.BooleanKeyframeTrack = Hl, t2.BoundingBoxHelper = function(t3, e3) {
        return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new Dh(t3, e3);
      }, t2.Box2 = th, t2.Box3 = Rn, t2.Box3Helper = Eh, t2.BoxBufferGeometry = ci, t2.BoxGeometry = li, t2.BoxHelper = Dh, t2.BufferAttribute = yr, t2.BufferGeometry = jr, t2.BufferGeometryLoader = Zc, t2.ByteType = dt, t2.Cache = Ql, t2.Camera = gi, t2.CameraHelper = Th, t2.CanvasRenderer = function() {
        console.error("THREE.CanvasRenderer has been removed");
      }, t2.CanvasTexture = fs, t2.CatmullRomCurve3 = xc, t2.CineonToneMapping = X, t2.CircleBufferGeometry = Cl, t2.CircleGeometry = Tl, t2.ClampToEdgeWrapping = it, t2.Clock = yu, t2.ClosedSplineCurve3 = mp, t2.Color = lr, t2.ColorKeyframeTrack = Wl, t2.CompressedTexture = ds, t2.CompressedTextureLoader = oc, t2.ConeBufferGeometry = _l, t2.ConeGeometry = Ml, t2.CubeCamera = vi, t2.CubeGeometry = li, t2.CubeReflectionMapping = Z, t2.CubeRefractionMapping = K, t2.CubeTexture = Ri, t2.CubeTextureLoader = cc, t2.CubeUVReflectionMapping = et, t2.CubeUVRefractionMapping = nt, t2.CubicBezierCurve = _c, t2.CubicBezierCurve3 = Tc, t2.CubicInterpolant = Bl, t2.CullFaceBack = n2, t2.CullFaceFront = r2, t2.CullFaceFrontBack = 3, t2.CullFaceNone = e2, t2.Curve = hc, t2.CurvePath = Pc, t2.CustomBlending = g, t2.CylinderBufferGeometry = bl, t2.CylinderGeometry = wl, t2.Cylindrical = $u, t2.DataTexture = wi, t2.DataTexture2DArray = Li, t2.DataTexture3D = Ii, t2.DataTextureLoader = sc, t2.DecrementStencilOp = 7683, t2.DecrementWrapStencilOp = 34056, t2.DefaultLoadingManager = ec, t2.DepthFormat = At, t2.DepthStencilFormat = Pt, t2.DepthTexture = ms, t2.DirectionalLight = Uc, t2.DirectionalLightHelper = bh, t2.DirectionalLightShadow = zc, t2.DiscreteInterpolant = zl, t2.DodecahedronBufferGeometry = Es, t2.DodecahedronGeometry = Ds, t2.DoubleSide = c, t2.DstAlphaFactor = E, t2.DstColorFactor = A, t2.DynamicBufferAttribute = function(t3, e3) {
        return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."), new yr(t3, e3).setUsage(De);
      }, t2.DynamicCopyUsage = 35050, t2.DynamicDrawUsage = De, t2.DynamicReadUsage = 35049, t2.EdgesGeometry = xl, t2.EdgesHelper = function(t3, e3) {
        return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new rs(new xl(t3.geometry), new Xo({ color: void 0 !== e3 ? e3 : 16777215 }));
      }, t2.EllipseCurve = pc, t2.EqualDepth = N, t2.EqualStencilFunc = 514, t2.EquirectangularReflectionMapping = $2, t2.EquirectangularRefractionMapping = Q, t2.Euler = en, t2.EventDispatcher = Ee, t2.ExtrudeBufferGeometry = al, t2.ExtrudeGeometry = il, t2.Face3 = pr, t2.Face4 = function(t3, e3, n3, r3, i3, a2, o2) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new pr(t3, e3, n3, i3, a2, o2);
      }, t2.FaceColors = 1, t2.FileLoader = ic, t2.FlatShading = 1, t2.Float32Attribute = function(t3, e3) {
        return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new Cr(t3, e3);
      }, t2.Float32BufferAttribute = Cr, t2.Float64Attribute = function(t3, e3) {
        return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new Sr(t3, e3);
      }, t2.Float64BufferAttribute = Sr, t2.FloatType = vt, t2.Fog = mo, t2.FogExp2 = fo, t2.Font = au, t2.FontLoader = su, t2.FrontFaceDirectionCCW = 1, t2.FrontFaceDirectionCW = 0, t2.FrontSide = s, t2.Frustum = _i, t2.GammaEncoding = fe, t2.Geometry = si, t2.GeometryUtils = vp, t2.GreaterDepth = F, t2.GreaterEqualDepth = V, t2.GreaterEqualStencilFunc = 518, t2.GreaterStencilFunc = 516, t2.GridHelper = gh, t2.Group = uo, t2.HalfFloatType = xt, t2.HemisphereLight = kc, t2.HemisphereLightHelper = mh, t2.HemisphereLightProbe = pu, t2.IcosahedronBufferGeometry = Ss, t2.IcosahedronGeometry = Cs, t2.ImageBitmapLoader = ru, t2.ImageLoader = lc, t2.ImageUtils = ke, t2.ImmediateRenderObject = ih, t2.IncrementStencilOp = 7682, t2.IncrementWrapStencilOp = 34055, t2.InstancedBufferAttribute = Yc, t2.InstancedBufferGeometry = Xc, t2.InstancedInterleavedBuffer = qu, t2.InstancedMesh = qo, t2.Int16Attribute = function(t3, e3) {
        return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new br(t3, e3);
      }, t2.Int16BufferAttribute = br, t2.Int32Attribute = function(t3, e3) {
        return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new _r(t3, e3);
      }, t2.Int32BufferAttribute = _r, t2.Int8Attribute = function(t3, e3) {
        return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new vr(t3, e3);
      }, t2.Int8BufferAttribute = vr, t2.IntType = gt, t2.InterleavedBuffer = go, t2.InterleavedBufferAttribute = xo, t2.Interpolant = Fl, t2.InterpolateDiscrete = se, t2.InterpolateLinear = le, t2.InterpolateSmooth = 2302, t2.InvertStencilOp = 5386, t2.JSONLoader = function() {
        console.error("THREE.JSONLoader has been removed.");
      }, t2.KeepStencilOp = Te, t2.KeyframeTrack = Ul, t2.LOD = No, t2.LatheBufferGeometry = ml, t2.LatheGeometry = fl, t2.Layers = nn, t2.LensFlare = function() {
        console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js");
      }, t2.LessDepth = k, t2.LessEqualDepth = j, t2.LessEqualStencilFunc = 515, t2.LessStencilFunc = 513, t2.Light = Ic, t2.LightProbe = hu, t2.LightShadow = jc, t2.Line = ts, t2.Line3 = rh, t2.LineBasicMaterial = Xo, t2.LineCurve = Cc, t2.LineCurve3 = Sc, t2.LineDashedMaterial = jl, t2.LineLoop = is, t2.LinePieces = 1, t2.LineSegments = rs, t2.LineStrip = 0, t2.LinearEncoding = pe, t2.LinearFilter = ct, t2.LinearInterpolant = Gl, t2.LinearMipMapLinearFilter = 1008, t2.LinearMipMapNearestFilter = 1007, t2.LinearMipmapLinearFilter = ht, t2.LinearMipmapNearestFilter = ut, t2.LinearToneMapping = W, t2.Loader = nc, t2.LoaderUtils = qc, t2.LoadingManager = tc, t2.LogLuvEncoding = ge, t2.LoopOnce = 2200, t2.LoopPingPong = 2202, t2.LoopRepeat = 2201, t2.LuminanceAlphaFormat = Et, t2.LuminanceFormat = Dt, t2.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 }, t2.Material = fr, t2.MaterialLoader = Jc, t2.Math = Re, t2.MathUtils = Re, t2.Matrix3 = Ie, t2.Matrix4 = $e, t2.MaxEquation = b, t2.Mesh = ti, t2.MeshBasicMaterial = mr, t2.MeshDepthMaterial = to, t2.MeshDistanceMaterial = eo, t2.MeshFaceMaterial = function(t3) {
        return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), t3;
      }, t2.MeshLambertMaterial = Il, t2.MeshMatcapMaterial = kl, t2.MeshNormalMaterial = Ll, t2.MeshPhongMaterial = Pl, t2.MeshPhysicalMaterial = Al, t2.MeshStandardMaterial = Ol, t2.MeshToonMaterial = Rl, t2.MinEquation = w, t2.MirroredRepeatWrapping = at, t2.MixOperation = z, t2.MultiMaterial = function(t3) {
        return void 0 === t3 && (t3 = []), console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), t3.isMultiMaterial = true, (t3.materials = t3).clone = function() {
          return t3.slice();
        }, t3;
      }, t2.MultiplyBlending = m, t2.MultiplyOperation = G, t2.NearestFilter = ot, t2.NearestMipMapLinearFilter = 1005, t2.NearestMipMapNearestFilter = 1004, t2.NearestMipmapLinearFilter = lt, t2.NearestMipmapNearestFilter = st, t2.NeverDepth = L, t2.NeverStencilFunc = 512, t2.NoBlending = h, t2.NoColors = u, t2.NoToneMapping = H, t2.NormalBlending = p, t2.NotEqualDepth = B, t2.NotEqualStencilFunc = 517, t2.NumberKeyframeTrack = Jl, t2.Object3D = yn, t2.ObjectLoader = $c, t2.ObjectSpaceNormalMap = _e, t2.OctahedronBufferGeometry = Ts, t2.OctahedronGeometry = _s, t2.OneFactor = _, t2.OneMinusDstAlphaFactor = O, t2.OneMinusDstColorFactor = P, t2.OneMinusSrcAlphaFactor = D, t2.OneMinusSrcColorFactor = C, t2.OrthographicCamera = Gc, t2.PCFShadowMap = i2, t2.PCFSoftShadowMap = a, t2.PMREMGenerator = ip, t2.ParametricBufferGeometry = vs, t2.ParametricGeometry = ys, t2.Particle = function(t3) {
        return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new Lo(t3);
      }, t2.ParticleBasicMaterial = function(t3) {
        return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new as(t3);
      }, t2.ParticleSystem = function(t3, e3) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new us(t3, e3);
      }, t2.ParticleSystemMaterial = function(t3) {
        return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new as(t3);
      }, t2.Path = Rc, t2.PerspectiveCamera = yi, t2.Plane = qn, t2.PlaneBufferGeometry = Di, t2.PlaneGeometry = Si, t2.PlaneHelper = Oh, t2.PointCloud = function(t3, e3) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new us(t3, e3);
      }, t2.PointCloudMaterial = function(t3) {
        return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new as(t3);
      }, t2.PointLight = Bc, t2.PointLightHelper = hh, t2.Points = us, t2.PointsMaterial = as, t2.PolarGridHelper = yh, t2.PolyhedronBufferGeometry = ws, t2.PolyhedronGeometry = xs, t2.PositionalAudio = Eu, t2.PropertyBinding = zu, t2.PropertyMixer = Au, t2.QuadraticBezierCurve = Dc, t2.QuadraticBezierCurve3 = Ec, t2.Quaternion = Ge, t2.QuaternionKeyframeTrack = Xl, t2.QuaternionLinearInterpolant = ql, t2.REVISION = "113", t2.RGBADepthPacking = be, t2.RGBAFormat = St, t2.RGBAIntegerFormat = Nt, t2.RGBA_ASTC_10x10_Format = ie, t2.RGBA_ASTC_10x5_Format = ee, t2.RGBA_ASTC_10x6_Format = ne, t2.RGBA_ASTC_10x8_Format = re, t2.RGBA_ASTC_12x10_Format = ae, t2.RGBA_ASTC_12x12_Format = oe, t2.RGBA_ASTC_4x4_Format = qt, t2.RGBA_ASTC_5x4_Format = Xt, t2.RGBA_ASTC_5x5_Format = Yt, t2.RGBA_ASTC_6x5_Format = Zt, t2.RGBA_ASTC_6x6_Format = Kt, t2.RGBA_ASTC_8x5_Format = $t, t2.RGBA_ASTC_8x6_Format = Qt, t2.RGBA_ASTC_8x8_Format = te, t2.RGBA_PVRTC_2BPPV1_Format = Wt, t2.RGBA_PVRTC_4BPPV1_Format = Ht, t2.RGBA_S3TC_DXT1_Format = Ft, t2.RGBA_S3TC_DXT3_Format = Bt, t2.RGBA_S3TC_DXT5_Format = Gt, t2.RGBDEncoding = xe, t2.RGBEEncoding = me, t2.RGBEFormat = Ot, t2.RGBFormat = Ct, t2.RGBIntegerFormat = jt, t2.RGBM16Encoding = ve, t2.RGBM7Encoding = ye, t2.RGB_ETC1_Format = Jt, t2.RGB_PVRTC_2BPPV1_Format = Ut, t2.RGB_PVRTC_4BPPV1_Format = zt, t2.RGB_S3TC_DXT1_Format = Vt, t2.RGFormat = It, t2.RGIntegerFormat = kt, t2.RawShaderMaterial = El, t2.Ray = Un, t2.Raycaster = Xu, t2.RectAreaLight = Wc, t2.RedFormat = Rt, t2.RedIntegerFormat = Lt, t2.ReinhardToneMapping = J, t2.RepeatWrapping = rt, t2.ReplaceStencilOp = 7681, t2.ReverseSubtractEquation = x, t2.RingBufferGeometry = dl, t2.RingGeometry = pl, t2.Scene = vn, t2.SceneUtils = xp, t2.ShaderChunk = Ei, t2.ShaderLib = Oi, t2.ShaderMaterial = mi, t2.ShadowMaterial = Dl, t2.Shape = Lc, t2.ShapeBufferGeometry = yl, t2.ShapeGeometry = gl, t2.ShapePath = iu, t2.ShapeUtils = el, t2.ShortType = ft, t2.Skeleton = Go, t2.SkeletonHelper = uh, t2.SkinnedMesh = Vo, t2.SmoothShading = 2, t2.Sphere = kn, t2.SphereBufferGeometry = hl, t2.SphereGeometry = ul, t2.Spherical = Ku, t2.SphericalHarmonics3 = uu, t2.SphericalReflectionMapping = tt, t2.Spline = yp, t2.SplineCurve = Oc, t2.SplineCurve3 = gp, t2.SpotLight = Vc, t2.SpotLightHelper = oh, t2.SpotLightShadow = Nc, t2.Sprite = Lo, t2.SpriteMaterial = wo, t2.SrcAlphaFactor = S, t2.SrcAlphaSaturateFactor = R, t2.SrcColorFactor = T, t2.StaticCopyUsage = 35046, t2.StaticDrawUsage = Se, t2.StaticReadUsage = 35045, t2.StereoCamera = gu, t2.StreamCopyUsage = 35042, t2.StreamDrawUsage = 35040, t2.StreamReadUsage = 35041, t2.StringKeyframeTrack = Yl, t2.SubtractEquation = v, t2.SubtractiveBlending = f, t2.TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 }, t2.TangentSpaceNormalMap = Me, t2.TetrahedronBufferGeometry = Ms, t2.TetrahedronGeometry = bs, t2.TextBufferGeometry = cl, t2.TextGeometry = ll, t2.Texture = Ne, t2.TextureLoader = uc, t2.TorusBufferGeometry = Is, t2.TorusGeometry = Ls, t2.TorusKnotBufferGeometry = Rs, t2.TorusKnotGeometry = Ps, t2.Triangle = ir, t2.TriangleFanDrawMode = 2, t2.TriangleStripDrawMode = 1, t2.TrianglesDrawMode = 0, t2.TubeBufferGeometry = As, t2.TubeGeometry = Os, t2.UVMapping = 300, t2.Uint16Attribute = function(t3, e3) {
        return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new Mr(t3, e3);
      }, t2.Uint16BufferAttribute = Mr, t2.Uint32Attribute = function(t3, e3) {
        return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new Tr(t3, e3);
      }, t2.Uint32BufferAttribute = Tr, t2.Uint8Attribute = function(t3, e3) {
        return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new xr(t3, e3);
      }, t2.Uint8BufferAttribute = xr, t2.Uint8ClampedAttribute = function(t3, e3) {
        return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new wr(t3, e3);
      }, t2.Uint8ClampedBufferAttribute = wr, t2.Uncharted2ToneMapping = q, t2.Uniform = Ju, t2.UniformsLib = Ti, t2.UniformsUtils = pi, t2.UnsignedByteType = pt, t2.UnsignedInt248Type = _t, t2.UnsignedIntType = yt, t2.UnsignedShort4444Type = wt, t2.UnsignedShort5551Type = bt, t2.UnsignedShort565Type = Mt, t2.UnsignedShortType = mt, t2.VSMShadowMap = o, t2.Vector2 = Le, t2.Vector3 = He, t2.Vector4 = Ve, t2.VectorKeyframeTrack = Zl, t2.Vertex = function(t3, e3, n3) {
        return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new He(t3, e3, n3);
      }, t2.VertexColors = 2, t2.VideoTexture = ps, t2.WebGLCubeRenderTarget = xi, t2.WebGLMultisampleRenderTarget = Be, t2.WebGLRenderTarget = Fe, t2.WebGLRenderTargetCube = function(t3, e3, n3) {
        return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."), new xi(t3, n3);
      }, t2.WebGLRenderer = po, t2.WebGLUtils = so, t2.WireframeGeometry = gs, t2.WireframeHelper = function(t3, e3) {
        return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new rs(new gs(t3.geometry), new Xo({ color: void 0 !== e3 ? e3 : 16777215 }));
      }, t2.WrapAroundEnding = he, t2.XHRLoader = function(t3) {
        return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new ic(t3);
      }, t2.ZeroCurvatureEnding = ce, t2.ZeroFactor = M, t2.ZeroSlopeEnding = ue, t2.ZeroStencilOp = 0, t2.sRGBEncoding = de, Object.defineProperty(t2, "__esModule", { value: true });
    }, "object" == typeof n && void 0 !== e ? i(n) : "function" == typeof define && define.amd ? define(["exports"], i) : i((r = r || self).THREE = {});
  }, {}], 20: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MrxDbgUtils = void 0;
    var r, i, a = t("three"), o = t("./Operate/MxEntSelJig"), s = t("./Operate/MxJigCmdManager"), l = t("./UI/MxUiVue"), c = t("./Operate/MrxDbgUiPrPoint"), u = t("./Operate/MrxDbgUiPrBase"), h = t("./MxThreeJS");
    (i = r || (n.MrxDbgUtils = r = {})).findEntAtPoint = function(t2, e2, n2, r2, i2) {
      return void 0 === n2 && (n2 = null), void 0 === r2 && (r2 = true), new Promise(function(a2) {
        for (var o2 = t2.findMxEntityAtPoint(e2, r2, i2), s2 = [], l2 = o2.length, c2 = 0; c2 < l2; c2++) {
          var u2 = o2[c2];
          if (!n2 || !n2.type || n2.type == u2.getTypeName()) {
            var h2 = u2.objectId();
            s2.push(h2);
          }
        }
        a2(s2);
      });
    }, i.selectEnt = function(t2, e2) {
      return void 0 === e2 && (e2 = null), new Promise(function(n2) {
        var r2 = new o.MxEntSelJig();
        r2.disableAllTrace(), r2.setDynamicInputType(s.MxJigCmdManager.DynamicInputType.kDynTip), t2 && l.MxUiVue.acutPrintf(t2), r2.filter = e2, r2.callRet = function(t3) {
          n2(t3);
        }, s.MxJigCmdManager.runCmd(r2);
      });
    }, i.getCorner = function(t2, e2, n2, r2, i2) {
      return void 0 === n2 && (n2 = false), void 0 === i2 && (i2 = false), new Promise(function(o2) {
        var l2 = new c.MrxDbgUiPrPoint();
        l2.setMessage(e2), n2 ? (l2.setDynamicInputType(s.MxJigCmdManager.DynamicInputType.kDynTip), l2.disableAllTrace(), l2.setDisableOsnap(true), l2.setInputToucheType(s.MxJigCmdManager.InType.kGetEnd)) : (l2.setDynamicInputType(s.MxJigCmdManager.DynamicInputType.kXYCoordInput), i2 && l2.disableAllTrace());
        var p = new u.McEdGetPointWorldDrawObject();
        p.setDraw(function(e3, r3) {
          var i3 = new a.Vector3(t2.x, e3.y, e3.z), o3 = new a.Vector3(e3.x, t2.y, e3.z), s2 = [];
          s2.push(t2), s2.push(i3), s2.push(e3), s2.push(o3), s2.push(t2);
          var l3 = null, c2 = 65280, u2 = r3.getMcEdJig().getMxObject().automaticInversionColor(16777215);
          if (n2) {
            if (e3.x > t2.x) l3 = h.MxThreeJS.createLines(s2, u2), c2 = 255;
            else {
              var p2 = r3.getMcEdJig().getMxObject().viewCoordLong2Cad(3);
              l3 = h.MxThreeJS.createDashedLines(s2, u2, 2 * p2, p2);
            }
            var d = [];
            d.push(t2), d.push(i3), d.push(e3), d.push(t2), d.push(e3), d.push(o3);
            var f = h.MxThreeJS.createTriangle(d, c2, 0.27);
            r3.drawEntity(f, 30), r3.drawEntity(l3, 31);
          } else l3 = h.MxThreeJS.createLines(s2, u2), r3.drawEntity(l3, 31);
        }), l2.setUserDraw(p), l2.go(function(t3) {
          r2 && r2({ status: t3, detailedResult: l2.getDetailedResult() }), 0 != t3 ? o2(null) : (l2.clearLastInputPoint(), o2(l2.value()));
        });
      });
    };
  }, { "./MxThreeJS": 37, "./Operate/MrxDbgUiPrBase": 45, "./Operate/MrxDbgUiPrPoint": 47, "./Operate/MxEntSelJig": 50, "./Operate/MxJigCmdManager": 54, "./UI/MxUiVue": 65, three: 19 }], 21: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDrawCommands = void 0;
    var r, i = t("./MxFun"), a = t("./MxType"), o = t("./Operate/MxIntelliSelect"), s = t("./Operate/MxJigCmdManager");
    function l(t2) {
      null != t2 && null != t2.grips && null != t2.ids && i.MxFun.getCurrentMx().getMcObject().getGripManager().gripEditImp(t2);
    }
    function c(t2) {
      if (null != t2 && null != t2.pt) {
        var e2 = false;
        t2.shiftKey && (e2 = t2.shiftKey);
        var n2 = i.MxFun.getCurrentMx(), r2 = t2.pt;
        if (!n2.getMxDatabase().getGripManager().doPointSelect(r2, e2)) {
          var a2 = true;
          if (n2.isValidMcObject() && n2.getMcObject().getGripManager().doPointSelect(r2, e2) && (a2 = false), i.MxFun.isPC() || (a2 = false), a2 && n2.isMultipleSelect) {
            var l2 = n2.screenCoord2Current(r2.x, r2.y, 0), c2 = new o.MxIntelliSelectJig(l2, e2);
            c2.setDisableDynInput(true), c2.setDisableOsnap(true), s.MxJigCmdManager.runCmd(c2);
          }
        }
      }
    }
    function u(t2) {
      null != t2 && null != t2.grips && null != t2.ents && i.MxFun.getCurrentMx().getMxDatabase().getGripManager().gripEditImp(t2);
    }
    function h() {
      i.MxFun.getCurrentMx().getMcObject().undo();
    }
    function p() {
      i.MxFun.getCurrentMx().getMcObject().redo();
    }
    function d() {
      i.MxFun.getCurrentMx().startPanCommand();
    }
    (r || (n.MxDrawCommands = r = {})).registerCommand = function() {
      i.MxFun.addCommand("Mx_FrontEndWebpageIntelliSel", c, a.MxType.MxCommandFlag.MCRX_CMD_TRANSPARENT | a.MxType.MxCommandFlag.MCRX_CMD_NO_UNDO_MARKER | a.MxType.MxCommandFlag.MCRX_JIG_CMD_END_NO_CLEAR_SELECT | a.MxType.MxCommandFlag.MCRX_CMD_NO_CLEAR_SELECT | a.MxType.MxCommandFlag.MCRX_CMD_NO_RECORD_PRVCMD), i.MxFun.addCommand("Mx_FrontEndWebpageGripEdit", u, a.MxType.MxCommandFlag.MCRX_CMD_TRANSPARENT | a.MxType.MxCommandFlag.MCRX_CMD_NO_UNDO_MARKER | a.MxType.MxCommandFlag.MCRX_JIG_CMD_END_NO_CLEAR_SELECT | a.MxType.MxCommandFlag.MCRX_CMD_NO_CLEAR_SELECT_GRIP_POINT | a.MxType.MxCommandFlag.MCRX_CMD_NO_CLEAR_SELECT | a.MxType.MxCommandFlag.MCRX_CMD_NO_RECORD_PRVCMD), i.MxFun.addCommand("McDraw_GripEdit", l, a.MxType.MxCommandFlag.MCRX_CMD_TRANSPARENT | a.MxType.MxCommandFlag.MCRX_CMD_NO_CLEAR_SELECT_GRIP_POINT | a.MxType.MxCommandFlag.MCRX_JIG_CMD_END_NO_CLEAR_SELECT | a.MxType.MxCommandFlag.MCRX_CMD_NO_CLEAR_SELECT | a.MxType.MxCommandFlag.MCRX_CMD_NO_RECORD_PRVCMD), i.MxFun.addCommand("Mx_Undo", h, a.MxType.MxCommandFlag.MCRX_CMD_NO_UNDO_MARKER), i.MxFun.addCommand("Mx_Redo", p, a.MxType.MxCommandFlag.MCRX_CMD_NO_UNDO_MARKER), i.MxFun.addCommand("Mx_Pan", d, a.MxType.MxCommandFlag.MCRX_CMD_NO_UNDO_MARKER);
    };
  }, { "./MxFun": 27, "./MxType": 39, "./Operate/MxIntelliSelect": 52, "./Operate/MxJigCmdManager": 54 }], 22: [function(t, e, n) {
    var r, i;
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDrawData = void 0, (i = r || (n.MxDrawData = r = {})).m_dInputRectWidth = 16, i.m_isEnableIntelliSelect = true, i.m_isEnableGripEidt = 1, i.m_isEnableCADEntityGripEidt = 1, i.m_isForbiddenDynInput = false, i.m_isMultipleSelect = false, i.m_iIntelliSelectType = 1, i.m_isAutoResetRenderer = false, i.m_isCorrectLargeCoordinates = true, i.m_isRequestHeaderCacheControl = false, i.m_gripPointColor = 3355443455, i.m_isMapBox = false, i.m_isEnableDrawingViewAngle = true, i.m_isEnableCommandRightClickMenu = false, i.m_isMobileCommandOperationSupportsMultipoint = true, i.m_dynamicInputLineColor = 8421504, i.getIniSet = function() {
      return { EnableIntelliSelect: i.m_isEnableIntelliSelect, EnableGripEidt: i.m_isEnableGripEidt, EnableCADEntityGripEidt: i.m_isEnableCADEntityGripEidt, ForbiddenDynInput: i.m_isForbiddenDynInput, EnableDrawingViewAngle: i.m_isEnableDrawingViewAngle, gripPointColor: i.m_gripPointColor, multipleSelect: i.m_isMultipleSelect, EnableCommandRightClickMenu: i.m_isEnableCommandRightClickMenu };
    }, i.setIniset = function(t2) {
      void 0 !== t2.EnableIntelliSelect && "boolean" == typeof t2.EnableIntelliSelect && (i.m_isEnableIntelliSelect = t2.EnableIntelliSelect), void 0 !== t2.EnableGripEidt && "boolean" == typeof t2.EnableGripEidt && (i.m_isEnableGripEidt = t2.EnableGripEidt ? 1 : 0), void 0 !== t2.EnableGripEdit && ("boolean" == typeof t2.EnableGripEdit ? i.m_isEnableGripEidt = t2.EnableGripEdit ? 1 : 0 : "number" == typeof t2.EnableGripEdit && (i.m_isEnableGripEidt = t2.EnableGripEdit)), void 0 !== t2.EnableCADEntityGripEidt && "number" == typeof t2.EnableCADEntityGripEidt && (i.m_isEnableCADEntityGripEidt = t2.EnableCADEntityGripEidt), void 0 !== t2.EnableCADEntityGripEdit && "number" == typeof t2.EnableCADEntityGripEdit && (i.m_isEnableCADEntityGripEidt = t2.EnableCADEntityGripEdit), void 0 !== t2.ForbiddenDynInput && "boolean" == typeof t2.ForbiddenDynInput && (i.m_isForbiddenDynInput = t2.ForbiddenDynInput), void 0 !== t2.multipleSelect && "boolean" == typeof t2.multipleSelect && (i.m_isMultipleSelect = t2.multipleSelect), void 0 !== t2.IntelliSelectType && "number" == typeof t2.IntelliSelectType && (i.m_iIntelliSelectType = t2.IntelliSelectType), void 0 !== t2.autoResetRenderer && "boolean" == typeof t2.autoResetRenderer && (i.m_isAutoResetRenderer = t2.autoResetRenderer), void 0 !== t2.correctLargeCoordinates && "boolean" == typeof t2.correctLargeCoordinates && (i.m_isCorrectLargeCoordinates = t2.correctLargeCoordinates), void 0 !== t2.requestHeaderCacheControl && "boolean" == typeof t2.requestHeaderCacheControl && (i.m_isRequestHeaderCacheControl = t2.requestHeaderCacheControl), void 0 !== t2.MapBox && "boolean" == typeof t2.MapBox && (i.m_isMapBox = t2.MapBox), void 0 !== t2.inputRectWidth && "number" == typeof t2.inputRectWidth && (i.m_dInputRectWidth = t2.inputRectWidth), void 0 !== t2.gripPointColor && "number" == typeof t2.gripPointColor && (i.m_gripPointColor = t2.gripPointColor), void 0 !== t2.EnableDrawingViewAngle && "boolean" == typeof t2.EnableDrawingViewAngle && (i.m_isEnableDrawingViewAngle = t2.EnableDrawingViewAngle), void 0 !== t2.EnableCommandRightClickMenu && "boolean" == typeof t2.EnableCommandRightClickMenu && (i.m_isEnableCommandRightClickMenu = t2.EnableCommandRightClickMenu), void 0 !== t2.MobileCommandOperationSupportsMultipoint && "boolean" == typeof t2.MobileCommandOperationSupportsMultipoint && (i.m_isMobileCommandOperationSupportsMultipoint = t2.MobileCommandOperationSupportsMultipoint), void 0 !== t2.dynamicInputLineColor && "number" == typeof t2.dynamicInputLineColor && (i.m_dynamicInputLineColor = t2.dynamicInputLineColor);
    };
  }, {}], 23: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDrawObject = n.IniSetName = n.MxRunMode = void 0;
    var r, i, a, o = t("three"), s = t("./MxFun"), l = t("./View/MxBrowseLayerData"), c = t("./View/MxBrowseDisplay"), u = t("./MxNetData"), h = t("./MxNetData"), p = t("./MxManager"), d = t("./MxSystemVariable"), f = t("./MxLocalFileLoad"), m = t("./Operate/MxDrawObjectOsnap"), g = t("./View/MxDbDatabase"), y = t("./View/MxDrawMapBox"), v = t("./MxDrawObjectEvent"), x = t("./View/MxDbEntityGrip"), w = t("./cpp/McDrawObject"), b = t("./UI/MxUiVue"), M = t("./MxDrawData"), _ = t("./MxTempMarkDraw");
    (i = r || (n.MxRunMode = r = {}))[i.kBrowse = 1] = "kBrowse", i[i.kCPPMxCAD = 4] = "kCPPMxCAD", (a || (n.IniSetName = a = {})).kEnableOsnapFunction = "EnableOsnapFunction";
    var T = (C.prototype.getCurrentMousePostion = function() {
      return this.curMousePostion;
    }, C.prototype.isValidCurMousePostion = function() {
      return this.m_isValidCurMousePostion;
    }, C.prototype.setCurrentMousePostion = function(t2, e2) {
      if (void 0 === e2 && (e2 = false), e2) {
        if (0 < t2.touches.length) {
          var n2 = t2.target.getBoundingClientRect();
          this.curMousePostion.x = t2.touches[0].clientX - n2.left, this.curMousePostion.y = t2.touches[0].clientY - n2.top, this.m_isValidCurMousePostion = true;
        }
      } else this.curMousePostion.x = t2.offsetX, this.curMousePostion.y = t2.offsetY, this.m_isValidCurMousePostion = true;
    }, C.prototype.mapBoxRender = function(t2, e2, n2) {
      this.mcObject.updateDisplayMapBox(e2), n2 || (this.camera.projectionMatrix = e2, this.renderer.autoClear = false, this.renderer.state.reset(), this.secenView && this.renderer.render(this.secenView, this.cameraView), this.renderer.render(this.scene, this.camera), null != this._callCreateCanvasImageData && (this._callCreateCanvasImageData_param && "image/bmp" == this._callCreateCanvasImageData_param.type ? this._callCreateCanvasImageData(void 0) : this._callCreateCanvasImageData(this.renderer.domElement.toDataURL("image/png")), this._callCreateCanvasImageData = void 0, this._callCreateCanvasImageData_param = void 0)), this.callEvent("render", this.renderer);
    }, C.prototype.mapBoxInitThreeJSObject = function(t2, e2, n2, r2) {
      this.scene = t2, this.camera = e2, this.renderer = n2, this.controls = r2;
    }, C.prototype.getMxDrawThreeJs = function() {
      return this.mxdrawThreeJS;
    }, C.prototype.setPointMultipleSelect = function(t2) {
      this.isPointMultipleSelect = t2;
    }, C.prototype.pointMultipleSelect = function() {
      return this.isPointMultipleSelect;
    }, C.prototype.getMcObject = function() {
      return this.mcObject;
    }, C.prototype.is3DMode = function() {
      return this.mcObject.mxdraw3d.is3DMode();
    }, C.prototype.getSysVarLong = function(t2) {
      return this.mcObject.isValid() ? this.mcObject.getSysVarLong(t2) : this.m_sysVariable.getSysVarNumber(t2);
    }, C.prototype.getSysVarDouble = function(t2) {
      return this.mcObject.isValid() ? this.mcObject.getSysVarDouble(t2) : this.m_sysVariable.getSysVarNumber(t2);
    }, C.prototype.getSysVarPoint = function(t2) {
      return this.mcObject.isValid() ? this.mcObject.getSysVarPoint(t2) : this.m_sysVariable.getSysVarPoint(t2);
    }, C.prototype.getCAD2DocMatrix = function() {
      return this._cad2Doc;
    }, C.prototype.isValidMcObject = function() {
      return this.mcObject.isValid();
    }, C.prototype.getId = function() {
      return this.id;
    }, C.prototype.getEventManager = function() {
      return this.eventManager;
    }, C.prototype.setCurrentLoadUrl = function(t2) {
      this._sCurrentLoadURL = t2;
    }, C.prototype.getCurrentLoadUrl = function() {
      return this._sCurrentLoadURL;
    }, C.prototype.isWebgl2 = function() {
      return !(!this._rendererParam || "webgl2" != this._rendererParam.retver);
    }, C.prototype.getMxDatabase = function() {
      return this.m_mxDatabase;
    }, C.prototype.updateCanvasSize = function() {
      this._onResizeFun && this._onResizeFun(void 0, false);
    }, C.prototype.addMxEntity = function(t2) {
      return this.m_mxDatabase.addMxEntity(t2);
    }, C.prototype.getMxEntity = function(t2) {
      return this.m_mxDatabase.getEntity(t2);
    }, C.prototype.getMxEntityUserObject = function(t2) {
      var e2 = this.getMxEntity(t2);
      return e2 ? e2.getUserObject() : null;
    }, C.prototype.eraseAllMxEntity = function() {
      this.m_mxDatabase.eraseAllEntity();
    }, C.prototype.eraseMxEntity = function(t2) {
      var e2 = this.m_mxDatabase.getEntity(t2);
      return !!e2 && e2.erase();
    }, C.prototype.getAllMxEntity = function() {
      var t2 = [];
      return this.m_mxDatabase.getAllEntity().forEach(function(e2) {
        e2 && t2.push(e2.getUserObject());
      }), t2;
    }, C.prototype.getMxAllSelect = function() {
      var t2 = this.m_mxDatabase.getSelectManager().getAllSelect(), e2 = this.m_mxDatabase.getGripManager().getAllSelect(), n2 = /* @__PURE__ */ new Set();
      return t2.forEach(function(t3) {
        n2.add(t3);
      }), e2.forEach(function(e3) {
        n2.has(e3) || t2.push(e3);
      }), t2;
    }, C.prototype.getPrvCommandSelect = function() {
      return this.m_mxDatabase.getSelectManager().getPrvCommandSelect();
    }, C.prototype.getMxCADAllSelect = function() {
      return this.mcObject.isValid() ? this.mcObject.getGripManager().getAllSelect() : [];
    }, C.prototype.getSelectPoints = function() {
      return this.mcObject.getGripManager().getSelectPoints();
    }, C.prototype.getPrvCommandMxCADSelect = function() {
      return this.mcObject.isValid() ? this.mcObject.getGripManager().getPrvCommandSelect() : [];
    }, C.prototype.addMxCurrentSelect = function(t2, e2, n2) {
      return void 0 === e2 && (e2 = true), void 0 === n2 && (n2 = true), this.m_mxDatabase.getGripManager().addSelect(t2, e2, n2);
    }, C.prototype.addMxCADCurrentSelect = function(t2, e2, n2) {
      return void 0 === e2 && (e2 = true), void 0 === n2 && (n2 = true), !!this.mcObject.isValid() && this.mcObject.getGripManager().addSelect(t2, e2, n2);
    }, C.prototype.fireSelectChange = function(t2) {
      if (t2) {
        if (this.mcObject.isValid()) return this.mcObject.getGripManager().fireSelectChange();
      } else this.m_mxDatabase.getGripManager().fireMxEntitySelectChange();
    }, C.prototype.clearMxCurrentSelect = function() {
      var t2 = this.m_mxDatabase.clearMxCurrentSelect();
      return this.mcObject.isValid() && this.mcObject.getGripManager().clearAll(), t2;
    }, C.prototype.addViewObject = function(t2) {
      this.secenView ? this.threejsselectObjectsView.add(t2) : console.log("this.secenView is null");
    }, C.prototype.removeViewObject = function(t2) {
      s.MxFun.removeThreejsObject(t2, this.threejsselectObjectsView);
    }, C.prototype.setOtherRefFile = function(t2) {
      this._tzDwgStaticFile = t2;
    }, C.prototype.setRequestHeader = function(t2) {
      this._requestHeader = t2;
    }, C.prototype.initZoomW = function(t2, e2) {
      this._initZoomwCoordPt1 = t2.clone(), this._initZoomWCoordPt2 = e2.clone();
    }, C.prototype.setMouseRightRotate = function(t2) {
      this._mouseRightRotate = t2, null != this.controls && (this.controls.mouseButtons.RIGHT = t2 ? o.MOUSE.ROTATE : -1);
    }, C.prototype.setZoomSpeed = function(t2) {
      var e2 = this.controls.zoomSpeed;
      return this.controls.zoomSpeed = t2, e2;
    }, C.prototype.resetRenderer = function() {
      this.renderer.info.reset();
    }, C.prototype.getRenderer = function() {
      return this.renderer;
    }, C.prototype.isPaningCommand_call = function() {
      return null != this.bakControls;
    }, C.prototype.startPanCommand_call = function() {
      this.bakControls = {}, this.bakControls.LEFT = this.controls.mouseButtons.LEFT, this.bakControls.RIGHT = this.controls.mouseButtons.RIGHT, this.bakControls.MIDDLE = this.controls.mouseButtons.MIDDLE, this.controls.mouseButtons.LEFT = o.MOUSE.PAN, this._mouseRightRotate ? this.controls.mouseButtons.RIGHT = o.MOUSE.ROTATE : this.controls.mouseButtons.RIGHT = -1, this.controls.mouseButtons.MIDDLE = 1, b.MxUiVue.setCursorType(b.MxUiVue.CursorType.kPan);
    }, C.prototype.endPanCommand_call = function() {
      this.bakControls && (this.controls.mouseButtons.LEFT = this.bakControls.LEFT, this.controls.mouseButtons.RIGHT = this.bakControls.RIGHT, this.controls.mouseButtons.MIDDLE = this.bakControls.MIDDLE, this.bakControls = void 0, b.MxUiVue.setCursorType(b.MxUiVue.CursorType.kNormal));
    }, C.prototype.isPaningCommand = function() {
      return this.mxdrawThreeJS.isPaningCommand();
    }, C.prototype.startPanCommand = function() {
      this.mxdrawThreeJS.startPanCommand();
    }, C.prototype.endPanCommand = function() {
      this.mxdrawThreeJS.endPanCommand();
    }, C.prototype.setMouseMiddlePan = function(t2) {
      this._isMouseMiddlePan = "boolean" == typeof t2 ? t2 ? 1 : 0 : t2, null != this.controls && (1 == this._isMouseMiddlePan ? (this.controls.mouseButtons.LEFT = -1, this.controls.mouseButtons.RIGHT = -1, this.controls.mouseButtons.MIDDLE = o.MOUSE.PAN) : 2 == this._isMouseMiddlePan ? (this.controls.mouseButtons.LEFT = o.MOUSE.PAN, this.controls.mouseButtons.RIGHT = -1, this.controls.mouseButtons.MIDDLE = o.MOUSE.PAN) : (this.controls.mouseButtons.LEFT = o.MOUSE.PAN, this._mouseRightRotate ? this.controls.mouseButtons.RIGHT = o.MOUSE.ROTATE : this.controls.mouseButtons.RIGHT = -1, this.controls.mouseButtons.MIDDLE = 1));
    }, C.prototype.resetThreeJSControls = function() {
      this.controls && (this.controls.saveState(), this.controls.reset());
    }, C.prototype.enableZoom = function(t2) {
      null != this.controls && (this.controls.enableZoom = t2);
    }, C.prototype.enablePan = function(t2) {
      null != this.controls && (this.controls.enablePan = t2);
    }, C.prototype.getOrbitControls = function() {
      return this.controls;
    }, C.prototype.enableViewControls = function(t2) {
      this.controls.enabled = t2;
    }, C.prototype.initRunMode = function(t2) {
      this._isCreate ? console.log("iniRunMode failed,mxobject already created") : this._runMode = t2;
    }, C.prototype.getRunMode = function() {
      return this._runMode;
    }, C.prototype.setStaticLocalLoad = function(t2) {
      this._isStaticLocalLoad = t2;
    }, C.prototype.isStaticLocalLoad = function() {
      return this._isStaticLocalLoad;
    }, C.prototype.setStaticLocalLoadPath = function(t2) {
      this._staticLocalLoadPath = t2;
    }, C.prototype.on = function(t2, e2) {
      if (this._event[t2]) if (this._event[t2] instanceof Array) {
        var n2 = this._event[t2];
        n2.includes(e2) || n2.push(e2);
      } else {
        var r2 = this._event[t2];
        if (r2 == e2) return;
        this._event[t2] = [], this._event[t2].push(r2), this._event[t2].push(e2);
      }
      else this._event[t2] = e2;
    }, C.prototype.addEvent = function(t2, e2) {
      this.on(t2, e2);
    }, C.prototype.addControlsEvent = function(t2, e2, n2) {
      return void 0 === n2 && (n2 = false), this.eventManager.addEventListener(t2, e2, n2);
    }, C.prototype.removeEvent = function(t2) {
      this._event[t2] = void 0;
    }, C.prototype.removeEventFuction = function(t2, e2) {
      if (this._event[t2]) {
        if (this._event[t2] instanceof Array) {
          var n2 = this._event[t2].indexOf(e2);
          if (-1 != n2) return this._event[t2].splice(n2, 1), 0 == this._event[t2].length && delete this._event[t2], true;
        } else if (this._event[t2] == e2) return delete this._event[t2], true;
      }
      return false;
    }, C.prototype.sysVariable = function() {
      return this.m_sysVariable;
    }, C.prototype.setIniset = function(t2) {
      var e2 = this;
      Object.keys(t2).forEach(function(n2) {
        e2.m_iniSet[n2] = t2[n2];
      }), M.MxDrawData.setIniset(t2), void 0 !== t2.multipleSelect && "boolean" == typeof t2.multipleSelect && (this.isMultipleSelect = t2.multipleSelect), void 0 !== t2.IntelliSelectType && "number" == typeof t2.IntelliSelectType && (1 == t2.IntelliSelectType ? this.isPointMultipleSelect = false : 2 == t2.IntelliSelectType && (this.isPointMultipleSelect = true));
    }, C.prototype.getInisetValue = function(t2) {
      return this.m_iniSet[t2];
    }, C.prototype.getViewColor = function() {
      return this._viewcolor;
    }, C.prototype.isWhiteViewColor = function() {
      return this.mcObject.isPaperSpaceDisplay() ? 0 != this.mcObject.getLayoutBkColor() : 16777215 == this._viewcolor;
    }, C.prototype.initUserLoginData = function(t2, e2) {
      this._userIdentitySign = t2, this._userRandomToken = e2;
    }, C.prototype.initRendererParam = function(t2) {
      this._rendererParam = t2;
    }, C.prototype.getRendererParam = function() {
      return this._rendererParam;
    }, C.prototype.automaticInversionColor = function(t2) {
      return 16777215 != this._viewcolor || 16777215 != t2 ? t2 : 0;
    }, C.prototype.automaticInversionColor2 = function(t2) {
      return 16777215 == this._viewcolor && 16777215 == (16777215 & t2) ? 4278190080 & t2 : t2;
    }, C.prototype.setViewColor = function(t2) {
      this._viewcolor = t2, this._runMode != r.kCPPMxCAD && null != this.scene && (this.scene.background = new o.Color(t2));
    }, C.prototype.zoomScale = function(t2, e2) {
      this.mxdrawThreeJS.zoomScale(t2, e2);
    }, C.prototype.setViewAngle = function(t2) {
      this.mxdrawThreeJS.setViewAngle(t2);
    }, C.prototype.zoomW = function(t2, e2, n2, r2, i2) {
      void 0 === i2 && (i2 = false), this.mxdrawThreeJS.zoomW(t2, e2, n2, r2, i2);
    }, C.prototype.zoomCenter = function(t2, e2, n2) {
      this.mxdrawThreeJS.zoomCenter(t2, e2, n2);
    }, C.prototype.getViewAngle = function() {
      return this._viewangle;
    }, C.prototype.callInitCompleteEvent = function() {
      this.callEvent("loadComplete");
    }, C.prototype.callInitObjectEvent = function() {
      this.callEvent("initObject");
    }, C.prototype.callInitSceneEvent = function(t2, e2, n2) {
      var r2 = this._event.initScene;
      if (!r2) return 0;
      if (r2 instanceof Array) {
        var i2 = 0;
        return r2.forEach(function(r3) {
          i2 = r3(t2, e2, n2);
        }), i2;
      }
      return r2(t2, e2, n2);
    }, C.prototype.callOpenFileComplete = function(t2, e2) {
      void 0 === e2 && (e2 = 0);
      try {
        var n2 = this._event.openFileComplete;
        if (!n2) return;
        n2 instanceof Array ? n2.forEach(function(n3) {
          n3(t2, e2);
        }) : n2(t2, e2);
      } catch (n3) {
        throw console.log(n3), n3;
      }
    }, C.prototype.hasEvent = function(t2) {
      return null != this._event[t2];
    }, C.prototype.regenAllMxDbEntity = function() {
      return this.m_mxDatabase.regenAllMxDbEntity();
    }, C.prototype.callEvent = function(t2, e2) {
      try {
        var n2 = this._event[t2];
        if (!n2) return false;
        if (n2 instanceof Array) {
          var r2 = false;
          return n2.forEach(function(t3) {
            r2 = t3(e2);
          }), r2;
        }
        return n2(e2);
      } catch (t3) {
        throw console.log(t3), t3;
      }
    }, C.prototype.callViewChange = function() {
      this.onViewChange(), this.callEvent("viewchange");
    }, C.prototype.userLoginResult = function(t2) {
      this.callEvent("userLoginResult", t2);
    }, C.prototype.serverReturn = function(t2) {
      var e2 = JSON.parse(t2);
      this.callEvent("serverReturn", e2);
    }, C.prototype.openFileResult = function(t2) {
      JSON.parse(t2).linkServer || console.log("link mx serverobj error"), this.callEvent("openFileResult", t2);
    }, C.prototype.xzSize = function(t2) {
      var e2 = this._devicePixelRatio;
      if (e2 - 1 <= 1e-4 && -1e-4 <= e2 - 1) return t2;
      for (var n2 = 9999999, r2 = t2, i2 = 0, a2 = t2; i2 < 100; i2++) {
        if ((s2 = (o2 = a2 * e2) - Math.floor(o2)) <= 1e-3) return a2;
        s2 < n2 && (n2 = s2, r2 = a2), a2 += 1;
      }
      for (a2 = t2; i2 < 100; i2++) {
        var o2, s2;
        if ((s2 = (o2 = a2 * e2) - Math.floor(o2)) <= 1e-3) return a2;
        s2 < n2 && (n2 = s2, r2 = a2), --a2;
      }
      return r2;
    }, C.prototype.setSize = function(t2, e2) {
      this._viewWidth = t2, this._viewHeight = e2, null != this._userCanvas && (this._userCanvas.width = t2, this._userCanvas.height = e2, this._userCanvas.style.width = t2 + "px", this._userCanvas.style.height = e2 + "px"), this.onResizeImp(), this.updateDisplay();
    }, C.prototype.getCurrentColor = function() {
      return this._color;
    }, C.prototype.setCurrentColor = function(t2) {
      this._color = t2;
    }, C.prototype.call = function(t2, e2, n2) {
      this._net.getSend().CallServerJS(t2, e2, n2);
    }, C.prototype.zoomAll = function() {
      this._is2d && this.call("getDatabaseBoundHelp", '{"isBackground":1}', function(t2) {
        if (0 != t2.length) {
          var e2 = JSON.parse(t2);
          this.zoomW(new o.Vector3(e2[0], e2[1], 0), new o.Vector3(e2[2], e2[3], 0));
        }
      });
    }, C.prototype.getViewCenterDocCoord = function() {
      return null != this._userCanvas ? this.screenCoord2Current(0.5 * this._userCanvas.clientWidth, 0.5 * this._userCanvas.clientHeight, 0) : this.screenCoord2Current(0.5 * this._viewWidth, 0.5 * this._viewHeight, 0);
    }, C.prototype.closeWebSocket = function() {
      this._net.closeWebSocket();
    }, C.prototype.findMxEntityAtPoint = function(t2, e2, n2) {
      !e2 && void 0 !== e2 || (t2 = this.currentCoord2Screen(t2.x, t2.y, 0));
      var r2 = [], i2 = this.m_mxDatabase.getIntersectObjects(t2);
      if (0 == i2.length) return r2;
      var a2 = /* @__PURE__ */ new Map();
      return i2.forEach(function(t3) {
        var e3 = (0, x.MxGetMxDbEntitForThreeJsObject)(t3.object);
        if (e3) {
          var r3 = e3.objectId();
          if (!a2.has(r3)) {
            if (n2) {
              var i3 = (0, x.MxGetWordDrawxDataForThreeJsObject)(t3.object);
              i3 && n2(r3, i3);
            }
            a2.set(r3, e3.getUserObject());
          }
        }
      }), a2.forEach(function(t3) {
        r2.push(t3);
      }), r2;
    }, C.prototype.isCppMxCAD = function() {
      return this._runMode == r.kCPPMxCAD;
    }, C.prototype.loadMxCADImage = function(t2, e2, n2) {
      var r2 = this;
      void 0 === n2 && (n2 = ""), this.mcObject.isValid() ? (0 == n2.length && -1 != (n2 = t2).lastIndexOf("/") && (n2 = n2.substring(n2.lastIndexOf("/") + 1).toLowerCase()), this.mcObject.getTextureManager().loadImage(t2, n2, function(n3, i2) {
        n3 ? (r2.mcObject.getTextureManager().createOpenGLTexture(t2), e2(i2)) : e2(void 0);
      })) : e2(void 0);
    }, C.prototype.onLoad = function(t2) {
      if (this._runMode == r.kCPPMxCAD) this.callInitCompleteEvent();
      else if (this._isStaticLocalLoad) this._net = new h.MxNet(), this._net.init(this, false), 0 < this._openFile.length && (this._staticLocalNet = new f.MxLocalDwgFileLoad(this._net), this._staticLocalNet.load(encodeURIComponent(this._staticLocalLoadPath), encodeURIComponent(this._openFile)));
      else if (0 == this._openFile.length) this.callInitCompleteEvent(), this.callOpenFileComplete(0);
      else if (this._net = new h.MxNet(), this._net.init(this, false), this._staticNet = new h.MxHFileLoad(this._net), this._staticNet.setRequestHeader(this._requestHeader), this._staticNet.setUrlParam(t2), this._staticNet.load(this._openFile, this._staticLoadingOpenFiles), this._tzDwgStaticFile && 0 < this._tzDwgStaticFile.length) {
        var e2 = new h.MxNet();
        e2.init(this, false), this._extRefManager.createTzDwgExternalReferences(99999), e2.setCurrentDatabaseId(99999), this._staticLoadTzNet = new h.MxHFileLoad(e2), this._staticLoadTzNet.setShowloading(false), this._staticLoadTzNet.setRequestHeader(this._requestHeader), this._staticLoadTzNet.load(this._tzDwgStaticFile, []);
      }
    }, C.prototype.stopAllLoading = function() {
      this._staticNet && this._staticNet.stopAllLoading();
    }, C.prototype.getStaticNet = function() {
      return this._staticNet;
    }, C.prototype.isStaticFileNet = function() {
      return !this._isStaticLocalLoad && null != this._staticNet;
    }, C.prototype.getStaticLocalNet = function() {
      return this._staticLocalNet;
    }, C.prototype.getStaticLoadTzNet = function() {
      return this._staticLoadTzNet;
    }, C.prototype.getViewWidth = function() {
      return null != this._userCanvas ? this._userCanvas.clientWidth : this._viewWidth;
    }, C.prototype.getViewHeight = function() {
      return null != this._userCanvas ? this._userCanvas.clientHeight : this._viewHeight;
    }, C.prototype.makeCurrent = function() {
      p.MxManager.setCurrentMx(this), this.mcObject.makeCurrent();
    }, C.prototype.createCanvasImageData = function(t2, e2) {
      if (this.isMapBox()) this._callCreateCanvasImageData_param = e2, this._callCreateCanvasImageData = function(e3) {
        t2(e3);
      }, this.updateDisplay();
      else {
        var n2 = 0, r2 = 0, i2 = false, a2 = false, o2 = false;
        e2 && e2.range_pt1 && e2.range_pt2 && (o2 = a2 = true, this.saveZoom()), e2 && e2.width && e2.height && (n2 = this.getViewWidth(), r2 = this.getViewHeight(), i2 = true, this.setSize(e2.width, e2.height)), o2 && this.zoomW(e2.range_pt1, e2.range_pt2), this._callCreateCanvasImageData_param = e2;
        var s2 = this;
        this._callCreateCanvasImageData = function(e3) {
          t2(e3), i2 && s2.setSize(n2, r2), a2 && s2.recoverZoom();
        }, this.updateDisplay();
      }
    }, C.prototype.getIntersectObjects = function(t2) {
      return this.getMxDrawThreeJs().createRaycaster(t2).intersectObjects(this.threejsselectObjects.children, true);
    }, C.prototype.addObject = function(t2) {
      this.threejsselectObjects.add(t2);
    }, C.prototype.removeObject = function(t2) {
      this.threejsselectObjects.remove(t2);
    }, C.prototype.render = function() {
      this.secenView ? (this.mcObject.updateDisplay() ? (this.renderer.autoClear = false, this.renderer.state.reset()) : this.renderer.autoClear = true, this.renderer.render(this.secenView, this.cameraView), this.renderer.autoClear = false) : this.mcObject.updateDisplay() ? (this.renderer.autoClear = false, this.renderer.state.reset()) : this.renderer.autoClear = true, this.renderer.render(this.scene, this.camera), null != this._callCreateCanvasImageData && (this._callCreateCanvasImageData_param && "image/bmp" == this._callCreateCanvasImageData_param.type ? this._callCreateCanvasImageData(void 0) : this._callCreateCanvasImageData(this.renderer.domElement.toDataURL("image/png")), this._callCreateCanvasImageData = void 0, this._callCreateCanvasImageData_param = void 0), this.callEvent("render", this.renderer);
    }, C.prototype.updateDisplay = function(t2) {
      void 0 === t2 && (t2 = false), this.mxdrawThreeJS.updateDisplay(t2);
    }, C.prototype.isRenderLoop = function() {
      return this._isAnimation;
    }, C.prototype.renderLoop = function(t2) {
      void 0 === t2 && (t2 = true), this._isAnimation = t2, this.updateDisplay();
    }, C.prototype.updateDisplayImplement = function(t2) {
      void 0 === t2 && (t2 = false);
      var e2 = this, n2 = function() {
        e2.m_mxDatabase.upDirtyDisplay(), e2._isAnimation ? (e2._isAnimationStarting = true, requestAnimationFrame(n2)) : e2._isWaiteCount = 0, e2.render();
      };
      true !== t2 ? this._isAnimationStarting || (this._isAnimation ? requestAnimationFrame(n2) : ((5 < this._isWaiteCount || this._isWaiteCount < 0) && (this._isWaiteCount = 0), this._isWaiteCount <= 0 && requestAnimationFrame(n2), this._isWaiteCount++)) : n2();
    }, C.prototype.gotoLayoutOld = function(t2) {
      "Modle" == t2 && (t2 = "");
      var e2 = this._openFile;
      for (var n2 in this._iniParam) "srcname" == (o2 = (a2 = this._iniParam[n2])[0]) && (e2 = a2[1]);
      var r2 = {}, i2 = "";
      for (var n2 in this._iniParam) {
        var a2, o2;
        if (null == r2[o2 = (a2 = this._iniParam[n2])[0]]) {
          r2[o2] = true;
          var l2 = a2[1];
          if ("file" == o2) {
            if (l2 = e2, 0 < t2.length) {
              var c2 = l2.substring(l2.lastIndexOf(".") + 1);
              l2 = l2.substring(0, l2.lastIndexOf(".")) + "%23" + t2 + "%23." + c2;
            }
          } else if ("srcname" == o2) continue;
          0 == i2.length ? i2 = o2 + "=" + l2 + "&srcname=" + e2 : i2 += "&" + o2 + "=" + l2;
        }
      }
      var u2 = s.MxFun.getLocationPageUrl() + "?" + i2;
      window.location.href = u2;
    }, C.prototype.gotoLayout = function(t2) {
      var e2 = false, n2 = !this.isStaticFileNet();
      for (var r2 in this._iniParam) if ("dwgdir" == (u2 = this._iniParam[r2])[0]) {
        e2 = true;
        break;
      }
      if (e2 || n2) this.gotoLayoutOld(t2);
      else {
        "Model" == t2 && (t2 = "");
        var i2 = this._openFile;
        if (!i2) return;
        var a2 = i2.lastIndexOf(".dwg");
        if (void 0 === a2 || -1 === a2) return;
        if ("#" == (i2 = i2.substring(0, a2))[i2.length - 1]) {
          var o2 = i2.substring(0, i2.length - 1), l2 = o2.lastIndexOf("#");
          void 0 !== l2 && -1 !== l2 && (i2 = o2.substring(0, l2));
        }
        0 < t2.length ? i2 = i2 + "#" + t2 + "#.dwg.mxb1.wgh" : i2 += ".dwg.mxb1.wgh";
        var c2 = {};
        for (var r2 in this._iniParam) {
          var u2, h2 = (u2 = this._iniParam[r2])[0];
          if (null == c2[h2]) {
            c2[h2] = true;
            var p2 = u2[1];
            "file" != h2 && "srcname" != h2 && (i2 += "&" + h2 + "=" + p2);
          }
        }
        var d2 = s.MxFun.getLocationPageUrl() + "?file=" + i2;
        window.location.href = encodeURI(d2);
      }
    }, C.prototype.addInitParam = function(t2, e2) {
      var n2 = new Array();
      n2.push(t2), n2.push(e2), this._iniParam.push(n2);
    }, C.prototype.openFile = function(t2, e2) {
      if (void 0 === e2 && (e2 = ""), !this._isCreate) return console.log("mx: openFile Fialed mxasser(_isCreate == false)"), false;
      if (this.stopAllLoading(), 0 == t2.length) return false;
      this.reInit(), this._devicePixelRatio = window.devicePixelRatio, t2 instanceof Array ? (this._openFile = t2[0], this._staticLoadingOpenFiles = t2) : this._openFile = t2, this._openFileExtName = this._openFile.substring(this._openFile.lastIndexOf(".") + 1), this._iniParam = [], this._initZoomwCoordPt1 = null, this._initZoomWCoordPt2 = null;
      var n2 = new Array();
      return n2.push("file"), n2.push(this._openFile), this._iniParam.push(n2), this.onLoad(e2), true;
    }, C.prototype.updateCameraDisplayRange = function(t2, e2, n2) {
      this.mxdrawThreeJS.updateCameraDisplayRange(t2, e2, n2);
    }, C.prototype.updateCameraForm3dViewData = function(t2) {
      this.mxdrawThreeJS.updateCameraForm3dViewData(t2);
    }, C.prototype.clearAllObject = function() {
      this.reInit();
    }, C.prototype.newFile = function(t2, e2, n2, r2) {
      if (!this._isCreate) return console.log("mx: openFile Fialed mxasser(_isCreate == false)"), false;
      var i2, a2;
      if (a2 = t2 instanceof Object && e2 instanceof Object ? (i2 = t2, e2) : (i2 = new o.Vector3(t2, e2, 0), new o.Vector3(n2, r2, 0)), i2.x > a2.x) {
        var l2 = i2.x;
        i2.x = a2.x, a2.x = l2;
      }
      if (i2.y > a2.y) {
        var c2 = i2.y;
        i2.y = a2.y, a2.y = c2;
      }
      this.reInit(), this._devicePixelRatio = window.devicePixelRatio, this._openFile = "", this._openFileExtName = "dwg", this._iniParam = [], this._initZoomwCoordPt1 = null, this._initZoomWCoordPt2 = null;
      var u2 = new o.Matrix4();
      u2.identity(), this.intiDoc2Wold(u2), this.initCAD2Doc(u2), this.initializingObjectMatrix(), this.mxdrawThreeJS.updateCameraDisplayRange(i2, a2, 0), this.updateDisplay(true);
      var h2 = s.MxFun.getUiObj();
      null != h2 && (h2.SetLayoutData(this._allLayoutName), h2.UpDisplayLayout());
    }, C.prototype.calcViewsize = function() {
      if (null == this._userCanvas) return { viewWidth: window.innerWidth, viewHeight: window.innerHeight };
      var t2 = this._userCanvas.clientWidth, e2 = this._userCanvas.clientHeight;
      if (null != this._event.onResize) {
        var n2 = this._event.onResize;
        n2 instanceof Array && (n2 = n2[0]);
        var r2 = n2();
        null != r2 && (t2 = parseInt(r2.width), e2 = parseInt(r2.height));
      }
      return { viewWidth: t2, viewHeight: e2 };
    }, C.prototype.initMxCpp = function(t2) {
      t2 && t2.getImp() ? (this.mcObject.init(this, t2), null != this.secenView ? this.secenView.background = null : this.scene.background = null) : console.log("mxerror: mcppObjectImp is null");
    }, C.prototype.create = function(t2, e2, n2, i2) {
      if (this._is2d ? i2 ? (this.mxdrawThreeJS = new y.MxDrawMapBoxThreeJS(i2, this), M.MxDrawData.m_isMapBox = true, this._viewcolor = 16777215) : this.mxdrawThreeJS = new y.MxDrawObject2dThreeJS(this) : this.mxdrawThreeJS = new y.MxDrawObject3dThreeJS(this), this._callCreateCanvasImageData = void 0, this._callCreateCanvasImageData_param = void 0, this._devicePixelRatio = window.devicePixelRatio, this._runMode == r.kCPPMxCAD) this._openFile = "";
      else {
        if (e2 instanceof Array ? (this._openFile = e2[0], this._staticLoadingOpenFiles = e2) : this._openFile = e2, this._iniParam = s.MxFun.getUrlParams(), this._openFileExtName = this._openFile.substring(this._openFile.lastIndexOf(".") + 1), "" != this._openFile) {
          var a2 = new Array();
          a2.push("file"), a2.push(this._openFile), this._iniParam.push(a2);
        }
        "" != this._userIdentitySign && (this.addInitParam("userIdentitySign", this._userIdentitySign), this.addInitParam("userRandomToken", this._userRandomToken)), this.addInitParam("runMode", "browse");
      }
      this._userCanvas = t2;
      var l2 = window.innerWidth, c2 = window.innerHeight;
      if (null != t2 && (l2 = t2.clientWidth, c2 = t2.clientHeight), this._viewWidth = l2, this._viewHeight = c2, this.m_mxDatabase.getSelectManager().setCanvasSize(l2, c2), this.mxdrawThreeJS.onInitThreejs(), this.eventManager.registEvent(this), this.onCreate(), this.m_mxDatabase.init(this), this._parentDocObject = new o.Object3D(), this.scene.add(this._parentDocObject), this._parentDocObject_SmallCoord = new o.Object3D(), this.scene.add(this._parentDocObject_SmallCoord), this._parentDocObject_SmallCoord_JigDraw = new o.Object3D(), this._parentDocObject_SmallCoord.add(this._parentDocObject_SmallCoord_JigDraw), this.threejsselectObjects = new o.Object3D(), this.scene.add(this.threejsselectObjects), this._objectsOsnap = new m.MxDrawObjectOsnap(this), this.tempMarkDraw.init(this), p.MxManager.add(this), p.MxManager.setCurrentMx(this), this.mxdrawThreeJS.addControlsChangeEvent(), i2 || this.updateDisplay(), this.mxdrawThreeJS.getType() != y.MxThreeJSType.kMapBox) {
        var u2 = this;
        if (null == t2) {
          var h2 = function(t3, e3) {
            void 0 === e3 && (e3 = true), u2._viewWidth = window.innerWidth, u2._viewHeight = window.innerHeight, u2.onResizeImp() && u2.updateDisplay(e3);
          };
          window.addEventListener("resize", h2, false), this._onResizeFun = h2;
        } else {
          var d2 = function(t3, e3) {
            void 0 === e3 && (e3 = true), t3 && t3.viewWidth && t3.viewHeight || (t3 = u2.calcViewsize()), u2._viewWidth = t3.viewWidth, u2._viewHeight = t3.viewHeight, u2.onResizeImp(u2._viewWidth, u2._viewHeight) && u2.updateDisplay(e3);
          };
          if (this._onResizeFun = d2, null != this._event.addResizeEvent) {
            var f2 = this._event.addResizeEvent;
            f2 instanceof Array && (f2 = f2[0]), f2(d2, t2);
          } else window.addEventListener("resize", d2, false);
          if (window.setTimeout(function() {
            d2(void 0, false);
          }, 5), null != this._event.onResize) {
            var g2 = u2.calcViewsize();
            d2(g2, false);
            var v2 = 0, x2 = 0, w2 = true, b2 = window.setInterval(function() {
              x2++;
              var t3 = u2.calcViewsize();
              if (t3.viewWidth == g2.viewWidth && t3.viewHeight == g2.viewHeight && 0 < t3.viewWidth && 0 < t3.viewHeight) {
                if (8 < ++v2) return clearInterval(b2), void d2(t3, false);
                1 <= v2 && w2 && (d2(t3, false), 2 <= v2 && (w2 = false));
              } else v2 = 0;
              g2 = t3, 50 < x2 && (clearInterval(b2), 0 < t3.viewWidth && 0 < t3.viewHeight ? d2(t3, false) : console.log("mxassert(0) error view size"));
            }, 50);
          }
        }
      }
      this.callInitObjectEvent(), this.onLoad(n2), this._isCreate = true;
    }, C.prototype.initResize = function() {
      if (null == this._userCanvas) this._viewWidth = window.innerWidth, this._viewHeight = window.innerHeight, this.onResizeImp();
      else {
        if (this._viewWidth = this._userCanvas.clientWidth, this._viewHeight = this._userCanvas.clientHeight, null != this._event.onResize) {
          var t2 = this._event.onResize;
          t2 instanceof Array && (t2 = t2[0]);
          var e2 = t2();
          null != e2 && (this._viewWidth = e2.width, this._viewHeight = e2.height);
        }
        this.onResizeImp(this._viewWidth, this._viewHeight);
      }
      this.updateDisplay();
    }, C.prototype.is2D = function() {
      return this._is2d;
    }, C.prototype.getOpenFile = function() {
      return this._openFile;
    }, C.prototype.getFileTitle = function() {
      var t2 = this._openFile;
      if ("wgh" == this._openFile.substring(this._openFile.lastIndexOf(".") + 1).toLowerCase()) {
        var e2 = this._openFile.substring(0, this._openFile.indexOf(".mxb1.wgh")).split("/");
        "$" == (t2 = 1 == e2.length ? e2[0] : e2[e2.length - 1])[0] && (t2 = t2.substring(1));
      }
      return t2;
    }, C.prototype.getIniParam = function() {
      return this._iniParam;
    }, C.prototype.getOpenFileExtName = function() {
      return this._openFileExtName;
    }, C.prototype.loadCodeToServer = function(t2, e2) {
      this._net.getSend().CallLoadCodeToServer(t2, e2);
    }, C.prototype.userLogin = function(t2, e2) {
      this._net.getSend().UserLogin(t2, e2);
    }, C.prototype.getUserCanvas = function() {
      return this._userCanvas;
    }, C.prototype.getCanvas = function() {
      return null != this._userCanvas ? this._userCanvas : this.renderer.domElement;
    }, C.prototype.getScene = function() {
      return this.scene;
    }, C.prototype.getCamera = function() {
      return this.camera;
    }, C.prototype.callCommand = function(t2, e2, n2) {
      void 0 === e2 && (e2 = ""), this._net.getSend().DoCommand(t2, e2, n2);
    }, C.prototype.deleteAll = function() {
      this.removeAllEntity(), this.callCommand("Mx_ClearAll"), this.updateDisplay();
    }, C.prototype.initAllLayoutName = function(t2) {
      this._allLayoutName = t2;
    }, C.prototype.getAllLayoutName = function() {
      return this._allLayoutName;
    }, C.prototype.updataClipMaterial = function() {
      this._blocks.updataClipMaterial(this);
    }, C.prototype.getExtRefManager = function() {
      return this._extRefManager;
    }, C.prototype.showLayer = function(t2, e2) {
      "string" == typeof t2 && (t2 = this._layers.getLayerIdForName(t2)), this._blocks.showLayer(t2, e2), this.updateDisplay();
    }, C.prototype.addLayerInfo = function(t2, e2, n2) {
      e2 = this.automaticInversionColor(16777215 & e2), this._layers.add(t2, e2, n2);
    }, C.prototype.setZeroLayerId = function(t2) {
      this._layers.setZeroLayerId(t2);
    }, C.prototype.addLayerInfoComplete = function() {
      this._layers.initComplete();
    }, C.prototype.addEntity = function(t2, e2) {
      var n2 = this._mapId2Entity.get(t2);
      null == n2 && (n2 = new Array(), this._mapId2Entity.set(t2, n2)), n2.push(e2);
    }, C.prototype.getEntity = function(t2) {
      return this._mapId2Entity.get(t2);
    }, C.prototype.clearThreejsScence = function() {
      this.m_mxDatabase.getGripManager().reInit(), this.isValidMcObject() && this.mcObject.getGripManager().reInit(), s.MxFun.removeThreejsObject(this.threejsselectObjects, this.scene), this.threejsselectObjects = new o.Object3D(), s.MxFun.removeThreejsObject(this._parentDocObject, this.scene), this._parentDocObject = new o.Object3D(), s.MxFun.removeThreejsObject(this._parentDocObject_SmallCoord, this.scene), this._parentDocObject_SmallCoord = new o.Object3D(), this.scene.remove(), this.scene.dispose(), this.scene = new o.Scene(), this.scene.add(this.threejsselectObjects), this.scene.add(this._parentDocObject), this.scene.add(this._parentDocObject_SmallCoord), this._parentDocObject_SmallCoord_JigDraw = new o.Object3D(), this._parentDocObject_SmallCoord.add(this._parentDocObject_SmallCoord_JigDraw), this._objectsOsnap = new m.MxDrawObjectOsnap(this), this.m_mxDatabase.reInit(), this.tempMarkDraw.init(this), this.mxdrawThreeJS.onInitScene(), s.MxFun.removeThreejsObject(this.threejsselectObjectsView, this.secenView), this.threejsselectObjectsView = null, this.secenView.remove(), this.secenView.dispose(), this.secenView = null, this.onInitViewScene(), this._runMode != r.kCPPMxCAD && this.mxdrawThreeJS.getType() != y.MxThreeJSType.kMapBox || (null != this.secenView ? this.secenView.background = null : this.scene.background = null);
    }, C.prototype.reInit = function() {
      this.clearThreejsScence(), this._openFile = "", this._openFileExtName = "", this._mapId2Entity = /* @__PURE__ */ new Map(), this._setAdyDelete = /* @__PURE__ */ new Map(), this._layers = new l.MxBrowseLayerData(), this._blocks = new c.Blocks(), this._extRefManager = new c.ExternalReferenceManager(), this._doc2World = new o.Matrix4(), this._word2doc = new o.Matrix4(), this._allLayoutName = new Array(), this._tzDwgStaticFile = "", this._devicePixelRatio = window.devicePixelRatio, this._blocks.initRootBlockRef();
    }, C.prototype.removeEntity = function(t2) {
      if (null == this._setAdyDelete[t2]) {
        this._setAdyDelete[t2] = true;
        var e2 = this._mapId2Entity.get(t2);
        if (null != e2) {
          for (var n2 in e2) this.scene.remove(e2[n2]);
          this._mapId2Entity.delete(t2);
        }
      }
    }, C.prototype.removeEntityFromServer = function(t2) {
      for (var e2 = t2.getInt32(4, true), n2 = 0; n2 < e2; n2++) {
        var r2 = t2.getInt32(4 * (n2 + 20), true);
        this.removeEntity(r2);
      }
    }, C.prototype.removeAllEntity = function() {
      var t2 = this;
      this._mapId2Entity.forEach(function(e2, n2, r2) {
        for (var i2 in e2) t2.scene.remove(e2[i2]);
      }), this._mapId2Entity.clear();
    }, C.prototype.mxWebAddEntity = function(t2) {
      this._setAdyDelete.clear();
      var e2 = this.mxWebAddEntity_3DChild(t2);
      this.mxWebAddEntity_Curve(t2, e2), this._setAdyDelete.clear();
    }, C.prototype.getViewWorldCoord = function() {
      var t2 = new o.Vector3(-1, -1, 1);
      t2.unproject(this.camera);
      var e2 = new o.Vector3(-1, 1, 1);
      e2.unproject(this.camera);
      var n2 = new o.Vector3(1, 1, 1);
      n2.unproject(this.camera);
      var r2 = new o.Vector3(1, -1, 1);
      return r2.unproject(this.camera), { pt1: t2, pt2: e2, pt3: n2, pt4: r2 };
    }, C.prototype.getViewDocCoord = function() {
      var t2 = this.getViewWorldCoord();
      return t2.pt1 = this.docCoord2Cad2(this.worldCoord2Doc(t2.pt1.x, t2.pt1.y, 0)), t2.pt2 = this.docCoord2Cad2(this.worldCoord2Doc(t2.pt2.x, t2.pt2.y, 0)), t2.pt3 = this.docCoord2Cad2(this.worldCoord2Doc(t2.pt3.x, t2.pt3.y, 0)), t2.pt4 = this.docCoord2Cad2(this.worldCoord2Doc(t2.pt4.x, t2.pt4.y, 0)), t2;
    }, C.prototype.screenCoord2World = function(t2, e2, n2) {
      return this.mxdrawThreeJS.screenCoord2World(t2, e2, n2);
    }, C.prototype.worldCoord2Screen = function(t2, e2, n2) {
      return this.mxdrawThreeJS.worldCoord2Screen(t2, e2, n2);
    }, C.prototype.screenCoord2World_mxdrawThreeJS_call = function(t2, e2, n2) {
      var r2 = this.getCanvas(), i2 = r2.clientWidth, a2 = r2.clientHeight;
      n2 = 0.5;
      var s2 = this.camera;
      s2 && s2.isOrthographicCamera && (n2 = (s2.near + s2.far) / (s2.near - s2.far));
      var l2 = new o.Vector3(t2 / i2 * 2 - 1, -e2 / a2 * 2 + 1, n2);
      return l2.unproject(this.camera), l2.z = 0, l2;
    }, C.prototype.worldCoord2Screen_mxdrawThreeJS_call = function(t2, e2, n2) {
      var r2 = new o.Vector3(t2, e2, n2).project(this.camera), i2 = this.getCanvas(), a2 = i2.clientWidth / 2, s2 = i2.clientHeight / 2, l2 = Math.round(r2.x * a2 + a2), c2 = Math.round(-r2.y * s2 + s2);
      return new o.Vector3(l2, c2, 0);
    }, C.prototype.worldCoordLong2Doc = function(t2) {
      var e2 = this.worldCoord2Doc(0, 0, 0), n2 = this.worldCoord2Doc(t2, 0, 0);
      return e2.distanceTo(n2);
    }, C.prototype.docCoordLong2World = function(t2) {
      var e2 = this.docCoord2World(0, 0, 0), n2 = this.docCoord2World(t2, 0, 0);
      return e2.distanceTo(n2);
    }, C.prototype.getDoc2CADMatrix = function() {
      return this._doc2CAD;
    }, C.prototype.docCoord2Cad = function(t2, e2, n2) {
      var r2 = new o.Vector3(t2, e2, n2);
      return r2.applyMatrix4(this._doc2CAD), r2;
    }, C.prototype.toSmallcoord = function(t2) {
      return this._runMode == r.kCPPMxCAD ? this.cadCoord2Doc2(t2) : t2;
    }, C.prototype.toSmallcoord2 = function(t2, e2, n2) {
      return void 0 === n2 && (n2 = 0), this._runMode == r.kCPPMxCAD ? this.cadCoord2Doc(t2, e2, n2) : new o.Vector3(t2, e2, n2);
    }, C.prototype.screenCoordLong2Smallcoord = function(t2) {
      return this.screenCoordLong2Doc(t2);
    }, C.prototype.docCoord2Cad2 = function(t2) {
      return (t2 = t2.clone()).applyMatrix4(this._doc2CAD), t2;
    }, C.prototype.cadCoord2Doc = function(t2, e2, n2) {
      var r2 = new o.Vector3(t2, e2, n2);
      return r2.applyMatrix4(this._cad2Doc), r2;
    }, C.prototype.cadCoord2Doc2 = function(t2) {
      return (t2 = t2.clone()).applyMatrix4(this._cad2Doc), t2;
    }, C.prototype.docCoordLong2Cad = function(t2) {
      var e2 = this.docCoord2Cad(0, 0, 0), n2 = this.docCoord2Cad(t2, 0, 0);
      return e2.distanceTo(n2);
    }, C.prototype.cadCoordLong2Doc = function(t2) {
      var e2 = this.cadCoord2Doc(0, 0, 0), n2 = this.cadCoord2Doc(t2, 0, 0);
      return e2.distanceTo(n2);
    }, C.prototype.viewCoordLong2Cad = function(t2) {
      return this.docCoordLong2Cad(this.screenCoordLong2Doc(t2));
    }, C.prototype.cadCoordLong2View = function(t2) {
      return this.docCoordLong2Screen(this.cadCoordLong2Doc(t2));
    }, C.prototype.viewCoord2Cad = function(t2, e2, n2) {
      var r2 = this.screenCoord2Doc(t2, e2, n2);
      return this.docCoord2Cad(r2.x, r2.y, r2.z);
    }, C.prototype.cadCoord2View = function(t2, e2, n2) {
      var r2 = this.cadCoord2Doc(t2, e2, n2);
      return this.docCoord2Screen(r2.x, r2.y, r2.z);
    }, C.prototype.docCoord2World = function(t2, e2, n2) {
      var r2 = new o.Vector3(t2, e2, n2);
      return r2.applyMatrix4(this._doc2World), r2;
    }, C.prototype.getDoc2World = function() {
      return this._doc2World;
    }, C.prototype.getWorldToDoc = function() {
      return this._word2doc;
    }, C.prototype.worldCoord2Doc = function(t2, e2, n2) {
      var r2 = new o.Vector3(t2, e2, n2);
      return r2.applyMatrix4(this._word2doc), r2;
    }, C.prototype.screenCoord2Doc = function(t2, e2, n2) {
      var r2 = this.screenCoord2World(t2, e2, n2);
      return this.worldCoord2Doc(r2.x, r2.y, 0);
    }, C.prototype.worldCoord2Currnet = function(t2, e2, n2) {
      var r2 = new o.Vector3(t2, e2, n2);
      return r2.applyMatrix4(this._word2Current), r2;
    }, C.prototype.currentCoord2World = function(t2, e2, n2) {
      var r2 = new o.Vector3(t2, e2, n2);
      return r2.applyMatrix4(this._current2word), r2;
    }, C.prototype.screenCoord2Current = function(t2, e2, n2) {
      var r2 = this.screenCoord2World(t2, e2, n2);
      return r2.applyMatrix4(this._word2Current), r2;
    }, C.prototype.currentCoord2Screen = function(t2, e2, n2) {
      var r2 = new o.Vector3(t2, e2, n2);
      return r2.applyMatrix4(this._current2word), this.worldCoord2Screen(r2.x, r2.y, r2.z);
    }, C.prototype.docCoord2Screen = function(t2, e2, n2) {
      var r2 = this.docCoord2World(t2, e2, n2);
      return this.worldCoord2Screen(r2.x, r2.y, r2.z);
    }, C.prototype.screenCoordLong2Doc = function(t2) {
      var e2 = this.screenCoord2Doc(0, 0, 0), n2 = this.screenCoord2Doc(t2, 0, 0);
      return e2.distanceTo(n2);
    }, C.prototype.screenCoordLong2DocScale = function() {
      var t2 = this.screenCoord2Doc(0, 0, 0), e2 = this.screenCoord2Doc(1, 0, 0);
      return t2.distanceTo(e2);
    }, C.prototype.docCoordLong2Screen = function(t2) {
      var e2 = this.docCoord2Screen(0, 0, 0), n2 = this.docCoord2Screen(0 < t2 ? t2 : -t2, 0, 0);
      return 0 <= t2 ? e2.distanceTo(n2) : -e2.distanceTo(n2);
    }, C.prototype.screenCoordLong2World = function(t2) {
      var e2 = this.screenCoord2World(0, 0, 0), n2 = this.screenCoord2World(0 < t2 ? t2 : -t2, 0, 0);
      return 0 <= t2 ? e2.distanceTo(n2) : -e2.distanceTo(n2);
    }, C.prototype.worldCoordLong2Screen = function(t2) {
      var e2 = this.worldCoord2Screen(0, 0, 0), n2 = this.worldCoord2Screen(t2, 0, 0);
      return e2.distanceTo(n2);
    }, C.prototype.initCAD2Doc = function(t2) {
      t2 instanceof Array ? this._cad2Doc.fromArray(t2) : this._cad2Doc = t2, this._doc2CAD.getInverse(this._cad2Doc), this.mcObject.initCAD2Doc(this._cad2Doc, this._doc2CAD);
    }, C.prototype.intiDoc2Wold = function(t2) {
      t2 instanceof Array ? this._doc2World.fromArray(t2) : this._doc2World = t2, this._word2doc.getInverse(this._doc2World);
    }, C.prototype.intiword2Current = function(t2) {
      this._word2Current = t2.clone(), this._current2word.getInverse(this._word2Current);
    }, C.prototype.initializingObjectMatrix = function() {
      this.isNewObjectMatrix && this._runMode == r.kCPPMxCAD ? (this.m_mxDatabase.initObjectMatrix(this._cad2Doc), this._parentDocObject.matrix = this._cad2Doc, this._parentDocObject.matrixAutoUpdate = false, this._parentDocObject_SmallCoord.matrix = new o.Matrix4(), this._parentDocObject_SmallCoord.matrixAutoUpdate = false, this.threejsselectObjects.matrix = this._cad2Doc, this.threejsselectObjects.matrixAutoUpdate = false, this.intiword2Current(this._doc2CAD)) : (this.m_mxDatabase.initObjectMatrix(this._doc2World), this._parentDocObject.matrix = this._doc2World, this._parentDocObject.matrixAutoUpdate = false, this._parentDocObject_SmallCoord.matrix = this._doc2World, this._parentDocObject_SmallCoord.matrixAutoUpdate = false, this.threejsselectObjects.matrix = this._doc2World, this.threejsselectObjects.matrixAutoUpdate = false, this.intiword2Current(this._word2doc));
    }, C.prototype.getDrawContainer = function() {
      return this.threejsselectObjects;
    }, C.prototype.getTheTempDrawContainer = function() {
      return this._parentDocObject;
    }, C.prototype.isMapBox = function() {
      return M.MxDrawData.m_isMapBox;
    }, C.prototype.getTheTempDrawContainer_SmallCoord_Draw = function() {
      return this._parentDocObject_SmallCoord;
    }, C.prototype.getTheTempDrawContainer_SmallCoord_JigDraw = function() {
      return this._parentDocObject_SmallCoord_JigDraw;
    }, C.prototype.clearTempDrawContainer_SmallCoord_JigDraw = function() {
      s.MxFun.removeThreejsObject(this._parentDocObject_SmallCoord_JigDraw, this._parentDocObject_SmallCoord), this._parentDocObject_SmallCoord_JigDraw = new o.Object3D(), this._parentDocObject_SmallCoord.add(this._parentDocObject_SmallCoord_JigDraw);
    }, C.prototype.getTempMarkDraw = function() {
      return this.tempMarkDraw;
    }, C.prototype.mxWebAddEntityFor2dPointMeshBuffers = function(t2, e2) {
      var n2 = new u.MxNetData(t2), r2 = n2.getdPointMeshBuffersHead(), i2 = r2.zeroLayerIdIndex, a2 = r2.databaseIndex;
      -1 != e2 && (a2 = e2);
      for (var o2 = r2.datasize, s2 = 0; s2 < r2.datacount; s2++) {
        var l2 = n2.getdPointMeshBufferDataHead(o2);
        o2 = l2.offset;
        var c2 = l2.layerId, h2 = c2 == i2, p2 = l2.blkId, d2 = l2.pointCount;
        if (!(d2 < 1)) {
          for (var f2 = [], m2 = [], g2 = [], y2 = [], v2 = [], x2 = 0; x2 < d2; x2++) {
            var w2 = t2.getFloat32(o2, true);
            o2 += 4;
            var b2 = t2.getFloat32(o2, true);
            o2 += 4;
            var M2 = t2.getFloat32(o2, true);
            o2 += 4;
            var _2 = t2.getFloat32(o2, true);
            o2 += 4;
            var T2 = t2.getFloat32(o2, true);
            o2 += 4;
            var C2 = t2.getFloat32(o2, true);
            o2 += 4;
            var S = t2.getInt32(o2, true);
            o2 += 4;
            var D = S >> 24 & 255;
            2 == D ? (y2.push(w2, b2), y2.push(M2, _2), y2.push(T2, C2)) : 1 == D ? 0 != p2 && h2 ? (v2.push(w2, b2), v2.push(M2, _2), v2.push(T2, C2)) : (g2.push(w2, b2), g2.push(M2, _2), g2.push(T2, C2)) : (S = this.automaticInversionColor(16777215 & S), f2.push(w2, b2), f2.push(M2, _2), f2.push(T2, C2), m2.push((255 & S) / 255, (S >> 8 & 255) / 255, (S >> 16 & 255) / 255), m2.push((255 & S) / 255, (S >> 8 & 255) / 255, (S >> 16 & 255) / 255), m2.push((255 & S) / 255, (S >> 8 & 255) / 255, (S >> 16 & 255) / 255));
          }
          var E = this._blocks, O = this._layers;
          0 != a2 && (E = this._extRefManager.getBlocks(a2), O = this._extRefManager.getLayers(a2));
          var A = E.crateBlock(p2);
          A.addGeometryMesh(f2, m2, c2, y2, g2, v2), E.createThreejsObj(A, this, O);
        }
      }
    }, C.prototype.mxWebAddEntityForMemorySections = function(t2, e2) {
      var n2 = new u.MxNetData(t2), r2 = n2.getMemorySectionsHead(), i2 = (r2.zeroLayerIdIndex, r2.databaseIndex);
      -1 != e2 && (i2 = e2);
      var a2 = r2.nOffset, o2 = this._blocks, s2 = this._layers;
      0 != i2 && (o2 = this._extRefManager.getBlocks(i2), s2 = this._extRefManager.getLayers(i2));
      for (var l2 = 0; l2 < r2.datacount; l2++) {
        var h2 = n2.getMemorySectionHead(a2);
        a2 = h2.offset;
        var p2 = new c.MxNewDisplayMemorySection();
        p2.layerId = h2.layerId, p2.blockId = h2.blkId, p2.id = h2.memId, p2.color = h2.memColor, p2.type = h2.memType;
        var d2 = false;
        p2.type == c.MxNewDisplayMemorySectionType.kLinesType_Float ? (d2 = true, p2.type = c.MxNewDisplayMemorySectionType.kLinesType) : p2.type == c.MxNewDisplayMemorySectionType.kTriangleType_Float ? (d2 = true, p2.type = c.MxNewDisplayMemorySectionType.kTriangleType) : p2.type == c.MxNewDisplayMemorySectionType.kPointType_Float && (d2 = true, p2.type = c.MxNewDisplayMemorySectionType.kPointType);
        var f2 = h2.pointCount;
        if (!(f2 < 1)) {
          for (var m2 = [], g2 = 0; g2 < f2; g2++) if (d2) {
            var y2 = t2.getFloat32(a2, true);
            a2 += 4;
            var v2 = t2.getFloat32(a2, true);
            a2 += 4, t2.getFloat32(a2, true), a2 += 4, m2.push(y2, v2, 0);
          } else y2 = t2.getFloat64(a2, true), a2 += 8, v2 = t2.getFloat64(a2, true), a2 += 8, t2.getFloat64(a2, true), a2 += 8, m2.push(y2, v2, 0);
          p2.points = m2;
          var x2 = o2.crateBlock(p2.blockId);
          x2.addMemorySections(p2), o2.createThreejsObj(x2, this, s2);
        }
      }
    }, C.prototype.convertBytesToUTF8 = function(t2, e2) {
      var n2 = 0;
      e2 = Math.min(e2 || t2.length, t2.length), 239 === t2[0] && 187 === t2[1] && 191 === t2[2] && (n2 = 3);
      for (var r2 = [], i2 = 0; n2 < e2; i2++) {
        var a2, o2, s2, l2 = t2[n2++];
        if (0 === l2) break;
        l2 < 128 ? r2[i2] = String.fromCharCode(l2) : 194 <= l2 && l2 < 224 ? (a2 = t2[n2++], r2[i2] = String.fromCharCode(((31 & l2) << 6) + (63 & a2))) : 224 <= l2 && l2 < 240 ? (a2 = t2[n2++], o2 = t2[n2++], r2[i2] = String.fromCharCode(((15 & l2) << 12) + ((63 & a2) << 6) + (63 & o2))) : 240 <= l2 && l2 < 245 && (s2 = ((7 & l2) << 18) + ((63 & (a2 = t2[n2++])) << 12) + ((63 & (o2 = t2[n2++])) << 6) + (63 & t2[n2++]) - 65536, r2[i2] = String.fromCharCode(55296 + (s2 >> 10), 56320 + (1023 & s2)));
      }
      return r2.join("");
    }, C.prototype.mxWebAddEntityFor2dPointTextureBuffers = function(t2, e2) {
      var n2 = new u.MxNetData(t2), r2 = n2.getdPointTextureBuffersHead(), i2 = r2.ver, a2 = (r2.zeroLayerIdIndex, r2.databaseIndex);
      -1 != e2 && (a2 = e2);
      for (var o2 = r2.datasize, s2 = 0; s2 < r2.datacount; s2++) {
        var l2 = n2.getdPointTextureBufferDataHead(o2);
        o2 = l2.offset;
        var c2 = l2.layerId, h2 = l2.blkId, p2 = l2.dataCount;
        if (!(p2 < 1)) {
          var d2 = 0, f2 = this._blocks, m2 = this._layers;
          0 != a2 && (f2 = this._extRefManager.getBlocks(a2), m2 = this._extRefManager.getLayers(a2));
          for (var g2 = f2.crateBlock(h2); d2 < p2; d2++) {
            var y2 = t2.getFloat64(o2, true);
            o2 += 8;
            var v2 = t2.getFloat64(o2, true);
            o2 += 8;
            var x2 = t2.getFloat64(o2, true);
            o2 += 8;
            var w2 = t2.getUint32(o2, true);
            o2 += 4;
            var b2 = t2.getUint32(o2, true);
            o2 += 4;
            var M2 = this.convertBytesToUTF8(new Uint8Array(t2.buffer.slice(o2, o2 + b2)), void 0);
            o2 += b2;
            var _2 = [], T2 = [], C2 = [];
            if (!(w2 < 1)) {
              for (var S = 0; S < w2; S++) {
                if (5 <= i2) {
                  var D = t2.getFloat64(o2, true);
                  o2 += 8;
                  var E = t2.getFloat64(o2, true);
                  o2 += 8, t2.getFloat64(o2, true), o2 += 8;
                  var O = t2.getFloat64(o2, true);
                  o2 += 8;
                  var A = t2.getFloat64(o2, true);
                  o2 += 8, t2.getFloat64(o2, true), o2 += 8;
                  var P = t2.getFloat64(o2, true);
                  o2 += 8;
                  var R = t2.getFloat64(o2, true);
                  o2 += 8, t2.getFloat64(o2, true), o2 += 8, _2.push(D, E), _2.push(O, A), _2.push(P, R);
                } else D = t2.getFloat32(o2, true), o2 += 4, E = t2.getFloat32(o2, true), o2 += 4, O = t2.getFloat32(o2, true), o2 += 4, A = t2.getFloat32(o2, true), o2 += 4, P = t2.getFloat32(o2, true), o2 += 4, R = t2.getFloat32(o2, true), o2 += 4, _2.push(D, E), _2.push(O, A), _2.push(P, R);
                var L = t2.getInt32(o2, true);
                o2 += 4;
                var I = t2.getFloat32(o2, true);
                o2 += 4;
                var k = t2.getFloat32(o2, true);
                o2 += 4;
                var j = t2.getFloat32(o2, true);
                o2 += 4;
                var N = t2.getFloat32(o2, true);
                o2 += 4;
                var V = t2.getFloat32(o2, true);
                o2 += 4;
                var F = t2.getFloat32(o2, true);
                o2 += 4;
                var B = L >> 24 & 255;
                L = 2 == B || 1 == B ? 16777215 : this.automaticInversionColor(16777215 & L), C2.push(I, k), C2.push(j, N), C2.push(V, F), T2.push((255 & L) / 255, (L >> 8 & 255) / 255, (L >> 16 & 255) / 255), T2.push((255 & L) / 255, (L >> 8 & 255) / 255, (L >> 16 & 255) / 255), T2.push((255 & L) / 255, (L >> 8 & 255) / 255, (L >> 16 & 255) / 255);
              }
              g2.addGeometryTexture(_2, C2, T2, c2, M2, y2, v2, x2);
            }
          }
          f2.createThreejsObj(g2, this, m2);
        }
      }
    }, C.prototype.mxWebAddEntityFor2dPointCurveBuffers = function(t2, e2) {
      var n2 = new u.MxNetData(t2), r2 = n2.getdPointCurveBuffersHead(), i2 = r2.zeroLayerIdIndex, a2 = r2.databaseIndex;
      -1 != e2 && (a2 = e2);
      for (var o2 = r2.datasize, s2 = 0; s2 < r2.datacount; s2++) {
        var l2 = n2.getdPointCurveBufferDataHead(o2);
        o2 = l2.offset;
        var c2 = l2.layerId, h2 = c2 == i2, p2 = l2.blkId, d2 = l2.pointCount;
        if (!(d2 < 1)) {
          for (var f2 = [], m2 = [], g2 = [], y2 = [], v2 = [], x2 = 0; x2 < d2; x2++) {
            var w2 = t2.getFloat32(o2, true);
            o2 += 4;
            var b2 = t2.getFloat32(o2, true);
            o2 += 4;
            var M2 = t2.getFloat32(o2, true);
            o2 += 4;
            var _2 = t2.getFloat32(o2, true);
            o2 += 4;
            var T2 = t2.getInt32(o2, true);
            o2 += 4;
            var C2 = T2 >> 24 & 255;
            2 == C2 ? (y2.push(w2, b2), y2.push(M2, _2)) : 1 == C2 ? 0 != p2 && h2 ? (v2.push(w2, b2), v2.push(M2, _2)) : (g2.push(w2, b2), g2.push(M2, _2)) : (f2.push(w2, b2), f2.push(M2, _2), T2 = this.automaticInversionColor(16777215 & T2), m2.push((255 & T2) / 255, (T2 >> 8 & 255) / 255, (T2 >> 16 & 255) / 255), m2.push((255 & T2) / 255, (T2 >> 8 & 255) / 255, (T2 >> 16 & 255) / 255));
          }
          var S = this._blocks, D = this._layers;
          0 != a2 && (S = this._extRefManager.getBlocks(a2), D = this._extRefManager.getLayers(a2));
          var E = S.crateBlock(p2);
          E.addGeometryCurve(f2, m2, c2, y2, g2, v2), S.createThreejsObj(E, this, D);
        }
      }
    }, C.prototype.mxWebAddEntityFor2dPointCurveBuffer = function(t2, e2) {
      var n2 = new u.MxNetData(t2);
      if (!n2.getIsSketchEntity()) {
        var r2, i2 = n2.getLayerId(), a2 = i2 == n2.getZeroLayerId(), o2 = n2.getBlockId();
        if (!((r2 = t2.getInt32(20, true) / 20) < 1)) {
          for (var s2 = 80, l2 = [], c2 = [], h2 = [], p2 = [], d2 = [], f2 = 0; f2 < r2; f2++) {
            var m2 = t2.getFloat32(s2, true);
            s2 += 4;
            var g2 = t2.getFloat32(s2, true);
            s2 += 4;
            var y2 = t2.getFloat32(s2, true);
            s2 += 4;
            var v2 = t2.getFloat32(s2, true);
            s2 += 4;
            var x2 = t2.getInt32(s2, true);
            s2 += 4;
            var w2 = x2 >> 24 & 255;
            2 == w2 ? (p2.push(m2, g2), p2.push(y2, v2)) : 1 == w2 ? 0 != o2 && a2 ? (d2.push(m2, g2), d2.push(y2, v2)) : (h2.push(m2, g2), h2.push(y2, v2)) : (x2 = this.automaticInversionColor(16777215 & x2), l2.push(m2, g2), l2.push(y2, v2), c2.push((255 & x2) / 255, (x2 >> 8 & 255) / 255, (x2 >> 16 & 255) / 255), c2.push((255 & x2) / 255, (x2 >> 8 & 255) / 255, (x2 >> 16 & 255) / 255));
          }
          var b2 = n2.getDatabaseIndex();
          -1 != e2 && (b2 = e2);
          var M2 = this._blocks, _2 = this._layers;
          0 != b2 && (M2 = this._extRefManager.getBlocks(b2), _2 = this._extRefManager.getLayers(b2));
          var T2 = M2.crateBlock(o2);
          T2.addGeometryCurve(l2, c2, i2, p2, h2, d2), M2.createThreejsObj(T2, this, _2);
        }
      }
    }, C.prototype.mxWebAddEntityFor2dPointMeshBuffer = function(t2, e2) {
      var n2 = new u.MxNetData(t2);
      if (!n2.getIsSketchEntity()) {
        var r2, i2 = n2.getLayerId(), a2 = n2.getBlockId(), o2 = i2 == n2.getZeroLayerId();
        if (!((r2 = t2.getInt32(12, true) / 28) < 1)) {
          for (var s2 = 80, l2 = [], c2 = [], h2 = [], p2 = [], d2 = [], f2 = 0; f2 < r2; f2++) {
            var m2 = t2.getFloat32(s2, true);
            s2 += 4;
            var g2 = t2.getFloat32(s2, true);
            s2 += 4;
            var y2 = t2.getFloat32(s2, true);
            s2 += 4;
            var v2 = t2.getFloat32(s2, true);
            s2 += 4;
            var x2 = t2.getFloat32(s2, true);
            s2 += 4;
            var w2 = t2.getFloat32(s2, true);
            s2 += 4;
            var b2 = t2.getInt32(s2, true);
            s2 += 4;
            var M2 = b2 >> 24 & 255;
            2 == M2 ? (p2.push(m2, g2), p2.push(y2, v2), p2.push(x2, w2)) : 1 == M2 ? 0 != a2 && o2 ? (d2.push(m2, g2), d2.push(y2, v2), d2.push(x2, w2)) : (h2.push(m2, g2), h2.push(y2, v2), h2.push(x2, w2)) : (l2.push(m2, g2), l2.push(y2, v2), l2.push(x2, w2), b2 = this.automaticInversionColor(16777215 & b2), c2.push((255 & b2) / 255, (b2 >> 8 & 255) / 255, (b2 >> 16 & 255) / 255), c2.push((255 & b2) / 255, (b2 >> 8 & 255) / 255, (b2 >> 16 & 255) / 255), c2.push((255 & b2) / 255, (b2 >> 8 & 255) / 255, (b2 >> 16 & 255) / 255));
          }
          var _2 = n2.getDatabaseIndex();
          -1 != e2 && (_2 = e2);
          var T2 = this._blocks, C2 = this._layers;
          0 != _2 && (T2 = this._extRefManager.getBlocks(_2), C2 = this._extRefManager.getLayers(_2));
          var S = T2.crateBlock(a2);
          S.addGeometryMesh(l2, c2, i2, p2, h2, d2), T2.createThreejsObj(S, this, C2);
        }
      }
    }, C.prototype.mxWebCreateAllBlocks = function(t2, e2) {
      var n2 = new u.MxNetData(t2).getDatabaseIndex();
      -1 != e2 && (n2 = e2);
      var r2 = this._blocks;
      0 != n2 && (r2 = this._extRefManager.getBlocks(n2)), r2.createBlocks(t2, this.scene);
    }, C.prototype.mxWebEntitysData = function(t2, e2) {
      -1 == e2 && this._objectsOsnap.mxWebEntitysData(t2, e2);
    }, C.prototype.getObjectOsnap = function() {
      return this._objectsOsnap;
    }, C.prototype.saveMxEntityToJson = function(t2) {
      return this.m_mxDatabase.saveJson(t2);
    }, C.prototype.getDtabaseJsonString = function() {
      return JSON.stringify(this.m_mxDatabase.toJsonObject());
    }, C.prototype.loadMxEntityFromJson = function(t2) {
      return this.m_mxDatabase.loadJson(t2);
    }, C);
    function C(t2) {
      this._is2d = true, this._runMode = r.kBrowse, this._userCanvas = null, this._openFile = "empty", this._staticLoadingOpenFiles = [], this._openFileExtName = "", this._userIdentitySign = "", this._rendererParam = void 0, this._userRandomToken = "", this._isCreate = false, this.m_iniSet = {}, this._net = null, this._staticNet = null, this._staticLoadTzNet = null, this._staticLocalNet = null, this._isStaticLocalLoad = false, this._staticLocalLoadPath = "", this._viewWidth = 1, this._viewHeight = 1, this.m_sysVariable = new d.MxSystemVariable(), this._color = "#FFFFFF", this._viewcolor = 15790320, this._isAnimation = false, this._isAnimationStarting = false, this._isWaiteCount = 0, this._callCreateCanvasImageData = void 0, this._callCreateCanvasImageData_param = void 0, this._event = {}, this.scene = null, this.camera = null, this.camera_recover = null, this.secenView = null, this.cameraView = null, this.renderer = null, this.controls = null, this.threejsselectObjectsView = null, this._mouseRightRotate = false, this._isMouseMiddlePan = 1, this._mapId2Entity = /* @__PURE__ */ new Map(), this._setAdyDelete = /* @__PURE__ */ new Map(), this._layers = new l.MxBrowseLayerData(), this._blocks = new c.Blocks(), this._extRefManager = new c.ExternalReferenceManager(), this._doc2World = new o.Matrix4(), this._word2doc = new o.Matrix4(), this._cad2Doc = new o.Matrix4(), this._doc2CAD = new o.Matrix4(), this._word2Current = new o.Matrix4(), this._current2word = new o.Matrix4(), this._allLayoutName = new Array(), this._devicePixelRatio = 1, this._tzDwgStaticFile = "", this._requestHeader = "", this._objectsOsnap = null, this._initZoomwCoordPt1 = null, this._initZoomWCoordPt2 = null, this.m_mxDatabase = null, this._parentDocObject = null, this._parentDocObject_SmallCoord = null, this._parentDocObject_SmallCoord_JigDraw = null, this.threejsselectObjects = null, this.tempMarkDraw = new _.MxTempMarkDraw(), this._onResizeFun = null, this._sCurrentLoadURL = "", this.eventManager = new v.MxDrawObjectEvent(), this._viewangle = 0, this.id = 0, this.mcObject = new w.McDrawObject(), this.isPointMultipleSelect = false, this.isNewObjectMatrix = true, this.bakControls = void 0, this.isMultipleSelect = false, this.mxdrawThreeJS = null, this.curMousePostion = new o.Vector2(0, 0), this.m_isValidCurMousePostion = false, this._is2d = t2, this._blocks.initRootBlockRef(), this.m_iniSet[a.kEnableOsnapFunction] = false, this.m_sysVariable.init(this), this.m_mxDatabase = new g.MxDbDatabase(), this.id = p.MxManager.allocId(), 1 == M.MxDrawData.m_iIntelliSelectType ? this.isPointMultipleSelect = false : 2 == M.MxDrawData.m_iIntelliSelectType && (this.isPointMultipleSelect = true), this.isMultipleSelect = M.MxDrawData.m_isMultipleSelect, this.mcObject.initMxObject(this);
    }
    n.MxDrawObject = T;
  }, { "./MxDrawData": 22, "./MxDrawObjectEvent": 26, "./MxFun": 27, "./MxLocalFileLoad": 28, "./MxManager": 29, "./MxNetData": 31, "./MxSystemVariable": 35, "./MxTempMarkDraw": 36, "./Operate/MxDrawObjectOsnap": 49, "./UI/MxUiVue": 65, "./View/MxBrowseDisplay": 66, "./View/MxBrowseLayerData": 67, "./View/MxDbDatabase": 68, "./View/MxDbEntityGrip": 70, "./View/MxDrawMapBox": 75, "./cpp/McDrawObject": 78, three: 19 }], 24: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDrawObject2d = void 0;
    var a, o = t("three"), s = t("./MxFun"), l = t("./MxDrawObject"), c = t("three-orbitcontrols"), u = t("./MxNetData"), h = t("./MxMaterial"), p = t("./MxDrawData"), d = t("./View/MxDrawMapBox"), f = (i(m, a = l.MxDrawObject), m.prototype.set3DDraw = function(t2) {
      this.is3DDraw = t2;
    }, m.prototype.getOrthographicCamera = function() {
      return this.camera instanceof o.OrthographicCamera ? this.camera : null;
    }, m.prototype.getFullDisplayRange = function() {
      return { minPt: this._initMinDisplayPoint, maxPt: this._initMaxDisplayPoint };
    }, m.prototype.saveZoom = function() {
      this.camera_recover = this.camera.clone(false), this.controls.saveState();
    }, m.prototype.recoverZoom = function() {
      this.camera_recover && (this.camera.copy(this.camera_recover, false), this.camera_recover = null, this.getOrthographicCamera().updateProjectionMatrix(), this.controls.reset(), this.mcObject.updateDisplayMatrixData());
    }, m.prototype.zoomW_call = function(t2, e2, n2, r2) {
      if (t2.distanceTo(e2) < 1e-7) console.log("Mx:ZoomW param invalid");
      else {
        if (null != n2 && n2 || (t2 = this.currentCoord2World(t2.x, t2.y, 0), e2 = this.currentCoord2World(e2.x, e2.y, 0)), t2.x > e2.x) {
          var i2 = t2.x;
          t2.x = e2.x, e2.x = i2;
        }
        t2.y > e2.y && (i2 = t2.y, t2.y = e2.y, e2.y = i2);
        var a2 = this.getViewWidth(), s2 = this.getViewHeight();
        s2 < 5 && (s2 = 5), a2 < 5 && (a2 = 5);
        var c2 = Math.abs(t2.x - e2.x), u2 = Math.abs(t2.y - e2.y);
        c2 < 1e-5 && (c2 = 1e-5), u2 < 1e-5 && (u2 = 1e-5);
        var h2 = this.getOrthographicCamera();
        if (c2 / u2 < a2 / s2) {
          var p2 = 0.5 * u2, d2 = a2 / s2;
          h2.left = -p2 * d2, h2.right = p2 * d2, h2.top = p2, h2.bottom = -p2;
        } else p2 = 0.5 * c2, d2 = s2 / a2, h2.left = -p2, h2.right = p2, h2.top = p2 * d2, h2.bottom = -p2 * d2;
        var f2 = c2, m2 = u2, g = f2;
        g < m2 && (g = m2), this._runMode == l.MxRunMode.kCPPMxCAD ? (h2.far = 10240, h2.near = -10240) : (h2.far = 1e3 * g, h2.far < 9e4 && (h2.far = 9e4), h2.near = 1e3 * -g, -9e4 < h2.near && (h2.near = -9e4));
        var y = t2.x + 0.5 * f2, v = t2.y + 0.5 * m2;
        h2.zoom = 1, h2.position.set(y, v, 100), h2.lookAt(new o.Vector3(y, v, 0)), h2.updateProjectionMatrix(), this.controls.target.x = y, this.controls.target.y = v, this.controls.target.z = 0, this.controls.update(), this.mcObject.updateDisplayMatrixData(r2);
      }
    }, m.prototype.zoomScale_call = function(t2) {
      var e2 = this.getOrthographicCamera();
      e2.zoom = Math.max(this.controls.minZoom, Math.min(this.controls.maxZoom, e2.zoom * t2)), e2.updateProjectionMatrix(), this.controls.update(), this.mcObject.updateDisplayMatrixData();
    }, m.prototype.zoomCenter_call = function(t2, e2) {
      var n2 = this.bakViewDocWidth, r2 = this.bakViewDocHeight;
      if (this.bakViewDocWidth) {
        var i2 = new o.Vector3(), a2 = new o.Vector3();
        i2.x = t2 - 0.5 * this.bakViewDocWidth, i2.y = e2 - 0.5 * this.bakViewDocHeight, a2.x = t2 + 0.5 * this.bakViewDocWidth, a2.y = e2 + 0.5 * this.bakViewDocHeight, this.zoomW(i2, a2);
      } else {
        var s2 = this.getViewWidth(), l2 = this.getViewHeight(), c2 = this.screenCoord2World(0, 0, 0), u2 = this.screenCoord2World(s2, l2, 0);
        n2 = u2.x - c2.x, r2 = u2.y - c2.y;
        var h2 = t2 - (c2.x + 0.5 * (u2.x - c2.x)), p2 = e2 - (c2.y + 0.5 * (u2.y - c2.y));
        c2.x += h2, c2.y += p2, u2.x += h2, u2.y += p2, this.zoomW(c2, u2);
      }
      this.bakViewDocWidth = n2, this.bakViewDocHeight = r2;
    }, m.prototype.calcCameraUp = function(t2) {
      var e2 = new o.Vector3(0, 1, 0), n2 = new o.Matrix4();
      return n2.makeRotationZ(t2), e2.applyMatrix4(n2), e2;
    }, m.prototype.updateCameraForm3dViewDataImp = function(t2) {
      t2.updateCamera(this.getOrthographicCamera(), this.controls, this.getViewWidth(), this.getViewHeight()), this.mcObject.updateDisplayMatrixData(false), this.controls.mouseButtons.LEFT = o.MOUSE.PAN, this.controls.mouseButtons.RIGHT = o.MOUSE.ROTATE, this.controls.mouseButtons.MIDDLE = o.MOUSE.PAN, this.controls.touches.ONE = o.TOUCH.ROTATE, this.controls.touches.TWO = o.TOUCH.PAN;
    }, m.prototype.updateCameraDisplayRangeImp = function(t2, e2, n2) {
      null != this._initZoomwCoordPt1 && null != this._initZoomWCoordPt2 ? (this._initMinDisplayPoint = this.docCoord2World(this._initZoomwCoordPt1.x, this._initZoomwCoordPt1.y, 0), this._initMaxDisplayPoint = this.docCoord2World(this._initZoomWCoordPt2.x, this._initZoomWCoordPt2.y, 0)) : (this._initMinDisplayPoint = t2, this._initMaxDisplayPoint = e2), this._viewangle = n2, this.camera.up = this.calcCameraUp(n2), this.cameraView.up = this.calcCameraUp(n2), this.cameraView.updateProjectionMatrix(), this.zoomW(this._initMinDisplayPoint, this._initMaxDisplayPoint, true);
    }, m.prototype.setViewAngle_call = function(t2) {
      this._viewangle = t2;
      var e2 = this.getOrthographicCamera();
      e2 && (e2.up = this.calcCameraUp(t2), e2.updateProjectionMatrix()), this.cameraView.up = this.calcCameraUp(t2), this.cameraView.updateProjectionMatrix(), this.controls.update(), this.mcObject.setViewAngle(t2), this.mcObject.updateDisplayMatrixData();
    }, m.prototype.zoomInitialStates = function() {
      null != this._initMinDisplayPoint && null != this._initMaxDisplayPoint ? (this.camera.up = this.calcCameraUp(this._viewangle), this.cameraView.up = this.calcCameraUp(this._viewangle), this.cameraView.updateProjectionMatrix(), this.zoomW(this._initMinDisplayPoint, this._initMaxDisplayPoint, true)) : console.log("mx assert(0)");
    }, m.prototype.onInitScene = function() {
      if (0 == this.callInitSceneEvent(this.scene, this.controls, true)) {
        var t2 = new o.AmbientLight(3355443, 1);
        this.scene.add(t2);
        var e2 = new o.DirectionalLight(16777215, 1);
        e2.position.set(-2, 2, 3).normalize(), this.scene.add(e2);
      }
    }, m.prototype.updataCameraView = function(t2, e2) {
      var n2 = t2, r2 = e2;
      this.cameraView.left = 0, this.cameraView.right = n2, this.cameraView.top = r2, this.cameraView.bottom = 0, this.cameraView.updateProjectionMatrix();
    }, m.prototype.onInitViewScene = function() {
      if (!this.secenView) {
        this.secenView = new o.Scene(), this._runMode != l.MxRunMode.kCPPMxCAD && this.mxdrawThreeJS.getType() != d.MxThreeJSType.kMapBox && (this.secenView.background = new o.Color(this._viewcolor));
        var t2 = this.getViewWidth(), e2 = this.getViewHeight();
        t2 = this.xzSize(t2), e2 = this.xzSize(e2), this.cameraView = new o.OrthographicCamera(0, t2, e2, 0, 1, 2e3), this.cameraView.position.set(0, 0, 2e3), this.cameraView.lookAt(new o.Vector3(0, 0, 0)), this.cameraView.updateProjectionMatrix();
        var n2 = new o.AmbientLight(3355443, 1);
        this.secenView.add(n2);
        var r2 = new o.DirectionalLight(16777215, 1);
        r2.position.set(-2, 2, 3).normalize(), this.secenView.add(r2), this.threejsselectObjectsView = new o.Object3D(), this.secenView.add(this.threejsselectObjectsView);
      }
    }, m.prototype.isSoftwareRenderer = function(t2) {
      var e2 = t2.toLowerCase();
      return e2.includes("swiftshader") || e2.includes("llvmpipe") || e2.includes("softpipe") || e2.includes("microsoft") || e2.includes("mesa") || e2.includes("canvas") || e2.includes("mozilla");
    }, m.prototype.onInitThreejs = function() {
      var t2 = this.getViewWidth(), e2 = this.getViewHeight(), n2 = (t2 = this.xzSize(t2)) / (e2 = this.xzSize(e2)) * 50;
      this.onInitViewScene(), this.camera = new o.OrthographicCamera(n2 / -2, n2 / 2, 25, -25, -10240, 10240), this.camera.position.set(0, 0, 200), this.scene = new o.Scene();
      var r2 = this.getUserCanvas(), i2 = this._rendererParam;
      i2 = i2 || {}, null == r2 ? (i2.antialias = false, i2.stencil = true, this.renderer = new o.WebGLRenderer(i2), this.renderer.setClearColor(0, 1), this.renderer.setPixelRatio(this._devicePixelRatio), this.renderer.setSize(t2, e2), document.body.appendChild(this.renderer.domElement)) : (i2.canvas = r2, i2.stencil = true, this.renderer = new o.WebGLRenderer(i2), this.renderer.setClearColor(0, 1), this.renderer.setPixelRatio(this._devicePixelRatio));
      var a2 = this.renderer.getContext(), l2 = a2.getParameter(a2.RENDERER);
      console.log("MxTip:", l2), this.isSoftwareRenderer(l2) && console.log("software renderer"), this.renderer.sortObjects = true, this.renderer.info.autoReset = p.MxDrawData.m_isAutoResetRenderer, this.renderer.info.reset();
      var u2 = this.getUserCanvas();
      null == u2 && (u2 = this.renderer.domElement), this.controls = new c.OrbitControls(this.camera, u2), this.is3DDraw || (this.controls.enableZoom = true), this.controls.enableRotate = false, s.MxFun.isPC() ? (this.controls.zoomSpeed = 4, this.controls.screenSpacePanning = true, this.controls.touches.ONE = o.TOUCH.PAN, this.setMouseMiddlePan(this._isMouseMiddlePan), this._mouseRightRotate && (this.controls.mouseButtons.RIGHT = o.MOUSE.ROTATE)) : (this.setMouseMiddlePan(this._isMouseMiddlePan), this.controls.zoomSpeed = 1.5, this.controls.touches.ONE = o.TOUCH.PAN, this.controls.screenSpacePanning = true);
    }, m.prototype.onCreate = function() {
      this._is2d = true, this.mxdrawThreeJS.onInitScene();
    }, m.prototype.mxWebAddEntity_3DChild = function(t2) {
      var e2 = new u.MxNetData(t2).getMesh();
      if (null == e2.id) return e2.size;
      var n2 = new o.Mesh(e2.geometry, h.MxMaterial.GetBaseColorMaterial(e2.nColorIndex));
      return this.removeEntity(e2.id), this.scene.add(n2), e2.isSketchEntity && this.addEntity(e2.id, n2), e2.size;
    }, m.prototype.mxWebAddEntity_Curve = function(t2, e2) {
      var n2 = new u.MxNetData(t2).getCurve(e2);
      if (null != n2.id) {
        var r2 = h.MxMaterial.GetCurveColorMaterial(n2.colorIndex), i2 = new o.LineSegments(n2.geometry, r2);
        this.removeEntity(n2.id), this.scene.add(i2), n2.isSketchEntity && this.addEntity(n2.id, i2);
      }
    }, m.prototype.onViewChange = function() {
      this._onResizeImpCalling || (this._bakOnResizeViewWorldCoord = void 0), this.bakViewDocHeight = this.bakViewDocWidth = void 0;
    }, m.prototype.mapBox_onResizeImp = function(t2, e2) {
      var n2 = t2, r2 = e2;
      this.mcObject.setSize(n2, r2), this.callEvent("viewsizechange", { width: n2, height: r2 }), this.callEvent("viewchange"), this.m_mxDatabase.getSelectManager().setCanvasSize(n2, r2);
    }, m.prototype.callOnResizeImp = function(t2, e2) {
      var n2;
      this._bakOnResizeViewWorldCoord ? n2 = this._bakOnResizeViewWorldCoord : (n2 = this.getViewWorldCoord(), this._bakOnResizeViewWorldCoord = n2);
      var r2 = n2.pt1.x + 0.5 * (n2.pt3.x - n2.pt1.x), i2 = n2.pt1.y + 0.5 * (n2.pt3.y - n2.pt1.y), a2 = new o.Matrix4();
      a2.makeRotationZ(this._viewangle);
      var s2 = new o.Matrix4().makeTranslation(r2, i2, 0).multiply(a2).multiply(new o.Matrix4().makeTranslation(-r2, -i2, 0)), l2 = n2.pt1.clone(), c2 = n2.pt2.clone(), u2 = n2.pt3.clone(), h2 = n2.pt4.clone();
      l2.applyMatrix4(s2), c2.applyMatrix4(s2), u2.applyMatrix4(s2), h2.applyMatrix4(s2);
      var p2 = l2.clone();
      p2.x > c2.x && (p2.x = c2.x), p2.x > u2.x && (p2.x = u2.x), p2.x > h2.x && (p2.x = h2.x), p2.y > c2.y && (p2.y = c2.y), p2.y > u2.y && (p2.y = u2.y), p2.y > h2.y && (p2.y = h2.y);
      var d2 = l2.clone();
      d2.x < c2.x && (d2.x = c2.x), d2.x < u2.x && (d2.x = u2.x), d2.x < h2.x && (d2.x = h2.x), d2.y < c2.y && (d2.y = c2.y), d2.y < u2.y && (d2.y = u2.y), d2.y < h2.y && (d2.y = h2.y);
      var f2 = new o.Vector2();
      if (this.renderer.getSize(f2), f2.x == t2 && f2.y == e2) return false;
      var m2 = this.getOrthographicCamera(), g = Math.abs(d2.x - p2.x), y = Math.abs(d2.y - p2.y);
      if (g < 1e-5 && (g = 1e-5), y < 1e-5 && (y = 1e-5), g / y < t2 / e2) {
        var v = 0.5 * y, x = t2 / e2;
        m2.left = -v * x, m2.right = v * x, m2.top = v, m2.bottom = -v;
      } else v = 0.5 * g, x = e2 / t2, m2.left = -v, m2.right = v, m2.top = v * x, m2.bottom = -v * x;
      var w = p2.x + 0.5 * g, b = p2.y + 0.5 * y;
      m2.zoom = 1;
      var M = m2.position.z;
      return m2.position.set(w, b, M), m2.lookAt(new o.Vector3(w, b, 0)), m2.updateProjectionMatrix(), this.controls.target.x = w, this.controls.target.y = b, this.controls.target.z = 0, this.controls.update(), true;
    }, m.prototype.onResizeImp = function(t2, e2) {
      var n2 = this.getViewWidth();
      null != t2 && (n2 = t2);
      var r2 = this.getViewHeight();
      if (null != e2 && (r2 = e2), r2 < 5) return false;
      if (n2 < 5) return false;
      n2 = this.xzSize(n2), r2 = this.xzSize(r2), this._onResizeImpCalling = true;
      var i2 = this.mcObject.mxdraw3d.onResize(this.getOrthographicCamera(), this.controls, n2, r2);
      return i2 && (this.renderer.setSize(n2, r2), this.mcObject.setSize(n2, r2), this.updataClipMaterial(), this.updataCameraView(n2, r2), this.callEvent("viewsizechange", { width: n2, height: r2 }), this.callEvent("viewchange"), this.m_mxDatabase.getSelectManager().setCanvasSize(n2, r2), this.m_mxDatabase.onViewChange()), this._onResizeImpCalling = false, i2;
    }, m);
    function m() {
      var t2 = a.call(this, true) || this;
      return t2._initMinDisplayPoint = null, t2._initMaxDisplayPoint = null, t2.is3DDraw = s.MxFun.is3DDwg(), t2._bakOnResizeViewWorldCoord = void 0, t2._onResizeImpCalling = false, t2.bakViewDocWidth = void 0, t2.bakViewDocHeight = void 0, t2;
    }
    n.MxDrawObject2d = f;
  }, { "./MxDrawData": 22, "./MxDrawObject": 23, "./MxFun": 27, "./MxMaterial": 30, "./MxNetData": 31, "./View/MxDrawMapBox": 75, three: 19, "three-orbitcontrols": 17 }], 25: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDrawObject3d = void 0;
    var a, o = t("three"), s = t("./MxDrawObject"), l = t("three-orbitcontrols"), c = t("./MxNetData"), u = t("./MxMaterial"), h = t("./MxTools"), p = (i(d, a = s.MxDrawObject), d.prototype.mxWebAddEntity_Curve = function(t2, e2) {
      var n2, r2 = new c.MxNetData(t2), i2 = 0 == t2.getInt32(32, true), a2 = r2.getIsSketchEntity();
      if (!((n2 = i2 ? t2.getInt32(20, true) / 4 / 3 : t2.getInt32(20, true) / 4 / 2) < 2)) {
        for (var s2 = new o.Geometry(), l2 = e2, p2 = 0; p2 < n2; p2++) {
          var d2 = t2.getFloat32(l2, true);
          l2 += 4;
          var f = t2.getFloat32(l2, true);
          l2 += 4;
          var m = 0;
          i2 && (m = t2.getFloat32(l2, true), l2 += 4), s2.vertices.push(h.MxTools.AsThreeJsPoint(d2, f, m));
        }
        var g = t2.getInt32(28, true), y = u.MxMaterial.GetCurveColorMaterial(g), v = new o.LineSegments(s2, y), x = t2.getInt32(4, true);
        this.removeEntity(x), this.scene.add(v), a2 && this.addEntity(x, v);
      }
    }, d.prototype.mxWebAddEntity_3DChild = function(t2) {
      var e2 = new c.MxNetData(t2), n2 = e2.getId(), r2 = (e2.getColorIndex(), 0 == e2.getBufferType()), i2 = e2.getIsSketchEntity();
      this.removeEntity(n2);
      var a2 = new o.Mesh(new o.Geometry()), s2 = this.mxWebUpdateEntity_3DChild(a2, t2, r2);
      return this.scene.add(a2), i2 && this.addEntity(n2, a2), a2.geometry.computeBoundingBox(), a2.geometry.computeBoundingSphere(), s2;
    }, d.prototype.mxWebUpdateEntity_3DChild = function(t2, e2, n2) {
      var r2 = new c.MxNetData(e2), i2 = r2.getVertexBufferSize(), a2 = r2.getIndexBufferSize(), s2 = r2.getColorIndex();
      if (0 === i2 || 0 === a2) return r2.getDrawDataOffset();
      var l2 = r2.getMateria(), p2 = void 0, d2 = true, f = false, m = false;
      0 != l2.length && (null != (p2 = JSON.parse(l2)).computeFaceNonmal && (d2 = p2.computeFaceNonmal), null != p2.castShadow && (f = p2.castShadow), null != p2.receiveShadow && (m = p2.receiveShadow)), t2.material = u.MxMaterial.createMaterial(p2), null == t2.material && (t2.material = u.MxMaterial.GetColorMaterial(s2)), t2.castShadow = f, t2.receiveShadow = m;
      var g, y = r2.getDrawDataOffset();
      g = n2 ? i2 / 4 / 8 : i2 / 4 / 2;
      var v = t2.geometry;
      v.vertices = [], v.faces = [];
      for (var x = 0; x < g; x++) {
        var w = e2.getFloat32(y + 0, true), b = e2.getFloat32(y + 4, true), M = 0, _ = 0, T = 0, C = 0, S = 0, D = 0;
        n2 ? (M = e2.getFloat32(y + 8, true), _ = e2.getFloat32(y + 12, true), T = e2.getFloat32(y + 16, true), C = e2.getFloat32(y + 20, true), S = e2.getFloat32(y + 24, true), D = e2.getFloat32(y + 28, true), y += 32) : y += 8;
        var E = h.MxTools.AsThreeJsPoint(w, b, M);
        v.vertices.push(E), v.vertices[x].normal = h.MxTools.AsThreeJsPoint(_, T, C), v.vertices[x].uv = new o.Vector2(S, D);
      }
      var O = a2 / 4;
      for (x = 0; x < O; x += 3) {
        var A = e2.getInt32(y, true);
        y += 4;
        var P = e2.getInt32(y, true);
        y += 4;
        var R = e2.getInt32(y, true);
        y += 4;
        var L = new o.Face3(A, P, R);
        d2 || L.vertexNormals.push(v.vertices[A].normal, v.vertices[P].normal, v.vertices[R].normal), v.faces.push(L), v.faceVertexUvs[0].push([v.vertices[A].uv, v.vertices[P].uv, v.vertices[R].uv]);
      }
      return d2 && v.computeFaceNormals(), y;
    }, d.prototype.updateUVs = function(t2) {
      t2.faceVertexUvs[0] = [], t2.faces.forEach(function(e2) {
        var n2 = ["x", "y", "z"].sort(function(t3, n3) {
          return Math.abs(e2.normal[t3]) - Math.abs(e2.normal[n3]);
        }), r2 = t2.vertices[e2.a], i2 = t2.vertices[e2.b], a2 = t2.vertices[e2.c], s2 = new o.Vector2(r2[n2[0]], r2[n2[1]]), l2 = new o.Vector2(i2[n2[0]], i2[n2[1]]), c2 = new o.Vector2(a2[n2[0]], a2[n2[1]]);
        t2.faceVertexUvs[0].push([s2, l2, c2]);
      }), t2.uvsNeedUpdate = true;
    }, d.prototype.onInitThreejs = function() {
      var t2 = this.getViewWidth(), e2 = this.getViewHeight(), n2 = (t2 = this.xzSize(t2)) / (e2 = this.xzSize(e2)) * 50;
      this.camera = new o.OrthographicCamera(n2 / -2, n2 / 2, 25, -25, 1, 1e3), this.camera.position.set(-200, 200, 200), this.scene = new o.Scene(), this.scene.background = new o.Color(this._viewcolor);
      var r2 = this.getUserCanvas();
      null == r2 ? (this.renderer = new o.WebGLRenderer({ antialias: true, alpha: true }), this.renderer.setPixelRatio(this._devicePixelRatio), this.renderer.setSize(t2, e2), document.body.appendChild(this.renderer.domElement)) : (this.renderer = new o.WebGLRenderer({ canvas: r2, antialias: true, alpha: true }), this.renderer.setPixelRatio(this._devicePixelRatio));
      var i2 = this.getUserCanvas();
      null == i2 && (i2 = this.renderer.domElement), this.controls = new l.OrbitControls(this.camera, i2);
    }, d.prototype.onInitViewScene = function() {
    }, d.prototype.onInitScene = function() {
      if (0 == this.callInitSceneEvent(this.scene, this.controls, false)) {
        var t2 = new o.AmbientLight(2236962);
        t2.integrity = 1, this.scene.add(t2);
        var e2 = new o.DirectionalLight(16777215, 1);
        e2.position.set(-2, 2, 3).normalize(), this.scene.add(e2);
        var n2 = new o.GridHelper(2e3, 100);
        n2.position.y = -199, n2.material.opacity = 0.25, n2.material.transparent = true, this.scene.add(n2);
        var r2 = new o.AxesHelper(20);
        this.scene.add(r2);
      }
    }, d.prototype.onCreate = function() {
      this._is2d = false, this.callEvent("initRenderer", this.renderer), this.mxdrawThreeJS.onInitScene();
    }, d.prototype.getOrthographicCamera = function() {
      return this.camera instanceof o.OrthographicCamera ? this.camera : null;
    }, d.prototype.onViewChange = function() {
    }, d.prototype.callOnResizeImp = function(t2, e2) {
      return false;
    }, d.prototype.onResizeImp = function(t2, e2) {
      var n2 = this.getViewWidth();
      null != t2 && (n2 = t2);
      var r2 = this.getViewHeight();
      null != e2 && (r2 = e2), n2 = this.xzSize(n2), r2 = this.xzSize(r2);
      var i2 = this.getOrthographicCamera(), a2 = n2 / r2;
      return i2.left = 50 * a2 / -2, i2.right = 50 * a2 / 2, i2.top = 25, i2.bottom = -25, i2.updateProjectionMatrix(), this.renderer.setSize(n2, r2), true;
    }, d.prototype.zoomInitialStates = function() {
    }, d.prototype.saveZoom = function() {
    }, d.prototype.recoverZoom = function() {
    }, d.prototype.zoomScale_call = function(t2) {
    }, d.prototype.zoomW_call = function(t2, e2, n2, r2) {
    }, d.prototype.zoomCenter_call = function(t2, e2) {
    }, d.prototype.setViewAngle_call = function(t2) {
      this._viewangle = t2;
    }, d.prototype.getFullDisplayRange = function() {
      return {};
    }, d);
    function d() {
      var t2 = a.call(this, false) || this;
      return t2._viewcolor = 15790320, t2;
    }
    n.MxDrawObject3d = p;
  }, { "./MxDrawObject": 23, "./MxMaterial": 30, "./MxNetData": 31, "./MxTools": 38, three: 19, "three-orbitcontrols": 17 }], 26: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDrawObjectEvent = n.MxDrawObjectEventDefautProc = void 0;
    var r = t("./MxFun"), i = t("./Operate/MxJigCmdManager"), a = t("three"), o = t("./UI/MxUiVue"), s = t("./MxDrawData"), l = (c.prototype.onMousemove = function(t2) {
      if (o.MxUiVue.isNull()) return 0;
      var e2 = this.mxObj.screenCoord2Doc(t2.offsetX, t2.offsetY, 0);
      return e2 = this.mxObj.docCoord2Cad(e2.x, e2.y, e2.z), o.MxUiVue.setTipCoord(r.MxFun.formatString("{0},{1},0.000", e2.x.toFixed(3), e2.y.toFixed(3))), 0;
    }, c.prototype.isEnableIntelliSelect = function() {
      return !!s.MxDrawData.m_isEnableIntelliSelect && !this.mxObj.is3DMode();
    }, c.prototype.onTouchStart = function(t2) {
      if (!this.isEnableIntelliSelect() || i.MxJigCmdManager.isRunning() || this.mxObj.isPaningCommand() || 1 != t2.touches.length) return 0;
      var e2 = t2.target.getBoundingClientRect(), n2 = t2.touches[0].clientX - e2.left, o2 = t2.touches[0].clientY - e2.top, s2 = this.mxObj, l2 = s2.screenCoord2Current(n2, o2, 0);
      if (s2.getMxDatabase().getGripManager().onMouseLBDown(l2)) return 1;
      if (s2.isValidMcObject() && s2.getMcObject().getGripManager().onMouseLBDown(l2)) return 1;
      var c2 = new a.Vector3(n2, o2, 0);
      return r.MxFun.sendStringToExecute("Mx_FrontEndWebpageIntelliSel", { pt: c2, shiftKey: false }), 1;
    }, c.prototype.onMousdown = function(t2) {
      if (t2.button == i.MxJigCmdManager.MouseButton.kRight && i.MxJigCmdManager.isRunning() && !s.MxDrawData.m_isEnableCommandRightClickMenu && !t2.shiftKey) return i.MxJigCmdManager.OnEnter(-1), t2.stopPropagation(), 1;
      if (!this.isEnableIntelliSelect() || t2.button != i.MxJigCmdManager.MouseButton.kLeft || i.MxJigCmdManager.isRunning() || this.mxObj.isPaningCommand()) return 0;
      var e2 = this.mxObj, n2 = e2.screenCoord2Current(t2.offsetX, t2.offsetY, 0);
      if (e2.getMxDatabase().getGripManager().onMouseLBDown(n2)) return 1;
      if (e2.isValidMcObject() && e2.getMcObject().getGripManager().onMouseLBDown(n2)) return 1;
      var o2 = new a.Vector3(t2.offsetX, t2.offsetY, 0);
      return r.MxFun.sendStringToExecute("Mx_FrontEndWebpageIntelliSel", { pt: o2, shiftKey: t2.shiftKey }), 1;
    }, c.prototype.init = function(t2, e2) {
      this.mxObj = t2;
      var n2 = this;
      e2.addEventListener("mousemove", function(t3) {
        return n2.onMousemove(t3);
      }), e2.addEventListener("mousedown", function(t3) {
        return n2.onMousdown(t3);
      }), e2.addEventListener("touchstart", function(t3) {
        return n2.onTouchStart(t3);
      });
    }, c);
    function c() {
    }
    n.MxDrawObjectEventDefautProc = l;
    var u = (h.prototype.onMousedown = function(t2, e2) {
      this.callEvent("mousedown", t2, e2);
    }, h.prototype.onMousemove = function(t2, e2) {
      this.callEvent("mousemove", t2, e2);
    }, h.prototype.onMouseup = function(t2, e2) {
      this.callEvent("mouseup", t2, e2);
    }, h.prototype.registEvent = function(t2) {
      var e2 = t2.getMxDrawThreeJs().getRegistEventObject();
      if (!e2) return false;
      var n2 = this;
      r.MxFun.isPC() ? (e2.addEventListener("mouseup", function(e3) {
        var r2 = t2.getMxDrawThreeJs().getDomMousePos(e3);
        n2.onMouseup(e3, r2);
      }, true), e2.addEventListener("mousemove", function(e3) {
        var r2 = t2.getMxDrawThreeJs().getDomMousePos(e3);
        t2.setCurrentMousePostion(e3), n2.onMousemove(e3, r2);
      }, true), e2.addEventListener("mousedown", function(e3) {
        var r2 = t2.getMxDrawThreeJs().getDomMousePos(e3);
        t2.setCurrentMousePostion(e3), n2.onMousedown(e3, r2);
      }, true)) : (e2.addEventListener("touchstart", function(e3) {
        t2.setCurrentMousePostion(e3, true), n2.callEvent("touchstart", e3);
      }, true), e2.addEventListener("touchend", function(t3) {
        n2.callEvent("touchend", t3);
      }, true), e2.addEventListener("touchmove", function(e3) {
        t2.setCurrentMousePostion(e3, true), n2.callEvent("touchmove", e3);
      }, true)), this.defautProc.init(t2, this);
    }, h.prototype.getEventCall = function(t2) {
      var e2;
      return "mousemove" == t2 ? e2 = this.aryMousemoveEventCall : "mouseup" == t2 ? e2 = this.aryMouseupEventCall : "mousedown" == t2 ? e2 = this.aryMousedownEventCall : "touchstart" == t2 ? e2 = this.aryTouchstartEventCall : "touchend" == t2 ? e2 = this.aryTouchendEventCall : "touchmove" == t2 && (e2 = this.aryTouchmoveEventCall), e2;
    }, h.prototype.callEvent = function(t2, e2, n2) {
      var r2 = this.getEventCall(t2);
      if (r2) {
        for (var i2 = r2.slice(), a2 = 0, o2 = i2.length; a2 < o2; a2++) {
          var s2 = i2[a2](e2, n2);
          if (1 == s2) return s2;
        }
        return 0;
      }
    }, h.prototype.addEventListener = function(t2, e2, n2) {
      void 0 === n2 && (n2 = false);
      var r2 = this.getEventCall(t2);
      return !!r2 && (-1 < r2.indexOf(e2) || (n2 ? r2.unshift(e2) : r2.push(e2)), true);
    }, h.prototype.removeEventListener = function(t2, e2) {
      var n2 = this.getEventCall(t2);
      if (!n2) return false;
      var r2 = n2.indexOf(e2);
      return -1 < r2 && (n2.splice(r2, 1), true);
    }, h);
    function h() {
      this.aryMousedownEventCall = [], this.aryMouseupEventCall = [], this.aryMousemoveEventCall = [], this.aryTouchstartEventCall = [], this.aryTouchendEventCall = [], this.aryTouchmoveEventCall = [], this.defautProc = new l();
    }
    n.MxDrawObjectEvent = u;
  }, { "./MxDrawData": 22, "./MxFun": 27, "./Operate/MxJigCmdManager": 54, "./UI/MxUiVue": 65, three: 19 }], 27: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxFun = void 0;
    var r, i, a, o, s, l, c, u, h, p, d, f, m, g, y, v, x = t("three"), w = t("./MxManager"), b = t("./MxDrawObject"), M = t("./MxDrawObject2d"), _ = t("./MxDrawObject3d"), T = t("./UI/MxUiObjectMobile"), C = t("./UI/MxUiObjectPC"), S = t("./Operate/MxJigCmdManager"), D = t("./Operate/MxJigGetLine"), E = t("./Operate/MxCmdRunManager"), O = t("./UI/MxUiVue"), A = t("./MxThreeJS"), P = t("./MxWindowsEvent"), R = t("./MxTools"), L = t("./MxDrawCommands"), I = t("./MxDrawData"), k = t("./MxLocalFileLoad"), j = t("./TempTest/MxTestJig"), N = t("./MxVersion"), V = t("./MrxDbgUtils");
    function F(t2) {
      t2.cmd && W(t2.cmd);
    }
    function B(t2) {
      var e2 = new RegExp("(^|&)" + t2 + "=([^&]*)(&|$)"), n2 = window.location.href, r2 = n2.indexOf("?"), i2 = (n2 = -1 == r2 ? "" : n2.substring(r2)).substr(1).match(e2);
      return null != i2 ? decodeURIComponent(i2[2]) : "";
    }
    function G() {
      return w.MxManager.currentMx();
    }
    function z(t2, e2) {
      var n2 = {};
      if (null != t2) if (t2 instanceof Array) n2.is2d = true;
      else {
        0 == t2.length && (t2 = "empty");
        var r2 = t2.substring(t2.lastIndexOf(".") + 1).toLowerCase();
        if ("dwg" != r2 && "dxf" != r2 && "dwf" != r2 && "mwg" != r2 && "wgh" != r2 || (n2.is2d = true), 1 != e2 && null != e2 && "wgh" != r2) {
          var i2 = void 0, a2 = t2.split("/");
          "$" == (i2 = 1 == a2.length ? a2[0] : a2[a2.length - 1])[0] && (i2 = i2.substring(1));
          for (var o2 = void 0, s2 = 0; s2 < a2.length - 1; s2++) o2 = 0 == s2 ? a2[s2] : o2 + "/" + a2[s2];
          t2 = o2 ? o2 + "/$" + i2 + ".mxb1.wgh" : "$" + i2 + ".mxb1.wgh";
        }
      }
      else t2 = "empty_template.dwg";
      return n2.sFileName = t2, n2;
    }
    function U(t2) {
      if ("string" == typeof t2) {
        var e2 = t2.substring(t2.lastIndexOf(".") + 1).toLowerCase();
        if ("dwg" != e2 && "wgh" != e2) {
          var n2 = t2.lastIndexOf("?");
          if (-1 != n2) {
            var r2 = t2.substring(n2, t2.length);
            return { sFileName: t2 = t2.substring(0, n2), sUrlParam: r2 };
          }
        }
      }
      return null;
    }
    function H() {
      return S.MxJigCmdManager.stopCmd(S.MxJigCmdManager.DetailedResult.kUnknown);
    }
    function W(t2, e2) {
      if (0 != t2.length) {
        var n2 = G();
        return E.MxCmdRunManager.runCmd(n2, t2, e2);
      }
      H();
    }
    function J(t2) {
      null != t2 && (t2.init(), O.MxUiVue.init(t2)), f || (console.log("MxDraw Version:" + N.MxBulid.getVersion()), f = true, y = new k.MxLocalNodeJs(), S.MxJigCmdManager.init(), P.MxWindowsEvent.registEvent(), L.MxDrawCommands.registerCommand(), window.mxConfig_isLoadTest && j.MxTest.registerCommand(), g.sendStringToExecute = F);
    }
    i = r || (n.MxFun = r = {}), a = ".", d = null, f = !(p = "ws://localhost:5090"), g = {}, y = m = h = c = o = void 0, v = u = l = s = -1, i.getUiObj = function() {
      return d;
    }, i.on = function(t2, e2) {
      w.MxManager.on(t2, e2);
    }, i.callEvent = function(t2, e2) {
      return w.MxManager.callEvent(t2, e2);
    }, i.getNodeJs = function() {
      return y;
    }, i.setMxServer = function(t2) {
      p = t2;
    }, i.getMxServer = function() {
      return p;
    }, i.isPC = function() {
      return -1 == v ? function() {
        if (!/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) {
          var t2 = navigator.userAgent.toLowerCase();
          return 0 <= t2.indexOf("win64") || 0 <= t2.indexOf("wow64") || 0 <= t2.indexOf("win32") || 0 <= t2.indexOf("wow32") || /macintosh|mac os x/i.test(navigator.userAgent) || !("ontouchstart" in window || 0 < navigator.maxTouchPoints);
        }
      }() ? (v = 1, true) : (v = 0, false) : 1 == v;
    }, i.getClientPlatform = function() {
      return navigator.platform;
    }, i.getClientInfo = function() {
      return { width: document.body.clientWidth, height: document.body.clientHeight };
    }, i.curPath = function() {
      return a;
    }, i.setCurPath = function(t2) {
      a = t2;
    }, i.getQueryString = B, i.getLocationPageUrl = function() {
      var t2 = window.location.href, e2 = t2.lastIndexOf("?");
      return -1 == e2 ? t2 : t2.substring(0, e2);
    }, i.getHostUrl = function() {
      var t2 = window.location.hostname;
      return "http" != t2.substring(0, 4) && (t2 = "http://" + t2), t2;
    }, i.isAbsoluteWebPath = function(t2) {
      return "http" == t2.substring(0, 4);
    }, i.getUrlParams = function() {
      var t2 = window.location.search, e2 = t2.substr(1, t2.length).split("&"), n2 = new Array();
      if (null != e2) for (var r2 = 0; r2 < e2.length; r2++) {
        var i2 = e2[r2].replace(/[=|^==]/, "&").split("&");
        if (1 < i2.length) {
          var a2 = new Array();
          a2.push(decodeURIComponent(i2[0])), a2.push(decodeURIComponent(i2[1])), n2.push(a2);
        }
      }
      return n2;
    }, i.call = function(t2, e2, n2) {
      null == e2 ? e2 = "{}" : "string" == typeof e2 ? 0 == e2.length ? e2 = "{}" : "[" == e2[0] && "]" == e2[e2.length - 1] || "{" == e2[0] && "}" == e2[e2.length - 1] || (e2 = '"' + (e2 = e2.replace(/"/g, "'")) + '"') : e2 = "object" == typeof e2 ? JSON.stringify(e2) : "{}", w.MxManager.currentMx().call(t2, e2, n2);
    }, i.loadCodeToServer = function(t2, e2) {
      w.MxManager.currentMx().loadCodeToServer(t2, e2);
    }, i.getCurrentMx = function() {
      return w.MxManager.currentMx();
    }, i.isEnableSelect = function() {
      if (-1 != s) return 1 == s;
      var t2 = B("select");
      return s = 0, null != t2 && "y" == t2.toLowerCase() && (s = 1), 1 == s;
    }, i.is3DDwg = function() {
      if (-1 != u) return 1 == u;
      var t2 = B("3ddwg");
      return u = 0, null != t2 && "y" == t2.toLowerCase() && (u = 1), 1 == u;
    }, i.isStaticLoad = function() {
      if (-1 != l) return 1 == l;
      var t2 = B("static");
      return l = 0, null != t2 && "y" == t2.toLowerCase() && (l = 1), 1 == l;
    }, i.enableSelect = function(t2) {
      s = t2 ? 1 : 0;
    }, i.enablStaticLoad = function(t2) {
      l = null == t2 || t2 ? 1 : 0;
    }, i.dwgDir = function() {
      return null != c || null == (c = B("dwgdir")) && (c = ""), c;
    }, i.setDwgDir = function(t2) {
      c = t2;
    }, i.getStaticServer = function() {
      return null != h || null == (h = B("staticServer")) && (h = ""), h;
    }, i.setStaticServer = function(t2) {
      h = t2;
    }, i.is2dParam = function() {
      if (null != o) return o;
      var t2 = B("file");
      if (o = false, null != t2) {
        var e2 = t2.substring(t2.lastIndexOf(".") + 1);
        "dwg" != e2.toLowerCase() && "dxf" != e2.toLowerCase() && "dwf" != e2.toLowerCase() && "mwg" != e2.toLowerCase() || (o = true);
      }
      return o;
    }, i.set2dParam = function(t2) {
      o = t2;
    }, i.showLayer = function(t2, e2) {
      return w.MxManager.currentMx().showLayer(t2, e2);
    }, i.screenCoord2World = function(t2, e2, n2) {
      return t2 instanceof Object ? w.MxManager.currentMx().screenCoord2World(t2.x, t2.y, t2.z) : w.MxManager.currentMx().screenCoord2World(t2, e2, n2);
    }, i.worldCoord2Screen = function(t2, e2, n2) {
      return t2 instanceof Object ? w.MxManager.currentMx().worldCoord2Screen(t2.x, t2.y, t2.z) : w.MxManager.currentMx().worldCoord2Screen(t2, e2, n2);
    }, i.docCoord2Cad = function(t2, e2, n2) {
      return t2 instanceof Object ? w.MxManager.currentMx().docCoord2Cad(t2.x, t2.y, t2.z) : w.MxManager.currentMx().docCoord2Cad(t2, e2, n2);
    }, i.cadCoord2Doc = function(t2, e2, n2) {
      return t2 instanceof Object ? w.MxManager.currentMx().cadCoord2Doc(t2.x, t2.y, t2.z) : w.MxManager.currentMx().cadCoord2Doc(t2, e2, n2);
    }, i.docCoord2World = function(t2, e2, n2) {
      return t2 instanceof Object ? w.MxManager.currentMx().docCoord2World(t2.x, t2.y, t2.z) : w.MxManager.currentMx().docCoord2World(t2, e2, n2);
    }, i.worldCoord2Doc = function(t2, e2, n2) {
      return t2 instanceof Object ? w.MxManager.currentMx().worldCoord2Doc(t2.x, t2.y, t2.z) : w.MxManager.currentMx().worldCoord2Doc(t2, e2, n2);
    }, i.screenCoord2Doc = function(t2, e2, n2) {
      return t2 instanceof Object ? w.MxManager.currentMx().screenCoord2Doc(t2.x, t2.y, t2.z) : w.MxManager.currentMx().screenCoord2Doc(t2, e2, n2);
    }, i.docCoord2Screen = function(t2, e2, n2) {
      return t2 instanceof Object ? w.MxManager.currentMx().docCoord2Screen(t2.x, t2.y, t2.z) : w.MxManager.currentMx().docCoord2Screen(t2, e2, n2);
    }, i.docCoordLong2Cad = function(t2) {
      return w.MxManager.currentMx().docCoordLong2Cad(t2);
    }, i.cadCoordLong2Doc = function(t2) {
      return w.MxManager.currentMx().cadCoordLong2Doc(t2);
    }, i.viewCoordLong2Cad = function(t2) {
      return w.MxManager.currentMx().viewCoordLong2Cad(t2);
    }, i.cadCoordLong2View = function(t2) {
      return w.MxManager.currentMx().cadCoordLong2View(t2);
    }, i.zoomCenter = function(t2, e2) {
      w.MxManager.currentMx().is2D() && (w.MxManager.currentMx().zoomCenter(t2, e2), w.MxManager.currentMx().updateDisplay());
    }, i.zoomW = function(t2, e2, n2, r2, i2) {
      w.MxManager.currentMx().is2D() && (w.MxManager.currentMx().zoomW(new x.Vector3(t2, e2, 0), new x.Vector3(n2, r2, 0), i2), w.MxManager.currentMx().updateDisplay());
    }, i.zoomScale = function(t2) {
      w.MxManager.currentMx().is2D() && (w.MxManager.currentMx().zoomScale(t2), w.MxManager.currentMx().updateDisplay());
    }, i.zoomAll = function() {
      w.MxManager.currentMx().is2D() && (w.MxManager.currentMx().zoomAll(), w.MxManager.currentMx().updateDisplay());
    }, i.deleteAll = function() {
      return w.MxManager.currentMx().deleteAll();
    }, i.callCommand = function(t2, e2, n2) {
      w.MxManager.currentMx().callCommand(t2, e2, n2);
    }, i.getCurrentColor = function() {
      return w.MxManager.currentMx().getCurrentColor();
    }, i.setCurrentColor = function(t2) {
      w.MxManager.currentMx().setCurrentColor(t2);
    }, i.showLoading = function() {
      null != d && d.ShowLoading();
    }, i.hideLoading = function() {
      null != d && d.HideLoading();
    }, i.showProp = function(t2) {
      null != d && d.ShowObjectProperty(t2);
    }, i.hideProp = function() {
      null != d && d.HideObjectProp();
    }, i.getUiObject = function() {
      return d;
    }, i.getViewCenterDocCoord = function() {
      return w.MxManager.currentMx().is2D() ? w.MxManager.currentMx().getViewCenterDocCoord() : new x.Vector3(0, 0, 0);
    }, i.screenCoordLong2Doc = function(t2) {
      return w.MxManager.currentMx().is2D() ? w.MxManager.currentMx().screenCoordLong2Doc(t2) : t2;
    }, i.docCoordLong2Screen = function(t2) {
      return w.MxManager.currentMx().is2D() ? w.MxManager.currentMx().docCoordLong2Screen(t2) : t2;
    }, i.worldCoordLong2Doc = function(t2) {
      return w.MxManager.currentMx().is2D() ? w.MxManager.currentMx().worldCoordLong2Doc(t2) : t2;
    }, i.docCoordLong2World = function(t2) {
      return w.MxManager.currentMx().is2D() ? w.MxManager.currentMx().docCoordLong2World(t2) : t2;
    }, i.screenCoordLong2World = function(t2) {
      return w.MxManager.currentMx().is2D() ? w.MxManager.currentMx().screenCoordLong2World(t2) : t2;
    }, i.worldCoordLong2Screen = function(t2) {
      return w.MxManager.currentMx().is2D() ? w.MxManager.currentMx().worldCoordLong2Screen(t2) : t2;
    }, i.addSelectEvent = function(t2) {
      w.MxManager.addSelectEvent(t2);
    }, i.clearSelectEvent = function() {
      w.MxManager.clearSelectEvent();
    }, i.removeThreejsObject = function(t2, e2, n2) {
      t2 && (t2.traverse(function(t3) {
        (t3 instanceof x.Mesh || t3 instanceof x.Line || t3 instanceof x.LineLoop) && (t3.geometry.dispose(), n2 && (t3.material instanceof Array ? t3.material.forEach(function(t4) {
          t4.dispose();
        }) : t3.material.dispose()));
      }), e2.remove(t2));
    }, i.removeThreejsAllChildren = function t2(e2) {
      for (; 0 < e2.children.length; ) {
        var n2 = e2.children[0];
        e2.remove(n2), 0 < n2.children.length && t2(n2), n2.geometry && n2.geometry.dispose(), n2.material instanceof Array ? n2.material.forEach(function(t3) {
          t3.dispose();
        }) : n2.material.dispose(), n2.texture && n2.texture.dispose();
      }
    }, i.setOutServerDebugCall = function(t2) {
      w.MxManager.setOutDebugCall(t2);
    }, i.updateDisplay = function() {
      w.MxManager.updateDisplay();
    }, i.getCurrentDraw = G, i.formatString = function(t2) {
      for (var e2 = [], n2 = 1; n2 < arguments.length; n2++) e2[n2 - 1] = arguments[n2];
      for (var r2 = 0; r2 < e2.length; r2++) t2 = t2.replace("{".concat(r2, "}"), e2[r2]);
      return t2;
    }, i.createMxUiObject = function(t2) {
      var e2;
      return e2 = this.isPC() ? new C.MxUiObjectPC() : new T.MxUiObjectMobile(), t2(d = e2), e2.create(), e2;
    }, i.openFile = function(t2, e2) {
      var n2 = "";
      if ("string" == typeof t2) {
        var r2 = U(t2);
        r2 && (n2 = r2.sUrlParam, t2 = r2.sFileName);
      }
      null == e2 && (e2 = false);
      var i2 = z(t2, e2);
      return i2.is2d && (o = i2.is2d), t2 = i2.sFileName, w.MxManager.currentMx().openFile(t2, n2);
    }, i.createMxObject = function(t2, e2, n2, r2, a2, o2, s2, l2) {
      f || J(), "string" == typeof t2 && (t2 = 0 == t2.length ? void 0 : document.getElementById(t2));
      var c2 = null, u2 = "";
      if (l2) e2 = "", (c2 = new M.MxDrawObject2d()).initRunMode(b.MxRunMode.kCPPMxCAD), c2.setViewColor(0);
      else {
        if (null == e2) e2 = i.getQueryString("file");
        else {
          var h2 = U(e2);
          h2 && (u2 = h2.sUrlParam, e2 = h2.sFileName);
        }
        var p2 = null == r2 || r2;
        if (void 0 === e2 || 0 == e2.length || "empty" == e2) p2 = true, e2 = "empty" == e2 ? "" : "empty_template.dwg";
        else {
          var d2 = z(e2, o2);
          d2.is2d && (p2 = d2.is2d), e2 = d2.sFileName;
        }
        1 == a2 && (e2 = ""), p2 ? (c2 = new M.MxDrawObject2d()).setViewColor(0) : (c2 = new _.MxDrawObject3d()).setViewColor(15790320);
      }
      return null != n2 && n2(c2), c2.create(t2, e2, u2, s2), c2;
    }, i.getMxObjectFormElement = function(t2) {
      return w.MxManager.getMxObject(t2);
    }, i.initMxCpp = function(t2) {
      w.MxManager.initMxCpp(t2);
    }, i.isRunningCommand = function() {
      return S.MxJigCmdManager.isRunning();
    }, i.getRunningCommand = function() {
      return S.MxJigCmdManager.getCurCmd();
    }, i.stopRunCommand = H, i.runCommand = function(t2) {
      return S.MxJigCmdManager.runCmd(t2);
    }, i.getTHREE = function() {
      return x;
    }, i.getLine = function(t2) {
      var e2 = new D.MxJigGetLine();
      e2.setRetCall(t2), S.MxJigCmdManager.runCmd(e2);
    }, i.addCommand = function(t2, e2, n2) {
      E.MxCmdRunManager.addCommand(t2, e2, n2);
    }, i.sendStringToExecute = W, i.getMxEntity = function(t2) {
      var e2 = G();
      return e2 ? e2.getMxEntityUserObject(t2) : null;
    }, i.initUiDataObject = function(t2) {
      O.MxUiVue.isNull() && (t2.init(i), O.MxUiVue.init(t2));
    }, i.init = J, i.addWindowsEvent = function(t2) {
      P.MxWindowsEvent.addEvent(t2);
    }, i.getCurrentMousePostion = function() {
      return G().getCurrentMousePostion();
    }, i.getMxThreeJS = function() {
      return A.MxThreeJS;
    }, i.getMxTools = function() {
      return R.MxTools;
    }, i.getMxCmdRunManager = function() {
      return E.MxCmdRunManager;
    }, i.getMxJigCmdManager = function() {
      return S.MxJigCmdManager;
    }, i.initQuickCommand = function(t2) {
      E.MxCmdRunManager.InitQuickCommand(t2);
    }, i.InitLanguageString = function(t2) {
      E.MxCmdRunManager.InitLanguageString(t2);
    }, i.getLanguageString = function(t2, e2) {
      return void 0 === e2 && (e2 = ""), E.MxCmdRunManager.getLanguageString(t2, e2);
    }, i.Assert = function(t2) {
      t2 || console.log("MxAssert error");
    }, i.setIniset = function(t2) {
      I.MxDrawData.setIniset(t2);
    }, i.getIniSet = function() {
      return I.MxDrawData.getIniSet();
    }, i.setPostMessageToParentFrameFunction = function(t2) {
      m = t2;
    }, i.postMessageToParentFrame = function(t2) {
      return null != m && (m(t2), true);
    }, i.onParentFrameMessage = function(t2) {
      null != t2 && null != t2.type && g[t2.type] && g[t2.type](t2);
    }, i.acutPrintf = function(t2) {
      for (var e2 = [], n2 = 1; n2 < arguments.length; n2++) e2[n2 - 1] = arguments[n2];
      if (!O.MxUiVue.isNull()) {
        for (var r2 = arguments, i2 = r2[0], a2 = 0; a2 < r2.length - 1; a2++) {
          var o2 = new RegExp("\\{" + a2 + "\\}", "gm");
          i2 = i2.replace(o2, r2[a2 + 1]);
        }
        O.MxUiVue.AcutPrintfNoFormat(i2, true);
      }
    }, i.loadImageMaterial = function(t2, e2) {
      w.MxManager.getMxDbTextureManager().loadImage(t2, e2);
    }, i.loadSVG = function(t2, e2, n2, r2) {
      w.MxManager.getMxDbSvgManager().loadSVG(t2, e2, n2, r2);
    }, i.initMxDbEntityType = function(t2) {
      w.MxManager.getMxDbEntityClassHierarchy().init(t2);
    }, i.initDynamicCreate = function(t2) {
      w.MxManager.getMxDbEntityClassHierarchy().initDynamic(t2);
    }, i.ceneratecursor = function(t2, e2, n2, r2) {
      void 0 === t2 && (t2 = 128), void 0 === e2 && (e2 = 10), void 0 === n2 && (n2 = true);
      var i2 = document.createElement("canvas");
      i2.width = i2.height = t2, i2.style.background = "transparent";
      var a2 = i2.getContext("2d"), o2 = t2 % 2 == 0 ? -0.5 : 0, s2 = e2 % 2 == 0 ? -0.5 : 0;
      a2.strokeStyle = r2 || "#fff", n2 && (a2.beginPath(), a2.moveTo(i2.width / 2 + o2, o2), a2.lineTo(i2.width / 2 + o2, i2.height + o2), a2.stroke(), a2.beginPath(), a2.moveTo(o2, i2.height / 2 + o2), a2.lineTo(i2.width + o2, i2.height / 2 + o2), a2.stroke()), a2.beginPath(), a2.strokeRect(t2 / 2 - e2 / 2 + s2, t2 / 2 - e2 / 2 + s2, e2, e2), a2.stroke();
      var l2 = new Image();
      return l2.src = i2.toDataURL("image/png"), l2.src;
    }, i.getMrxDbgUtilsClass = function() {
      return V.MrxDbgUtils;
    }, i.getNumberColor = function(t2) {
      return t2 instanceof Object ? t2.getHex && (t2 = t2.getHex()) : "string" == typeof t2 && (t2 = parseInt(t2)), t2;
    }, i.setloadImageFuction = function(t2) {
      w.MxManager.setloadImageFuction(t2);
    };
  }, { "./MrxDbgUtils": 20, "./MxDrawCommands": 21, "./MxDrawData": 22, "./MxDrawObject": 23, "./MxDrawObject2d": 24, "./MxDrawObject3d": 25, "./MxLocalFileLoad": 28, "./MxManager": 29, "./MxThreeJS": 37, "./MxTools": 38, "./MxVersion": 40, "./MxWindowsEvent": 41, "./Operate/MxCmdRunManager": 48, "./Operate/MxJigCmdManager": 54, "./Operate/MxJigGetLine": 55, "./TempTest/MxTestJig": 61, "./UI/MxUiObjectMobile": 63, "./UI/MxUiObjectPC": 64, "./UI/MxUiVue": 65, three: 19 }], 28: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxLocalDwgFileLoad = n.MxLocalFileLoad = n.MxLocalNodeJs = void 0;
    var r = t("./MxFun"), i = (a.prototype.init = function(t2) {
      this.loadFileCall = t2.loadFileFun;
    }, a.prototype.loadFile = function(t2, e2, n2, r2, i2) {
      null != this.loadFileCall ? this.loadFileCall(t2, e2, n2, r2, i2) : i2(void 0);
    }, a);
    function a() {
      this.loadFileCall = null;
    }
    n.MxLocalNodeJs = i;
    var o = (s.prototype.setPath = function(t2) {
      this.path = t2;
    }, s.prototype.setBinary = function(t2) {
      this.isBinary = t2;
    }, s.prototype.load = function(t2, e2, n2, i2) {
      r.MxFun.getNodeJs().loadFile(this.path + t2, this.isBinary, e2, n2, i2);
    }, s);
    function s() {
      this.path = "", this.isBinary = false;
    }
    n.MxLocalFileLoad = o;
    var l = (c.prototype.setShowloading = function(t2) {
      this._isShowLoading = t2;
    }, c.prototype.load = function(t2, e2) {
      var n2 = "$" + e2 + ".mxb1.wgh";
      this._path = t2, this._filename = e2;
      var r2 = this;
      this.getFile(this._path, n2, false, function(t3) {
        "string" == typeof t3 ? r2.net.onStaticHeadMessage(t3) : console.log("mx error h1");
      }, function() {
        console.log("mx get " + n2 + " faild");
      });
    }, c.prototype.getDatas = function() {
      if (this._iGet >= this._dataNum) this._isShowLoading && r.MxFun.hideLoading();
      else {
        var t2 = this._dataType[this._iGet];
        this._iGet++;
        var e2 = this, n2 = this._iGet + 1, i2 = "$" + this._filename + ".mxb" + n2 + ".wgh", a2 = 0 != t2;
        this.getFile(this._path, i2, a2, function(t3) {
          e2.net.onStaticMessage(t3), e2.getDatas();
        }, function() {
          e2._dataNum = 0, e2._iGet = 0, e2._isShowLoading && r.MxFun.hideLoading(), console.log("mx get " + i2 + " faild");
        });
      }
    }, c.prototype.onRenderHead = function(t2) {
      var e2 = JSON.parse(t2);
      this._dataType = e2.type, this._dataNum = e2.count, this._iGet = 0, this._isShowLoading && r.MxFun.showLoading(), this.getDatas();
    }, c.prototype.getFile = function(t2, e2, n2, r2, i2) {
      var a2 = new o();
      a2.setPath(t2), a2.setBinary(n2), a2.load(e2, r2, function() {
      }, i2);
    }, c);
    function c(t2) {
      this.net = null, this._dataNum = 0, this._iGet = 0, this._dataType = [], this._path = "", this._filename = "", this._isShowLoading = true, this.net = t2;
    }
    n.MxLocalDwgFileLoad = l;
  }, { "./MxFun": 27 }], 29: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxManager = n.MxCpp = n.MxData = void 0;
    var r, i, a = t("./View/MxDbEntity"), o = t("./View/MxDbTextureManager"), s = t("./SVGLoader/MxSVGLoader");
    (i = r || (n.MxData = r = {})).iSelectRenderOrder = 5, i.iCADMeshRenderOrder = 10, i.iCADCurveRenderOrder = 20, i.iMxEntityRenderOrder = 30, i.iGripRenderOrder = 110, i.iDynJigRenderOrder = 120;
    var l, c, u, h, p, d, f, m, g, y, v, x, w, b = (M.prototype.init = function(t2) {
      this.imp = t2;
    }, M.prototype.getMxCAD_MxCpp = function() {
      return this.imp;
    }, M.prototype.getMxCAD_App = function() {
      return this.imp.App;
    }, M.prototype.newMcGePoint3d = function(t2) {
      return this.imp ? this.imp.newMcGePoint3d(t2) : null;
    }, M.prototype.decodeFromGb2312 = function(t2) {
      return this.imp.decodeFromGb2312(t2);
    }, M.prototype.encodeToGb2312 = function(t2) {
      return this.imp.encodeToGb2312(t2);
    }, M.prototype.getMcDbCurve = function(t2) {
      if (this.imp.App.objectIdIsKindOf(t2, "McDbCurve")) return this.imp.App.objectIdToObject(t2);
    }, M);
    function M() {
    }
    n.MxCpp = b, c = l || (n.MxManager = l = {}), u = [], h = null, d = [], f = void (p = 0), m = new o.MxDbTextureManager(), g = new s.MxSvgManager(), y = new a.MxDbEntityClassHierarchy(), v = new b(), x = {}, w = void 0, c.add = function(t2) {
      u.push(t2);
    }, c.setloadImageFuction = function(t2) {
      w = t2;
    }, c.getLoadImageFuction = function() {
      return w;
    }, c.on = function(t2, e2) {
      x[t2] || (x[t2] = []), x[t2].push(e2);
    }, c.callEvent = function(t2, e2) {
      var n2;
      if (x[t2]) return x[t2].forEach(function(t3) {
        var r2 = t3(e2);
        n2 = n2 || r2;
      }), n2;
    }, c.initMxCpp = function(t2) {
      v.init(t2);
    }, c.getMxCpp = function() {
      return v;
    }, c.allocId = function() {
      return ++p;
    }, c.getMxDbEntityClassHierarchy = function() {
      return y;
    }, c.getMxDbTextureManager = function() {
      return m;
    }, c.getMxDbSvgManager = function() {
      return g;
    }, c.outDebugString = function(t2) {
      null == f ? console.log(t2) : f(t2);
    }, c.setOutDebugCall = function(t2) {
      f = t2;
    }, c.onLoad = function() {
      for (var t2 in u) u[t2].onLoad("");
    }, c.updateDisplay = function() {
      for (var t2 in u) u[t2].updateDisplay();
    }, c.currentMx = function() {
      return h;
    }, c.setCurrentMx = function(t2) {
      h = t2;
    }, c.initResize = function() {
      for (var t2 in u) u[t2].initResize();
    }, c.addSelectEvent = function(t2) {
      d.push(t2);
    }, c.clearSelectEvent = function() {
      d = [];
    }, c.callSelectObject = function(t2) {
      for (var e2 in d) if (1 == d[e2](t2)) break;
    }, c.getMxObject = function(t2) {
      if ("number" == typeof t2) {
        for (var e2 in u) if (u[e2].getId() === t2) return u[e2];
      } else for (var e2 in u) if (u[e2].getCanvas() === t2) return u[e2];
      return null;
    };
  }, { "./SVGLoader/MxSVGLoader": 59, "./View/MxDbEntity": 69, "./View/MxDbTextureManager": 74 }], 30: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxMaterial = void 0;
    var r, i = t("three");
    !function(t2) {
      t2.shaderUniforms = { crAmbient: { value: new i.Vector3(1, 0, 0) }, crDiffuse: { value: new i.Vector3(1, 0, 0) }, crSpecular: { value: new i.Vector3(1, 0, 0) } }, t2.m_arrSystemColors = new Array(0, 16711680, 16776960, 65280, 65535, 255, 16711935, 16777215, 8421504, 12632256, 16711680, 16744319, 13369344, 13395558, 10027008, 10046540, 8323072, 8339263, 4980736, 4990502, 16727808, 16752511, 13382400, 13401958, 10036736, 10051404, 8331008, 8343359, 4985600, 4992806, 16744192, 16760703, 13395456, 13408614, 10046464, 10056268, 8339200, 8347455, 4990464, 4995366, 16760576, 16768895, 13408512, 13415014, 10056192, 10061132, 8347392, 8351551, 4995328, 4997670, 16776960, 16777087, 13421568, 13421670, 10066176, 10066252, 8355584, 8355647, 5000192, 5000230, 12582656, 14679935, 10079232, 11717734, 7510272, 8755532, 6258432, 7307071, 3755008, 4344870, 8388352, 12582783, 6736896, 10079334, 5019904, 7510348, 4161280, 6258495, 2509824, 3755046, 4194048, 10485631, 3394560, 8375398, 2529536, 6265164, 2064128, 5209919, 1264640, 3099686, 65280, 8388479, 52224, 6736998, 39168, 5019980, 32512, 4161343, 19456, 2509862, 65343, 8388511, 52275, 6737023, 39206, 5019999, 32543, 4161359, 19475, 2509871, 65407, 8388543, 52326, 6737049, 39244, 5020018, 32575, 4161375, 19494, 2509881, 65471, 8388575, 52377, 6737074, 39282, 5020037, 32607, 4161391, 19513, 2509890, 65535, 8388607, 52428, 6737100, 39321, 5020057, 32639, 4161407, 19532, 2509900, 49151, 8380415, 39372, 6730444, 29337, 5014937, 24447, 4157311, 14668, 2507340, 32767, 8372223, 26316, 6724044, 19609, 5010073, 16255, 4153215, 9804, 2505036, 16383, 8364031, 13260, 6717388, 9881, 5005209, 8063, 4149119, 4940, 2502476, 255, 8355839, 204, 6710988, 153, 5000345, 127, 4145023, 76, 2500172, 4129023, 10452991, 3342540, 8349388, 2490521, 6245529, 2031743, 5193599, 1245260, 3089996, 8323327, 12550143, 6684876, 10053324, 4980889, 7490713, 4128895, 6242175, 2490444, 3745356, 12517631, 14647295, 10027212, 11691724, 7471257, 8735897, 6226047, 7290751, 3735628, 4335180, 16711935, 16744447, 13369548, 13395660, 10027161, 10046617, 8323199, 8339327, 4980812, 4990540, 16711871, 16744415, 13369497, 13395634, 10027122, 10046597, 8323167, 8339311, 4980793, 4990530, 16711807, 16744383, 13369446, 13395609, 10027084, 10046578, 8323135, 8339295, 4980774, 4990521, 16711743, 16744351, 13369395, 13395583, 10027046, 10046559, 8323103, 8339279, 4980755, 4990511, 3355443, 5987163, 8684676, 11382189, 14079702, 16777215), t2.m_arrDefUseMaterials = new Array(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null), t2.m_arrDefUseCurveMaterials = new Array(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null), t2.m_arrDefUseBasicMaterials = new Array(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null), t2.m_selectMaterial = new i.MeshPhongMaterial({ color: 255, opacity: 0.2, transparent: true, side: i.DoubleSide }), t2.m_mouseMoveMaterial = new i.MeshPhongMaterial({ color: 16776960, side: i.DoubleSide }), t2.m_lockedMaterial = new i.MeshPhongMaterial({ color: 197379, side: i.DoubleSide }), t2.m_samplePoints = new i.PointsMaterial({ color: 255, depthTest: false, size: 8 }), t2.m_samplePointsMouseMove = new i.PointsMaterial({ color: 16711680, depthTest: false, size: 12 });
      var e2 = new i.MeshBasicMaterial({ color: 16777215, transparent: true, depthTest: false, side: i.DoubleSide, opacity: 1, stencilWrite: false, colorWrite: false });
      t2.getStencilMaterial = function() {
        return e2;
      }, t2.GetColorByIndex = function(e3) {
        return t2.m_arrSystemColors[e3];
      }, t2.GetColorMaterial = function(e3) {
        var n2 = t2.m_arrDefUseMaterials[e3];
        return null === n2 && (n2 = new i.MeshLambertMaterial({ color: t2.m_arrSystemColors[e3], side: i.DoubleSide }), t2.m_arrDefUseMaterials[e3] = n2), n2;
      }, t2.GetBaseColorMaterial = function(e3) {
        var n2 = t2.m_arrDefUseBasicMaterials[e3];
        return null === n2 && (n2 = new i.MeshBasicMaterial({ color: t2.m_arrSystemColors[e3], side: i.DoubleSide }), t2.m_arrDefUseMaterials[e3] = n2), n2;
      }, t2.GetCurveColorMaterial = function(e3) {
        var n2 = t2.m_arrDefUseCurveMaterials[e3];
        return null === n2 && (n2 = new i.LineBasicMaterial({ color: t2.m_arrSystemColors[e3], linewidth: 1 }), t2.m_arrDefUseCurveMaterials[e3] = n2), n2;
      }, t2.GetSelectMaterial = function() {
        return t2.m_selectMaterial;
      }, t2.GetMouseMoveMaterial = function() {
        return t2.m_mouseMoveMaterial;
      }, t2.GetLockedMaterial = function() {
        return t2.m_lockedMaterial;
      }, t2.GetSamplePointsMaterial = function() {
        return t2.m_samplePoints;
      }, t2.GetSamplePointsMouseMoveMaterial = function() {
        return t2.m_samplePointsMouseMove;
      }, t2.createMaterial = function(t3) {
        var e3 = void 0;
        if (null == t3) return e3;
        function n2(t4, e4) {
          if (null != e4.map) {
            var n3 = e4.map, r2 = new i.TextureLoader().load(n3);
            r2.wrapS = r2.wrapT = i.RepeatWrapping, t4.map = r2, t4.side = i.DoubleSide;
          }
        }
        return 0 != t3.transparent ? t3.transparent = true : t3.transparent = false, "MeshPhongMaterial" == t3.name ? n2(e3 = new i.MeshPhongMaterial(t3), t3) : "MeshBasicMaterial" == t3.name ? n2(e3 = new i.MeshBasicMaterial(t3), t3) : "MeshDepthMaterial" == t3.name ? n2(e3 = new i.MeshDepthMaterial(t3), t3) : "MeshNormalMaterial" == t3.name ? n2(e3 = new i.MeshNormalMaterial(t3), t3) : "MeshLambertMaterial" == t3.name ? n2(e3 = new i.MeshLambertMaterial(t3), t3) : "MeshStandardMaterial" == t3.name && n2(e3 = new i.MeshStandardMaterial(t3), t3), e3;
      };
    }(r || (n.MxMaterial = r = {}));
  }, { three: 19 }], 31: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxHFileLoad = n.MxNet = n.MxNetBinMessageType = n.MxNetSend = n.MxNetMessage = n.MxNetMessageType = n.MxNetData = void 0;
    var r, i, a = t("three"), o = t("./MxFun"), s = t("pako"), l = t("./MxManager"), c = t("./MxDrawData"), u = (h.prototype.getId = function() {
      return this._dataView.getInt32(4, true);
    }, h.prototype.getVersion_MwBlobHead = function() {
      return this._dataView.getInt32(60, true);
    }, h.prototype.getVersion_MwBlobHeadDynLen = function() {
      return this._dataView.getInt32(4, true);
    }, h.prototype.getdPointCurveBuffersHead = function() {
      var t2 = {};
      return t2.ver = this._dataView.getInt32(4, true), t2.databaseIndex = this._dataView.getInt32(8, true), t2.zeroLayerIdIndex = this._dataView.getInt32(16, true), t2.datacount = this._dataView.getInt32(20, true), t2.datasize = this._dataView.getInt32(24, true), t2;
    }, h.prototype.getdPointMeshBuffersHead = function() {
      var t2 = {};
      return t2.ver = this._dataView.getInt32(4, true), t2.databaseIndex = this._dataView.getInt32(8, true), t2.id = this._dataView.getInt32(12, true), t2.zeroLayerIdIndex = this._dataView.getInt32(16, true), t2.datacount = this._dataView.getInt32(20, true), t2.datasize = this._dataView.getInt32(24, true), t2;
    }, h.prototype.getdPointTextureBuffersHead = function() {
      var t2 = {};
      return t2.ver = this._dataView.getInt32(4, true), t2.databaseIndex = this._dataView.getInt32(8, true), t2.zeroLayerIdIndex = this._dataView.getInt32(16, true), t2.datacount = this._dataView.getInt32(20, true), t2.datasize = this._dataView.getInt32(24, true), t2;
    }, h.prototype.getBlobHeadForMemorySectionsHead = function(t2) {
      var e2 = {};
      return e2.type = this._dataView.getInt32(t2, true), t2 += 4, e2.ver = this._dataView.getInt32(t2, true), t2 += 4, e2.databaseIndex = this._dataView.getInt32(t2, true), t2 += 4, e2.nOffset = t2, e2;
    }, h.prototype.getMemorySectionsHead = function() {
      var t2 = this.getBlobHeadForMemorySectionsHead(0);
      return t2.zeroLayerIdIndex = this._dataView.getInt32(t2.nOffset, true), t2.nOffset += 4, t2.datacount = this._dataView.getInt32(t2.nOffset, true), t2.nOffset += 4, t2.datasize = this._dataView.getInt32(t2.nOffset, true), t2.nOffset += 4, t2.datasize != t2.nOffset && console.log("mx: sectionshead size assert(0)"), t2;
    }, h.prototype.getMemorySectionHead = function(t2) {
      var e2 = this.getBlobHeadForMemorySectionsHead(t2);
      return t2 = e2.nOffset, e2.pointCount = this._dataView.getInt32(t2, true), t2 += 4, e2.layerId = this._dataView.getInt32(t2, true), t2 += 4, e2.blkId = this._dataView.getInt32(t2, true), t2 += 4, e2.memColor = this._dataView.getInt32(t2, true), t2 += 4, e2.memId = this._dataView.getInt32(t2, true), t2 += 4, e2.memType = this._dataView.getInt32(t2, true), t2 += 4, e2.offset = t2, e2;
    }, h.prototype.getdPointTextureBufferDataHead = function(t2) {
      t2 += 4, t2 += 4, t2 += 4;
      var e2 = {};
      return e2.dataCount = this._dataView.getInt32(t2, true), t2 += 4, e2.layerId = this._dataView.getInt32(t2, true), t2 += 4, e2.blkId = this._dataView.getInt32(t2, true), t2 += 4, e2.offset = t2, e2;
    }, h.prototype.getdPointCurveBufferDataHead = function(t2) {
      t2 += 4, t2 += 4, t2 += 4;
      var e2 = {};
      return e2.pointCount = this._dataView.getInt32(t2, true), t2 += 4, e2.layerId = this._dataView.getInt32(t2, true), t2 += 4, e2.blkId = this._dataView.getInt32(t2, true), t2 += 4, e2.offset = t2, e2;
    }, h.prototype.getdPointMeshBufferDataHead = function(t2) {
      t2 += 4, t2 += 4, t2 += 4;
      var e2 = {};
      return e2.pointCount = this._dataView.getInt32(t2, true), t2 += 4, e2.layerId = this._dataView.getInt32(t2, true), t2 += 4, e2.blkId = this._dataView.getInt32(t2, true), t2 += 4, e2.offset = t2, e2;
    }, h.prototype.getDatabaseIndex = function() {
      return this._dataView.getInt32(8, true);
    }, h.prototype.getColorIndex = function() {
      return this._dataView.getInt32(24, true);
    }, h.prototype.getBufferType = function() {
      return this._dataView.getInt32(32, true);
    }, h.prototype.getIsSketchEntity = function() {
      return this._dataView.getInt32(40, true);
    }, h.prototype.getLayerId = function() {
      return this._dataView.getInt32(44, true);
    }, h.prototype.getBlockId = function() {
      return this._dataView.getInt32(48, true);
    }, h.prototype.getVertexBufferSize = function() {
      return this._dataView.getInt32(12, true);
    }, h.prototype.getIndexBufferSize = function() {
      return this._dataView.getInt32(16, true);
    }, h.prototype.getZeroLayerId = function() {
      return this._dataView.getInt32(52, true);
    }, h.prototype.getSelectMark = function() {
      return this._dataView.getInt32(56, true);
    }, h.prototype.getMateria = function() {
      var t2 = this._dataView.getInt32(36, true);
      if (0 == t2) return "";
      for (var e2 = [], n2 = 0; n2 < t2; n2++) {
        var r2 = String.fromCharCode(this._dataView.getUint8(80 + n2));
        e2.push(r2);
      }
      return e2.join("");
    }, h.prototype.getDrawDataOffset = function() {
      return this._dataView.getInt32(36, true) + 80;
    }, h.prototype.getMesh = function() {
      var t2 = this._dataView.getInt32(4, true), e2 = 0 == this._dataView.getInt32(32, true), n2 = {}, r2 = this._dataView.getInt32(12, true), i2 = this._dataView.getInt32(16, true);
      if (0 === r2 || 0 === i2) return n2.size = 80, n2;
      var o2, s2 = new a.Geometry(), l2 = 80;
      o2 = e2 ? r2 / 4 / 8 : r2 / 4 / 2;
      for (var c2 = 0; c2 < o2; c2++) {
        var u2 = this._dataView.getFloat32(l2 + 0, true), h2 = this._dataView.getFloat32(l2 + 4, true), p2 = 0;
        e2 ? (p2 = this._dataView.getFloat32(l2 + 8, true), this._dataView.getFloat32(l2 + 12, true), this._dataView.getFloat32(l2 + 16, true), this._dataView.getFloat32(l2 + 20, true), this._dataView.getFloat32(l2 + 24, true), this._dataView.getFloat32(l2 + 28, true), l2 += 32) : l2 += 8;
        var d2 = new a.Vector3(u2, h2, p2);
        s2.vertices.push(d2);
      }
      var f2 = i2 / 4;
      for (c2 = 0; c2 < f2; c2 += 3) {
        var m2 = this._dataView.getInt32(l2, true);
        l2 += 4;
        var g2 = this._dataView.getInt32(l2, true);
        l2 += 4;
        var y2 = this._dataView.getInt32(l2, true);
        l2 += 4;
        var v2 = new a.Face3(m2, g2, y2);
        s2.faces.push(v2);
      }
      var x2 = this.getIsSketchEntity();
      return n2.size = l2, n2.geometry = s2, n2.id = t2, n2.isSketchEntity = x2, n2.nColorIndex = this._dataView.getInt32(24, true), n2;
    }, h.prototype.getCurve = function(t2) {
      var e2, n2 = this._dataView.getInt32(32, true), r2 = this.getIsSketchEntity(), i2 = 0 == n2, o2 = {};
      if ((e2 = i2 ? this._dataView.getInt32(20, true) / 4 / 3 : this._dataView.getInt32(20, true) / 4 / 2) < 2) return o2;
      for (var s2 = new a.Geometry(), l2 = t2, c2 = 0; c2 < e2; c2++) {
        var u2 = this._dataView.getFloat32(l2, true);
        l2 += 4;
        var h2 = this._dataView.getFloat32(l2, true);
        l2 += 4;
        var p2 = 0;
        i2 && (p2 = this._dataView.getFloat32(l2, true), l2 += 4), s2.vertices.push(new a.Vector3(u2, h2, p2));
      }
      var d2 = this._dataView.getInt32(4, true);
      return o2.size = l2, o2.geometry = s2, o2.id = d2, o2.isSketchEntity = r2, o2.colorIndex = this._dataView.getInt32(28, true), o2;
    }, h);
    function h(t2) {
      this._dataView = t2;
    }
    n.MxNetData = u, (i = r || (n.MxNetMessageType = r = {})).kAddLayer = "00000007", i.kClearLayer = "00000008", i.kHideLayer = "00000009", i.kShowLayer = "00000010", i.kUpdateDisplayRange = "00000011", i.kCallJsReturn = "00000012", i.kLayerData = "00000013", i.kSendDebugString = "00000014", i.kShowLoading = "00000015", i.kHideLoading = "00000016", i.kSelectObject = "00000017", i.kGlRenderHead = "00000018", i.kUserLoginResult = "00000019", i.kOpenFileResult = "00000020", i.kServerReturn = "00000021", i.kMxCADLayerData = "00000056", i.kMxCADSystemVariable = "00000057";
    var p = (d.prototype.setJsRetCall = function(t2, e2, n2) {
      this.serverJsRetCall.set(e2 + n2, t2);
    }, d.prototype.onSocketErrort = function() {
      this.serverJsRetCall.forEach(function(t2) {
        t2(void 0);
      }), this.serverJsRetCall = /* @__PURE__ */ new Map();
    }, d.prototype.Do = function(t2) {
      var e2 = this.net.getCurrentDatabaseId();
      if (-1 == e2) {
        var n2 = t2.substring(0, 4);
        e2 = parseInt(n2);
      }
      var r2 = t2.substring(4, 12), i2 = t2.substring(12);
      return null != this.messageCall[r2] && (this.messageCall[r2](i2, e2), true);
    }, d);
    function d(t2, e2) {
      this.messageCall = /* @__PURE__ */ new Map(), this.serverJsRetCall = /* @__PURE__ */ new Map(), this.net = null, this.net = e2;
      var n2 = this;
      this.messageCall[r.kUpdateDisplayRange] = function(e3) {
        if (!n2.net.isTzDwgStaticFile()) {
          e3 = e3.replace(/\\/g, "\\\\");
          try {
            var r2 = JSON.parse(e3);
            if (null != r2 && t2.is2D()) {
              t2.initCAD2Doc(new a.Matrix4()), r2.newbrownermode ? r2.DToSMat ? c.MxDrawData.m_isCorrectLargeCoordinates ? (t2.intiDoc2Wold(new a.Matrix4()), t2.initCAD2Doc(r2.DToSMat)) : t2.intiDoc2Wold(r2.DToSMat) : t2.intiDoc2Wold(new a.Matrix4()) : t2.intiDoc2Wold(r2.DToWMat), t2.initializingObjectMatrix(), t2.updateCameraDisplayRange(new a.Vector3(+r2.pt1[0], +r2.pt1[1], +r2.pt1[2]), new a.Vector3(+r2.pt2[0], +r2.pt2[1], +r2.pt2[2]), +r2.viewangle), t2.initAllLayoutName(r2.layout), t2.updateDisplay(true);
              var i2 = o.MxFun.getUiObj();
              null != i2 && (i2.SetLayoutData(r2.layout), i2.UpDisplayLayout());
            }
          } catch (e4) {
            console.log("UpdateDisplayRange exception");
          }
        }
      }, this.messageCall[r.kCallJsReturn] = function(t3) {
        if (0 != t3.length) {
          var e3 = JSON.parse(t3);
          0 == e3.cmd.length && (e3.cmd = "__mx_loadcode");
          var r2 = e3.cmd + e3.count, i2 = n2.serverJsRetCall.get(r2);
          i2 && (n2.serverJsRetCall.delete(r2), "string" == typeof e3.ret && (e3.ret = e3.ret.replace(/\'/g, '"')), i2(e3.ret));
        } else console.log("assert(0),kCallJsReturn return empty");
      }, this.messageCall[r.kSendDebugString] = function(t3) {
        l.MxManager.outDebugString(t3);
      }, this.messageCall[r.kUserLoginResult] = function(e3) {
        t2.userLoginResult(e3);
      }, this.messageCall[r.kOpenFileResult] = function(e3) {
        t2.openFileResult(e3);
      }, this.messageCall[r.kServerReturn] = function(e3) {
        t2.serverReturn(e3);
      }, this.messageCall[r.kShowLoading] = function(t3) {
        n2.net.isTzDwgStaticFile() || o.MxFun.showLoading();
      }, this.messageCall[r.kHideLoading] = function(e3) {
        n2.net.isTzDwgStaticFile() || (o.MxFun.hideLoading(), t2.callInitCompleteEvent());
      }, this.messageCall[r.kSelectObject] = function(t3) {
        var e3 = JSON.parse(t3);
        l.MxManager.callSelectObject(parseInt(e3.id));
      }, this.messageCall[r.kGlRenderHead] = function(e3) {
        t2.isStaticLocalLoad() ? t2.getStaticLocalNet().onRenderHead(e3) : (n2.net.isTzDwgStaticFile() ? t2.getStaticLoadTzNet() : t2.getStaticNet()).onRenderHead(e3);
      }, this.messageCall[r.kMxCADSystemVariable] = function(e3, n3) {
        t2.sysVariable().OnMessageMxCADSystemVariable(e3);
      }, this.messageCall[r.kLayerData] = function(e3, n3) {
        if (0 == n3) {
          if (t2.addLayerInfoComplete(), null != (s2 = JSON.parse(e3))) {
            if (!s2.isSketch) {
              var r2 = s2.list;
              for (var i2 in r2) t2.addLayerInfo(r2[i2].id, r2[i2].colorvalue, r2[i2].name), 1 == r2[i2].zerolayer && t2.setZeroLayerId(r2[i2].id);
            }
            s2.isSketch || t2.callEvent("uiSetLayerData", s2.list);
            var a2 = o.MxFun.getUiObj();
            null != a2 && (s2.isSketch ? a2.SetSketchLayerData(s2.list) : a2.SetLayerData(s2.list), a2.UpDisplayLayer());
          }
        } else {
          var s2, l2 = t2.getExtRefManager().getLayers(n3);
          if (l2.initComplete(), null != (s2 = JSON.parse(e3))) for (var i2 in r2 = s2.list) l2.add(r2[i2].id, r2[i2].colorvalue, r2[i2].name), 1 == r2[i2].zerolayer && l2.setZeroLayerId(r2[i2].id);
        }
      };
    }
    n.MxNetMessage = p;
    var f, m, g = (y.prototype.setWebSocket = function(t2) {
      this._webSocket = t2;
    }, y.prototype.UndoMark = function() {
      null != this._webSocket && this._webSocket.send(this.SendType.kUndoMark + "");
    }, y.prototype.DoCommand = function(t2, e2, n2) {
      null != this._webSocket && (null != n2 ? (this._callCount++, 200 < this._callCount && (this._callCount = 1), this._msg.setJsRetCall(n2, t2, this._callCount), null == e2 && (e2 = ""), this._webSocket.send(this.SendType.kCmdEx + "," + t2 + "," + this._callCount + "," + e2)) : null == e2 ? this._webSocket.send(this.SendType.kCmd + "," + t2) : this._webSocket.send(this.SendType.kCmd + "," + t2 + "," + e2));
    }, y.prototype.OpenFile = function(t2) {
      null != this._webSocket && this._webSocket.send(this.SendType.kOpenFile + "," + t2);
    }, y.prototype.UserLogin = function(t2, e2, n2) {
      if (null != this._webSocket) {
        var r2 = {};
        r2.IdentitySign = t2, r2.RandomToken = null == e2 ? "" : e2, r2.Init = null == n2 ? "" : n2, this._webSocket.send(this.SendType.kUserLogin + "," + JSON.stringify(r2));
      }
    }, y.prototype.Init = function(t2) {
      null != this._webSocket && this._webSocket.send(this.SendType.kInit + "," + t2);
    }, y.prototype.CallServerJS = function(t2, e2, n2) {
      null != this._webSocket && (null == n2 ? null == e2 || null == e2 || 0 == e2.length ? this._webSocket.send(this.SendType.kCallJS + ',{"command":"' + t2 + '","param":"{}"}') : this._webSocket.send(this.SendType.kCallJS + ',{"command":"' + t2 + '","param":' + e2 + "}") : (this._callCount++, 200 < this._callCount && (this._callCount = 1), this._msg.setJsRetCall(n2, t2, this._callCount), null == e2 || null == e2 || 0 == e2.length ? this._webSocket.send(this.SendType.kCallJS + ',{"command":"' + t2 + '","param":"{}","count":"' + this._callCount + '"}') : this._webSocket.send(this.SendType.kCallJS + ',{"command":"' + t2 + '","param":' + e2 + ',"count":"' + this._callCount + '"}')));
    }, y.prototype.CallLoadCodeToServer = function(t2, e2) {
      null != this._webSocket && (this._msg.setJsRetCall(e2, "__mx_loadcode", 0), null != t2 && null != t2 && 0 != t2.length && this._webSocket.send(this.SendType.kCallJS + "," + t2));
    }, y.prototype.DeleteObject = function(t2) {
      null != this._webSocket && this._webSocket.send(this.SendType.kDelete + "," + t2);
    }, y.prototype.SelectObject = function(t2) {
      null != this._webSocket && this._webSocket.send(this.SendType.kSelect + "," + t2);
    }, y.prototype.QuitSelectObject = function(t2) {
      null != this._webSocket && this._webSocket.send(this.SendType.kQuitSelect + "," + t2);
    }, y.prototype.SendDragDrawEntity = function(t2) {
      null != this._webSocket && this._webSocket.send(this.SendType.kAddDragDraw + "," + t2);
    }, y.prototype.SendDragDrawRequest = function() {
      null != this._webSocket && (this.SendMousePickRay(), this._webSocket.send(this.SendType.kRequestDragDraw));
    }, y.prototype.SendDragDrawDetermine = function() {
      null != this._webSocket && (this.SendMousePickRay(), this._webSocket.send(this.SendType.kDetermineDragDraw));
    }, y.prototype.SendDragDrawCancel = function() {
      null != this._webSocket && this._webSocket.send(this.SendType.kCancelDragDraw);
    }, y.prototype.SendMousePickRay = function() {
      this._webSocket;
    }, y);
    function y(t2, e2) {
      this.SendType = {}, this._callCount = 1, this._webSocket = t2, this._msg = e2, this.SendType.kCmd = 0, this.SendType.kDelete = 1, this.SendType.kSelect = 2, this.SendType.kOpenFile = 3, this.SendType.kGetDemoList = 4, this.SendType.kCallJS = 5, this.SendType.kAddDragDraw = 6, this.SendType.kRequestDragDraw = 7, this.SendType.kMousePickRay = 8, this.SendType.kDetermineDragDraw = 9, this.SendType.kCancelDragDraw = 10, this.SendType.kQuitSelect = 11, this.SendType.kInit = 12, this.SendType.kCmdEx = 13, this.SendType.kUserLogin = 14, this.SendType.kUndoMark = 15;
    }
    n.MxNetSend = g, (m = f || (n.MxNetBinMessageType = f = {})).eBlockRef = 10, m.eEntitysData = 14, m.eAddEntityFor2dPointTextureBuffers = 15, m.eMxNewMemorySections = 16, m.kMxCADBlockRef = 56, m.kMxCADMemorySections = 57, m.kMxCADMemorySectionsFromChange = 59, m.kMxCADNotUseMemorySectionsForChage = 61, m.kMxCADEntityDisplayDatas = 62;
    var v = (x.prototype.setCurrentDatabaseId = function(t2) {
      this._iCurrentDatabaseId = t2;
    }, x.prototype.getMxDrawObject = function() {
      return this._mx;
    }, x.prototype.getCurrentDatabaseId = function() {
      return this._iCurrentDatabaseId;
    }, x.prototype.isTzDwgStaticFile = function() {
      return -1 != this._iCurrentDatabaseId;
    }, x.prototype.onBinMessage = function(t2) {
      var e2 = this._mx, n2 = s.inflate(t2), r2 = new DataView(n2.buffer), i2 = r2.getInt32(0, true);
      this._binMessageCall.has(i2) ? this._binMessageCall.get(i2)(r2, this._iCurrentDatabaseId) : (-1 == this._iCurrentDatabaseId && (0 == i2 ? e2.mxWebAddEntity(r2) : 6 == i2 ? e2.removeEntityFromServer(r2) : 11 == i2 && e2.getExtRefManager().createExternalReferences(r2)), 12 == i2 ? e2.mxWebAddEntityFor2dPointCurveBuffers(r2, this._iCurrentDatabaseId) : 13 == i2 ? e2.mxWebAddEntityFor2dPointMeshBuffers(r2, this._iCurrentDatabaseId) : 8 == i2 ? e2.mxWebAddEntityFor2dPointCurveBuffer(r2, this._iCurrentDatabaseId) : 9 == i2 ? e2.mxWebAddEntityFor2dPointMeshBuffer(r2, this._iCurrentDatabaseId) : i2 == f.eBlockRef && e2.mxWebCreateAllBlocks(r2, this._iCurrentDatabaseId));
    }, x.prototype.socket_onErrort = function() {
      this._msg.onSocketErrort();
    }, x.prototype.socket_onMessageImp = function(t2, e2) {
      if (void 0 === e2 && (e2 = false), "string" == typeof t2) this._msg.Do(t2);
      else if (e2) this.onBinMessage(t2);
      else {
        var n2 = new FileReader();
        n2.readAsArrayBuffer(t2);
        var r2 = this;
        n2.onload = function(t3) {
          r2._mx.updateDisplay(), r2.onBinMessage(n2.result);
        };
      }
      this._mx.updateDisplay();
    }, x.prototype.initBinMessage = function() {
      var t2 = this._mx;
      this._binMessageCall.set(f.eEntitysData, function(e2, n2) {
        t2.mxWebEntitysData(e2, n2);
      }), this._binMessageCall.set(f.eAddEntityFor2dPointTextureBuffers, function(e2, n2) {
        t2.mxWebAddEntityFor2dPointTextureBuffers(e2, n2);
      }), this._binMessageCall.set(f.eMxNewMemorySections, function(e2, n2) {
        t2.mxWebAddEntityForMemorySections(e2, n2);
      });
    }, x.prototype.init = function(t2, e2) {
      var n2 = this;
      this._mx = t2, this._msg = new p(t2, this), this.initBinMessage(), e2 && (this._webSocket = new WebSocket(o.MxFun.getMxServer()), this._webSocket.onopen = function() {
        var t3 = n2._mx.getIniParam();
        if (0 != t3.length) {
          for (var e3 = "{", r2 = t3.length, i2 = 0; i2 < r2; i2++) e3 = 0 == i2 ? e3 + '"' + t3[i2][0] + '":"' + t3[i2][1] + '"' : e3 + ',"' + t3[i2][0] + '":"' + t3[i2][1] + '"';
          e3 += "}", n2._send.Init(e3);
        }
      }, this._webSocket.onmessage = function(t3) {
        n2.socket_onMessageImp(t3.data);
      }, this._webSocket.onerror = function() {
        console.log("mx: socket error"), n2.socket_onErrort();
      }), this._send = new g(this._webSocket, this._msg);
    }, x.prototype.closeWebSocket = function() {
      this._webSocket && (this._send.setWebSocket(null), this._webSocket.close(), this._webSocket = null);
    }, x.prototype.getOnMessage = function() {
      return this._msg;
    }, x.prototype.getSend = function() {
      return this._send;
    }, x.prototype.onStaticMessage = function(t2) {
      try {
        return this.socket_onMessageImp(t2, true), true;
      } catch (t3) {
        return console.log("mx file data error!"), console.log(t3), false;
      }
    }, x.prototype.onStaticHeadMessage = function(t2) {
      return "string" == typeof t2 && this._msg.Do(t2);
    }, x);
    function x() {
      this._webSocket = null, this._send = null, this._msg = null, this._mx = null, this._binMessageCall = /* @__PURE__ */ new Map(), this._iCurrentDatabaseId = -1;
    }
    n.MxNet = v;
    var w = (b.prototype.stopAllLoading = function() {
      this._isStopLoading || (this._isStopLoading = true, this._isShowLoading && o.MxFun.hideLoading());
    }, b.prototype.setShowloading = function(t2) {
      this._isShowLoading = t2;
    }, b.prototype.showLoading = function() {
      this._isShowLoading && o.MxFun.showLoading();
    }, b.prototype.hideLoading = function(t2) {
      this._isStopLoading || (this._isShowLoading && o.MxFun.hideLoading(), this.net.getMxDrawObject().callInitCompleteEvent(), this.net.getMxDrawObject().callOpenFileComplete(t2));
    }, b.prototype.setRequestHeader = function(t2) {
      this._requestHeader = t2;
    }, b.prototype.setUrlParam = function(t2) {
      this._urlParam = t2;
    }, b.prototype.load = function(t2, e2) {
      var n2 = o.MxFun.curPath(), r2 = o.MxFun.dwgDir(), i2 = o.MxFun.getStaticServer(), a2 = "/buf/";
      if ("wgh" == t2.substring(t2.lastIndexOf(".") + 1).toLowerCase()) {
        a2 = "/";
        var s2 = t2.substring(0, t2.indexOf(".mxb1.wgh")).split("/");
        "$" == (t2 = 1 == s2.length ? s2[0] : (i2 = t2.substring(0, t2.lastIndexOf("/")), s2[s2.length - 1]))[0] && (t2 = t2.substring(1));
      }
      var l2 = "$" + (t2 = encodeURIComponent(t2)) + ".mxb1.wgh";
      0 != i2.length ? n2 = i2 + a2 : 0 != r2.length ? n2 = n2 + "/" + r2 + a2 : n2 += a2, this._path = n2, this._filename = t2, 1 < (this._staticLoadingOpenFiles = e2).length && (l2 = e2[0], this._path = void 0);
      var c2 = this;
      this.getFile(this._path, l2, function(t3) {
        if (!c2._isStopLoading) return "string" != typeof t3 ? (console.log("mx error h1"), void c2.hideLoading(4)) : c2.net.onStaticHeadMessage(t3) ? void 0 : (console.log("mx error h1:" + t3), void c2.hideLoading(2));
      }, function() {
        c2.hideLoading(3), console.log("mx get " + l2 + " faild");
      });
    }, b.prototype.getData = function() {
      if (this._isStopLoading) this.hideLoading(5);
      else if (this._iGet >= this._dataNum) this.hideLoading(0);
      else {
        var t2 = this._dataType[this._iGet];
        this._iGet++;
        var e2 = this, n2 = this._iGet + 1, r2 = "$" + this._filename + ".mxb" + n2 + ".wgh";
        if (1 < this._staticLoadingOpenFiles.length) {
          if (this._iGet >= this._staticLoadingOpenFiles.length) return console.log("Mx staticLoadingOpenFiles error!"), void this.hideLoading(7);
          r2 = this._staticLoadingOpenFiles[this._iGet];
        }
        var i2 = r2;
        this._path && (i2 = this._path + r2);
        var a2 = i2.substring(0, i2.lastIndexOf("/") + 1);
        if (this.net.getMxDrawObject().setCurrentLoadUrl(a2), 0 == t2) this.getFile(this._path, r2, function(t3) {
          e2._isStopLoading || (e2.net.onStaticMessage(t3) || (console.log(this._path), console.log(r2)), e2.getData());
        }, function() {
          e2._dataNum = 0, e2._iGet = 0, e2.hideLoading(8), console.log("mx get " + r2 + " faild");
        });
        else {
          var o2 = new XMLHttpRequest(), s2 = r2;
          this._path && (s2 = this._path + r2), 0 != this._urlParam.length ? o2.open("GET", s2 + this._urlParam) : o2.open("GET", s2), c.MxDrawData.m_isRequestHeaderCacheControl && o2.setRequestHeader("Cache-Control", "max-age=7200"), 0 != this._requestHeader.length && o2.setRequestHeader("usertoken", this._requestHeader), o2.responseType = "arraybuffer", o2.onload = function() {
            e2._isStopLoading || (e2.net.onStaticMessage(o2.response) || console.log(s2), e2.getData());
          }, o2.addEventListener("error", function(t3) {
            e2._dataNum = 0, e2._iGet = 0, e2.hideLoading(9), console.log("mx get " + r2 + " faild");
          }, false), o2.send();
        }
      }
    }, b.prototype.onRenderHead = function(t2) {
      if (!this._isStopLoading) {
        var e2 = JSON.parse(t2);
        this._dataType = e2.type, this._dataNum = e2.count, this._iGet = 0, this.showLoading(), this.getData();
      }
    }, b.prototype.getFile = function(t2, e2, n2, r2) {
      var i2 = new a.FileLoader(this.manager);
      i2.setPath(t2);
      var o2 = e2;
      0 != this._urlParam.length && (o2 = e2 + this._urlParam), 0 != this._requestHeader.length && (i2.requestHeader = { usertoken: this._requestHeader }), i2.load(o2, n2, function() {
      }, r2);
    }, b);
    function b(t2, e2) {
      this.net = null, this.manager = null, this._dataNum = 0, this._iGet = 0, this._dataType = [], this._path = "", this._filename = "", this._staticLoadingOpenFiles = [], this._isShowLoading = true, this._requestHeader = "", this._isStopLoading = false, this._urlParam = "", this.net = t2, this.manager = void 0 !== e2 ? e2 : a.DefaultLoadingManager;
    }
    n.MxHFileLoad = w;
  }, { "./MxDrawData": 22, "./MxFun": 27, "./MxManager": 29, pako: 1, three: 19 }], 32: [function(t, e, n) {
    var r, i;
    Object.defineProperty(n, "__esModule", { value: true }), n.MxShader = void 0, (i = r || (n.MxShader = r = {})).VSHADER_COLOR_POINT = " precision highp float; \nuniform mat4 modelViewMatrix; \nuniform mat4 projectionMatrix; \nattribute vec2 position; \nattribute vec3 color; \nattribute vec4 tran1; \nattribute vec4 tran2; \nattribute vec4 tran3; \nattribute vec4 tran4; \nattribute float ishide; \nvarying vec4 vColor; \nvoid main(){ \n mat4 tran; \ntran[0][0] = tran1.x;tran[0][1] = tran1.y;tran[0][2] = tran1.z;tran[0][3] = tran1.w; \ntran[1][0] = tran2.x;tran[1][1] = tran2.y;tran[1][2] = tran2.z;tran[1][3] = tran2.w; \ntran[2][0] = tran3.x;tran[2][1] = tran3.y;tran[2][2] = tran3.z;tran[2][3] = tran3.w; \ntran[3][0] = tran4.x;tran[3][1] = tran4.y;tran[3][2] = tran4.z;tran[3][3] = tran4.w; \nif(ishide > 0.1) \n   vColor = vec4(color,0.0); \nelse \n   vColor = vec4(color,1.0); \ngl_Position = projectionMatrix * modelViewMatrix * tran *  vec4( position.x,position.y,0.0, 1.0 ); \n} \n", i.VSHADER_COLOR_POINT_BYLAYER = " precision highp float; \nuniform mat4 modelViewMatrix; \nuniform mat4 projectionMatrix; \nuniform vec3 color; \nattribute vec2 position; \nattribute vec4 tran1; \nattribute vec4 tran2; \nattribute vec4 tran3; \nattribute vec4 tran4; \nattribute float ishide; \nvarying vec4 vColor; \nvoid main(){ \n mat4 tran; \ntran[0][0] = tran1.x;tran[0][1] = tran1.y;tran[0][2] = tran1.z;tran[0][3] = tran1.w; \ntran[1][0] = tran2.x;tran[1][1] = tran2.y;tran[1][2] = tran2.z;tran[1][3] = tran2.w; \ntran[2][0] = tran3.x;tran[2][1] = tran3.y;tran[2][2] = tran3.z;tran[2][3] = tran3.w; \ntran[3][0] = tran4.x;tran[3][1] = tran4.y;tran[3][2] = tran4.z;tran[3][3] = tran4.w; \nif(ishide > 0.1) \n   vColor = vec4(color,0.0); \nelse \n   vColor = vec4(color,1.0); \ngl_Position = projectionMatrix * modelViewMatrix * tran *  vec4( position.x,position.y,0.0, 1.0 ); \n} \n", i.FSHADER_COLOR_POINT = " precision highp float; \nvarying vec4 vColor; \nvoid main() { \ngl_FragColor = vColor; \n} \n", i.VSHADER_COLOR_POINT_TEXTURE = " precision highp float; \nuniform mat4 modelViewMatrix; \nuniform mat4 projectionMatrix; \nattribute vec2 position; \nattribute vec2 uv; \nattribute vec4 tran1; \nattribute vec4 tran2; \nattribute vec4 tran3; \nattribute vec4 tran4; \nvarying vec2 vUv; \nvoid main(){ \nvUv = uv; \nmat4 tran; \ntran[0][0] = tran1.x;tran[0][1] = tran1.y;tran[0][2] = tran1.z;tran[0][3] = tran1.w; \ntran[1][0] = tran2.x;tran[1][1] = tran2.y;tran[1][2] = tran2.z;tran[1][3] = tran2.w; \ntran[2][0] = tran3.x;tran[2][1] = tran3.y;tran[2][2] = tran3.z;tran[2][3] = tran3.w; \ntran[3][0] = tran4.x;tran[3][1] = tran4.y;tran[3][2] = tran4.z;tran[3][3] = tran4.w; \ngl_Position = projectionMatrix * modelViewMatrix * tran *  vec4( position.x,position.y,0.0, 1.0 ); \n} \n", i.FSHADER_COLOR_POINT_TEXTURE = " precision highp float; \nvarying vec2 vUv; \nuniform sampler2D texture; \nvoid main() { \ngl_FragColor = texture2D( texture, vUv ); \n} \n", i.VSHADER_COLOR_POINT_CLIP = " precision highp float; \nuniform mat4 modelViewMatrix; \nuniform mat4 projectionMatrix; \nuniform vec2 clippt1; \nuniform vec2 clippt2; \nuniform float vieww; \nuniform float viewh; \nattribute vec2 position; \nattribute vec3 color; \nattribute vec4 tran1; \nattribute vec4 tran2; \nattribute vec4 tran3; \nattribute vec4 tran4; \nattribute float ishide; \nvarying vec4 vColor; \nvarying vec2 vCp1; \nvarying vec2 vCp2; \nvoid main(){ \n mat4 tran; \ntran[0][0] = tran1.x;tran[0][1] = tran1.y;tran[0][2] = tran1.z;tran[0][3] = tran1.w; \ntran[1][0] = tran2.x;tran[1][1] = tran2.y;tran[1][2] = tran2.z;tran[1][3] = tran2.w; \ntran[2][0] = tran3.x;tran[2][1] = tran3.y;tran[2][2] = tran3.z;tran[2][3] = tran3.w; \ntran[3][0] = tran4.x;tran[3][1] = tran4.y;tran[3][2] = tran4.z;tran[3][3] = tran4.w; \nvec4 pt1 = projectionMatrix * modelViewMatrix * vec4( clippt1.x,clippt1.y,0.0, 1.0 ); \nvec4 pt2 = projectionMatrix * modelViewMatrix * vec4( clippt2.x,clippt2.y,0.0, 1.0 ); \nvCp1 = vec2(pt1.x * vieww + vieww,pt1.y * viewh + viewh); \nvCp2 = vec2(pt2.x * vieww + vieww,pt2.y * viewh + viewh); \nif(ishide > 0.1) \n   vColor = vec4(color,0.0); \nelse \n   vColor = vec4(color,1.0); \ngl_Position = projectionMatrix * modelViewMatrix * tran *  vec4( position.x,position.y,0.0, 1.0 ); \n} \n", i.VSHADER_COLOR_POINT_BYLAYER_CLIP = " precision highp float; \nuniform mat4 modelViewMatrix; \nuniform mat4 projectionMatrix; \nuniform vec3 color; \nuniform vec2 clippt1; \nuniform vec2 clippt2; \nuniform float vieww; \nuniform float viewh; \nattribute vec2 position; \nattribute vec4 tran1; \nattribute vec4 tran2; \nattribute vec4 tran3; \nattribute vec4 tran4; \nattribute float ishide; \nvarying vec4 vColor; \nvarying vec2 vCp1; \nvarying vec2 vCp2; \nvoid main(){ \n mat4 tran; \ntran[0][0] = tran1.x;tran[0][1] = tran1.y;tran[0][2] = tran1.z;tran[0][3] = tran1.w; \ntran[1][0] = tran2.x;tran[1][1] = tran2.y;tran[1][2] = tran2.z;tran[1][3] = tran2.w; \ntran[2][0] = tran3.x;tran[2][1] = tran3.y;tran[2][2] = tran3.z;tran[2][3] = tran3.w; \ntran[3][0] = tran4.x;tran[3][1] = tran4.y;tran[3][2] = tran4.z;tran[3][3] = tran4.w; \nvec4 pt1 = projectionMatrix * modelViewMatrix * vec4( clippt1.x,clippt1.y,0.0, 1.0 ); \nvec4 pt2 = projectionMatrix * modelViewMatrix * vec4( clippt2.x,clippt2.y,0.0, 1.0 ); \nvCp1 = vec2(pt1.x * vieww + vieww,pt1.y * viewh + viewh); \nvCp2 = vec2(pt2.x * vieww + vieww,pt2.y * viewh + viewh); \nif(ishide > 0.1) \n   vColor = vec4(color,0.0); \nelse \n   vColor = vec4(color,1.0); \ngl_Position = projectionMatrix * modelViewMatrix * tran *  vec4( position.x,position.y,0.0, 1.0 ); \n} \n", i.FSHADER_COLOR_POINT_CLIP = "precision highp float; \nvarying vec4 vColor; \nvarying vec2 vCp1; \nvarying vec2 vCp2; \nvoid main() { \nif(gl_FragCoord.x > vCp1.x && gl_FragCoord.x < vCp2.x && gl_FragCoord.y > vCp1.y && gl_FragCoord.y < vCp2.y) \ngl_FragColor = vColor; \nelse \ndiscard; \n} \n", i.VSHADER_COLOR_POINT_FORMXCAD = " precision highp float; \nuniform mat4 modelViewMatrix; \nuniform mat4 projectionMatrix; \nuniform vec3 color; \nattribute vec2 position; \nattribute vec4 tran1; \nattribute vec4 tran2; \nattribute vec4 tran3; \nattribute vec4 tran4; \nattribute float ishide; \nvarying vec4 vColor; \nvoid main(){ \n mat4 tran; \ntran[0][0] = tran1.x;tran[0][1] = tran1.y;tran[0][2] = tran1.z;tran[0][3] = tran1.w; \ntran[1][0] = tran2.x;tran[1][1] = tran2.y;tran[1][2] = tran2.z;tran[1][3] = tran2.w; \ntran[2][0] = tran3.x;tran[2][1] = tran3.y;tran[2][2] = tran3.z;tran[2][3] = tran3.w; \ntran[3][0] = tran4.x;tran[3][1] = tran4.y;tran[3][2] = tran4.z;tran[3][3] = tran4.w; \ngl_PointSize = 1.0;\nif(ishide > 0.1) \n   vColor = vec4(color,0.0); \nelse \n   vColor = vec4(color,1.0); \ngl_Position = projectionMatrix * modelViewMatrix * tran *  vec4( position.x,position.y,0.0, 1.0 ); \n} \n", i.FSHADER_COLOR_POINT_FORMXCAD = " precision highp float; \nvarying vec4 vColor; \nvoid main() { \ngl_FragColor = vColor; \n} \n", i.VSHADER_COLOR_POINT_CLIP_FORMXCAD = " precision highp float; \nuniform mat4 modelViewMatrix; \nuniform mat4 projectionMatrix; \nuniform vec3 color; \nuniform vec2 clippt1; \nuniform vec2 clippt2; \nuniform float vieww; \nuniform float viewh; \nattribute vec2 position; \nattribute vec4 tran1; \nattribute vec4 tran2; \nattribute vec4 tran3; \nattribute vec4 tran4; \nattribute float ishide; \nvarying vec4 vColor; \nvarying vec2 vCp1; \nvarying vec2 vCp2; \nvoid main(){ \n mat4 tran; \ntran[0][0] = tran1.x;tran[0][1] = tran1.y;tran[0][2] = tran1.z;tran[0][3] = tran1.w; \ntran[1][0] = tran2.x;tran[1][1] = tran2.y;tran[1][2] = tran2.z;tran[1][3] = tran2.w; \ntran[2][0] = tran3.x;tran[2][1] = tran3.y;tran[2][2] = tran3.z;tran[2][3] = tran3.w; \ntran[3][0] = tran4.x;tran[3][1] = tran4.y;tran[3][2] = tran4.z;tran[3][3] = tran4.w; \nvec4 pt1 = projectionMatrix * modelViewMatrix * vec4( clippt1.x,clippt1.y,0.0, 1.0 ); \nvec4 pt2 = projectionMatrix * modelViewMatrix * vec4( clippt2.x,clippt2.y,0.0, 1.0 ); \nvCp1 = vec2(pt1.x * vieww + vieww,pt1.y * viewh + viewh); \nvCp2 = vec2(pt2.x * vieww + vieww,pt2.y * viewh + viewh); \nif(ishide > 0.1) \n   vColor = vec4(color,0.0); \nelse \n   vColor = vec4(color,1.0); \ngl_Position = projectionMatrix * modelViewMatrix * tran *  vec4( position.x,position.y,0.0, 1.0 ); \n} \n", i.FSHADER_COLOR_POINT_CLIP_FORMXCAD = "precision highp float; \nvarying vec4 vColor; \nvarying vec2 vCp1; \nvarying vec2 vCp2; \nvoid main() { \nif(gl_FragCoord.x > vCp1.x && gl_FragCoord.x < vCp2.x && gl_FragCoord.y > vCp1.y && gl_FragCoord.y < vCp2.y) \ngl_FragColor = vColor; \nelse \ndiscard; \n} \n";
  }, {}], 33: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxStencilObject = void 0;
    var r = t("three"), i = t("./MxMaterial"), a = (o.prototype.object_onAfterRender = function(t2) {
      var e2 = this.aryMeshStencil;
      if (e2 && 0 < e2.length) {
        t2.getContext();
        var n2 = t2.state.buffers;
        n2.stencil.setLocked(false), n2.depth.setTest(true), n2.stencil.setTest(false);
      }
    }, o.prototype.object_onBeforeRender = function(t2, e2, n2) {
      var r2 = this.aryMeshStencil;
      if (r2 && 0 < r2.length) {
        var i2 = t2.getContext(), a2 = t2.state.buffers;
        a2.color.setMask(false), a2.color.setLocked(true), a2.depth.setTest(false), a2.stencil.setTest(true), a2.stencil.setMask(255), a2.stencil.setClear(0), t2.clearStencil(), a2.stencil.setLocked(true);
        var o2 = 1, s = true;
        r2.forEach(function(r3) {
          s ? (s = false, a2.stencil.setFunc(i2.ALWAYS, o2, 255), a2.stencil.setOp(i2.KEEP, i2.KEEP, i2.REPLACE)) : (a2.stencil.setFunc(i2.EQUAL, o2, 255), a2.stencil.setOp(i2.KEEP, i2.KEEP, i2.INCR), o2++), t2.mxRenderObject(r3, e2, n2, r3.material, null);
        }), a2.color.setLocked(false), a2.color.setMask(true), a2.stencil.setMask(0), a2.stencil.setFunc(i2.EQUAL, o2, 255);
      }
    }, o.prototype.associateObject = function(t2, e2) {
      var n2 = this;
      e2.forEach(function(t3) {
        if (3 <= t3.length) {
          var e3 = new r.Shape(t3), a3 = new r.ShapeGeometry(e3), o2 = new r.Mesh(a3, i.MxMaterial.getStencilMaterial());
          n2.aryMeshStencil.push(o2);
        }
      });
      var a2 = this;
      t2.onBeforeRender = function(t3, e3, n3) {
        a2.object_onBeforeRender(t3, e3, n3);
      }, t2.onAfterRender = function(t3) {
        a2.object_onAfterRender(t3);
      };
    }, o);
    function o() {
      this.aryMeshStencil = [];
    }
    n.MxStencilObject = a;
  }, { "./MxMaterial": 30, three: 19 }], 34: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxString = void 0;
    var r = (i.prototype.Find = function(t2) {
      return this.m_val.indexOf(t2);
    }, i.prototype.Left = function(t2) {
      return this.m_val.substring(0, t2);
    }, i.prototype.Right = function(t2) {
      return this.m_val.substring(this.m_val.length - t2, this.m_val.length);
    }, i.prototype.TrimLeft = function(t2) {
      for (; 0 < this.m_val.length && this.m_val[0] == t2; ) this.m_val = this.m_val.slice(1);
    }, i.prototype.TrimRight = function(t2) {
      for (; 0 < this.m_val.length && this.m_val[this.m_val.length - 1] == t2; ) this.m_val = this.m_val.slice(0, -1);
    }, i.prototype.AnalyzeString = function(t2) {
      return this.m_val.split(t2);
    }, i.prototype.IsEmpty = function() {
      return 0 == this.m_val.length;
    }, i.prototype.MakeUpper = function() {
      this.m_val = this.m_val.toUpperCase();
    }, i.prototype.MakeLower = function() {
      this.m_val = this.m_val.toLowerCase();
    }, i.prototype.GetLength = function() {
      return this.m_val.length;
    }, i);
    function i(t2) {
      this.m_val = "", null != t2 && (this.m_val = t2);
    }
    n.MxString = r;
  }, {}], 35: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxSystemVariable = void 0;
    var r = t("three"), i = t("./Operate/McEdJigOsnap"), a = (o.prototype.init = function(t2) {
      this.m_mxObj = t2;
    }, o.prototype.getAllLinetypeName = function() {
      return this.m_vecLinetype;
    }, o.prototype.getSysVarBool = function(t2) {
      return null != this.m_data[t2] && this.m_data[t2];
    }, o.prototype.setSysVarBool = function(t2, e2) {
      this.m_data[t2] = e2;
    }, o.prototype.setSysVarPoint = function(t2, e2) {
      this.m_data[t2] = e2;
    }, o.prototype.OnMessageMxCADSystemVariable = function(t2) {
      this.m_vecLinetype = [];
      var e2 = JSON.parse(t2);
      if (null != e2) {
        var n2 = e2.vecLinetypeName;
        for (var r2 in n2) this.m_vecLinetype.push(n2[r2]);
        this.m_data.CELTYPE = e2.curLinetypeName, this.m_data.CLAYER = e2.clayer, this.m_data.CECOLOR = e2.cecolor, this.m_data.CECOLORINDEX = e2.cecolorindex;
      }
      this.m_mxObj.callEvent("loadSystmeVariableComplete");
    }, o.prototype.getSysVarPoint = function(t2) {
      return null == this.m_data[t2] ? new r.Vector3(0, 0, 0) : this.m_data[t2];
    }, o.prototype.setSysVarNumber = function(t2, e2) {
      this.m_data[t2] = e2;
    }, o.prototype.getSysVarNumber = function(t2) {
      return null == this.m_data[t2] ? 0 : this.m_data[t2];
    }, o.prototype.getSysVar = function(t2) {
      return this.m_data[t2];
    }, o.prototype.setSysVar = function(t2, e2) {
      this.m_data[t2] = e2;
    }, o);
    function o() {
      this.m_data = {}, this.m_mxObj = null, this.m_vecLinetype = [], this.m_data.GETPOINTSTATUS = 0, this.m_data.LASTPOINT = void 0, this.m_data.LASTMOVEPOINT = void 0, this.m_data.CELTYPE = "Continuous", this.m_data.CLAYER = "0", this.m_data.CECOLOR = 67108863, this.m_data.CECOLORINDEX = 7, this.m_data.OSMODE = i.MxOsnapDefine.OsModeAll;
    }
    n.MxSystemVariable = a;
  }, { "./Operate/McEdJigOsnap": 43, three: 19 }], 36: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxTempMarkDraw = void 0;
    var r = t("three"), i = t("./MxFun"), a = t("./MxThreeJS"), o = (s.prototype.init = function(t2) {
      this.threeObjectGroup = new r.Object3D(), t2.addObject(this.threeObjectGroup);
    }, s.prototype.clear = function(t2) {
      t2 || i.MxFun.removeThreejsAllChildren(this.threeObjectGroup);
    }, s.prototype.drawLine = function(t2, e2, n2, r2) {
      void 0 === n2 && (n2 = 16777215), void 0 === r2 && (r2 = 1), this.threeObjectGroup.add(a.MxThreeJS.createLine(t2, e2, n2, r2));
    }, s.prototype.drawCircle = function(t2, e2, n2) {
      this.threeObjectGroup.add(a.MxThreeJS.createCircle(t2, e2, n2));
    }, s.prototype.drawEntity = function(t2) {
      this.threeObjectGroup.add(t2);
    }, s.prototype.drawCircleMark = function(t2, e2, n2) {
      this.drawCircle(t2, e2, n2);
      var i2 = new r.Vector3(0.3 * e2, 0, 0);
      i2.applyAxisAngle(new r.Vector3(0, 0, 1), 60 * Math.PI / 180);
      var a2 = new r.Vector3(0.3 * e2, 0, 0);
      a2.applyAxisAngle(new r.Vector3(0, 0, 1), 30 * Math.PI / 180);
      var o2 = new r.Vector3(e2, 0, 0);
      o2.applyAxisAngle(new r.Vector3(0, 0, 1), 45 * Math.PI / 180);
      var s2 = t2.clone().add(i2), l = t2.clone().add(a2), c = t2.clone().add(o2);
      this.drawLine(t2, s2, n2), this.drawLine(t2, l, n2), this.drawLine(t2, c, n2);
    }, s);
    function s() {
      this.threeObjectGroup = null;
    }
    n.MxTempMarkDraw = o;
  }, { "./MxFun": 27, "./MxThreeJS": 37, three: 19 }], 37: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxThreeJS = void 0;
    var r, i, a = t("three"), o = t("./MxFun");
    function s(t2) {
      return Math.pow(2, Math.floor(Math.log(t2) / Math.LN2));
    }
    (i = r || (n.MxThreeJS = r = {})).createLine = function(t2, e2, n2, r2) {
      var i2, o2 = new a.Geometry();
      return i2 = r2 && 1 != r2 || 0 == r2 ? new a.LineBasicMaterial({ color: n2, transparent: true, depthTest: false, opacity: r2 }) : new a.LineBasicMaterial({ color: n2, transparent: true, depthTest: false }), o2.vertices.push(t2, e2), new a.Line(o2, i2);
    }, i.createSolid = function(t2, e2, n2) {
      if (t2.length < 3) return null;
      var r2, i2 = new a.Shape(t2.map(function(t3) {
        var e3 = t3.x, n3 = t3.y;
        return new a.Vector2(e3, n3);
      })), o2 = new a.ShapeGeometry(i2);
      return r2 = n2 && 1 != n2 || 0 == n2 ? new a.MeshPhongMaterial({ color: e2, side: a.DoubleSide, transparent: true, depthTest: false, opacity: n2 }) : new a.MeshPhongMaterial({ color: e2, side: a.DoubleSide, transparent: true, depthTest: false }), new a.Mesh(o2, r2);
    }, i.createPoint = function(t2, e2, n2) {
      void 0 === n2 && (n2 = 3);
      var r2 = new a.Geometry();
      r2.vertices.push(t2);
      var i2 = new a.PointsMaterial({ color: e2, size: n2 });
      return new a.Points(r2, i2);
    }, i.createDashedLine = function(t2, e2, n2, r2, i2) {
      var o2 = new a.Geometry();
      o2.vertices.push(t2, e2);
      var s2 = new a.Line(o2, new a.LineDashedMaterial({ color: n2, dashSize: r2, gapSize: i2, transparent: true, depthTest: false }));
      return s2.computeLineDistances(), s2;
    }, i.createCircle = function(t2, e2, n2) {
      var r2 = new a.CircleGeometry(e2, 64, 3, 2 * Math.PI), i2 = new a.LineBasicMaterial({ color: n2, transparent: true, depthTest: false });
      r2.vertices.shift();
      var o2 = new a.LineLoop(r2, i2);
      return o2.position.x = t2.x, o2.position.y = t2.y, o2.position.z = t2.z, o2;
    }, i.createSolidCircle = function(t2, e2, n2) {
      var r2 = new a.MeshBasicMaterial({ color: n2, transparent: true, depthTest: false }), i2 = new a.CircleGeometry(e2, 64, 3, 2 * Math.PI), o2 = new a.Mesh(i2, r2);
      return o2.position.x = t2.x, o2.position.y = t2.y, o2.position.z = t2.z, o2;
    }, i.clacTextSize = function(t2, e2) {
      var n2 = document.createElement("canvas").getContext("2d");
      if (null == n2) return e2;
      var r2 = o.MxFun.formatString("normal {0}px Arial", "256");
      return n2.font = r2, n2.measureText(t2).width * e2 / 256;
    }, i.clacTextSpriteSize = function(t2, e2, n2) {
      e2 <= 1e-8 && (e2 = 1);
      var r2 = document.createElement("canvas"), i2 = r2.getContext("2d"), a2 = o.MxFun.formatString("normal {0}px Arial", "256");
      i2.font = a2;
      var l = e2 / 256, c = 0, u = [], h = true, p = 0;
      if (n2) {
        c = n2;
        for (var d = 0, f = 0, m = 0; f < t2.length; f++) (g = i2.measureText(t2.substring(d, f + 1))).width * l > c && (p += (g.fontBoundingBoxAscent + g.fontBoundingBoxDescent) * l, u.push(t2.substring(d, f)), d = f, m++);
        if (d < f) {
          var g = i2.measureText(t2.substring(d, f));
          u.push(t2.substring(d, f)), p += (g.fontBoundingBoxAscent + g.fontBoundingBoxDescent) * l, m++;
        }
        h = m <= 1;
      } else p = e2, c = (g = i2.measureText(t2)).width * l, u.push(t2), h = false;
      var y = p / c * (r2.width = 1024);
      return r2.height = s(y), r2.height < y && (r2.height *= 2), 0 == r2.height && (r2.height = 512), { spritewidth: c, spriteheight: c * r2.height / r2.width, textwidth: c, allTextHeight: p, singleline: h };
    }, i.creatTextSprite = function(t2, e2, n2, r2, i2, l, c) {
      n2 <= 1e-8 && (n2 = 1);
      var u = document.createElement("canvas"), h = u.getContext("2d");
      c ? (h.font = c(256), 0 == h.font.length && (h.font = o.MxFun.formatString("normal {0}px Arial", "256"))) : h.font = o.MxFun.formatString("normal {0}px Arial", "256");
      var p = n2 / 256, d = 0, f = [], m = [], g = 0;
      if (l) {
        d = l;
        for (var y = 0, v = 0; v < t2.length; v++) (w = h.measureText(t2.substring(y, v + 1))).width * p > d && (g += x = (w.fontBoundingBoxAscent + w.fontBoundingBoxDescent) * p, f.push(t2.substring(y, v)), m.push(x), y = v);
        if (y < v) {
          var x, w = h.measureText(t2.substring(y, v));
          f.push(t2.substring(y, v)), g += x = (w.fontBoundingBoxAscent + w.fontBoundingBoxDescent) * p, m.push(x);
        }
      } else g = n2, d = (w = h.measureText(t2)).width * p, f.push(t2), m.push(g);
      var b = g / d * (u.width = 1024);
      u.height = s(b), u.height < b && (u.height *= 2), 0 == u.height && (u.height = 512);
      var M = 1024 / d, _ = M * n2;
      c ? (h.font = c(_), 0 == h.font.length && (h.font = o.MxFun.formatString("normal {0}px Arial", "" + _))) : h.font = o.MxFun.formatString("normal {0}px Arial", "" + _);
      var T = o.MxFun.formatString("rgba({0}, {1}, {2}, 1.0)", (i2 >> 16 & 255) + "", (i2 >> 8 & 255) + "", (255 & i2) + "");
      h.fillStyle = T, h.textAlign = "left", h.textBaseline = "bottom";
      for (var C = 0, S = 0; C < f.length; C++) S += M * m[C];
      for (C = 0, S = 0.5 * (u.height - S); C < f.length; C++) S += M * m[C], h.fillText(f[C], 0, S);
      var D = new a.Texture(u);
      D.needsUpdate = true;
      var E = new a.SpriteMaterial({ transparent: true, depthTest: false, map: D });
      E.rotation = r2;
      var O = new a.Sprite(E);
      return O.scale.set(d, d / u.width * u.height, 1), O.position.set(e2.x, e2.y, e2.z), O;
    }, i.createTriangle = function(t2, e2, n2) {
      if (!(t2.length < 3)) {
        for (var r2 = t2.length, i2 = new a.Geometry(), o2 = 0; o2 + 2 < r2; o2 += 3) {
          i2.vertices.push(t2[o2]), i2.vertices.push(t2[o2 + 1]), i2.vertices.push(t2[o2 + 2]);
          var s2 = new a.Face3(o2, o2 + 1, o2 + 2);
          i2.faces.push(s2);
        }
        i2.computeFaceNormals(), i2.computeVertexNormals(), null == n2 && (n2 = 1);
        var l = new a.MeshBasicMaterial({ color: e2, transparent: true, depthTest: false, side: a.DoubleSide, opacity: n2 });
        return new a.Mesh(i2, l);
      }
    }, i.createLines = function(t2, e2, n2) {
      var r2, i2 = new a.Geometry();
      return i2.vertices = t2, r2 = n2 && 1 != n2 || 0 == n2 ? new a.LineBasicMaterial({ color: e2, transparent: true, depthTest: false, opacity: n2 }) : new a.LineBasicMaterial({ color: e2, transparent: true, depthTest: false }), new a.Line(i2, r2);
    }, i.createDashedArc = function(t2, e2, n2, r2, i2, o2, s2) {
      var l = new a.CircleGeometry(e2, 64, n2, r2), c = new a.LineDashedMaterial({ color: i2, dashSize: o2, gapSize: s2, transparent: true, depthTest: false });
      l.vertices.shift();
      var u = new a.Line(l, c);
      return u.position.x = t2.x, u.position.y = t2.y, u.position.z = t2.z, u;
    }, i.createDashedLines = function(t2, e2, n2, r2) {
      var i2 = new a.Geometry();
      i2.vertices = t2;
      var o2 = new a.Line(i2, new a.LineDashedMaterial({ color: e2, dashSize: n2, gapSize: r2, transparent: true, depthTest: false }));
      return o2.computeLineDistances(), o2;
    };
  }, { "./MxFun": 27, three: 19 }], 38: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxPair = n.MxTools = void 0;
    var r, i, a = t("three");
    (i = r || (n.MxTools = r = {})).AsMxWebPoint = function(t2, e2, n2) {
      return new a.Vector3(-t2, n2, e2);
    }, i.AsMxWebPoint_pt = function(t2) {
      return new a.Vector3(-t2.x, t2.z, t2.y);
    }, i.AsThreeJsPoint = function(t2, e2, n2) {
      return new a.Vector3(-t2, n2, e2);
    }, i.stringTrimLeftSpace = function(t2) {
      return t2.replace(/^\s*/g, "");
    }, i.stringDeleteAllSpace = function(t2) {
      return t2.replace(/\s*/g, "");
    }, i.stringTrimLeftRightSpace = function(t2) {
      return t2.replace(/^\s*|\s*$/g, "");
    }, i.stringTrimRightSpace = function(t2) {
      return t2.replace(/(\s*$)/g, "");
    }, i.IsNumerical = function(t2) {
      if ("string" == typeof t2) {
        var e2 = /^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/;
        return !(!/^\d+(\.\d+)?$/.test(t2) && !e2.test(t2));
      }
      var n2 = t2.m_val;
      return e2 = /^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/, !(!/^\d+(\.\d+)?$/.test(n2) && !e2.test(n2));
    }, i.formatString = function(t2) {
      for (var e2 = [], n2 = 1; n2 < arguments.length; n2++) e2[n2 - 1] = arguments[n2];
      for (var r2 = 0; r2 < e2.length; r2++) t2 = t2.replace("{".concat(r2, "}"), e2[r2]);
      return t2;
    }, i._tstof = function(t2) {
      return parseFloat(t2);
    }, i._tstoi = function(t2) {
      return parseInt(t2);
    }, i.IsZero = function(t2) {
      return -1e-7 < t2 && t2 < 1e-7;
    }, i.MillimeterToPixels = function(t2) {
      return 10 * t2;
    }, i.getXYPlanDistance = function(t2, e2) {
      var n2 = new a.Vector2(t2.x, t2.y), r2 = new a.Vector2(e2.x, e2.y);
      return n2.distanceTo(r2);
    }, i.MxASSERT = function(t2, e2) {
      t2 || console.log("MxASSERT(0):" + e2);
    }, i.generateUUID = function() {
      return a.MathUtils.generateUUID();
    }, i.MxMax = function(t2, e2) {
      return e2 < t2 ? t2 : e2;
    }, i.getOpacity = function(t2) {
      var e2 = (4278190080 & t2) >> 24 & 255;
      return e2 <= 0 && (e2 = 255), e2 / 255;
    }, i.getColor = function(t2) {
      return 16777215 & t2;
    }, n.MxPair = function(t2, e2) {
      this.first = t2, this.second = e2;
    };
  }, { three: 19 }], 39: [function(t, e, n) {
    var r, i, a, o;
    Object.defineProperty(n, "__esModule", { value: true }), n.MxType = void 0, (a = (i = r || (n.MxType = r = {})).MxCommandFlag || (i.MxCommandFlag = {}))[a.MCRX_CMD_MODAL = 0] = "MCRX_CMD_MODAL", a[a.MCRX_CMD_TRANSPARENT = 1] = "MCRX_CMD_TRANSPARENT", a[a.MCRX_CMD_NO_UNDO_MARKER = 2] = "MCRX_CMD_NO_UNDO_MARKER", a[a.MCRX_CMD_NOPRV = 4] = "MCRX_CMD_NOPRV", a[a.MCRX_CMD_NO_RECORD_PRVCMD = 8] = "MCRX_CMD_NO_RECORD_PRVCMD", a[a.MCRX_CMD_NO_CLEAR_SELECT = 16] = "MCRX_CMD_NO_CLEAR_SELECT", a[a.MCRX_CMD_NO_CLEAR_SELECT_GRIP_POINT = 32] = "MCRX_CMD_NO_CLEAR_SELECT_GRIP_POINT", a[a.MCRX_JIG_CMD_END_NO_CLEAR_SELECT = 64] = "MCRX_JIG_CMD_END_NO_CLEAR_SELECT", (o = i.MxCloneType || (i.MxCloneType = {}))[o.kClone = 1] = "kClone", o[o.kDragClone = 2] = "kDragClone", o[o.kMxFileClone = 3] = "kMxFileClone", o[o.kSaveDwgClone = 4] = "kSaveDwgClone";
  }, {}], 40: [function(t, e, n) {
    var r;
    Object.defineProperty(n, "__esModule", { value: true }), n.MxBulid = void 0, window.MxDrawVersion = "1.0(2025-08-27 08:35)", (r || (n.MxBulid = r = {})).getVersion = function() {
      return window.MxDrawVersion ? window.MxDrawVersion : "inalid version";
    };
  }, {}], 41: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxWindowsEvent = void 0;
    var r, i = t("./MxFun"), a = t("./Operate/MxJigCmdManager"), o = t("./MxDrawData"), s = t("./UI/MxUiVue");
    !function(t2) {
      var e2 = false;
      t2.shiftPressed = false;
      var n2 = new Array();
      function r2(t3, e3) {
        for (var r3 = 0, i2 = n2.length; r3 < i2; r3++) {
          var a2 = n2[r3](t3, e3);
          if (0 != a2) return a2;
        }
      }
      function l(t3) {
        r2("mousemove", t3);
      }
      function c(t3) {
        r2("mouseup", t3);
      }
      function u(t3) {
        r2("dblclick", t3);
      }
      function h(t3) {
        r2("mousedown", t3);
      }
      function p(e3) {
        var n3 = e3 || window.event || arguments.callee.caller.arguments[0];
        if (n3 && 27 == n3.keyCode) {
          var r3 = i.MxFun.getCurrentMx();
          if (r3.isPaningCommand()) return void r3.endPanCommand();
          if (a.MxJigCmdManager.isRunning()) {
            if (0 != a.MxJigCmdManager.getCurCmd().getDynImput().onKeyEcsDown()) return;
            a.MxJigCmdManager.stopCmd(a.MxJigCmdManager.DetailedResult.kEcsIn);
          } else {
            var l2 = false;
            if (o.MxDrawData.m_isEnableIntelliSelect) {
              var c2 = false;
              r3.getMxDatabase().getGripManager().removeAllGrips() && (c2 = true), r3.getMxDatabase().getSelectManager().removeAllEntity() && (c2 = true), r3.isValidMcObject() && r3.getMcObject().getGripManager().clearAll() && (c2 = true), c2 && (r3.updateDisplay(), r3.getMxDatabase().getGripManager().fireMxEntitySelectChange(), l2 = true);
            }
            l2 || s.MxUiVue.acutPrintf(" *取消*\n命令:");
          }
        }
        n3 && "Shift" === n3.key && (t2.shiftPressed = true);
      }
      function d(e3) {
        "Shift" === (e3 = e3 || window.event || arguments.callee.caller.arguments[0]).key && (t2.shiftPressed = false);
      }
      t2.addEvent = function(t3) {
        n2.push(t3);
      }, t2.clearKeyStatus = function() {
        t2.shiftPressed = false;
      }, t2.registEvent = function() {
        e2 || (e2 = true, i.MxFun.isPC() && (document.addEventListener("mousemove", l, false), document.addEventListener("mouseup", c, false), document.addEventListener("mousedown", h, false), document.addEventListener("dblclick", u, false), document.onkeydown = p, document.onkeyup = d));
      };
    }(r || (n.MxWindowsEvent = r = {}));
  }, { "./MxDrawData": 22, "./MxFun": 27, "./Operate/MxJigCmdManager": 54, "./UI/MxUiVue": 65 }], 42: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.McEdJigDynamicTrace = void 0;
    var r = t("three"), i = t("./MxJigCmdManager"), a = t("../MxFun"), o = t("../MxDrawData"), s = t("../MxTools"), l = t("../MxManager"), c = t("../MxThreeJS"), u = t("./McEdJigOsnap"), h = (p.prototype.IsEqual = function(t2) {
      return this.m_snapObjectId == t2.m_snapObjectId && this.m_pt.distanceTo(t2.m_pt) < 1e-6;
    }, p.prototype.drawLine = function(t2, e2, n2) {
      var i2 = c.MxThreeJS.createLine(new r.Vector3(t2.x, t2.y, t2.z), new r.Vector3(e2.x, e2.y, e2.z), this.m_iColor);
      n2.add(i2), this.m_aryDynDrawObject.push(i2);
    }, p.prototype.clearDraw = function(t2) {
      for (var e2 = this.m_aryDynDrawObject.length, n2 = 0; n2 < e2; n2++) a.MxFun.removeThreejsObject(this.m_aryDynDrawObject[n2], t2);
      this.m_aryDynDrawObject = [];
    }, p.prototype.draw = function(t2, e2) {
      var n2 = t2.toSmallcoord(this.m_pt), i2 = new r.Vector3(n2.x, n2.y + this.m_iGripWidth, 0), a2 = new r.Vector3(n2.x, n2.y - this.m_iGripWidth, 0);
      this.drawLine(i2, a2, e2);
      var o2 = new r.Vector3(n2.x + this.m_iGripWidth, n2.y, 0), s2 = new r.Vector3(n2.x - this.m_iGripWidth, n2.y, 0);
      this.drawLine(o2, s2, e2);
    }, p);
    function p() {
      this.m_snapObjectId = 0, this.m_pt = new r.Vector3(), this.m_osmode = 0, this.m_iColor = 16760703, this.m_iGripWidth = 10, this.m_aryDynDrawObject = new Array();
    }
    var d = (f.prototype.clearDraw = function(t2) {
      for (var e2 = this.m_aryDynDrawObject.length, n2 = 0; n2 < e2; n2++) a.MxFun.removeThreejsObject(this.m_aryDynDrawObject[n2], t2);
      this.m_aryDynDrawObject = [];
    }, f.prototype.draw = function(t2, e2) {
      this.m_draw.setWidth(this.m_iGripWidth), this.m_draw.draw(t2.toSmallcoord(this.m_pt), this.m_ostype, e2);
    }, f);
    function f(t2, e2) {
      var n2 = this;
      this.m_aryDynDrawObject = new Array(), this.m_iGripWidth = 10, this.m_draw = new u.McEdJigOsnapDraw(), this.m_pt = t2, this.m_ostype = e2, this.m_draw.setAddDynDrawObject_call(function(t3) {
        n2.m_aryDynDrawObject.push(t3);
      });
    }
    var m = (g.prototype.DynamicTraceTimeCall = function(t2) {
      if (!this.m_mxJig.isExit() && this.m_iTimeCallId == t2 && this.isDYNTRACE() && 0 != this.m_snapObjectId) {
        var e2 = new h();
        e2.m_osmode = this.m_osmode, e2.m_snapObjectId = this.m_snapObjectId, e2.m_pt = this.m_ptSnapPoint, e2.m_iGripWidth = 0.5 * this.m_mxJig.getMxObject().screenCoordLong2Doc(o.MxDrawData.m_dInputRectWidth);
        for (var n2 = this.m_aryTraceObject.length, r2 = this.m_mxJig.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw(), i2 = 0; i2 < n2; i2++) if (this.m_aryTraceObject[i2].IsEqual(e2)) return this.m_aryTraceObject[i2].clearDraw(r2), void this.m_aryTraceObject.splice(i2, 1);
        this.m_aryTraceObject.push(e2), e2.draw(this.m_mxJig.getMxObject(), r2), this.m_mxJig.getMxObject().updateDisplay();
      }
    }, g.prototype.OnDynamicTrace = function(t2, e2, n2) {
      if (this.isDYNTRACE()) if (0 == t2) this.m_iTimeCallId++, this.m_snapObjectId = 0;
      else {
        if (n2 == i.MxJigCmdManager.OsnapMode.kOsModeNear) return;
        var r2 = 0.5 * this.m_mxJig.getMxObject().screenCoordLong2Doc(o.MxDrawData.m_dInputRectWidth);
        if (0 != this.m_snapObjectId && this.m_ptSnapPoint.distanceTo(e2) < r2) return;
        var a2 = this.m_iTimeCallId, s2 = this;
        setTimeout(function() {
          s2.DynamicTraceTimeCall(a2);
        }, 400), this.m_snapObjectId = t2, this.m_ptSnapPoint = e2, this.m_osmode = n2;
      }
    }, g.prototype.ClearOsmodeObjectDisplay = function() {
      for (var t2 = this.m_mxJig.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw(), e2 = this.m_aryTraceOsmodeObject.length, n2 = 0; n2 < e2; n2++) this.m_aryTraceOsmodeObject[n2].clearDraw(t2);
      this.m_aryTraceOsmodeObject = [];
    }, g.prototype.ClearTraceObject = function() {
      for (var t2 = this.m_mxJig.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw(), e2 = this.m_aryTraceObject.length, n2 = 0; n2 < e2; n2++) this.m_aryTraceObject[n2].clearDraw(t2);
      this.m_aryTraceObject = [];
    }, g.prototype.ClearDisplay = function() {
      this.ClearTraceObject(), this.ClearOsmodeObjectDisplay(), this.ClearDynDrawEntity();
    }, g.prototype.GetTraceLine = function(t2, e2, n2, i2) {
      var a2 = e2.m_pt, o2 = { pt1: new r.Vector3(a2.x - i2, a2.y), pt2: new r.Vector3(a2.x + i2, a2.y) }, s2 = { pt1: new r.Vector3(a2.x, a2.y - i2), pt2: new r.Vector3(a2.x, a2.y + i2) }, c2 = [];
      c2.push(o2), c2.push(s2);
      for (var u2 = l.MxManager.getMxCpp().getMcDbCurve(e2.m_snapObjectId); u2; ) {
        var h2 = u2.getFirstDeriv(l.MxManager.getMxCpp().newMcGePoint3d(a2));
        if (!h2.ret) break;
        if (h2.val.isZeroLength()) break;
        h2.val.normalize(), h2.val.mult(i2);
        var p2 = { pt1: new r.Vector3(a2.x - h2.val.x, a2.y - h2.val.y), pt2: new r.Vector3(a2.x + h2.val.x, a2.y + h2.val.y) };
        c2.push(p2), h2.val.rotateBy(Math.PI / 2);
        var d2 = { pt1: new r.Vector3(a2.x - h2.val.x, a2.y - h2.val.y), pt2: new r.Vector3(a2.x + h2.val.x, a2.y + h2.val.y) };
        c2.push(d2);
        break;
      }
      return c2;
    }, g.prototype.ClearDynDrawEntity = function() {
      for (var t2 = this.m_mxJig.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw(), e2 = this.m_vecDynDrawEntity.length, n2 = 0; n2 < e2; n2++) a.MxFun.removeThreejsObject(this.m_vecDynDrawEntity[n2], t2);
      this.m_vecDynDrawEntity = [];
    }, g.prototype.DoMouseMove = function(t2) {
      if (this.ClearDynDrawEntity(), this.ClearOsmodeObjectDisplay(), this.m_isValidTracePoint = false, !this.isDYNTRACE()) return [];
      if (0 == this.m_aryTraceObject.length) return [];
      for (var e2 = [], n2 = this.m_mxJig.getMxObject(), a2 = n2.viewCoordLong2Cad(o.MxDrawData.m_dInputRectWidth), u2 = 2 * a2, h2 = n2.viewCoordLong2Cad(n2.getViewWidth()), p2 = n2.viewCoordLong2Cad(n2.getViewHeight()), d2 = s.MxTools.MxMax(h2, p2), f2 = l.MxManager.getMxCpp().getMxCAD_App(), m2 = this.m_mxJig.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw(), g2 = this.m_mxJig.getMxObject().viewCoordLong2Cad(this.m_dashedLineLen), y = 0; y < this.m_aryTraceObject.length - 1; y++) {
        var v = this.m_aryTraceObject[y], x = v.m_pt, w = this.GetTraceLine(t2, v, u2, d2);
        if (0 != w.length) for (var b = y + 1; b < this.m_aryTraceObject.length && !this.m_isValidTracePoint; b++) {
          var M = this.m_aryTraceObject[b], _ = M.m_pt, T = this.GetTraceLine(t2, M, u2, d2);
          if (0 != T.length) for (var C = 0; C < T.length && !this.m_isValidTracePoint; C++) for (var S = T[C], D = 0; D < w.length && !this.m_isValidTracePoint; D++) {
            var E = w[D], O = f2.MxCADAssist.IntersectWith(E.pt1.x, E.pt1.y, E.pt2.x, E.pt2.y, S.pt1.x, S.pt1.y, S.pt2.x, S.pt2.y, 3);
            if (0 < O.length()) {
              var A = O.at(0), P = new r.Vector3(A.x, A.y, A.z);
              if (P.distanceTo(t2) < u2) {
                var R = c.MxThreeJS.createDashedLine(n2.toSmallcoord(E.pt1), n2.toSmallcoord(E.pt2), this.m_iDashedLineLenColor, g2, g2);
                m2.add(R), this.m_vecDynDrawEntity.push(R);
                var L = c.MxThreeJS.createDashedLine(n2.toSmallcoord(S.pt1), n2.toSmallcoord(S.pt2), this.m_iDashedLineLenColor, g2, g2);
                m2.add(L), this.m_vecDynDrawEntity.push(L), C = T.length, this.m_isValidTracePoint = true, this.m_ptTracePoint = P, this.CreteTracePoint(P, a2), e2.push({ pt: x, ostype: v.m_osmode }), e2.push({ pt: _, ostype: M.m_osmode });
                break;
              }
            }
          }
        }
      }
      if (this.m_isValidTracePoint) return e2;
      if (this.TracekPerpLine(t2, e2, u2, d2, a2)) return e2;
      if (this.TracekTangLine(t2, e2, u2, d2, a2)) return e2;
      for (y = 0; y < this.m_aryTraceObject.length; y++) if (x = this.m_aryTraceObject[y].m_pt, this.m_aryTraceObject[y].m_osmode != i.MxJigCmdManager.OsnapMode.kOsModePerp && !(x.distanceTo(t2) < 2 * u2)) {
        var I = { pt1: new r.Vector3(x.x - d2, x.y), pt2: new r.Vector3(x.x + d2, x.y) };
        if (0 < (N = f2.MxCADAssist.GetClosestPointTo(I.pt1.x, I.pt1.y, I.pt2.x, I.pt2.y, t2.x, t2.y, true)).length()) {
          var k = N.at(0);
          if ((V = new r.Vector3(k.x, k.y, k.z)).distanceTo(t2) < u2) {
            var j = c.MxThreeJS.createDashedLine(n2.toSmallcoord(I.pt1), n2.toSmallcoord(I.pt2), this.m_iDashedLineLenColor, g2, g2);
            m2.add(j), this.m_vecDynDrawEntity.push(j), this.m_isValidTracePoint = true, this.m_ptTracePoint = V, e2.push({ pt: x, ostype: this.m_aryTraceObject[y].m_osmode }), this.CreteTracePoint(V, a2);
            break;
          }
        }
        var N, V, F = { pt1: new r.Vector3(x.x, x.y - d2), pt2: new r.Vector3(x.x, x.y + d2) };
        if (0 < (N = f2.MxCADAssist.GetClosestPointTo(F.pt1.x, F.pt1.y, F.pt2.x, F.pt2.y, t2.x, t2.y, true)).length() && (k = N.at(0), (V = new r.Vector3(k.x, k.y, k.z)).distanceTo(t2) < u2)) {
          j = c.MxThreeJS.createDashedLine(n2.toSmallcoord(F.pt1), n2.toSmallcoord(F.pt2), this.m_iDashedLineLenColor, g2, g2), m2.add(j), this.m_vecDynDrawEntity.push(j), this.m_isValidTracePoint = true, this.m_ptTracePoint = V, e2.push({ pt: x, ostype: this.m_aryTraceObject[y].m_osmode }), this.CreteTracePoint(V, a2);
          break;
        }
      }
      return e2;
    }, g.prototype.MouseMove = function(t2) {
      var e2 = this.DoMouseMove(t2);
      if (this.m_isValidTracePoint) for (var n2 = this.m_mxJig.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw(), r2 = this.m_mxJig.getMxObject().screenCoordLong2Doc(o.MxDrawData.m_dInputRectWidth), i2 = 0; i2 < e2.length; i2++) {
        var a2 = new d(e2[i2].pt, e2[i2].ostype);
        a2.m_iGripWidth = r2, a2.draw(this.m_mxJig.getMxObject(), n2), this.m_aryTraceOsmodeObject.push(a2);
      }
    }, g.prototype.isDYNTRACE = function() {
      return this.m_isDynTrace && 0 != this.m_mxJig.getMxObject().getSysVarLong("DYNTRACE");
    }, g.prototype.Init = function() {
      var t2 = this.m_mxJig.getMxObject();
      t2.getMcObject().isValid() ? (this.m_isDynTrace = true, t2.sysVariable().getSysVarNumber("GETPOINTSTATUS") & i.MxJigCmdManager.GETPOINTSTATUS.OsModeDynTraceTempDisable && (this.m_isDynTrace = false), this.m_mxJig.isDisableDynamicTrace() && (this.m_isDynTrace = false)) : this.m_isDynTrace = false;
    }, g.prototype.GetTracePoint = function() {
      if (this.isDYNTRACE()) return this.m_isValidTracePoint ? this.m_ptTracePoint : void 0;
    }, g.prototype.ReSetTempDisplay = function() {
      this.ClearDynDrawEntity(), this.ClearOsmodeObjectDisplay(), this.m_isValidTracePoint = false;
    }, g.prototype.CreteTracePoint = function(t2, e2) {
      var n2 = this.m_mxJig.getMxObject(), r2 = n2.getTheTempDrawContainer_SmallCoord_JigDraw();
      e2 /= 2;
      var i2 = c.MxThreeJS.createLine(n2.toSmallcoord2(t2.x + e2, t2.y + e2, 0), n2.toSmallcoord2(t2.x - e2, t2.y - e2, 0), 16711680);
      r2.add(i2), this.m_vecDynDrawEntity.push(i2);
      var a2 = c.MxThreeJS.createLine(n2.toSmallcoord2(t2.x - e2, t2.y + e2, 0), n2.toSmallcoord2(t2.x + e2, t2.y - e2, 0), 16711680);
      r2.add(a2), this.m_vecDynDrawEntity.push(a2);
    }, g.prototype.TracekPerpLine = function(t2, e2, n2, i2, a2) {
      for (var o2 = this.m_aryTraceObject, s2 = o2.length, u2 = l.MxManager.getMxCpp().getMxCAD_App(), h2 = this.m_mxJig.getMxObject(), p2 = h2.getTheTempDrawContainer_SmallCoord_JigDraw(), d2 = h2.viewCoordLong2Cad(this.m_dashedLineLen), f2 = 0; f2 < s2; f2++) {
        var m2 = o2[f2].m_pt;
        if (!(m2.distanceTo(t2) < 2 * n2)) {
          var g2 = l.MxManager.getMxCpp().getMcDbCurve(o2[f2].m_snapObjectId);
          if (g2) {
            var y = g2.getFirstDeriv(l.MxManager.getMxCpp().newMcGePoint3d(m2));
            if (y.ret && !y.val.isZeroLength()) {
              y.val.normalize(), y.val.rotateBy(Math.PI / 2), y.val.mult(i2);
              var v = { pt1: new r.Vector3(m2.x - y.val.x, m2.y - y.val.y), pt2: new r.Vector3(m2.x + y.val.x, m2.y + y.val.y) }, x = u2.MxCADAssist.GetClosestPointTo(v.pt1.x, v.pt1.y, v.pt2.x, v.pt2.y, t2.x, t2.y, true);
              if (0 < x.length()) {
                var w = x.at(0), b = new r.Vector3(w.x, w.y, w.z);
                if (b.distanceTo(t2) < n2) {
                  var M = c.MxThreeJS.createDashedLine(h2.toSmallcoord2(m2.x - y.val.x, m2.y - y.val.y, 0), h2.toSmallcoord2(m2.x + y.val.x, m2.y + y.val.y, 0), this.m_iDashedLineLenColor, d2, d2);
                  p2.add(M), this.m_vecDynDrawEntity.push(M), this.m_isValidTracePoint = true, this.m_ptTracePoint = b, e2.push({ pt: m2, ostype: o2[f2].m_osmode }), this.CreteTracePoint(b, a2);
                  break;
                }
              }
            }
          }
        }
      }
      return this.m_isValidTracePoint;
    }, g.prototype.TracekTangLine = function(t2, e2, n2, i2, a2) {
      for (var o2 = this.m_aryTraceObject, s2 = o2.length, u2 = l.MxManager.getMxCpp().getMxCAD_App(), h2 = this.m_mxJig.getMxObject(), p2 = h2.getTheTempDrawContainer_SmallCoord_JigDraw(), d2 = h2.viewCoordLong2Cad(this.m_dashedLineLen), f2 = 0; f2 < s2; f2++) {
        var m2 = o2[f2].m_pt;
        if (!(m2.distanceTo(t2) < 2 * n2)) {
          var g2 = l.MxManager.getMxCpp().getMcDbCurve(o2[f2].m_snapObjectId);
          if (g2) {
            var y = g2.getFirstDeriv(l.MxManager.getMxCpp().newMcGePoint3d(m2));
            if (y.ret && !y.val.isZeroLength()) {
              y.val.normalize(), y.val.mult(i2);
              var v = { pt1: new r.Vector3(m2.x - y.val.x, m2.y - y.val.y), pt2: new r.Vector3(m2.x + y.val.x, m2.y + y.val.y) }, x = u2.MxCADAssist.GetClosestPointTo(v.pt1.x, v.pt1.y, v.pt2.x, v.pt2.y, t2.x, t2.y, true);
              if (0 < x.length()) {
                var w = x.at(0), b = new r.Vector3(w.x, w.y, w.z);
                if (b.distanceTo(t2) < n2) {
                  var M = c.MxThreeJS.createDashedLine(h2.toSmallcoord2(m2.x - y.val.x, m2.y - y.val.y), h2.toSmallcoord2(m2.x + y.val.x, m2.y + y.val.y), this.m_iDashedLineLenColor, d2, d2);
                  p2.add(M), this.m_vecDynDrawEntity.push(M), this.m_isValidTracePoint = true, this.m_ptTracePoint = b, e2.push({ pt: m2, ostype: o2[f2].m_osmode }), this.CreteTracePoint(b, a2);
                  break;
                }
              }
            }
          }
        }
      }
      return this.m_isValidTracePoint;
    }, g);
    function g(t2) {
      this.m_snapObjectId = 0, this.m_ptSnapPoint = new r.Vector3(), this.m_osmode = 0, this.m_ptTracePoint = new r.Vector3(), this.m_isValidTracePoint = false, this.m_isDynTrace = false, this.m_iTimeCallId = 0, this.m_mxJig = null, this.m_aryTraceObject = [], this.m_aryTraceOsmodeObject = [], this.m_vecDynDrawEntity = [], this.m_dashedLineLen = 1.5, this.m_iDashedLineLenColor = 11184810, this.m_mxJig = t2;
    }
    n.McEdJigDynamicTrace = m;
  }, { "../MxDrawData": 22, "../MxFun": 27, "../MxManager": 29, "../MxThreeJS": 37, "../MxTools": 38, "./McEdJigOsnap": 43, "./MxJigCmdManager": 54, three: 19 }], 43: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.McEdJigOsnap = n.McEdJigOsnapDraw = n.McEdJigOrtho = n.McEdImpJigGlobalData = n.MxOsnapDefine = void 0;
    var r, i, a, o, s, l, c, u, h, p, d = t("three"), f = t("../MxDrawObject"), m = t("../MxFun"), g = t("./MxJigCmdManager"), y = t("../MxTools"), v = t("../MxDrawData"), x = t("../MxWindowsEvent");
    (i = r || (n.MxOsnapDefine = r = {}))[i.OsModeInvalid = 0] = "OsModeInvalid", i[i.OsModeEnd = 1] = "OsModeEnd", i[i.OsModeMid = 2] = "OsModeMid", i[i.OsModeCen = 4] = "OsModeCen", i[i.OsModeNode = 8] = "OsModeNode", i[i.OsModeQuad = 16] = "OsModeQuad", i[i.OsModeInt = 32] = "OsModeInt", i[i.OsModeIns = 64] = "OsModeIns", i[i.OsModePerp = 128] = "OsModePerp", i[i.OsModeTan = 256] = "OsModeTan", i[i.OsModeNear = 512] = "OsModeNear", i[i.OsModeApp = 2048] = "OsModeApp", i[i.OsModeExt = 4096] = "OsModeExt", i[i.OsModePar = 8192] = "OsModePar", i[i.OsModeOff = 16384] = "OsModeOff", i[i.OsModeAll = 16383] = "OsModeAll", o = a || (n.McEdImpJigGlobalData = a = {}), s = false, l = new d.Vector3(), c = new d.Vector3(), h = u = false, p = new Array(), o.setPrvPoint = function(t2) {
      l = t2, h = true;
    }, o.isOsnapZValue = function() {
      return false;
    }, o.setIsValidPrvpoint = function(t2) {
      h = t2;
    }, o.isValidPrvpoint = function() {
      return h;
    }, o.getPrvPoint = function() {
      return l;
    }, o.setIsValidBasepoint = function(t2) {
      s = t2;
    }, o.isValidBasepoint = function() {
      return s;
    }, o.setBasepoint = function(t2) {
      s = true, c = t2;
    }, o.getBasepoint = function() {
      return c;
    }, o.initStartCommand = function() {
      u = s = false;
    }, o.setIsTmpDisableOsmode = function(t2) {
      u = t2;
    }, o.isTmpDisableOsmode = function() {
      return u;
    }, o.addDynDrawObject = function(t2) {
      p.push(t2);
    }, o.clearDisplay = function(t2) {
      for (var e2 = p.length, n2 = 0; n2 < e2; n2++) m.MxFun.removeThreejsObject(p[n2], t2);
      p = [];
    };
    var w = (b.prototype.Init = function() {
      this.m_isTrace = !this.m_mxJig.isDisableOrthoTrace(), this.m_isValid = false;
    }, b.prototype.OnViewMouseMove = function(t2) {
      if (this.m_isTrace) {
        var e2 = this.m_mxJig.getMxObject(), n2 = e2.sysVariable().getSysVarNumber("GETPOINTSTATUS"), r2 = e2.getSysVarLong("ORTHOMODE");
        if (x.MxWindowsEvent.shiftPressed && (r2 = 1), !(0 == r2 || n2 & g.MxJigCmdManager.GETPOINTSTATUS.OsModeOrthoTempDisable) && n2 & g.MxJigCmdManager.GETPOINTSTATUS.OsModeSValidLastPoint) {
          var i2 = e2.sysVariable().getSysVarPoint("LASTPOINT");
          Math.abs(t2.x - i2.x) > Math.abs(t2.y - i2.y) ? (this.m_ptOrtho.x = t2.x, this.m_ptOrtho.y = i2.y) : (this.m_ptOrtho.x = i2.x, this.m_ptOrtho.y = t2.y), this.m_isValid = true;
        } else this.m_isValid = false;
      }
    }, b.prototype.GetCurOrthoPoint = function() {
      return { pt: this.m_ptOrtho, isValid: this.m_isValid };
    }, b);
    function b(t2) {
      this.m_mxJig = null, this.m_ptOrtho = new d.Vector3(), this.m_isValid = false, this.m_isTrace = true, this.m_mxJig = t2;
    }
    n.McEdJigOrtho = w;
    var M = (_.prototype.addTipObjects = function(t2) {
      var e2 = this;
      if (!t2) return false;
      var n2 = false;
      return t2.forEach(function(t3) {
        e2.m_tipObjects.has(t3.id) || (n2 = true, e2.m_tipObjects.set(t3.id, t3));
      }), n2;
    }, _.prototype.onNotifyOsnap = function(t2) {
      if (0 != this.m_tipObjects.size) {
        var e2 = t2.SearchRnge, n2 = new d.Vector3(t2.ptx, t2.pty, 0), r2 = void 0, i2 = void 0;
        return this.m_tipObjects.forEach(function(t3) {
          var a2 = new d.Vector3(t3.x, t3.y, 0).distanceTo(n2);
          a2 < e2 && (void 0 === i2 || a2 < i2) && (i2 = a2, r2 = { ptsx: t3.x, ptsy: t3.y, ptsz: 0, osmode: g.MxJigCmdManager.OsnapMode.kOsModeCen, id: t3.id });
        }), r2;
      }
    }, _.prototype.clearData = function() {
      this.m_tipObjects = /* @__PURE__ */ new Map();
    }, _.prototype.clearDisplay = function(t2) {
      for (var e2 = t2.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw(), n2 = this.m_aryDynDrawObject.length, r2 = 0; r2 < n2; r2++) m.MxFun.removeThreejsObject(this.m_aryDynDrawObject[r2], e2);
      this.m_aryDynDrawObject = [];
    }, _.prototype.addDynDrawObject = function(t2) {
      this.m_aryDynDrawObject.push(t2);
    }, _.prototype.drawPolyline = function(t2, e2) {
      for (var n2 = new d.Geometry(), r2 = new d.LineBasicMaterial({ color: this.m_iColor }), i2 = t2.length, a2 = 0; a2 < i2; a2++) n2.vertices.push(new d.Vector3(t2[a2].x, t2[a2].y, t2[a2].z));
      var o2 = new d.Line(n2, r2);
      e2.add(o2), this.addDynDrawObject(o2);
    }, _.prototype.GetDrawRect = function(t2) {
      var e2 = 0.25 * this.m_dOsmodeWdith, n2 = {};
      return n2.left = t2.x - e2, n2.right = t2.x + e2, n2.top = t2.y - e2, n2.bottom = t2.y + e2, n2;
    }, _.prototype.drawLine = function(t2, e2, n2) {
      var r2 = new d.Geometry(), i2 = new d.LineBasicMaterial({ color: this.m_iColor });
      r2.vertices.push(new d.Vector3(t2.x, t2.y, t2.z), new d.Vector3(e2.x, e2.y, e2.z));
      var a2 = new d.Line(r2, i2);
      n2.add(a2), this.addDynDrawObject(a2);
    }, _.prototype.DrawNear = function(t2, e2) {
      var n2 = this.GetDrawRect(t2), r2 = [new d.Vector3(), new d.Vector3()];
      r2[0].x = n2.right, r2[0].y = n2.top, r2[1].x = n2.left, r2[1].y = n2.bottom, this.drawLine(r2[0], r2[1], e2), r2[0].x = n2.right, r2[0].y = n2.bottom, r2[1].x = n2.left, r2[1].y = n2.top, this.drawLine(r2[0], r2[1], e2);
    }, _.prototype.DrawCircle = function(t2, e2, n2) {
      null == n2 && (n2 = 0.5 * this.m_dOsmodeWdith);
      for (var r2 = [], i2 = 0, a2 = 3.14159265 / 180; i2 <= 360; i2 += 15) {
        var o2 = n2 * Math.cos(i2 * a2) + t2.x, s2 = n2 * Math.sin(i2 * a2) + t2.y;
        r2.push(new d.Vector3(o2, s2));
      }
      this.drawPolyline(r2, e2);
    }, _.prototype.upDisplay = function(t2) {
      var e2 = this;
      this.clearDisplay(t2);
      var n2 = t2.getMxObject(), r2 = n2.getTheTempDrawContainer_SmallCoord_JigDraw();
      this.m_dOsmodeWdith = n2.screenCoordLong2Doc(v.MxDrawData.m_dInputRectWidth), this.m_tipObjects.forEach(function(t3) {
        e2.DrawNear(n2.toSmallcoord(new d.Vector3(t3.x, t3.y, 0)), r2);
      });
    }, _);
    function _() {
      this.m_tipObjects = /* @__PURE__ */ new Map(), this.m_iColor = 16777215, this.m_aryDynDrawObject = new Array(), this.m_dOsmodeWdith = 10;
    }
    var T = (C.prototype.setAddDynDrawObject_call = function(t2) {
      this.m_addDynDrawObject_call = t2;
    }, C.prototype.addDynDrawObject = function(t2) {
      this.m_addDynDrawObject_call ? this.m_addDynDrawObject_call(t2) : a.addDynDrawObject(t2);
    }, C.prototype.drawLine = function(t2, e2, n2) {
      var r2 = new d.Geometry(), i2 = new d.LineBasicMaterial({ color: this.m_iColor });
      r2.vertices.push(new d.Vector3(t2.x, t2.y, t2.z), new d.Vector3(e2.x, e2.y, e2.z));
      var a2 = new d.Line(r2, i2);
      n2.add(a2), this.addDynDrawObject(a2);
    }, C.prototype.drawPolyline = function(t2, e2) {
      for (var n2 = new d.Geometry(), r2 = new d.LineBasicMaterial({ color: this.m_iColor }), i2 = t2.length, a2 = 0; a2 < i2; a2++) n2.vertices.push(new d.Vector3(t2[a2].x, t2[a2].y, t2[a2].z));
      var o2 = new d.Line(n2, r2);
      e2.add(o2), this.addDynDrawObject(o2);
    }, C.prototype.setWidth = function(t2) {
      this.m_dOsmodeWdith = t2;
    }, C.prototype.GetDrawRect = function() {
      var t2 = 0.5 * this.m_dOsmodeWdith, e2 = {};
      return e2.left = this.m_pt.x - t2, e2.right = this.m_pt.x + t2, e2.top = this.m_pt.y - t2, e2.bottom = this.m_pt.y + t2, e2;
    }, C.prototype.DrawNear = function(t2) {
      var e2 = this.GetDrawRect(), n2 = [new d.Vector3(), new d.Vector3()];
      n2[0].x = e2.left, n2[0].y = e2.top, n2[1].x = e2.right, n2[1].y = e2.top, this.drawLine(n2[0], n2[1], t2), n2[0].x = e2.left, n2[0].y = e2.bottom, n2[1].x = e2.right, n2[1].y = e2.bottom, this.drawLine(n2[0], n2[1], t2), n2[0].x = e2.right, n2[0].y = e2.top, n2[1].x = e2.left, n2[1].y = e2.bottom, this.drawLine(n2[0], n2[1], t2), n2[0].x = e2.right, n2[0].y = e2.bottom, n2[1].x = e2.left, n2[1].y = e2.top, this.drawLine(n2[0], n2[1], t2);
    }, C.prototype.DrawEnd = function(t2) {
      var e2 = this.GetDrawRect(), n2 = [new d.Vector3(), new d.Vector3(), new d.Vector3(), new d.Vector3()];
      n2[0].x = e2.left, n2[0].y = e2.top, n2[1].x = e2.right, n2[1].y = e2.top, n2[2].x = e2.right, n2[2].y = e2.bottom, n2[3].x = e2.left, n2[3].y = e2.bottom, this.drawLine(n2[0], n2[1], t2), this.drawLine(n2[1], n2[2], t2), this.drawLine(n2[2], n2[3], t2), this.drawLine(n2[3], n2[0], t2);
    }, C.prototype.DrawMid = function(t2) {
      var e2 = this.GetDrawRect(), n2 = 1.2 * (e2.right - e2.left), r2 = n2 / 2 / Math.sin(60 * 3.14159265 / 180), i2 = r2 * Math.sin(0.5235987750000001), a2 = new d.Vector3(this.m_pt.x, this.m_pt.y, this.m_pt.z);
      a2.y -= r2;
      var o2 = new d.Vector3();
      o2.x = this.m_pt.x + n2 / 2, o2.y = this.m_pt.y + i2;
      var s2 = new d.Vector3();
      s2.x = this.m_pt.x - n2 / 2, s2.y = this.m_pt.y + i2;
      var l2 = [new d.Vector3(), new d.Vector3(), new d.Vector3(), new d.Vector3()];
      l2[0].x = a2.x, l2[0].y = a2.y, l2[1].x = o2.x, l2[1].y = o2.y, l2[2].x = s2.x, l2[2].y = s2.y, l2[3].x = a2.x, l2[3].y = a2.y, this.drawLine(l2[0], l2[1], t2), this.drawLine(l2[1], l2[2], t2), this.drawLine(l2[2], l2[3], t2);
    }, C.prototype.DrawPerp = function(t2) {
      var e2 = this.GetDrawRect(), n2 = [new d.Vector3(), new d.Vector3(), new d.Vector3()];
      n2[0].x = e2.left, n2[0].y = e2.top, n2[1].x = e2.left, n2[1].y = e2.bottom, n2[2].x = e2.right, n2[2].y = e2.bottom, this.drawPolyline(n2, t2), n2[0].x = e2.left, n2[0].y = this.m_pt.y, n2[1].x = this.m_pt.x, n2[1].y = this.m_pt.y, n2[2].x = this.m_pt.x, n2[2].y = e2.bottom, this.drawPolyline(n2, t2);
    }, C.prototype.DrawCircle = function(t2, e2, n2) {
      null == n2 && (n2 = 0.5 * this.m_dOsmodeWdith);
      for (var r2 = [], i2 = 0, a2 = 3.14159265 / 180; i2 <= 360; i2 += 15) {
        var o2 = n2 * Math.cos(i2 * a2) + t2.x, s2 = n2 * Math.sin(i2 * a2) + t2.y;
        r2.push(new d.Vector3(o2, s2));
      }
      this.drawPolyline(r2, e2);
    }, C.prototype.DrawInt = function(t2) {
      var e2 = this.GetDrawRect(), n2 = [new d.Vector3(), new d.Vector3()];
      n2[0].x = e2.right, n2[0].y = e2.top, n2[1].x = e2.left, n2[1].y = e2.bottom, this.drawLine(n2[0], n2[1], t2), n2[0].x = e2.right, n2[0].y = e2.bottom, n2[1].x = e2.left, n2[1].y = e2.top, this.drawLine(n2[0], n2[1], t2);
    }, C.prototype.DrawCen = function(t2) {
      this.DrawInt(t2), this.DrawCircle(this.m_pt, t2);
    }, C.prototype.DrawTan = function(t2) {
      this.DrawEnd(t2);
    }, C.prototype.DrawIns = function(t2) {
      var e2 = this.GetDrawRect(), n2 = {}, r2 = (e2.right - e2.left) / 1.5;
      n2.left = this.m_pt.x - r2, n2.right = this.m_pt.x + r2, n2.top = this.m_pt.y - r2, n2.bottom = this.m_pt.y + r2;
      var i2 = this.m_pt.x, a2 = this.m_pt.y, o2 = [new d.Vector3(), new d.Vector3(), new d.Vector3(), new d.Vector3(), new d.Vector3(), new d.Vector3(), new d.Vector3(), new d.Vector3(), new d.Vector3()];
      o2[0].x = n2.left, o2[0].y = n2.top, o2[1].x = n2.left, o2[1].y = a2 + 2, o2[2].x = i2, o2[2].y = a2 + 2, o2[3].x = i2, o2[3].y = n2.bottom, o2[4].x = n2.right, o2[4].y = n2.bottom, o2[5].x = n2.right, o2[5].y = a2 - 2, o2[6].x = i2, o2[6].y = a2 - 2, o2[7].x = i2, o2[7].y = n2.top, o2[8].x = n2.left, o2[8].y = n2.top, this.drawPolyline(o2, t2);
    }, C.prototype.DrawNode = function(t2) {
      var e2 = this.GetDrawRect(), n2 = {}, r2 = (e2.right - e2.left) / 1.5;
      n2.left = this.m_pt.x - r2, n2.right = this.m_pt.x + r2, n2.top = this.m_pt.y - r2, n2.bottom = this.m_pt.y + r2;
      var i2 = this.m_dOsmodeWdith / 1.3;
      this.m_pt.x, this.m_pt.x, this.m_pt.y, this.m_pt.y;
      var a2 = [new d.Vector3(), new d.Vector3(), new d.Vector3(), new d.Vector3()];
      a2[0].x = n2.left, a2[0].y = n2.top, a2[1].x = n2.right, a2[1].y = n2.bottom, a2[2].x = n2.left, a2[2].y = n2.bottom, a2[3].x = n2.right, a2[3].y = n2.top, this.drawLine(a2[0], a2[1], t2), this.drawLine(a2[2], a2[3], t2), this.DrawCircle(this.m_pt, t2, i2);
    }, C.prototype.draw = function(t2, e2, n2) {
      this.m_pt = t2, this.m_osmode = e2;
      var r2 = 0.5 * this.m_dOsmodeWdith;
      if (this.m_osmode != g.MxJigCmdManager.OsnapMode.kOsModekInValid) if (this.m_osmode == g.MxJigCmdManager.OsnapMode.kOsModeNear) this.DrawNear(n2);
      else if (this.m_osmode == g.MxJigCmdManager.OsnapMode.kOsModeEnd) this.DrawEnd(n2);
      else if (this.m_osmode == g.MxJigCmdManager.OsnapMode.kOsModeMid) this.DrawMid(n2);
      else if (this.m_osmode == g.MxJigCmdManager.OsnapMode.kOsModePerp) this.DrawPerp(n2);
      else if (this.m_osmode == g.MxJigCmdManager.OsnapMode.kOsModeInt) this.DrawInt(n2);
      else if (this.m_osmode == g.MxJigCmdManager.OsnapMode.kOsModeCen) this.DrawCen(n2);
      else if (this.m_osmode == g.MxJigCmdManager.OsnapMode.kOsModeTan) this.DrawTan(n2);
      else if (this.m_osmode == g.MxJigCmdManager.OsnapMode.kOsModeIns) this.DrawIns(n2);
      else if (this.m_osmode == g.MxJigCmdManager.OsnapMode.kOsModeNode) this.DrawNode(n2);
      else {
        var i2 = new d.Vector3(t2.x - r2, t2.y - r2, 0), a2 = new d.Vector3(t2.x + r2, t2.y + r2, 0);
        this.drawLine(i2, a2, n2);
        var o2 = new d.Vector3(t2.x - r2, t2.y + r2, 0), s2 = new d.Vector3(t2.x + r2, t2.y - r2, 0);
        this.drawLine(o2, s2, n2);
      }
    }, C.prototype.upDisplay = function(t2, e2, n2) {
      this.clearDisplay(n2);
      var r2 = n2.getMxObject();
      this.setWidth(r2.screenCoordLong2Doc(v.MxDrawData.m_dInputRectWidth)), t2 = r2.toSmallcoord(t2), this.draw(t2, e2, r2.getTheTempDrawContainer_SmallCoord_JigDraw());
    }, C.prototype.clearDisplay = function(t2) {
      var e2 = t2.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw();
      a.clearDisplay(e2);
    }, C);
    function C() {
      this.m_iColor = 16711935, this.m_addDynDrawObject_call = void 0, this.m_pt = new d.Vector3(), this.m_osmode = g.MxJigCmdManager.OsnapMode.kOsModekInValid, this.m_dOsmodeWdith = 10;
    }
    n.McEdJigOsnapDraw = T;
    var S = (D.prototype.setSpecificOsMode = function(t2) {
      this.m_lSpecificOsMode = t2;
    }, D.prototype.resetData = function() {
      this.m_osmode = g.MxJigCmdManager.OsnapMode.kOsModekInValid, this.m_isValidPrvInputPoint = false, this.m_lOSmode = 0, this.m_vecOffset.set(0, 0, 0), this.m_isValid = false, this.m_iLongprogressStatus = -1, this.m_lSpecificOsMode = 0, this.m_tipsObject.clearData(), this.reComputeOffset();
    }, D.prototype.notifyOsnapToServer = function() {
      var t2 = this;
      if (this.m_isRuning) {
        var e2 = { ptx: this.m_pt.x, pty: this.m_pt.y, osmode: this.m_lOSmode, isValidPrvInputPoint: this.m_isValidPrvInputPoint };
        this.m_isValidPrvInputPoint && (e2.prvPtx = this.m_prvInputPoint.x, e2.prvPty = this.m_prvInputPoint.y);
        var n2 = this.m_mxJig.getMxObject();
        if (n2.getRunMode() == f.MxRunMode.kBrowse) {
          var r2 = this, i2 = n2.getCurrentMousePostion();
          n2.getObjectOsnap().getOsnapData(i2, function(t3, e3) {
            t3 = n2.worldCoord2Doc(t3.x, t3.y, t3.z), r2.m_ptSnapPoint.x = t3.x, r2.m_ptSnapPoint.y = t3.y, r2.m_ptSnapPoint.z = 0, r2.m_ptSnapSrcPoint.x = r2.m_pt.x, r2.m_ptSnapSrcPoint.y = r2.m_pt.y, r2.m_ptSnapSrcPoint.z = 0, r2.m_osmode = e3, r2.m_draw.upDisplay(new d.Vector3(t3.x, t3.y, 0), e3, r2.m_mxJig);
          });
        } else if (n2.getRunMode() == f.MxRunMode.kCPPMxCAD) {
          var a2 = this;
          e2.SearchRnge = n2.viewCoordLong2Cad(v.MxDrawData.m_dInputRectWidth);
          var o2 = a2.m_tipsObject.onNotifyOsnap(e2);
          o2 ? (a2.m_ptSnapPoint.x = o2.ptsx, a2.m_ptSnapPoint.y = o2.ptsy, a2.m_ptSnapPoint.z = o2.ptsz, a2.m_ptSnapSrcPoint.x = e2.ptx, a2.m_ptSnapSrcPoint.y = e2.pty, a2.m_ptSnapSrcPoint.z = 0, a2.m_osmode = o2.osmode, a2.m_snapObjectId = o2.id, a2.m_draw.upDisplay(new d.Vector3(o2.ptsx, o2.ptsy, o2.ptsz), o2.osmode, a2.m_mxJig), a2.m_mxJig.onGetOsnapData(o2)) : n2.getMcObject().onNotifyOsnap(e2, function(t3) {
            a2.m_ptSnapPoint.x = t3.ptsx, a2.m_ptSnapPoint.y = t3.ptsy, a2.m_ptSnapPoint.z = t3.ptsz, a2.m_ptSnapSrcPoint.x = t3.ptx, a2.m_ptSnapSrcPoint.y = t3.pty, a2.m_ptSnapSrcPoint.z = 0, a2.m_osmode = t3.osmode, a2.m_snapObjectId = t3.id, a2.m_draw.upDisplay(new d.Vector3(t3.ptsx, t3.ptsy, t3.ptsz), t3.osmode, a2.m_mxJig), a2.m_tipsObject.addTipObjects(t3.tips) && a2.m_tipsObject.upDisplay(a2.m_mxJig), a2.m_mxJig.onGetOsnapData(t3);
          });
        } else {
          e2.SearchRnge = n2.viewCoordLong2Cad(v.MxDrawData.m_dInputRectWidth);
          var s2 = this;
          n2.callCommand("MxCAD_NotifyOsnap", JSON.stringify(e2), function(e3) {
            if (!("string" != typeof e3 || e3.length < 1) && s2.m_isRuning) {
              var n3 = JSON.parse(e3);
              t2.m_ptSnapPoint.x = n3.ptsx, t2.m_ptSnapPoint.y = n3.ptsy, t2.m_ptSnapPoint.z = n3.ptsz, t2.m_ptSnapSrcPoint.x = n3.ptx, t2.m_ptSnapSrcPoint.y = n3.pty, t2.m_ptSnapSrcPoint.z = 0, t2.m_osmode = n3.osmode, s2.m_draw.upDisplay(new d.Vector3(n3.ptsx, n3.ptsy, n3.ptsz), n3.osmode, s2.m_mxJig);
            }
          });
        }
      }
    }, D.prototype.startDrag = function(t2, e2) {
      this.m_mxJig = e2;
      var n2, r2, i2 = this.m_mxJig.getMxObject();
      function a2() {
        n2.notifyOsnapToServer();
      }
      return e2.isDisableOsnap() ? this.m_isEnable = false : this.m_isEnable = true === i2.getInisetValue(f.IniSetName.kEnableOsnapFunction), this.m_isOffsetInputPostion = t2, this.m_isRuning = true, this.resetData(), this.m_notifyOsnap_delayCall = (n2 = this, r2 = null, function() {
        clearTimeout(r2), r2 = setTimeout(a2, 20);
      }), true;
    }, D.prototype.endDrag = function() {
      return this.m_isRuning = false, this.m_draw.clearDisplay(this.m_mxJig), this.m_tipsObject.clearDisplay(this.m_mxJig), true;
    }, D.prototype.reCompteCurrentPoint = function(t2) {
      return this.m_isOffsetInputPostion && t2.add(this.m_vecOffset), t2;
    }, D.prototype.getIsEnableVar = function() {
      return this.m_isEnable;
    }, D.prototype.isEnable = function() {
      if (!this.m_isEnable || a.isTmpDisableOsmode()) return false;
      var t2 = this.m_mxJig.getMxObject().getSysVarLong("OSMODE");
      return 0 != this.m_lSpecificOsMode && (t2 = this.m_lSpecificOsMode), !(0 == t2 || t2 & r.OsModeOff);
    }, D.prototype.notifyOsnap = function(t2, e2) {
      this.m_lOSmode = t2, null == e2 ? this.m_isValidPrvInputPoint = false : (this.m_isValidPrvInputPoint = true, this.m_prvInputPoint = e2), this.m_osmode == g.MxJigCmdManager.OsnapMode.kOsModekInValid && this.m_draw.clearDisplay(this.m_mxJig), this.m_notifyOsnap_delayCall();
    }, D.prototype.setPoint = function(t2, e2) {
      if (this.isEnable()) {
        null == t2 ? (this.m_isValid = false, this.m_osmode = g.MxJigCmdManager.OsnapMode.kOsModekInValid) : (-1 == this.m_iLongprogressStatus || this.m_iLongprogressStatus, this.m_pt = t2, this.m_inPoint = t2, this.m_isValid = true, (null == e2 || this.m_osmode != g.MxJigCmdManager.OsnapMode.kOsModekInValid && y.MxTools.getXYPlanDistance(this.m_ptSnapSrcPoint, t2) > e2) && (this.m_osmode = g.MxJigCmdManager.OsnapMode.kOsModekInValid));
        var n2 = this.m_mxJig.getMxObject().getSysVarLong("OSMODE");
        0 != this.m_lSpecificOsMode && (n2 = this.m_lSpecificOsMode);
        var r2 = a.getPrvPoint();
        this.notifyOsnap(n2, a.isValidPrvpoint() ? r2 : void 0);
      }
    }, D.prototype.seInValidPoint = function() {
      this.setPoint(void 0);
    }, D.prototype.getCurrentOSnapPoint = function(t2) {
      var e2 = { isSnapPoint: false };
      return this.isEnable() ? (e2.pt = t2, e2.osmode = this.m_osmode, this.m_osmode != g.MxJigCmdManager.OsnapMode.kOsModekInValid ? (e2.isSnapPoint = true, e2.pt.x = this.m_ptSnapPoint.x, e2.pt.y = this.m_ptSnapPoint.y, e2.pt.z = this.m_ptSnapPoint.z, a.isOsnapZValue() || (t2.z = 0)) : e2.pt = t2) : (e2.pt = t2, e2.osmode = g.MxJigCmdManager.OsnapMode.kOsModekInValid), e2;
    }, D.prototype.setLongprogressStatus = function(t2) {
      this.m_iLongprogressStatus = t2;
    }, D.prototype.reComputeOffset = function() {
      if (this.m_isOffsetInputPostion) {
        var t2 = this.m_mxJig.getMxObject(), e2 = y.MxTools.MillimeterToPixels(8);
        e2 = t2.screenCoordLong2Doc(e2), this.m_vecOffset.set(0, e2, 0), this.m_vecOffset.applyAxisAngle(new d.Vector3(0, 0, 1), 20 * Math.PI / 180);
      }
    }, D);
    function D(t2) {
      this.m_inPoint = new d.Vector3(), this.m_vecOffset = new d.Vector3(), this.m_pt = new d.Vector3(), this.m_isValid = false, this.m_ptSnapPoint = new d.Vector3(), this.m_ptSnapSrcPoint = new d.Vector3(), this.m_snapObjectId = 0, this.m_osmode = g.MxJigCmdManager.OsnapMode.kOsModekInValid, this.m_prvInputPoint = new d.Vector3(), this.m_isValidPrvInputPoint = false, this.m_lOSmode = 0, this.m_iLongprogressStatus = -1, this.m_isOffsetInputPostion = false, this.m_mxJig = null, this.m_notifyOsnap_delayCall = void 0, this.m_isRuning = false, this.m_isEnable = false, this.m_lSpecificOsMode = 0, this.m_mxJig = t2, this.m_draw = new T(), this.m_tipsObject = new M();
    }
    n.McEdJigOsnap = S;
  }, { "../MxDrawData": 22, "../MxDrawObject": 23, "../MxFun": 27, "../MxTools": 38, "../MxWindowsEvent": 41, "./MxJigCmdManager": 54, three: 19 }], 44: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.McGiWorldDrawSelect = n.McGiWorldDraw = n.McGiWorldDrawType = void 0;
    var a, o, s = t("three"), l = t("../MxThreeJS"), c = t("../MxManager"), u = t("three.meshline"), h = t("../MxFun");
    (o = a || (n.McGiWorldDrawType = a = {}))[o.kWorldDraw = 1] = "kWorldDraw", o[o.kDynDragDraw = 2] = "kDynDragDraw", o[o.kSelectDraw = 3] = "kSelectDraw";
    var p = (d.prototype.getType = function() {
      return this.worldDrawType;
    }, d.prototype.setXData = function(t2) {
      this.xData = t2;
    }, d.prototype.setMatrix = function(t2) {
      this.matrix = t2;
    }, d.prototype.getMatrix = function() {
      return this.matrix;
    }, d.prototype.setOpacity = function(t2) {
      this.opacity = t2;
    }, d.prototype.getOpacity = function() {
      return this.opacity;
    }, d.prototype.setColor = function(t2) {
      t2 = h.MxFun.getNumberColor(t2), this.iColor != t2 && (this.widthMaterial = null), this.iColor = t2;
    }, d.prototype.setDash = function(t2, e2) {
      this.dDashArray = t2, this.dDashRatio = e2;
    }, d.prototype.getDash = function() {
      return { dDashArray: this.dDashArray, dDashRatio: this.dDashRatio };
    }, d.prototype.setDashLineDisplay = function(t2) {
      t2 ? (this.dDashArray = 0.03, this.dDashRatio = 0.1, 0 == this.dLineWidth && (this.dLineWidth = 6, this.lineWidthByPixels = true)) : (this.dDashArray = 0, this.dDashRatio = 0);
    }, d.prototype.isDashLineDisplay = function() {
      return 0 < this.dDashArray && 0 < this.dDashRatio;
    }, d.prototype.getColor = function() {
      return this.iColor;
    }, d.prototype.setRenderOrder = function(t2) {
      this.iRenderOrder = t2;
    }, d.prototype.getRenderOrder = function() {
      return this.iRenderOrder;
    }, d.prototype.setLineWidthByPixels = function(t2) {
      this.lineWidthByPixels != t2 && (this.widthMaterial = null), this.lineWidthByPixels = t2;
    }, d.prototype.getLineWidthByPixels = function() {
      return this.lineWidthByPixels;
    }, d.prototype.setLineWidth = function(t2) {
      this.dLineWidth != t2 && (this.widthMaterial = null), this.dLineWidth = t2;
    }, d.prototype.getLineWidth = function() {
      return this.dLineWidth;
    }, d.prototype.drawEntity = function(t2) {
      var e2 = this.iRenderOrder;
      "Group" == t2.type ? t2.traverse(function(t3) {
        "Group" != t3.type && (t3.renderOrder = e2);
      }) : t2.renderOrder = e2, null != this.matrix && t2.applyMatrix4(this.matrix), this.aryEntity.push(t2), this.xData && (t2.MxWordDrawXData = this.xData, this.xData = null);
    }, d.prototype.getEntitys = function() {
      return this.aryEntity;
    }, d.prototype.getMxObject = function() {
      return this.mxObj;
    }, d.prototype.createWidthMaterial = function() {
      null == this.widthMaterial && (0 < this.dDashArray && 0 < this.dDashRatio ? this.widthMaterial = new u.MeshLineMaterial({ useMap: false, color: this.iColor, opacity: 1, resolution: new s.Vector2(this.mxObj.getViewWidth(), this.mxObj.getViewHeight()), sizeAttenuation: !this.lineWidthByPixels, lineWidth: this.dLineWidth, transparent: true, depthTest: false, dashArray: this.dDashArray, dashRatio: this.dDashRatio }) : this.widthMaterial = new u.MeshLineMaterial({ useMap: false, color: this.iColor, opacity: 1, resolution: new s.Vector2(this.mxObj.getViewWidth(), this.mxObj.getViewHeight()), sizeAttenuation: !this.lineWidthByPixels, lineWidth: this.dLineWidth, transparent: true, depthTest: false }));
    }, d.prototype.drawSolid = function(t2) {
      if (!(t2.length < 3)) {
        var e2 = new s.Shape(t2.map(function(t3) {
          var e3 = t3.x, n3 = t3.y;
          return new s.Vector2(e3, n3);
        })), n2 = new s.ShapeGeometry(e2), r2 = new s.Mesh(n2, new s.MeshPhongMaterial({ color: this.getColor(), side: s.DoubleSide, transparent: true, opacity: this.getOpacity() }));
        this.drawEntity(r2);
      }
    }, d.prototype.drawLines = function(t2) {
      if (!(t2.length < 2)) if (0 != this.dLineWidth) {
        this.createWidthMaterial();
        var e2 = new s.Geometry();
        e2.vertices = t2;
        var n2 = new u.MeshLine();
        n2.setGeometry(e2);
        var r2 = new s.Mesh(n2.geometry, this.widthMaterial);
        this.drawEntity(r2), this.drawEntity(l.MxThreeJS.createLines(t2.slice(0), this.iColor, 0));
      } else this.drawEntity(l.MxThreeJS.createLines(t2.slice(0), this.iColor, this.opacity));
    }, d.prototype.drawGeometryLines = function(t2) {
      if (!(t2.vertices.length < 2)) if (0 != this.dLineWidth) {
        this.createWidthMaterial();
        var e2 = new u.MeshLine();
        if (!(t2 instanceof s.Geometry)) {
          var n2 = new s.Geometry();
          n2.vertices = t2.vertices, t2 = n2;
        }
        e2.setGeometry(t2);
        var r2 = new s.Mesh(e2.geometry, this.widthMaterial);
        this.drawEntity(r2);
        var i2 = new s.LineBasicMaterial({ color: this.iColor, transparent: true, depthTest: false, opacity: 0 }), a2 = new s.Line(t2, i2);
        this.drawEntity(a2);
      } else i2 = void 0, i2 = this.opacity && 1 != this.opacity || 0 == this.opacity ? new s.LineBasicMaterial({ color: this.iColor, transparent: true, depthTest: false, opacity: this.opacity }) : new s.LineBasicMaterial({ color: this.iColor, transparent: true, depthTest: false }), a2 = new s.Line(t2, i2), this.drawEntity(a2);
    }, d.prototype.drawSelectLine = function(t2, e2, n2, r2) {
      t2 instanceof Object && e2 instanceof Object ? this.drawEntity(l.MxThreeJS.createLine(t2, e2, this.iColor, 0)) : "number" == typeof t2 && "number" == typeof e2 && this.drawEntity(l.MxThreeJS.createLine(new s.Vector3(t2, e2, 0), new s.Vector3(n2, r2, 0), this.iColor, 0));
    }, d.prototype.drawLine = function(t2, e2, n2, r2) {
      var i2, a2;
      if (t2 instanceof Object && e2 instanceof Object ? (i2 = t2, a2 = e2) : "number" == typeof t2 && "number" == typeof e2 && (i2 = new s.Vector3(t2, e2, 0), a2 = new s.Vector3(n2, r2, 0)), 0 != this.dLineWidth) {
        this.createWidthMaterial();
        var o2 = new Float32Array(6);
        o2[0] = i2.x, o2[1] = i2.y, o2[2] = 0, o2[3] = a2.x, o2[4] = a2.y, o2[5] = 0;
        var c2 = new u.MeshLine();
        c2.setGeometry(o2);
        var h2 = new s.Mesh(c2.geometry, this.widthMaterial);
        h2.renderOrder = this.iRenderOrder, this.drawEntity(h2), this.drawSelectLine(i2, a2);
      } else this.drawEntity(l.MxThreeJS.createLine(i2, a2, this.iColor, this.opacity));
    }, d.prototype.drawCircle = function(t2, e2) {
      this.drawEntity(l.MxThreeJS.createCircle(t2, e2, this.iColor));
    }, d.prototype.drawText = function(t2, e2, n2, r2, i2, a2) {
      var o2 = l.MxThreeJS.creatTextSprite(t2, r2, e2, n2, this.iColor, i2, a2);
      return this.drawEntity(o2), o2;
    }, d.prototype.setupForEntity = function(t2) {
      this.iColor = h.MxFun.getNumberColor(t2.getColor()), this.iRenderOrder = t2.getRenderOrder(), this.opacity = t2.opacity, this.dLineWidth = t2.getLineWidth(), this.lineWidthByPixels = t2.getLineWidthByPixels(), this.dDashArray = t2.getDash().dDashArray, this.dDashRatio = t2.getDash().dDashRatio;
    }, d);
    function d(t2, e2) {
      this.aryEntity = [], this.iColor = 16777215, this.dLineWidth = 0, this.lineWidthByPixels = true, this.iRenderOrder = c.MxData.iMxEntityRenderOrder, this.worldDrawType = 1, this.widthMaterial = null, this.dDashArray = 0, this.dDashRatio = 0, this.matrix = null, this.opacity = 1, this.xData = null, this.mxObj = t2, this.worldDrawType = e2;
    }
    n.McGiWorldDraw = p;
    var f, m = (i(g, f = p), g.prototype.setSmallCoordDraw = function(t2) {
      this.isSmallCorrdDraw = t2;
    }, g.prototype.setCurEntityId = function(t2) {
      this.curEntityId = t2;
    }, g.prototype.drawEntity = function(t2) {
    }, g.prototype.drawText = function(t2, e2, n2, r2, i2, a2) {
      return null;
    }, g.prototype.drawSelectLine = function(t2, e2, n2, r2) {
    }, g.prototype.isValid = function() {
      return 0 != this.curEntityId || (console.log("this.curEntityId == 0"), false);
    }, g.prototype.drawLine = function(t2, e2, n2, r2) {
      var i2, a2;
      this.isValid() && (t2 instanceof Object && e2 instanceof Object ? (i2 = t2, a2 = e2) : "number" == typeof t2 && "number" == typeof e2 && (i2 = new s.Vector3(t2, e2, 0), a2 = new s.Vector3(n2, r2, 0)), this.selectManager.addLineDisplay(this.curEntityId, i2, a2, this.isSmallCorrdDraw));
    }, g.prototype.drawCircle = function(t2, e2) {
      this.isValid() && this.selectManager.addCircleDisplay(this.curEntityId, t2, e2, this.isSmallCorrdDraw);
    }, g.prototype.drawLines = function(t2) {
      if (!(t2.length < 2)) for (var e2 = t2.length, n2 = 0; n2 < e2 - 1; n2++) this.selectManager.addLineDisplay(this.curEntityId, t2[n2], t2[n2 + 1], this.isSmallCorrdDraw);
    }, g);
    function g(t2, e2) {
      var n2 = f.call(this, t2, a.kSelectDraw) || this;
      return n2.isSmallCorrdDraw = false, n2.selectManager = e2, n2.curEntityId = 0, n2.isSmallCorrdDraw = false, n2;
    }
    n.McGiWorldDrawSelect = m;
  }, { "../MxFun": 27, "../MxManager": 29, "../MxThreeJS": 37, three: 19, "three.meshline": 18 }], 45: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MrxDbgUiPrBase = n.MrxDbgUiPrBase_Return = n.McEdGetPointWorldDrawObject = n.McEdGetPointWorldDraw = void 0;
    var a = t("three"), o = t("./MxJig"), s = t("./MxJigCmdManager"), l = t("../MxThreeJS"), c = t("../UI/MxUiVue"), u = t("../MxString"), h = t("./McGiWorldDraw"), p = t("../MxManager"), d = (f.prototype.setMcEdJig = function(t2) {
      this.m_pJig = t2;
    }, f.prototype.getMcEdJig = function() {
      return this.m_pJig;
    }, f.prototype.setColor = function(t2) {
      this.m_iColor = t2;
    }, f.prototype.getColor = function() {
      return this.m_iColor;
    }, f.prototype.getDrawColor = function() {
      return this.m_pJig.getMxObject().automaticInversionColor(this.m_iColor);
    }, f.prototype.drawLine = function(t2, e2) {
      this.m_pJig.drawEntity(l.MxThreeJS.createLine(t2, e2, this.getDrawColor()));
    }, f.prototype.drawRect = function(t2, e2) {
      var n2 = new a.Vector3(t2.x, e2.y, 0), r2 = new a.Vector3(e2.x, t2.y, 0);
      this.drawLine(t2, n2), this.drawLine(n2, e2), this.drawLine(e2, r2), this.drawLine(r2, t2);
    }, f.prototype.drawMcDbEntity = function(t2, e2) {
      this.m_pJig.drawMcDbEntity(t2, e2 ? 0 : this.getDrawColor(), e2);
    }, f.prototype.drawMcDbLine = function(t2, e2, n2, r2, i2, a2) {
      this.m_pJig.drawMcDbLine(t2, e2, n2, r2, i2, a2, this.getDrawColor());
    }, f.prototype.drawCircle = function(t2, e2) {
      this.m_pJig.drawEntity(l.MxThreeJS.createCircle(t2, e2, this.getDrawColor()));
    }, f.prototype.drawEntity = function(t2, e2, n2) {
      void 0 === n2 && (n2 = false), this.m_pJig.drawEntity(t2, e2, n2);
    }, f.prototype.drawText = function(t2, e2, n2, r2) {
      var i2 = l.MxThreeJS.creatTextSprite(t2, r2, e2, n2, this.getDrawColor());
      this.drawEntity(i2);
    }, f.prototype.drawSolid = function(t2, e2) {
      var n2 = l.MxThreeJS.createSolid(t2, this.getDrawColor(), e2);
      n2 && this.drawEntity(n2);
    }, f.prototype.drawCustomEntity = function(t2, e2) {
      var n2 = new h.McGiWorldDraw(this.m_pJig.getMxObject(), h.McGiWorldDrawType.kDynDragDraw);
      n2.setupForEntity(t2), t2.worldDraw(n2);
      for (var r2 = n2.getEntitys(), i2 = r2.length, a2 = 0; a2 < i2; a2++) this.drawEntity(r2[a2], e2, t2.isUseSmallcoordDisplay());
    }, f);
    function f() {
      this.m_pJig = null, this.m_iColor = 16777215;
    }
    n.McEdGetPointWorldDraw = d;
    var m, g, y, v = (i(x, m = d), x.prototype.setDraw = function(t2) {
      this.m_callDraw = t2;
    }, x.prototype.worldDraw = function(t2) {
      null != this.m_callDraw && this.m_callDraw(t2, this);
    }, x);
    function x() {
      var t2 = null !== m && m.apply(this, arguments) || this;
      return t2.m_callDraw = void 0, t2;
    }
    n.McEdGetPointWorldDrawObject = v, (y = g || (n.MrxDbgUiPrBase_Return = g = {}))[y.kCancel = -2] = "kCancel", y[y.kNone = -1] = "kNone", y[y.kOk = 0] = "kOk", y[y.kKeyWord = 1] = "kKeyWord";
    var w, b = (i(M, w = o.McEdJigCommand), M.prototype.procInKeyword = function(t2) {
      t2.status >= s.MxJigCmdManager.DragStatus.kKW1 && 0 < t2.sKeyValue.length ? this.m_keyWordPicked = t2.sKeyValue.toUpperCase() : this.m_keyWordPicked = "";
    }, M.prototype.getReturnStatus = function(t2) {
      switch (t2) {
        case s.MxJigCmdManager.DragStatus.kNoChange:
          return g.kNone;
        case s.MxJigCmdManager.DragStatus.kCancel:
          return g.kCancel;
        case s.MxJigCmdManager.DragStatus.kNull:
          return g.kNone;
        case s.MxJigCmdManager.DragStatus.kNormal:
          return g.kOk;
      }
      return 1 <= t2 ? g.kKeyWord : g.kCancel;
    }, M.prototype.SetLASTPOINT = function(t2) {
      var e2 = this._mxObject;
      if ((e2 = e2 || p.MxManager.currentMx()).sysVariable().setSysVarPoint("LASTPOINT", t2), t2) {
        var n2 = e2.sysVariable().getSysVarNumber("GETPOINTSTATUS");
        n2 |= s.MxJigCmdManager.GETPOINTSTATUS.OsModeSValidLastPoint, e2.sysVariable().setSysVarNumber("GETPOINTSTATUS", n2);
      } else n2 = e2.sysVariable().getSysVarNumber("GETPOINTSTATUS"), n2 &= ~s.MxJigCmdManager.GETPOINTSTATUS.OsModeSValidLastPoint, e2.sysVariable().setSysVarNumber("GETPOINTSTATUS", n2);
    }, M.prototype.clearLastInputPoint = function() {
      this._mxObject || (this._mxObject = p.MxManager.currentMx()), this.SetLASTPOINT(void 0);
    }, M.prototype.setCursorType = function(t2) {
      this.m_cursorType = t2;
    }, M.prototype.getCursorType = function() {
      return this.m_cursorType;
    }, M.prototype.setInputToucheType = function(t2) {
      this.m_toucheType = t2;
    }, M.prototype.getInputToucheType = function() {
      return this.m_toucheType;
    }, M.prototype.keyWords = function() {
      return this.m_keyWords;
    }, M.prototype.setKeyWords = function(t2) {
      this.m_keyWords = t2;
    }, M.prototype.message = function() {
      return this.m_message;
    }, M.prototype.setMessage = function(t2) {
      this.m_message = t2;
    }, M.prototype.keyWordPicked = function() {
      return this.m_keyWordPicked;
    }, M.prototype.isKeyWordPicked = function(t2) {
      return t2 = t2.toUpperCase(), this.m_keyWordPicked == t2;
    }, M.prototype.setUserDraw = function(t2) {
      t2.setMcEdJig(this), this.m_pWorldDraw = t2;
    }, M.prototype.printMessage = function() {
      var t2 = new u.MxString(this.m_message);
      t2.TrimRight(":"), 1 < this.m_keyWords.length && "[" == this.m_keyWords[0] && "]" == this.m_keyWords[this.m_keyWords.length - 1] ? -1 == t2.m_val.indexOf("\n") ? c.MxUiVue.acutPrintf("\n" + t2.m_val + " 或" + this.m_keyWords + ":") : c.MxUiVue.acutPrintf(t2.m_val + " 或" + this.m_keyWords + ":") : -1 == t2.m_val.indexOf("\n") ? c.MxUiVue.acutPrintf("\n" + t2.m_val + ":") : c.MxUiVue.acutPrintf(t2.m_val + ":");
    }, M);
    function M() {
      var t2 = null !== w && w.apply(this, arguments) || this;
      return t2.m_keyWords = "", t2.m_message = "", t2.m_keyWordPicked = "", t2.m_pWorldDraw = null, t2.m_toucheType = s.MxJigCmdManager.InType.kGetBegan, t2.m_cursorType = c.MxUiVue.CursorType.kNormal, t2;
    }
    n.MrxDbgUiPrBase = b;
  }, { "../MxManager": 29, "../MxString": 34, "../MxThreeJS": 37, "../UI/MxUiVue": 65, "./McGiWorldDraw": 44, "./MxJig": 53, "./MxJigCmdManager": 54, three: 19 }], 46: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MrxDbgUiPrAngle = n.MrxDbgUiPrKeyWord = n.MrxDbgUiPrString = n.MrxDbgUiPrInt = n.MrxDbgUiPrDist = void 0;
    var a, o = t("three"), s = t("./MxJigCmdManager"), l = t("../MxFun"), c = t("./MrxDbgUiPrBase"), u = t("../UI/MxUiVue"), h = t("../MxThreeJS"), p = t("../MxString"), d = (i(f, a = c.MrxDbgUiPrBase), f.prototype.value = function() {
      return this.m_value;
    }, f.prototype.basePt = function() {
      return new o.Vector3(this.m_basePt.x, this.m_basePt.y, 0);
    }, f.prototype.setBasePt = function(t2) {
      null == this.m_basePt ? this.m_basePt = new o.Vector3(t2.x, t2.y, 0) : (this.m_basePt.x = t2.x, this.m_basePt.y = t2.y), this.m_useBasePt = true;
    }, f.prototype.setUseBasePt = function(t2) {
      this.m_useBasePt = t2;
    }, f.prototype.initGo = function() {
      this.m_keyWordPicked = "", this.m_retcall = null, this.clearLastInputPoint(), this.getDynImput().setGetNumber(true), this.m_useBasePt && this.SetLASTPOINT(this.m_basePt);
    }, f.prototype.go = function(t2) {
      this.initGo(), this.m_retcall = t2, this.m_previousInPoint = null, this.m_currentInPoint = null, this.m_value = 0, s.MxJigCmdManager.runCmd(this);
    }, f.prototype.onExitCommand = function() {
      var t2 = this;
      u.MxUiVue.setCursorType(u.MxUiVue.CursorType.kNormal);
      var e2 = false;
      null != this.m_retcall && (s.MxJigCmdManager.setRunCmdEvent(function() {
        a.prototype.onExitCommand.call(t2, false), e2 = true;
      }), this.m_retcall(this.getReturnStatus(this.m_resultDragStatus)), s.MxJigCmdManager.setRunCmdEvent(void 0)), !e2 && s.MxJigCmdManager.isWaitCmdNull() && u.MxUiVue.restoreCmdStatus(), e2 || a.prototype.onExitCommand.call(this, true);
    }, f.prototype.onStartCommand = function() {
      u.MxUiVue.setCursorType(this.m_cursorType), this.printMessage(), s.MxJigCmdManager.setKeywordList(this.keyWords()), a.prototype.onStartCommand.call(this);
    }, f.prototype.sampler = function() {
      var t2, e2 = s.MxJigCmdManager.acquirePoint(this.m_toucheType, false);
      return e2.status == s.MxJigCmdManager.DragStatus.kNormal && (null == this.m_currSamplerPoint ? this.m_currSamplerPoint = new o.Vector3(e2.pt.x, e2.pt.y, 0) : (this.m_currSamplerPoint.x = e2.pt.x, this.m_currSamplerPoint.y = e2.pt.y)), t2 = this.m_useBasePt ? this.acquireDist(this.m_toucheType, this.m_basePt) : this.acquireDist(this.m_toucheType, this.m_currentInPoint), this.procInKeyword(t2), t2.status == s.MxJigCmdManager.DragStatus.kNormal ? (this.m_value = t2.dist, t2.status) : t2.status == s.MxJigCmdManager.DragStatus.kKW1 ? t2.status : this.m_useBasePt || this.m_currentInPoint ? e2.status : ((t2 = this.acquirePoint(this.m_toucheType, false)).status == s.MxJigCmdManager.DragStatus.kNormal && t2.exit && (null == this.m_previousInPoint ? this.m_previousInPoint = new o.Vector3(t2.pt.x, t2.pt.y, 0) : (this.m_previousInPoint.x = t2.pt.x, this.m_previousInPoint.y = t2.pt.y)), t2.status);
    }, f.prototype.done = function(t2) {
      if (null != this.m_retcall) return this.m_resultDragStatus = t2, this.m_useBasePt || t2 != s.MxJigCmdManager.DragStatus.kNormal || !this.m_previousInPoint || this.m_currentInPoint ? s.MxJigCmdManager.DoneStatius.kExitCommand : (this.m_currentInPoint = this.m_previousInPoint, this.m_previousInPoint = null, s.MxJigCmdManager.DoneStatius.kContinueCommand);
      l.MxFun.Assert(0);
    }, f.prototype.upDisplay = function() {
      this.m_currSamplerPoint && (this.m_pWorldDraw && (this._mxObject.getMcObject().onReadyJigUpdateDispla(), this.m_pWorldDraw.worldDraw(this.m_currSamplerPoint)), this.m_useBasePt && this.m_basePt ? this.drawEntity(h.MxThreeJS.createLine(this.m_currSamplerPoint, this.m_basePt, 16777215)) : this.m_currentInPoint && this.drawEntity(h.MxThreeJS.createLine(this.m_currSamplerPoint, this.m_currentInPoint, 16777215)));
    }, f);
    function f() {
      var t2 = a.call(this) || this;
      return t2.m_useBasePt = false, t2.m_basePt = null, t2.m_previousInPoint = null, t2.m_currentInPoint = null, t2.m_value = 0, t2.m_currSamplerPoint = null, t2.m_retcall = null, t2.m_resultDragStatus = s.MxJigCmdManager.DragStatus.kCancel, t2.m_cursorType = u.MxUiVue.CursorType.kCross, t2;
    }
    n.MrxDbgUiPrDist = d;
    var m, g = (i(y, m = c.MrxDbgUiPrBase), y.prototype.value = function() {
      return this.m_value;
    }, y.prototype.initGo = function() {
      this.m_keyWordPicked = "", this.m_retcall = null, this.clearLastInputPoint();
    }, y.prototype.go = function(t2) {
      this.initGo(), this.m_retcall = t2, this.m_value = 0, this.m_currSamplerPoint = null, this.getDynImput().setGetNumber(true), s.MxJigCmdManager.runCmd(this);
    }, y.prototype.onExitCommand = function() {
      var t2 = this;
      u.MxUiVue.setCursorType(u.MxUiVue.CursorType.kNormal);
      var e2 = false;
      null != this.m_retcall && (s.MxJigCmdManager.setRunCmdEvent(function() {
        m.prototype.onExitCommand.call(t2, false), e2 = true;
      }), this.m_retcall(this.getReturnStatus(this.m_resultDragStatus)), s.MxJigCmdManager.setRunCmdEvent(void 0)), !e2 && s.MxJigCmdManager.isWaitCmdNull() && u.MxUiVue.restoreCmdStatus(), e2 || m.prototype.onExitCommand.call(this, true);
    }, y.prototype.onStartCommand = function() {
      u.MxUiVue.setCursorType(this.m_cursorType), this.printMessage(), s.MxJigCmdManager.setKeywordList(this.keyWords()), m.prototype.onStartCommand.call(this);
    }, y.prototype.sampler = function() {
      var t2 = s.MxJigCmdManager.acquirePoint(this.m_toucheType, false);
      t2.status == s.MxJigCmdManager.DragStatus.kNormal && (null == this.m_currSamplerPoint ? this.m_currSamplerPoint = new o.Vector3(t2.pt.x, t2.pt.y, 0) : (this.m_currSamplerPoint.x = t2.pt.x, this.m_currSamplerPoint.y = t2.pt.y));
      var e2 = this.acquireInt();
      return this.procInKeyword(e2), e2.status == s.MxJigCmdManager.DragStatus.kNormal ? this.m_value = e2.iVal : (e2.status, s.MxJigCmdManager.DragStatus.kKW1), e2.status;
    }, y.prototype.done = function(t2) {
      if (null != this.m_retcall) return this.m_resultDragStatus = t2, s.MxJigCmdManager.DoneStatius.kExitCommand;
      l.MxFun.Assert(0);
    }, y.prototype.upDisplay = function() {
      this.m_currSamplerPoint && this.m_pWorldDraw && (this._mxObject.getMcObject().onReadyJigUpdateDispla(), this.m_pWorldDraw.worldDraw(this.m_currSamplerPoint));
    }, y);
    function y() {
      var t2 = m.call(this) || this;
      return t2.m_value = 0, t2.m_currSamplerPoint = null, t2.m_retcall = null, t2.m_resultDragStatus = s.MxJigCmdManager.DragStatus.kCancel, t2.m_cursorType = u.MxUiVue.CursorType.kNormal, t2.setDynamicInputType(s.MxJigCmdManager.DynamicInputType.kNoInput), t2;
    }
    n.MrxDbgUiPrInt = g;
    var v, x = (i(w, v = c.MrxDbgUiPrBase), w.prototype.value = function() {
      return this.m_value;
    }, w.prototype.initGo = function() {
      this.m_keyWordPicked = "", this.m_retcall = null;
    }, w.prototype.go = function(t2) {
      this.initGo(), this.m_retcall = t2, this.m_value = "", this.m_currSamplerPoint = null, s.MxJigCmdManager.runCmd(this);
    }, w.prototype.onExitCommand = function() {
      var t2 = this;
      u.MxUiVue.setCursorType(u.MxUiVue.CursorType.kNormal);
      var e2 = false;
      null != this.m_retcall && (s.MxJigCmdManager.setRunCmdEvent(function() {
        v.prototype.onExitCommand.call(t2, false), e2 = true;
      }), this.m_retcall(this.getReturnStatus(this.m_resultDragStatus)), s.MxJigCmdManager.setRunCmdEvent(void 0)), !e2 && s.MxJigCmdManager.isWaitCmdNull() && u.MxUiVue.restoreCmdStatus(), e2 || v.prototype.onExitCommand.call(this, true);
    }, w.prototype.onStartCommand = function() {
      u.MxUiVue.setCursorType(this.m_cursorType), this.printMessage(), s.MxJigCmdManager.setKeywordList(this.keyWords()), v.prototype.onStartCommand.call(this);
    }, w.prototype.sampler = function() {
      var t2 = s.MxJigCmdManager.acquirePoint(this.m_toucheType, false);
      t2.status == s.MxJigCmdManager.DragStatus.kNormal && (null == this.m_currSamplerPoint ? this.m_currSamplerPoint = new o.Vector3(t2.pt.x, t2.pt.y, 0) : (this.m_currSamplerPoint.x = t2.pt.x, this.m_currSamplerPoint.y = t2.pt.y));
      var e2 = this.acquireString();
      return this.procInKeyword(e2), e2.status == s.MxJigCmdManager.DragStatus.kNormal ? this.m_value = e2.sValue : (e2.status, s.MxJigCmdManager.DragStatus.kKW1), e2.status;
    }, w.prototype.done = function(t2) {
      if (null != this.m_retcall) return this.m_resultDragStatus = t2, s.MxJigCmdManager.DoneStatius.kExitCommand;
      l.MxFun.Assert(0);
    }, w.prototype.upDisplay = function() {
      this.m_currSamplerPoint && this.m_pWorldDraw && (this._mxObject.getMcObject().onReadyJigUpdateDispla(), this.m_pWorldDraw.worldDraw(this.m_currSamplerPoint));
    }, w);
    function w() {
      var t2 = v.call(this) || this;
      return t2.m_value = "", t2.m_currSamplerPoint = null, t2.m_retcall = null, t2.m_resultDragStatus = s.MxJigCmdManager.DragStatus.kCancel, t2.m_cursorType = u.MxUiVue.CursorType.kCross, t2;
    }
    n.MrxDbgUiPrString = x;
    var b, M = (i(_, b = c.MrxDbgUiPrBase), _.prototype.initGo = function() {
      this.m_keyWordPicked = "", this.m_retcall = null;
    }, _.prototype.printMessage = function() {
      var t2 = new p.MxString(this.m_message);
      t2.TrimRight(":"), 1 < this.m_keyWords.length && "[" == this.m_keyWords[0] && "]" == this.m_keyWords[this.m_keyWords.length - 1] ? -1 == t2.m_val.indexOf("\n") ? u.MxUiVue.acutPrintf("\n" + t2.m_val + " " + this.m_keyWords + ":") : u.MxUiVue.acutPrintf(t2.m_val + " " + this.m_keyWords + ":") : -1 == t2.m_val.indexOf("\n") ? u.MxUiVue.acutPrintf("\n" + t2.m_val + ":") : u.MxUiVue.acutPrintf(t2.m_val + ":");
    }, _.prototype.go = function(t2) {
      this.initGo(), this.m_retcall = t2, this.m_currSamplerPoint = null, s.MxJigCmdManager.runCmd(this);
    }, _.prototype.onExitCommand = function() {
      var t2 = this;
      u.MxUiVue.setCursorType(u.MxUiVue.CursorType.kNormal);
      var e2 = false;
      null != this.m_retcall && (s.MxJigCmdManager.setRunCmdEvent(function() {
        b.prototype.onExitCommand.call(t2, false), e2 = true;
      }), this.m_retcall(this.getReturnStatus(this.m_resultDragStatus)), s.MxJigCmdManager.setRunCmdEvent(void 0)), !e2 && s.MxJigCmdManager.isWaitCmdNull() && u.MxUiVue.restoreCmdStatus(), e2 || b.prototype.onExitCommand.call(this, true);
    }, _.prototype.onStartCommand = function() {
      u.MxUiVue.setCursorType(this.m_cursorType), this.printMessage(), s.MxJigCmdManager.setKeywordList(this.keyWords()), b.prototype.onStartCommand.call(this);
    }, _.prototype.sampler = function() {
      var t2 = s.MxJigCmdManager.acquirePoint(this.m_toucheType, false);
      t2.status == s.MxJigCmdManager.DragStatus.kNormal && (null == this.m_currSamplerPoint ? this.m_currSamplerPoint = new o.Vector3(t2.pt.x, t2.pt.y, 0) : (this.m_currSamplerPoint.x = t2.pt.x, this.m_currSamplerPoint.y = t2.pt.y));
      var e2 = this.acquireKeyword();
      return this.procInKeyword(e2), e2.status, s.MxJigCmdManager.DragStatus.kKW1, e2.status;
    }, _.prototype.done = function(t2) {
      if (null != this.m_retcall) return t2 >= s.MxJigCmdManager.DragStatus.kKW1 && (t2 = s.MxJigCmdManager.DragStatus.kNormal), this.m_resultDragStatus = t2, s.MxJigCmdManager.DoneStatius.kExitCommand;
      l.MxFun.Assert(0);
    }, _.prototype.upDisplay = function() {
      this.m_currSamplerPoint && this.m_pWorldDraw && (this._mxObject.getMcObject().onReadyJigUpdateDispla(), this.m_pWorldDraw.worldDraw(this.m_currSamplerPoint));
    }, _);
    function _() {
      var t2 = b.call(this) || this;
      return t2.m_currSamplerPoint = null, t2.m_retcall = null, t2.m_resultDragStatus = s.MxJigCmdManager.DragStatus.kCancel, t2.m_cursorType = u.MxUiVue.CursorType.kCross, t2.setUserInputControls(0), t2.setDisableDynInput(true), t2;
    }
    n.MrxDbgUiPrKeyWord = M;
    var T, C = (i(S, T = c.MrxDbgUiPrBase), S.prototype.value = function() {
      return this.m_value;
    }, S.prototype.basePt = function() {
      return new o.Vector3(this.m_basePt.x, this.m_basePt.y, 0);
    }, S.prototype.setBasePt = function(t2) {
      null == this.m_basePt ? this.m_basePt = new o.Vector3(t2.x, t2.y, 0) : (this.m_basePt.x = t2.x, this.m_basePt.y = t2.y), this.m_useBasePt = true;
    }, S.prototype.setUseBasePt = function(t2) {
      this.m_useBasePt = t2;
    }, S.prototype.initGo = function() {
      this.m_keyWordPicked = "", this.m_retcall = null, this.getDynImput().setGetNumber(true), this.clearLastInputPoint(), this.m_useBasePt && this.SetLASTPOINT(this.m_basePt);
    }, S.prototype.go = function(t2) {
      this.initGo(), this.m_retcall = t2, this.m_previousInPoint = null, this.m_currentInPoint = null, this.m_value = 0, s.MxJigCmdManager.runCmd(this);
    }, S.prototype.onExitCommand = function() {
      var t2 = this;
      u.MxUiVue.setCursorType(u.MxUiVue.CursorType.kNormal);
      var e2 = false;
      null != this.m_retcall && (s.MxJigCmdManager.setRunCmdEvent(function() {
        T.prototype.onExitCommand.call(t2, false), e2 = true;
      }), this.m_retcall(this.getReturnStatus(this.m_resultDragStatus)), s.MxJigCmdManager.setRunCmdEvent(void 0)), !e2 && s.MxJigCmdManager.isWaitCmdNull() && u.MxUiVue.restoreCmdStatus(), e2 || T.prototype.onExitCommand.call(this, true);
    }, S.prototype.onStartCommand = function() {
      u.MxUiVue.setCursorType(this.m_cursorType), this.printMessage(), s.MxJigCmdManager.setKeywordList(this.keyWords()), T.prototype.onStartCommand.call(this);
    }, S.prototype.sampler = function() {
      var t2, e2 = s.MxJigCmdManager.acquirePoint(this.m_toucheType, false);
      return e2.status == s.MxJigCmdManager.DragStatus.kNormal && (null == this.m_currSamplerPoint ? this.m_currSamplerPoint = new o.Vector3(e2.pt.x, e2.pt.y, 0) : (this.m_currSamplerPoint.x = e2.pt.x, this.m_currSamplerPoint.y = e2.pt.y)), t2 = this.m_useBasePt ? this.acquireAngle(this.m_toucheType, this.m_basePt) : this.acquireAngle(this.m_toucheType, this.m_currentInPoint), this.procInKeyword(t2), t2.status == s.MxJigCmdManager.DragStatus.kNormal ? (this.m_value = t2.ang, t2.status) : t2.status == s.MxJigCmdManager.DragStatus.kKW1 ? t2.status : this.m_useBasePt || this.m_currentInPoint ? e2.status : ((t2 = this.acquirePoint(this.m_toucheType, false)).status == s.MxJigCmdManager.DragStatus.kNormal && t2.exit && (null == this.m_previousInPoint ? this.m_previousInPoint = new o.Vector3(t2.pt.x, t2.pt.y, 0) : (this.m_previousInPoint.x = t2.pt.x, this.m_previousInPoint.y = t2.pt.y)), t2.status);
    }, S.prototype.done = function(t2) {
      if (null != this.m_retcall) return this.m_resultDragStatus = t2, this.m_useBasePt || t2 != s.MxJigCmdManager.DragStatus.kNormal || !this.m_previousInPoint || this.m_currentInPoint ? s.MxJigCmdManager.DoneStatius.kExitCommand : (this.m_currentInPoint = this.m_previousInPoint, this.m_previousInPoint = null, s.MxJigCmdManager.DoneStatius.kContinueCommand);
      l.MxFun.Assert(0);
    }, S.prototype.upDisplay = function() {
      this.m_currSamplerPoint && (this.m_pWorldDraw && (this._mxObject.getMcObject().onReadyJigUpdateDispla(), this.m_pWorldDraw.worldDraw(this.m_currSamplerPoint)), this.m_useBasePt && this.m_basePt ? this.drawEntity(h.MxThreeJS.createLine(this.m_currSamplerPoint, this.m_basePt, 16777215)) : this.m_currentInPoint && this.drawEntity(h.MxThreeJS.createLine(this.m_currSamplerPoint, this.m_currentInPoint, 16777215)));
    }, S);
    function S() {
      var t2 = T.call(this) || this;
      return t2.m_useBasePt = false, t2.m_basePt = null, t2.m_previousInPoint = null, t2.m_currentInPoint = null, t2.m_value = 0, t2.m_currSamplerPoint = null, t2.m_retcall = null, t2.m_resultDragStatus = s.MxJigCmdManager.DragStatus.kCancel, t2.m_cursorType = u.MxUiVue.CursorType.kCross, t2;
    }
    n.MrxDbgUiPrAngle = C;
  }, { "../MxFun": 27, "../MxString": 34, "../MxThreeJS": 37, "../UI/MxUiVue": 65, "./MrxDbgUiPrBase": 45, "./MxJigCmdManager": 54, three: 19 }], 47: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MrxDbgUiPrPoint = void 0;
    var a, o = t("three"), s = t("./MxJigCmdManager"), l = t("../MxFun"), c = t("./MrxDbgUiPrBase"), u = t("../UI/MxUiVue"), h = t("../MxThreeJS"), p = t("../MxManager"), d = (i(f, a = c.MrxDbgUiPrBase), f.prototype.value = function() {
      return new o.Vector3(this.m_value.x, this.m_value.y, 0);
    }, f.prototype.getCADValue = function() {
      return p.MxManager.getMxCpp().newMcGePoint3d(new o.Vector3(this.m_value.x, this.m_value.y, 0));
    }, f.prototype.basePt = function() {
      return new o.Vector3(this.m_basePt.x, this.m_basePt.y, 0);
    }, f.prototype.setBasePt = function(t2) {
      null == this.m_basePt ? this.m_basePt = new o.Vector3(t2.x, t2.y, 0) : (this.m_basePt.x = t2.x, this.m_basePt.y = t2.y), this.m_useBasePt = true;
    }, f.prototype.setUseBasePt = function(t2) {
      this.m_useBasePt = t2;
    }, f.prototype.initGo = function() {
      this.m_keyWordPicked = "", this.m_retcall = null, this.m_retWhileCall = null, this.m_exitCall = null, this.m_useBasePt && this.SetLASTPOINT(this.m_basePt);
    }, f.prototype.go = function(t2) {
      this.initGo(), this.m_retcall = t2, s.MxJigCmdManager.runCmd(this);
    }, f.prototype.goWhile = function(t2, e2) {
      this.initGo(), this.m_retWhileCall = t2, e2 && (this.m_exitCall = e2), s.MxJigCmdManager.runCmd(this);
    }, f.prototype.onExitCommand = function() {
      var t2 = this;
      u.MxUiVue.setCursorType(u.MxUiVue.CursorType.kNormal);
      var e2 = false;
      null != this.m_retcall && (s.MxJigCmdManager.setRunCmdEvent(function() {
        a.prototype.onExitCommand.call(t2, false), e2 = true;
      }), this.m_retcall(this.getReturnStatus(this.m_resultDragStatus)), s.MxJigCmdManager.setRunCmdEvent(void 0)), !e2 && s.MxJigCmdManager.isWaitCmdNull() && u.MxUiVue.restoreCmdStatus(), e2 || a.prototype.onExitCommand.call(this, true);
    }, f.prototype.onStartCommand = function() {
      u.MxUiVue.setCursorType(this.m_cursorType), this.printMessage(), s.MxJigCmdManager.setKeywordList(this.keyWords()), this.m_useBasePt && this.SetLASTPOINT(this.m_basePt), a.prototype.onStartCommand.call(this);
    }, f.prototype.sampler = function() {
      var t2 = this.acquirePoint(this.m_toucheType);
      return this.procInKeyword(t2), t2.status == s.MxJigCmdManager.DragStatus.kNormal && (null == this.m_value ? this.m_value = new o.Vector3(t2.pt.x, t2.pt.y, 0) : (this.m_value.x = t2.pt.x, this.m_value.y = t2.pt.y)), t2.status;
    }, f.prototype.done = function(t2) {
      if (null != this.m_retcall) return this.m_resultDragStatus = t2, this.m_exitCall && this.m_exitCall(this.getReturnStatus(this.m_resultDragStatus)), s.MxJigCmdManager.DoneStatius.kExitCommand;
      if (null != this.m_retWhileCall) {
        if ((this.m_resultDragStatus = t2) == s.MxJigCmdManager.DragStatus.kCancel) return this.m_exitCall && this.m_exitCall(this.getReturnStatus(this.m_resultDragStatus)), s.MxJigCmdManager.DoneStatius.kExitCommand;
        var e2 = false;
        t2 == s.MxJigCmdManager.DragStatus.kNull && (e2 = true);
        var n2 = this.m_retWhileCall(this.getReturnStatus(this.m_resultDragStatus));
        return null != n2 && null != n2.exit && (e2 = n2.exit), e2 ? (this.m_exitCall && this.m_exitCall(this.getReturnStatus(this.m_resultDragStatus)), s.MxJigCmdManager.DoneStatius.kExitCommand) : (s.MxJigCmdManager.setKeywordList(this.keyWords()), this.printMessage(), s.MxJigCmdManager.DoneStatius.kContinueCommand);
      }
      l.MxFun.Assert(0);
    }, f.prototype.upDisplay = function() {
      if (this.m_value && (this.m_pWorldDraw && (this._mxObject.getMcObject().onReadyJigUpdateDispla(0, this.m_value), this.m_pWorldDraw.worldDraw(this.m_value)), this.m_useBasePt && this.m_basePt)) {
        var t2 = 16777215;
        this._mxObject.isWhiteViewColor() && (t2 = 0);
        var e2 = this._mxObject;
        this.drawEntity(h.MxThreeJS.createLine(e2.toSmallcoord(this.m_value), e2.toSmallcoord(this.m_basePt), t2), void 0, true);
      }
    }, f);
    function f() {
      var t2 = a.call(this) || this;
      return t2.m_useBasePt = false, t2.m_basePt = null, t2.m_value = null, t2.m_retcall = null, t2.m_retWhileCall = null, t2.m_exitCall = null, t2.m_resultDragStatus = s.MxJigCmdManager.DragStatus.kCancel, t2.m_cursorType = u.MxUiVue.CursorType.kCross, t2;
    }
    n.MrxDbgUiPrPoint = d;
  }, { "../MxFun": 27, "../MxManager": 29, "../MxThreeJS": 37, "../UI/MxUiVue": 65, "./MrxDbgUiPrBase": 45, "./MxJigCmdManager": 54, three: 19 }], 48: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxCmdRunManager = void 0;
    var r, i, a, o, s, l, c, u, h, p, d = t("../MxFun"), f = t("../MxType"), m = t("./MxJigCmdManager"), g = t("../UI/MxUiVue"), y = t("../MxDrawData");
    function v(t2, e2) {
      void 0 === e2 && (e2 = true);
      var n2 = false, r2 = t2.getMxAllSelect();
      if (t2.getMxDatabase().getGripManager().removeAllGrips() && (n2 = true), t2.getMxDatabase().getSelectManager().removeAllEntity() && (n2 = true), t2.isValidMcObject()) {
        var i2 = t2.getMcObject().getGripManager().getAllSelect();
        e2 && t2.getMcObject().getGripManager().setPrvCommandSelect(i2), t2.getMcObject().getGripManager().clearAll() && (n2 = true);
      }
      e2 && t2.getMxDatabase().getSelectManager().setPrvCommandSelect(r2), n2 && (t2.getMxDatabase().getGripManager().fireMxEntitySelectChange(), t2.updateDisplay());
    }
    function x(t2) {
      p && v(t2, p = false);
    }
    i = r || (n.MxCmdRunManager = r = {}), a = {}, o = new Array(), s = 0, l = false, c = "", u = {}, p = !(h = {}), i.InitQuickCommand = function(t2) {
      if (t2) if (t2 instanceof Array) for (var e2 = t2.length, n2 = 0; n2 < e2; n2++) {
        var r2 = t2[n2];
        if (!(r2.length < 2)) {
          var i2 = r2[0];
          if (0 != i2.length) for (var a2 = r2.length, o2 = 1; o2 < a2; o2++) 0 != r2[o2].length && (u[r2[o2].toUpperCase()] = i2);
        }
      }
      else console.log("Mx:QuickCommand data error,Not an array");
      else console.log("Mx:QuickCommand data error");
    }, i.InitLanguageString = function(t2) {
      this.m_mapLanguageString = t2;
    }, i.getLanguageString = function(t2, e2) {
      var n2 = h[t2];
      return void 0 === n2 && (n2 = e2), n2;
    }, i.MoveUpKey = function() {
      return l ? ++s >= o.length && (s = 0) : l = true, true;
    }, i.MoveDownKey = function() {
      return !!l && (--s < 0 && (s = o.length - 1), true);
    }, i.GetListCommad = function() {
      return s < 0 || s >= o.length ? "" : o[s];
    }, i.ClearPrvCmd = function() {
      c = "";
    }, i.GetPrvCmd = function() {
      return c;
    }, i.SetPrvCmd = function(t2) {
      c = t2;
    }, i.clearCurrentSelect = v, i.clearCurrentSelectIfNeed = x, i.runCmd = function(t2, e2, n2) {
      var r2 = e2.toUpperCase(), i2 = a[r2];
      if (t2 && null == i2) {
        var h2 = u[r2];
        if (null != h2 && (i2 = a[h2.toUpperCase()]), null == i2) return g.MxUiVue.isNull() ? console.log(d.MxFun.formatString('未知命令"{0}"', e2)) : g.MxUiVue.acutPrintf('未知命令"{0}"。\n命令:', e2), false;
      }
      if (!i2) return false;
      t2.endPanCommand(), t2.getTempMarkDraw().clear(false);
      var w = o.indexOf(i2.cmd);
      -1 < w && o.splice(w, 1), l = !(s = 0), o.push(i2.cmd), 0 == (i2.flag & f.MxType.MxCommandFlag.MCRX_CMD_NO_RECORD_PRVCMD) && (c = i2.cmd);
      var b = i2.fun;
      t2 && 0 == (i2.flag & f.MxType.MxCommandFlag.MCRX_CMD_TRANSPARENT) && g.MxUiVue.acutPrintf("{0}\n", i2.cmd), m.MxJigCmdManager.stopCmd(m.MxJigCmdManager.DetailedResult.kNewCommadIn), t2.callEvent("commandWillStart", { cmd: i2.cmd }), t2.getMcObject().fireStartRunCommand(i2.cmd, i2.flag);
      var M = t2.sysVariable().getSysVarNumber("GETPOINTSTATUS");
      if (M &= ~m.MxJigCmdManager.GETPOINTSTATUS.OsModeSValidLastPoint, M &= ~m.MxJigCmdManager.GETPOINTSTATUS.OsModeSValidLastMovePoint, t2.sysVariable().setSysVarNumber("GETPOINTSTATUS", M), p = false, t2 && 0 == (i2.flag & f.MxType.MxCommandFlag.MCRX_CMD_NO_CLEAR_SELECT)) v(t2);
      else if (0 == (i2.flag & f.MxType.MxCommandFlag.MCRX_JIG_CMD_END_NO_CLEAR_SELECT) && (p = true), t2 && 0 == (i2.flag & f.MxType.MxCommandFlag.MCRX_CMD_NO_CLEAR_SELECT_GRIP_POINT)) {
        var _ = false;
        t2.getMxDatabase().getGripManager().removeAllGrips() && (_ = true), t2.isValidMcObject() && t2.getMcObject().getGripManager().clearGripDisplay() && (_ = true), _ && t2.updateDisplay();
      }
      try {
        b(n2);
      } catch (t3) {
        console.log("mx: run cmd error"), console.log(t3);
      }
      return t2.getMcObject().fireEndRunCommand(i2.cmd, i2.flag), t2 && (m.MxJigCmdManager.isRunning() || (g.MxUiVue.restoreCmdStatus(), x(t2)), t2.updateDisplay(), y.MxDrawData.m_isAutoResetRenderer || t2.resetRenderer()), true;
    }, i.addCommand = function(t2, e2, n2) {
      null == n2 && (n2 = f.MxType.MxCommandFlag.MCRX_CMD_MODAL);
      var r2 = t2.toUpperCase();
      a[r2] = { fun: e2, cmd: t2, flag: n2 };
    };
  }, { "../MxDrawData": 22, "../MxFun": 27, "../MxType": 39, "../UI/MxUiVue": 65, "./MxJigCmdManager": 54 }], 49: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDrawObjectOsnap = n.McDbLine = n.McDbCurve = n.McDbEntity = n.McDbType = void 0;
    var a, o, s = t("three"), l = t("../MxThreeJS"), c = t("../MxDrawData"), u = t("./MxJigCmdManager"), h = t("./McEdJigOsnap");
    (o = a || (n.McDbType = a = {}))[o.kInValid = 0] = "kInValid", o[o.kLine = 1] = "kLine";
    var p = (d.prototype.getType = function() {
      return this.m_type;
    }, d);
    function d() {
      this.m_type = a.kInValid;
    }
    n.McDbEntity = p;
    var f, m = (i(g, f = p), g);
    function g() {
      return null !== f && f.apply(this, arguments) || this;
    }
    n.McDbCurve = m;
    var y, v = (i(x, y = m), x);
    function x() {
      var t2 = y.call(this) || this;
      return t2.m_type = a.kLine, t2;
    }
    n.McDbLine = v;
    var w = (b.prototype.getBlobHead = function(t2, e2) {
      var n2 = {};
      return n2.type = t2.getInt32(e2, true), e2 += 4, n2.ver = t2.getInt32(e2, true), e2 += 4, n2.databaseIndex = t2.getInt32(e2, true), e2 += 4, n2.nOffset = e2, n2;
    }, b.prototype.clearData = function() {
      this.threejsObjects = new s.Object3D();
    }, b.prototype.calculateDistance = function(t2, e2, n2) {
      var r2 = new s.Vector3().subVectors(e2, t2), i2 = new s.Vector3().subVectors(n2, t2), a2 = r2.clone().normalize(), o2 = i2.clone().normalize(), l2 = a2.dot(o2), c2 = new s.Vector3().subVectors(n2, e2), u2 = new s.Vector3().subVectors(t2, e2), h2 = c2.clone().normalize(), p2 = u2.clone().normalize();
      if (0 < h2.dot(p2) && 0 < l2) {
        var d2 = Math.sqrt(1 - l2 * l2), f2 = t2.distanceTo(n2), m2 = f2 * d2, g2 = f2 * l2, y2 = r2.clone().normalize().multiplyScalar(g2), v2 = t2.clone().add(y2), x2 = r2.clone().normalize().multiplyScalar(200 + g2);
        return { pt1: t2, pt2: e2, pt: n2, distance: m2, targetPt: v2, warningPt: t2.clone().add(x2) };
      }
      return null;
    }, b.prototype.getOsnapData = function(t2, e2) {
      if (this.threejsObjects) {
        var n2 = new s.Raycaster(), r2 = c.MxDrawData.m_dInputRectWidth;
        n2.linePrecision = this.mxObj.screenCoordLong2World(r2);
        var i2 = this.mxObj.getCanvas(), o2 = i2.clientWidth, l2 = i2.clientHeight, p2 = this.mxObj.screenCoord2World(t2.x, t2.y);
        p2.z = 0, t2 = new s.Vector2(t2.x / o2 * 2 - 1, -t2.y / l2 * 2 + 1), n2.setFromCamera(t2, this.mxObj.getCamera());
        var d2 = n2.intersectObjects(this.threejsObjects.children, true), f2 = this.mxObj.getSysVarLong("OSMODE"), m2 = /* @__PURE__ */ new Map();
        if (d2.length) for (var g2 = 0; g2 < d2.length; g2++) {
          var y2 = d2[g2];
          if (y2.object.userData && y2.object.userData.obj.getType() == a.kLine) {
            var v2 = y2.object.userData.obj;
            if (f2 & h.MxOsnapDefine.OsModeEnd) {
              var x2 = p2.distanceTo(v2.pt1);
              v2.pt1.type = u.MxJigCmdManager.OsnapMode.kOsModeEnd, m2.set(x2, v2.pt1);
              var w2 = p2.distanceTo(v2.pt2);
              v2.pt2.type = u.MxJigCmdManager.OsnapMode.kOsModeEnd, m2.set(w2, v2.pt2);
            }
            if (f2 & h.MxOsnapDefine.OsModeNear && (!v2.bulge || 0 == v2.bulge)) {
              var b2 = this.calculateDistance(v2.pt1, v2.pt2, p2);
              b2 && (b2.targetPt.type = u.MxJigCmdManager.OsnapMode.kOsModeNear, m2.set(b2.distance, b2.targetPt));
            }
          }
        }
        if (m2.size) {
          var M = this.mxObj.screenCoordLong2World(r2), _ = Array.from(m2);
          _.sort(function(t3, e3) {
            return t3[0] - e3[0];
          }), _[0][0] < M && e2(_[0][1], _[0][1].type);
        }
      }
    }, b.prototype.mxWebEntitysData = function(t2, e2) {
      var n2 = this.getBlobHead(t2, 0);
      t2.getInt32(n2.nOffset, true), n2.nOffset += 4;
      var r2 = t2.getInt32(n2.nOffset, true);
      n2.nOffset += 4;
      var i2 = t2.getInt32(n2.nOffset, true);
      if (n2.nOffset += 4, 1 < i2) console.log("mx:error mxfun.js version is old!");
      else {
        var a2 = t2.getInt32(n2.nOffset, true);
        if (n2.nOffset += 4, a2 == n2.nOffset) {
          this.threejsObjects = new s.Object3D();
          for (var o2 = 0; o2 < r2; o2++) {
            var c2 = t2.getInt8(n2.nOffset);
            n2.nOffset += 1;
            var u2 = t2.getInt32(n2.nOffset, true);
            if (n2.nOffset += 4, 1 == c2) {
              var h2 = t2.getFloat32(n2.nOffset, true);
              n2.nOffset += 4;
              var p2 = t2.getFloat32(n2.nOffset, true);
              n2.nOffset += 4;
              var d2 = t2.getFloat32(n2.nOffset, true);
              n2.nOffset += 4;
              var f2 = t2.getFloat32(n2.nOffset, true);
              n2.nOffset += 4, (_ = new v()).pt1 = new s.Vector3(h2, p2, 0), _.pt2 = new s.Vector3(d2, f2, 0), (T = l.MxThreeJS.createLine(_.pt1, _.pt2, 16777215)).userData.obj = _, this.threejsObjects.add(T);
            } else if (2 == c2) {
              var m2 = t2.getInt8(n2.nOffset);
              n2.nOffset += 1;
              var g2 = t2.getInt32(n2.nOffset, true);
              n2.nOffset += 4;
              for (var y2 = new s.Vector3(), x2 = 0, w2 = null, b2 = 0; b2 < g2; b2++) {
                var M = new s.Vector3();
                M.x = t2.getFloat32(n2.nOffset, true), n2.nOffset += 4, M.y = t2.getFloat32(n2.nOffset, true), n2.nOffset += 4;
                var _, T, C = t2.getFloat32(n2.nOffset, true);
                n2.nOffset += 4, 0 < b2 && ((_ = new v()).pt1 = y2.clone(), _.pt2 = M.clone(), _.bulge = C, (T = l.MxThreeJS.createLine(_.pt1, _.pt2, 16777215)).userData.obj = _, this.threejsObjects.add(T)), y2 = M, x2 = C, 0 == b2 && (w2 = M);
              }
              m2 && 2 < g2 && ((_ = new v()).pt1 = w2.clone(), _.pt2 = y2.clone(), _.bulge = x2, (T = l.MxThreeJS.createLine(_.pt1, _.pt2, 16777215)).userData.obj = _, this.threejsObjects.add(T));
            } else console.log("mx:error mxWebEntitysData type"), n2.nOffset = n2.nOffset - 5 + u2;
          }
        } else console.log("mx: mxWebEntitysData size assert(0)");
      }
    }, b);
    function b(t2) {
      this.threejsObjects = null, this.mxObj = null, this.mxObj = t2;
    }
    n.MxDrawObjectOsnap = w;
  }, { "../MxDrawData": 22, "../MxThreeJS": 37, "./McEdJigOsnap": 43, "./MxJigCmdManager": 54, three: 19 }], 50: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MxEntSelJig = void 0;
    var a, o = t("./MxJig"), s = t("./MxJigCmdManager"), l = t("../UI/MxUiVue"), c = t("../MrxDbgUtils"), u = (i(h, a = o.McEdJigCommand), h.prototype.sampler = function() {
      var t2 = s.MxJigCmdManager.InType.kGetBegan, e2 = this.acquirePoint(t2);
      return e2.status == s.MxJigCmdManager.DragStatus.kNormal && (this.point = e2.pt), e2.status;
    }, h.prototype.done = function(t2) {
      if (t2 == s.MxJigCmdManager.DragStatus.kNormal) {
        var e2 = this;
        c.MrxDbgUtils.findEntAtPoint(this.getMxObject(), this.point, this.filter).then(function(t3) {
          e2.callRet(t3);
        });
      } else this.callRet([]);
      return s.MxJigCmdManager.DoneStatius.kExitCommand;
    }, h.prototype.onStartCommand = function() {
      l.MxUiVue.setCursorType(l.MxUiVue.CursorType.kRect), a.prototype.onStartCommand.call(this);
    }, h.prototype.onExitCommand = function() {
      l.MxUiVue.setCursorType(l.MxUiVue.CursorType.kNormal), s.MxJigCmdManager.isWaitCmdNull() && l.MxUiVue.restoreCmdStatus(), a.prototype.onExitCommand.call(this, true);
    }, h.prototype.upDisplay = function() {
    }, h);
    function h() {
      return null !== a && a.apply(this, arguments) || this;
    }
    n.MxEntSelJig = u;
  }, { "../MrxDbgUtils": 20, "../UI/MxUiVue": 65, "./MxJig": 53, "./MxJigCmdManager": 54 }], 51: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxGridTrace = void 0;
    var r = t("three"), i = t("./MxJigCmdManager"), a = t("../MxFun"), o = t("../MxDrawData"), s = t("../MxThreeJS"), l = (c.prototype.ClearDynDrawEntity = function() {
      for (var t2 = this.m_mxJig.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw(), e2 = this.m_vecDynDrawEntity.length, n2 = 0; n2 < e2; n2++) a.MxFun.removeThreejsObject(this.m_vecDynDrawEntity[n2], t2);
      this.m_vecDynDrawEntity = [];
    }, c.prototype.GetSanpValue = function(t2, e2) {
      var n2 = t2 % e2;
      return 0 <= n2 ? e2 / 2 < n2 ? t2 += e2 - n2 : t2 -= n2 : e2 / 2 < (n2 = Math.abs(n2)) ? t2 -= e2 - n2 : t2 += n2, t2;
    }, c.prototype.CreteTracePoint = function(t2, e2) {
      var n2 = this.m_mxJig.getMxObject(), r2 = n2.getTheTempDrawContainer_SmallCoord_JigDraw();
      e2 /= 2;
      var i2 = s.MxThreeJS.createLine(n2.toSmallcoord2(t2.x + e2, t2.y + e2, 0), n2.toSmallcoord2(t2.x - e2, t2.y - e2, 0), 16711680);
      r2.add(i2), this.m_vecDynDrawEntity.push(i2);
      var a2 = s.MxThreeJS.createLine(n2.toSmallcoord2(t2.x - e2, t2.y + e2, 0), n2.toSmallcoord2(t2.x + e2, t2.y - e2, 0), 16711680);
      r2.add(a2), this.m_vecDynDrawEntity.push(a2);
    }, c.prototype.isTrace = function() {
      return this.m_isTrace && 0 != this.m_mxJig.getMxObject().getSysVarLong("GRIDMODE");
    }, c.prototype.MouseMove = function(t2) {
      var e2 = this.m_mxJig.getMxObject();
      if (e2.getMcObject().isValid()) {
        if (this.ClearDynDrawEntity(), this.m_isValidTracePoint = false, this.isTrace()) {
          var n2 = e2.getSysVarPoint("SNAPUNIT");
          if (!(n2.x < 1e-6 || n2.y < 1e-6)) {
            t2.z = 0;
            var i2 = new r.Vector3();
            i2.x = this.GetSanpValue(t2.x, n2.x), i2.y = this.GetSanpValue(t2.y, n2.y);
            var a2 = e2.viewCoordLong2Cad(o.MxDrawData.m_dInputRectWidth), s2 = 2 * a2;
            i2.distanceTo(t2) < s2 && (this.m_isValidTracePoint = true, this.m_ptTracePoint = i2, this.CreteTracePoint(i2, a2));
          }
        }
      } else this.m_isTrace = false;
    }, c.prototype.Init = function() {
      var t2 = this.m_mxJig.getMxObject();
      t2.getMcObject().isValid() ? (this.m_isValidTracePoint = false, this.m_isTrace = true, t2.sysVariable().getSysVarNumber("GETPOINTSTATUS") & i.MxJigCmdManager.GETPOINTSTATUS.OsModeGridSnapTempDisable && (this.m_isTrace = false), this.m_mxJig.isDisableGridTrace() && (this.m_isTrace = false)) : this.m_isTrace = false;
    }, c.prototype.GetTracePoint = function() {
      if (this.isTrace()) return this.m_isValidTracePoint ? this.m_ptTracePoint : void 0;
    }, c.prototype.ClearDisplay = function() {
      this.ClearDynDrawEntity();
    }, c.prototype.ReSetTempDisplay = function() {
      this.ClearDynDrawEntity(), this.m_isValidTracePoint = false;
    }, c);
    function c(t2) {
      this.m_vecDynDrawEntity = [], this.m_ptTracePoint = new r.Vector3(), this.m_isValidTracePoint = false, this.m_isTrace = false, this.m_mxJig = null, this.m_mxJig = t2;
    }
    n.MxGridTrace = l;
  }, { "../MxDrawData": 22, "../MxFun": 27, "../MxThreeJS": 37, "./MxJigCmdManager": 54, three: 19 }], 52: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MxIntelliSelectJig = void 0;
    var a, o = t("three"), s = t("./MxJig"), l = t("./MxJigCmdManager"), c = t("../MxThreeJS"), u = t("../MxTools"), h = (i(p, a = s.McEdJigCommand), p.prototype.sampler = function() {
      var t2 = l.MxJigCmdManager.InType.kGetBegan, e2 = this.acquirePoint(t2);
      return e2.status == l.MxJigCmdManager.DragStatus.kNormal && (this.m_pt2 = e2.pt), e2.status;
    }, p.prototype.getTypeName = function() {
      return "MxIntelliSelect";
    }, p.prototype.done = function(t2) {
      if (t2 == l.MxJigCmdManager.DragStatus.kNormal) {
        var e2 = this.getMxObject();
        e2.getMxDatabase().getGripManager().doWindowsSelect(this.m_pt1, this.m_pt2, this.m_isRemoveSelect), e2.getMcObject().getGripManager().doRangeSelect(this.m_pt1, this.m_pt2, this.m_isRemoveSelect);
      }
      return l.MxJigCmdManager.DoneStatius.kExitCommand;
    }, p.prototype.upDisplay = function() {
      var t2 = this.getMxObject(), e2 = this.m_pt1.clone(), n2 = this.m_pt2.clone(), r2 = new o.Vector3(this.m_pt1.x, this.m_pt2.y, this.m_pt2.z), i2 = new o.Vector3(this.m_pt2.x, this.m_pt1.y, this.m_pt2.z);
      if (!u.MxTools.IsZero(t2.getViewAngle())) {
        var a2 = new o.Matrix4();
        a2.makeRotationZ(t2.getViewAngle());
        var s2 = new o.Matrix4().makeTranslation(e2.x, e2.y, 0).multiply(a2).multiply(new o.Matrix4().makeTranslation(-e2.x, -e2.y, 0));
        e2.applyMatrix4(s2), n2.applyMatrix4(s2), r2 = new o.Vector3(e2.x, n2.y, n2.z), i2 = new o.Vector3(n2.x, e2.y, n2.z);
        var l2 = new o.Matrix4();
        l2.getInverse(s2), e2.applyMatrix4(l2), n2.applyMatrix4(l2), r2.applyMatrix4(l2), i2.applyMatrix4(l2);
      }
      e2 = t2.toSmallcoord(e2), n2 = t2.toSmallcoord(n2), r2 = t2.toSmallcoord(r2), i2 = t2.toSmallcoord(i2);
      var h2 = [];
      h2.push(e2), h2.push(r2), h2.push(n2), h2.push(i2), h2.push(e2);
      var p2 = null, d = 65280, f = t2.automaticInversionColor(16777215);
      if (n2.x > e2.x) p2 = c.MxThreeJS.createLines(h2, f), d = 255;
      else {
        var m = t2.screenCoordLong2Smallcoord(3);
        p2 = c.MxThreeJS.createDashedLines(h2, f, 2 * m, m);
      }
      var g = [];
      g.push(e2), g.push(r2), g.push(n2), g.push(e2), g.push(n2), g.push(i2);
      var y = c.MxThreeJS.createTriangle(g, d, 0.27);
      this.drawEntity(y, 30, true), this.drawEntity(p2, 31, true);
    }, p);
    function p(t2, e2) {
      void 0 === e2 && (e2 = false);
      var n2 = a.call(this) || this;
      return n2.m_isRemoveSelect = false, n2.m_pt1 = t2, n2.m_pt2 = t2, n2.m_isRemoveSelect = e2, n2;
    }
    n.MxIntelliSelectJig = h;
  }, { "../MxThreeJS": 37, "../MxTools": 38, "./MxJig": 53, "./MxJigCmdManager": 54, three: 19 }], 53: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.McEdJigCommand = n.MxDynamicInput = void 0;
    var r = t("three"), i = t("../MxFun"), a = t("./MxJigCmdManager"), o = t("../MxManager"), s = t("../MxTools"), l = t("../UI/MxUiVue"), c = t("./McEdJigOsnap"), u = t("./McEdJigDynamicTrace"), h = t("./MxPolarAxisTrace"), p = t("./MxGridTrace"), d = t("../MxThreeJS"), f = t("../MxDrawData"), m = t("./MxOffsetArrow"), g = (y.prototype.getLockValuesMap = function() {
      return this.m_isShowDynInput ? l.MxUiVue.DynamicInput_getLockValuesMap() : /* @__PURE__ */ new Map();
    }, y.prototype.getFocusIndex = function() {
      return this.m_isShowDynInput ? this.m_iFocusIndex : -1;
    }, y.prototype.ClearDynDrawEntity = function() {
      for (var t2 = this.m_jig.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw(), e2 = this.m_vecDynDrawEntity.length, n2 = 0; n2 < e2; n2++) i.MxFun.removeThreejsObject(this.m_vecDynDrawEntity[n2], t2);
      this.m_vecDynDrawEntity = [];
    }, y.prototype.setGetNumber = function(t2) {
      this.m_isGetNumber = t2;
    }, y.prototype.ClearDisplay = function() {
      this.ClearDynDrawEntity();
    }, y.prototype.onKeyEcsDown = function() {
      return this.m_isShowDynInput && this.m_isInputStatus ? (this.m_isInputStatus = false, l.MxUiVue.OnMxEvent({ name: "dynInputReSet" }), 1) : 0;
    }, y.prototype.getCurrentInputPointCoordinates = function(t2) {
      if (!this.m_isShowDynInput) return false;
      var e2 = l.MxUiVue.DynamicInput_getLockValuesMap();
      if (0 == e2.size) return false;
      var n2, i2 = t2.clone(), o2 = this.m_jig.getMxObject();
      if (l.MxUiVue.DynamicInput_getType() != a.MxJigCmdManager.DynamicInputType.kDistanceInput) return l.MxUiVue.DynamicInput_getType() == a.MxJigCmdManager.DynamicInputType.kXYCoordInput && (1 != e2.size ? 2 == e2.size && e2.has(0) && e2.has(1) ? (i2.x = s.MxTools._tstof(e2.get(0)), i2.y = s.MxTools._tstof(e2.get(1)), i2) : (console.log("Mx:error index:", e2), false) : (u2 = (n2 = e2.entries().next().value)[0], h2 = s.MxTools._tstof(n2[1]), 0 == u2 ? (i2.x = h2, i2) : 1 == u2 ? (i2.y = h2, i2) : (console.log("Mx:error index:", u2), false)));
      if (!(o2.sysVariable().getSysVarNumber("GETPOINTSTATUS") & a.MxJigCmdManager.GETPOINTSTATUS.OsModeSValidLastPoint)) return false;
      var c2 = o2.sysVariable().getSysVarPoint("LASTPOINT");
      if (1 == e2.size) {
        var u2 = (n2 = e2.entries().next().value)[0], h2 = s.MxTools._tstof(n2[1]);
        if (0 == u2) return !((y2 = i2.clone().sub(c2)).length() < 1e-7) && (y2.normalize(), y2.multiplyScalar(h2), c2.clone().add(y2));
        if (1 != u2) return console.log("Mx:error index:", u2), false;
        var p2 = h2;
        if (!(o2.sysVariable().getSysVarNumber("GETPOINTSTATUS") & a.MxJigCmdManager.GETPOINTSTATUS.OsModeSValidLastPoint)) return false;
        var d2 = o2.sysVariable().getSysVarPoint("LASTPOINT");
        return !((y2 = i2.clone().sub(d2)).length() < 1e-7) && (p2 = p2 * Math.PI / 180, y2.dot(new r.Vector3(0, 1, 0)) < 0 && (p2 = -p2), (f2 = new r.Vector3(y2.length(), 0, 0)).applyAxisAngle(new r.Vector3(0, 0, 1), p2), d2.clone().add(f2));
      }
      if (2 != e2.size) return console.log("Mx:error index:", e2), false;
      if (!e2.has(0) || !e2.has(1)) return console.log("Mx:error index:", e2), false;
      if (!(o2.sysVariable().getSysVarNumber("GETPOINTSTATUS") & a.MxJigCmdManager.GETPOINTSTATUS.OsModeSValidLastPoint)) return false;
      var f2, m2 = s.MxTools._tstof(e2.get(0)), g2 = (p2 = s.MxTools._tstof(e2.get(1)), o2.sysVariable().getSysVarPoint("LASTPOINT")), y2 = i2.clone().sub(g2);
      return p2 = p2 * Math.PI / 180, y2.dot(new r.Vector3(0, 1, 0)) < 0 && (p2 = -p2), (f2 = new r.Vector3(m2, 0, 0)).applyAxisAngle(new r.Vector3(0, 0, 1), p2), g2.clone().add(f2);
    }, y.prototype.onKeyDonw = function(t2) {
      if (!this.m_isShowDynInput) return 0;
      if (27 == t2) return 0;
      if (16 == t2 || 17 == t2 || 18 == t2) return 0;
      if (9 == t2) return this.m_isInputStatus = false, 0;
      if (32 != t2 && 13 != t2) return this.m_isInputStatus = true, 0;
      if (this.m_isInputStatus && l.MxUiVue.DynamicInput_isShow()) {
        if (this.m_isGetNumber || l.MxUiVue.DynamicInput_getType() == a.MxJigCmdManager.DynamicInputType.kDistanceInput) {
          var e2 = l.MxUiVue.DynamicInput_getFocusValue();
          this.m_iFocusIndex = l.MxUiVue.DynamicInput_getFocusIndex(), l.MxUiVue.setCmdText(e2);
        } else if (l.MxUiVue.DynamicInput_getType() == a.MxJigCmdManager.DynamicInputType.kXYCoordInput) {
          var n2 = l.MxUiVue.DynamicInput_getValue1(), r2 = l.MxUiVue.DynamicInput_getValue2(), o2 = l.MxUiVue.DynamicInput_getLockValuesMap();
          o2.has(0) && (n2 = o2.get(0)), o2.has(1) && (r2 = o2.get(1)), e2 = l.MxUiVue.DynamicInput_getFocusValue();
          var c2 = l.MxUiVue.DynamicInput_getFocusIndex(), u2 = "";
          0 != e2.length ? u2 = s.MxTools.IsNumerical(e2) ? 0 == c2 ? i.MxFun.formatString("{0},{1}", e2, r2) : i.MxFun.formatString("{0},{1}", n2, e2) : e2 : s.MxTools.IsNumerical(n2) && s.MxTools.IsNumerical(r2) && (u2 = i.MxFun.formatString("{0},{1}", n2, r2)), this.m_iFocusIndex = c2, l.MxUiVue.setCmdText(u2);
        }
      }
      return this.m_isInputStatus = false, 0;
    }, y.prototype.isInputStatus = function() {
      return this.m_isInputStatus;
    }, y.prototype.isTruncatedInput = function() {
      return this.m_isShowDynInput && this.m_isInputStatus;
    }, y.prototype.initDynInput = function(t2) {
      this.m_jig = t2;
      var e2 = this.m_jig.getMxObject();
      if (this.m_iFocusIndex = -1, this.m_isShowDynInput = false, !l.MxUiVue.isNull()) {
        l.MxUiVue.DynamicInput_clearLockValuesMap(), l.MxUiVue.DynamicInput_setType(this.m_dynType);
        var n2 = e2.sysVariable().getSysVarNumber("GETPOINTSTATUS");
        n2 & a.MxJigCmdManager.GETPOINTSTATUS.OsModeSValidLastPoint && l.MxUiVue.SetLasetPoint(e2.sysVariable().getSysVarPoint("LASTPOINT")), this.m_dynType == a.MxJigCmdManager.DynamicInputType.kAutoInput && (n2 & a.MxJigCmdManager.GETPOINTSTATUS.OsModeSValidLastPoint ? l.MxUiVue.DynamicInput_setType(a.MxJigCmdManager.DynamicInputType.kDistanceInput) : l.MxUiVue.DynamicInput_setType(a.MxJigCmdManager.DynamicInputType.kXYCoordInput));
      }
    }, y.prototype.setFocus = function(t2) {
      l.MxUiVue.OnMxEvent({ name: "dynInputSetFocus", param: { isFocus: t2 } });
    }, y.prototype.exitDynInput = function() {
      l.MxUiVue.DynamicInput_setShow(false), l.MxUiVue.DynamicInput_upDisplay();
    }, y.prototype.isShow = function() {
      return l.MxUiVue.DynamicInput_isShow();
    }, y.prototype.drawSolidPoint = function(t2, e2, n2, r2) {
      var i2 = d.MxThreeJS.createPoint(r2.toSmallcoord(t2), this.m_iDashedLineLenColor, e2);
      n2.add(i2), this.m_vecDynDrawEntity.push(i2);
    }, y.prototype.drawDashedLine = function(t2, e2, n2, r2, i2, a2) {
      var o2 = d.MxThreeJS.createDashedLine(a2.toSmallcoord2(t2.x, t2.y, t2.z), a2.toSmallcoord2(e2.x, e2.y, e2.z), this.m_iDashedLineLenColor, r2, r2);
      n2.add(o2), this.m_vecDynDrawEntity.push(o2);
    }, y.prototype.worldDrawDistanceInput = function(t2, e2) {
      var n2 = this.m_jig.getMxObject();
      if (n2.getMcObject().isValid() && ((t2 = t2.clone()).z = 0, (e2 = e2.clone()).z = 0, !(n2.docCoordLong2Screen(t2.distanceTo(e2)) < 20))) {
        var i2 = n2.getTheTempDrawContainer_SmallCoord_JigDraw(), a2 = n2.viewCoordLong2Cad(this.m_dashedLineLen), o2 = t2.clone().sub(e2), s2 = o2.clone();
        s2.applyAxisAngle(new r.Vector3(0, 0, 1), 0.5 * Math.PI), s2.normalize(), s2.multiplyScalar(n2.viewCoordLong2Cad(50));
        var l2 = new r.Vector3(0, 1, 0), c2 = new r.Vector3(1, 0, 0);
        s2.dot(l2) < 0 && s2.multiplyScalar(-1), o2.dot(l2) < 0 && s2.multiplyScalar(-1), o2.dot(c2) < 0 && s2.multiplyScalar(-1);
        var u2 = e2.clone().add(s2), h2 = t2.clone().add(s2), p2 = e2.distanceTo(t2), f2 = new r.Vector3(e2.x + p2, e2.y, e2.z);
        this.drawSolidPoint(e2.clone().add(s2), 3, i2, n2), this.drawSolidPoint(t2.clone().add(s2), 3, i2, n2), this.drawSolidPoint(f2, 3, i2, n2), this.drawDashedLine(u2, h2, i2, a2, a2, n2), this.drawDashedLine(e2, u2, i2, a2, a2, n2), this.drawDashedLine(t2, h2, i2, a2, a2, n2), this.drawDashedLine(e2, f2, i2, a2, a2, n2);
        var m2 = t2.clone().sub(e2), g2 = 0;
        1e-6 < m2.length() && (g2 = m2.angleTo(new r.Vector3(1, 0, 0)));
        var y2 = 0, v2 = g2;
        m2.dot(l2) < 0 && (y2 = 2 * Math.PI - g2, v2 = g2);
        var x2 = d.MxThreeJS.createDashedArc(n2.toSmallcoord(e2), p2, y2, v2, this.m_iDashedLineLenColor, a2, a2);
        i2.add(x2), this.m_vecDynDrawEntity.push(x2);
      }
    }, y.prototype.upDynInput = function() {
      if (!l.MxUiVue.isNull()) {
        var t2 = this.m_jig.getMxObject(), e2 = false;
        if (e2 = !this.m_jig.isDisableDynInput() && 1 == t2.getSysVarLong("DYNINPUT"), f.MxDrawData.m_isForbiddenDynInput && (e2 = false), i.MxFun.isPC() || (e2 = false), l.MxUiVue.DynamicInput_setShow(e2), this.m_isShowDynInput = e2) {
          if (l.MxUiVue.DynamicInput_setTip(l.MxUiVue.getCmdTip()), a.MxJigCmdManager.getAcquireStatus() == a.MxJigCmdManager.AcquireStatus.kMove) {
            var n2 = a.MxJigCmdManager.getAcquirePoint();
            if (l.MxUiVue.DynamicInput_setPos(t2.currentCoord2Screen(n2.x, n2.y, n2.z)), l.MxUiVue.DynamicInput_getType() == a.MxJigCmdManager.DynamicInputType.kXYCoordInput) l.MxUiVue.DynamicInput_setValue1(n2.x.toFixed(3)), l.MxUiVue.DynamicInput_setValue2(n2.y.toFixed(3));
            else if (l.MxUiVue.DynamicInput_getType() == a.MxJigCmdManager.DynamicInputType.kDistanceInput) {
              var o2 = a.MxJigCmdManager.getAcquirePoint(), s2 = l.MxUiVue.GetLasetPoint();
              this.worldDrawDistanceInput(o2, s2);
              var c2 = new r.Vector3(s2.x + 0.5 * (o2.x - s2.x), s2.y + 0.5 * (o2.y - s2.y), s2.z + 0.5 * (o2.z - s2.z)), u2 = o2.clone().sub(s2);
              u2.length() < 1e-8 && (u2 = new r.Vector3(1, 0, 0));
              var h2 = u2.clone();
              h2.applyAxisAngle(new r.Vector3(0, 0, 1), 0.5 * Math.PI), h2.normalize(), h2.multiplyScalar(t2.viewCoordLong2Cad(50));
              var p2 = new r.Vector3(0, 1, 0), d2 = new r.Vector3(1, 0, 0);
              h2.dot(p2) < 0 && h2.multiplyScalar(-1), u2.dot(p2) < 0 && h2.multiplyScalar(-1), u2.dot(d2) < 0 && h2.multiplyScalar(-1), c2.add(h2);
              var m2 = s2.distanceTo(o2);
              l.MxUiVue.DynamicInput_setValue1(m2.toFixed(3)), l.MxUiVue.DynamicInput_setValue1Pos(t2.currentCoord2Screen(c2.x, c2.y, n2.z)), m2 = s2.distanceTo(o2);
              var g2 = s2.clone();
              g2.x += m2;
              var y2 = (c2 = new r.Vector3(g2.x + 0.5 * (o2.x - g2.x), g2.y + 0.5 * (o2.y - g2.y), g2.z + 0.5 * (o2.z - g2.z))).clone().sub(s2);
              y2.normalize(), y2.multiplyScalar(m2), c2 = s2.clone().add(y2);
              var v2 = o2.clone().sub(s2), x2 = 0;
              1e-6 < v2.length() && (x2 = v2.angleTo(new r.Vector3(1, 0, 0))), x2 = 180 * x2 / Math.PI, l.MxUiVue.DynamicInput_setValue2(x2.toFixed(3) + "°"), l.MxUiVue.DynamicInput_setValue2Pos(t2.currentCoord2Screen(c2.x, c2.y, n2.z));
            }
          }
          l.MxUiVue.DynamicInput_upDisplay();
        }
      }
    }, y.prototype.setDynamicInputType = function(t2) {
      this.m_dynType = t2;
    }, y.prototype.getDynamicInputType = function() {
      return this.m_dynType;
    }, y);
    function y(t2) {
      this.m_dynType = a.MxJigCmdManager.DynamicInputType.kAutoInput, this.m_isInputStatus = false, this.m_vecDynDrawEntity = [], this.m_dashedLineLen = 1.5, this.m_iDashedLineLenColor = 8421504, this.m_iFocusIndex = -1, this.m_isShowDynInput = false, this.m_isGetNumber = false, this.m_jig = t2, this.m_iDashedLineLenColor = f.MxDrawData.m_dynamicInputLineColor;
    }
    n.MxDynamicInput = g;
    var v = (x.prototype.getTypeName = function() {
      return "";
    }, x.prototype.isExit = function() {
      return this._isExit;
    }, x.prototype.isEnableOsnap = function() {
      return this.getOsnap().getIsEnableVar() && !c.McEdImpJigGlobalData.isTmpDisableOsmode();
    }, x.prototype.getDetailedResult = function() {
      return this.m_DetailedResult;
    }, x.prototype.clearGroup = function() {
      this.drawGroup && (this._mxObject.getTheTempDrawContainer().remove(this.drawGroup), this.drawGroup = null), this.drawGroup_smallCoord && (this._mxObject.getTheTempDrawContainer_SmallCoord_JigDraw().remove(this.drawGroup_smallCoord), this.drawGroup_smallCoord = null);
    }, x.prototype.getParentGroup = function() {
      return this.drawGroup || (this.drawGroup = new r.Group(), f.MxDrawData.m_isMapBox || (this.drawGroup.renderOrder = o.MxData.iGripRenderOrder), this._mxObject.getTheTempDrawContainer().add(this.drawGroup)), this.drawGroup;
    }, x.prototype.getParentGroup_smallCoord = function() {
      return this.drawGroup_smallCoord || (this.drawGroup_smallCoord = new r.Group(), f.MxDrawData.m_isMapBox || (this.drawGroup_smallCoord.renderOrder = o.MxData.iGripRenderOrder), this._mxObject.getTheTempDrawContainer_SmallCoord_JigDraw().add(this.drawGroup_smallCoord)), this.drawGroup_smallCoord;
    }, x.prototype.onExitCommand = function(t2) {
      t2 && this.m_dynInput.exitDynInput(), this.m_osnap.endDrag(), this.m_dynamicTrace.ClearDisplay(), this.m_polarAxisTrace.ClearDisplay(), this.m_offsetArrow.ClearDisplay(), this.m_gridTrace.ClearDisplay(), this.m_dynInput.ClearDisplay(), this.clearGroup(), this._mxObject.getMcObject().onJigCommandEnd(), this._mxObject.clearTempDrawContainer_SmallCoord_JigDraw();
    }, x.prototype.getOsnap = function() {
      return this.m_osnap;
    }, x.prototype.getOrtho = function() {
      return this.m_ortho;
    }, x.prototype.getDynamicTrace = function() {
      return this.m_dynamicTrace;
    }, x.prototype.getPolarAxisTrace = function() {
      return this.m_polarAxisTrace;
    }, x.prototype.getOffsetArrow = function() {
      return this.m_offsetArrow;
    }, x.prototype.getGridTrace = function() {
      return this.m_gridTrace;
    }, x.prototype.onGetOsnapData = function(t2) {
      this.m_dynamicTrace.OnDynamicTrace(t2.id, new r.Vector3(t2.ptsx, t2.ptsy, t2.ptsz), t2.osmode);
    }, x.prototype.isDisableDynInput = function() {
      return this.m_isDisableDynInput;
    }, x.prototype.setDisableDynInput = function(t2) {
      this.m_isDisableDynInput = t2;
    }, x.prototype.setDisableOsnap = function(t2) {
      this.m_isDisableOsnap = t2;
    }, x.prototype.setOffsetInputPostion = function(t2) {
      this.m_isOffsetInputPostion = t2;
    }, x.prototype.isOffsetInputPostion = function() {
      return this.m_isOffsetInputPostion;
    }, x.prototype.isDisableOsnap = function() {
      return this.m_isDisableOsnap;
    }, x.prototype.setDisableDynamicTrace = function(t2) {
      this.m_isDisableDynamicTrace = t2;
    }, x.prototype.isDisableDynamicTrace = function() {
      return this.m_isDisableDynamicTrace;
    }, x.prototype.setDisablePolarAxisTrace = function(t2) {
      this.m_isDisablePolarAxisTrace = t2;
    }, x.prototype.isDisablePolarAxisTrace = function() {
      return this.m_isDisablePolarAxisTrace;
    }, x.prototype.setDisableGridTrace = function(t2) {
      this.m_isDisableGridTrace = t2;
    }, x.prototype.isDisableGridTrace = function() {
      return this.m_isDisableGridTrace;
    }, x.prototype.setDisableOrthoTrace = function(t2) {
      this.m_isDisableOrtho = t2;
    }, x.prototype.isDisableOrthoTrace = function() {
      return this.m_isDisableOrtho;
    }, x.prototype.disableAllTrace = function(t2) {
      void 0 === t2 && (t2 = true), this.m_isDisableOsnap = t2, this.m_isDisableDynamicTrace = t2, this.m_isDisablePolarAxisTrace = t2, this.m_isDisableGridTrace = t2, this.m_isDisableOrtho = t2;
    }, x.prototype.onStartCommand = function() {
      this._isCancle = false, this._isExit = false, this.m_DetailedResult = a.MxJigCmdManager.DetailedResult.kUnknown, this.m_dynInput.initDynInput(this), this.m_osnap.startDrag(this.m_isOffsetInputPostion, this);
      var t2 = this._mxObject.getCurrentMousePostion();
      if (this._mxObject.isValidCurMousePostion()) {
        var e2 = this._mxObject.screenCoord2Current(t2.x, t2.y, 0);
        this.m_osnap.setPoint(e2);
      }
      this.m_dynamicTrace.Init(), this.m_polarAxisTrace.Init(), this.m_offsetArrow.Init(), this.m_gridTrace.Init(), this.m_ortho.Init(), a.MxJigCmdManager.doMouseMoveImp(void 0, i.MxFun.isPC()), this.m_dynInput.setFocus(true);
    }, x.prototype.getDynImput = function() {
      return this.m_dynInput;
    }, x.prototype.setMxObject = function(t2) {
      this._mxObject = t2;
    }, x.prototype.getMxObject = function() {
      return this._mxObject;
    }, x.prototype.setColor = function(t2) {
      this._iColor = t2;
    }, x.prototype.getColor = function() {
      return this._iColor;
    }, x.prototype.setDynamicInputType = function(t2) {
      this.m_dynInput.setDynamicInputType(t2);
    }, x.prototype.getDynamicInputType = function() {
      return this.m_dynInput.getDynamicInputType();
    }, x.prototype.createTriangle = function(t2, e2, n2) {
      var i2 = new r.MeshBasicMaterial({ color: this._iColor, side: r.DoubleSide }), a2 = new r.Geometry();
      a2.vertices.push(t2), a2.vertices.push(e2), a2.vertices.push(n2);
      var o2 = new r.Vector3(1, 1, 1), s2 = new r.Color(this._iColor), l2 = new r.Face3(0, 1, 2, o2, s2, 0);
      return a2.faces.push(l2), a2.computeFaceNormals(), a2.computeVertexNormals(), new r.Mesh(a2, i2);
    }, x.prototype.createPoint = function(t2) {
      var e2 = new r.Geometry();
      e2.vertices.push(t2);
      var n2 = new r.PointsMaterial({ color: this._iColor, size: 3 });
      return new r.Points(e2, n2);
    }, x.prototype.createLine = function(t2, e2) {
      var n2 = new r.Geometry(), i2 = new r.LineBasicMaterial({ color: this._iColor });
      return n2.vertices.push(t2, e2), new r.Line(n2, i2);
    }, x.prototype.drawReserve = function(t2) {
      this.m_isReserveDrawStatus = true, this.m_callReserveDrawAddEntity = t2, this.upDisplay(), this.m_isReserveDrawStatus = false, this.m_callReserveDrawAddEntity = null;
    }, x.prototype.drawMcDbEntity = function(t2, e2, n2) {
      var r2 = t2.getImp(), i2 = r2.GetObjectID();
      0 == i2 && t2.tempRelationObject(), this.m_isReserveDrawStatus ? this._mxObject.getMcObject().DrawEntity(r2, e2, n2) : this._mxObject.getMcObject().onJigDrawEntityDisplay(r2, e2, n2), 0 == i2 && t2.freeTempRelationObject();
    }, x.prototype.drawMcDbLine = function(t2, e2, n2, r2, i2, a2, o2) {
      this.m_isReserveDrawStatus ? this._mxObject.getMcObject().DrawLine(t2, e2, n2, r2, i2, a2, o2) : this._mxObject.getMcObject().onJigDrawEntityDisplay_line(t2, e2, n2, r2, i2, a2, o2);
    }, x.prototype.drawEntity = function(t2, e2, n2) {
      if (void 0 === n2 && (n2 = false), null != t2) if (this.m_isReserveDrawStatus) f.MxDrawData.m_isMapBox || (t2.renderOrder = null != e2 ? e2 : o.MxData.iDynJigRenderOrder), this._mxObject.addObject(t2), this.m_callReserveDrawAddEntity && this.m_callReserveDrawAddEntity(t2);
      else {
        var r2 = "MxDynDraw_" + this._DynNameId.toString();
        t2.name = r2, f.MxDrawData.m_isMapBox || (t2.renderOrder = null != e2 ? e2 : o.MxData.iDynJigRenderOrder), null == this._aryDynDrawObjectNamesId && (this._aryDynDrawObjectNamesId = new Array()), this._aryDynDrawObjectNamesId.push(this._DynNameId), this._DynNameId++, n2 ? this.getParentGroup_smallCoord().add(t2) : this.getParentGroup().add(t2);
      }
    }, x.prototype.floorPowerOfTwo = function(t2) {
      return Math.pow(2, Math.floor(Math.log(t2) / Math.LN2));
    }, x.prototype.makeTextSprite = function(t2, e2, n2, a2, o2) {
      var s2, l2 = document.createElement("canvas"), c2 = l2.getContext("2d"), u2 = i.MxFun.formatString("normal {0}px Arial", "256");
      c2.font = u2;
      var h2 = c2.measureText(t2);
      s2 = 2 * this.floorPowerOfTwo(h2.width), l2.width = s2, l2.height = 256, c2.font = u2, c2.textAlign = "center", c2.textBaseline = "middle";
      var p2 = i.MxFun.formatString("#{0}", o2.toString(16));
      c2.fillStyle = p2, c2.fillText(t2, s2 / 2, 128);
      var d2 = new r.Texture(l2);
      d2.needsUpdate = true;
      var f2 = new r.SpriteMaterial({ map: d2 });
      f2.transparent = false, f2.rotation = a2;
      var m2 = new r.Sprite(f2);
      return m2.scale.set(s2 / 256 * n2, n2, 1), m2.position.set(e2.x, e2.y, 0), m2;
    }, x.prototype.drawText = function(t2, e2, n2, r2) {
      var i2 = this.makeTextSprite(t2, r2, e2, n2, this._iColor);
      this.drawEntity(i2);
    }, x.prototype.drawPoints = function(t2) {
      for (var e2 = 0; e2 < t2.length; e2++) {
        var n2 = new r.Geometry();
        n2.vertices.push(t2[e2]);
        var i2 = new r.PointsMaterial({ color: this._iColor, size: 3 }), a2 = new r.Points(n2, i2);
        this.drawEntity(a2);
      }
    }, x.prototype.drawPoint = function(t2) {
      var e2 = new r.Geometry();
      e2.vertices.push(t2);
      var n2 = new r.PointsMaterial({ color: this._iColor, size: 3 }), i2 = new r.Points(e2, n2);
      this.drawEntity(i2);
    }, x.prototype.drawPolyline = function(t2) {
      for (var e2 = new r.Geometry(), n2 = 0; n2 < t2.length; n2++) e2.vertices.push(t2[n2]);
      var i2 = new r.LineBasicMaterial({ color: this._iColor }), a2 = new r.Line(e2, i2);
      this.drawEntity(a2);
    }, x.prototype.drawSpline = function(t2) {
    }, x.prototype.drawCircle = function(t2, e2) {
      var n2 = new r.CircleGeometry(e2, 64, 3, 2 * Math.PI), i2 = new r.LineBasicMaterial({ color: this._iColor });
      n2.vertices.shift();
      var a2 = new r.LineLoop(n2, i2);
      a2.position.x = t2.x, a2.position.y = t2.y, a2.position.z = t2.z, this.drawEntity(a2);
    }, x.prototype.drawArc = function(t2, e2, n2, i2) {
      var a2 = new r.CircleGeometry(e2, 64, n2, i2), o2 = new r.LineBasicMaterial({ color: this._iColor });
      a2.vertices.shift();
      var s2 = new r.Line(a2, o2);
      s2.position.x = t2.x, s2.position.y = t2.y, s2.position.z = t2.z, this.drawEntity(s2);
    }, x.prototype.drawLine = function(t2, e2) {
      var n2 = new r.Geometry(), i2 = new r.LineBasicMaterial({ color: this._iColor });
      n2.vertices.push(t2, e2);
      var a2 = new r.Line(n2, i2);
      this.drawEntity(a2);
    }, x.prototype.removeDynDrawObject = function() {
      if (null != this._aryDynDrawObjectNamesId) {
        for (var t2 = 0; t2 < this._aryDynDrawObjectNamesId.length; t2++) {
          var e2, n2 = "MxDynDraw_" + this._aryDynDrawObjectNamesId[t2].toString();
          (e2 = this.getParentGroup().getObjectByName(n2)) ? i.MxFun.removeThreejsObject(e2, this.getParentGroup()) : (e2 = this.getParentGroup_smallCoord().getObjectByName(n2)) && i.MxFun.removeThreejsObject(e2, this.getParentGroup_smallCoord());
        }
        this._aryDynDrawObjectNamesId = [], this._mxObject.getMcObject().onJigClearDisplay();
      }
    }, x.prototype.acquirePoint = function(t2, e2) {
      void 0 === e2 && (e2 = true);
      var n2 = a.MxJigCmdManager.acquirePoint(t2, e2);
      return this._isExit = n2.exit, this._isExit && (this.m_DetailedResult = n2.DetailedResult), n2;
    }, x.prototype.acquireDist = function(t2, e2) {
      var n2 = a.MxJigCmdManager.acquireDist(t2, e2);
      return this._isExit = n2.exit, this._isExit && (this.m_DetailedResult = n2.DetailedResult), n2;
    }, x.prototype.acquireAngle = function(t2, e2) {
      var n2 = a.MxJigCmdManager.acquireAngle(t2, e2);
      return this._isExit = n2.exit, this._isExit && (this.m_DetailedResult = n2.DetailedResult), n2;
    }, x.prototype.acquireInt = function() {
      var t2 = a.MxJigCmdManager.acquireInt();
      return this._isExit = t2.exit, this._isExit && (this.m_DetailedResult = t2.DetailedResult), t2;
    }, x.prototype.acquireString = function() {
      var t2 = a.MxJigCmdManager.acquireString();
      return this._isExit = t2.exit, this._isExit && (this.m_DetailedResult = t2.DetailedResult), t2;
    }, x.prototype.acquireKeyword = function() {
      var t2 = a.MxJigCmdManager.acquireKeyword();
      return this._isExit = t2.exit, this._isExit && (this.m_DetailedResult = t2.DetailedResult), t2;
    }, x.prototype.notifyCancleExit = function(t2) {
      this.m_DetailedResult = t2, this._isCancle = true, this.removeDynDrawObject(), this.done(a.MxJigCmdManager.DragStatus.kCancel), this.onExitCommand(true), a.MxJigCmdManager.commandRunComplete(this);
    }, x.prototype.notifySampler = function() {
      var t2 = this.sampler();
      if (this.m_dynInput.upDynInput(), t2 == a.MxJigCmdManager.DragStatus.kNormal && (this.removeDynDrawObject(), this.upDisplay()), this._isExit) {
        var e2 = this.done(t2);
        this._isCancle || (e2 == a.MxJigCmdManager.DoneStatius.kContinueCommand ? (this._isExit = false, a.MxJigCmdManager.doMouseMoveImp(), l.MxUiVue.OnMxEvent({ name: "dynInputReSet" })) : (this.removeDynDrawObject(), a.MxJigCmdManager.commandRunComplete(this), this.onExitCommand(true)));
      }
      this._mxObject.updateDisplay();
    }, x.prototype.getCurrentMouseButton = function() {
      return a.MxJigCmdManager.getCurrentMouseButton();
    }, x.prototype.userInputControls = function() {
      return this._userInputContros;
    }, x.prototype.setUserInputControls = function(t2) {
      this._userInputContros = t2;
    }, x.prototype.abort = function(t2) {
      a.MxJigCmdManager.stopCmd(t2);
    }, x);
    function x() {
      this._isExit = false, this._aryDynDrawObjectNamesId = void 0, this._DynNameId = 1, this._iColor = 16777215, this._isCancle = false, this.m_isDisableDynInput = false, this.m_isDisableOsnap = false, this.m_isDisableDynamicTrace = false, this.m_isDisablePolarAxisTrace = false, this.m_isDisableGridTrace = false, this.m_isDisableOrtho = false, this.m_dynInput = new g(this), this.m_dynamicTrace = new u.McEdJigDynamicTrace(this), this.m_polarAxisTrace = new h.MxPolarAxisTrace(this), this.m_offsetArrow = new m.MxOffsetArrow(this), this.m_gridTrace = new p.MxGridTrace(this), this.m_osnap = new c.McEdJigOsnap(this), this.m_ortho = new c.McEdJigOrtho(this), this._userInputContros = a.MxJigCmdManager.UserInputControls.kNullResponseAccepted, this.m_isOffsetInputPostion = false, this.m_isReserveDrawStatus = false, this.m_callReserveDrawAddEntity = null, this.drawGroup = null, this.drawGroup_smallCoord = null, this._mxObject = null, this.m_DetailedResult = a.MxJigCmdManager.DetailedResult.kUnknown;
    }
    n.McEdJigCommand = v;
  }, { "../MxDrawData": 22, "../MxFun": 27, "../MxManager": 29, "../MxThreeJS": 37, "../MxTools": 38, "../UI/MxUiVue": 65, "./McEdJigDynamicTrace": 42, "./McEdJigOsnap": 43, "./MxGridTrace": 51, "./MxJigCmdManager": 54, "./MxOffsetArrow": 56, "./MxPolarAxisTrace": 57, three: 19 }], 54: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxJigCmdManager = n.AcquireReturn = void 0;
    var r, i = t("three"), a = t("../MxFun"), o = t("./MxJig"), s = t("../MxManager"), l = t("./MrxDbgUiPrPoint"), c = t("./MrxDbgUiPrBase"), u = t("../UI/MxUiVue"), h = t("../MxTools"), p = t("../MxString"), d = t("../MxWindowsEvent"), f = t("./McEdJigOsnap"), m = t("../MxDrawData"), g = t("./MrxDbgUiPrDist"), y = t("./MxCmdRunManager"), v = function() {
      this.status = r.DragStatus.kNoChange, this.exit = true, this.DetailedResult = r.DetailedResult.kUnknown, this.sKeyValue = "", this.dist = 0, this.iVal = 0, this.sValue = "", this.ang = 0;
    };
    n.AcquireReturn = v, function(t2) {
      var e2, n2, r2, x, w, b, M, _, T, C, S, D, E, O, A, P, R, L, I, k;
      (n2 = e2 = t2.UserInputControls || (t2.UserInputControls = {}))[n2.kGovernedByOrthoMode = 1] = "kGovernedByOrthoMode", n2[n2.kNullResponseAccepted = 2] = "kNullResponseAccepted", n2[n2.kDontEchoCancelForCtrlC = 4] = "kDontEchoCancelForCtrlC", n2[n2.kDontUpdateLastPoint = 8] = "kDontUpdateLastPoint", n2[n2.kNoDwgLimitsChecking = 16] = "kNoDwgLimitsChecking", n2[n2.kNoZeroResponseAccepted = 32] = "kNoZeroResponseAccepted", n2[n2.kNoNegativeResponseAccepted = 64] = "kNoNegativeResponseAccepted", n2[n2.kAccept3dCoordinates = 128] = "kAccept3dCoordinates", n2[n2.kAcceptMouseUpAsPoint = 256] = "kAcceptMouseUpAsPoint", n2[n2.kAnyBlankTerminatesInput = 512] = "kAnyBlankTerminatesInput", n2[n2.kInitialBlankTerminatesInput = 1024] = "kInitialBlankTerminatesInput", n2[n2.kAcceptOtherInputString = 2048] = "kAcceptOtherInputString", n2[n2.kGovernedByUCSDetect = 4096] = "kGovernedByUCSDetect", n2[n2.kNoZDirectionOrtho = 8192] = "kNoZDirectionOrtho", n2[n2.kSpacesInAccepted = 16384] = "kSpacesInAccepted", (x = r2 = t2.AcquireStatus || (t2.AcquireStatus = {}))[x.kNoChange = 0] = "kNoChange", x[x.kMove = 1] = "kMove", x[x.kBegan = 2] = "kBegan", x[x.kEnd = 3] = "kEnd", x[x.kMouseUp = 4] = "kMouseUp", x[x.kMouseDown = 5] = "kMouseDown", x[x.kCancle = 6] = "kCancle", (b = w = t2.DragStatus || (t2.DragStatus = {}))[b.kNoChange = -6] = "kNoChange", b[b.kCancel = -4] = "kCancel", b[b.kOther = -3] = "kOther", b[b.kNull = -1] = "kNull", b[b.kNormal = 0] = "kNormal", b[b.kKW1 = 1] = "kKW1", (_ = M = t2.DetailedResult || (t2.DetailedResult = {}))[_.kUnknown = 1] = "kUnknown", _[_.kTouchDownIn = 2] = "kTouchDownIn", _[_.kTouchUpIn = 3] = "kTouchUpIn", _[_.kMouseLeftIn = 4] = "kMouseLeftIn", _[_.kMouseLeftUpIn = 5] = "kMouseLeftUpIn", _[_.kMouseRightIn = 6] = "kMouseRightIn", _[_.kKeyIn = 7] = "kKeyIn", _[_.kCoordIn = 8] = "kCoordIn", _[_.kNullEnterIn = 9] = "kNullEnterIn", _[_.kNullSpaceIn = 10] = "kNullSpaceIn", _[_.kEcsIn = 11] = "kEcsIn", _[_.kNewCommadIn = 12] = "kNewCommadIn", (T = t2.DoneStatius || (t2.DoneStatius = {}))[T.kContinueCommand = 0] = "kContinueCommand", T[T.kExitCommand = 1] = "kExitCommand", (S = C = t2.InType || (t2.InType = {}))[S.kGetBegan = 1] = "kGetBegan", S[S.kGetEnd = 2] = "kGetEnd", (E = D = t2.MouseButton || (t2.MouseButton = {}))[E.kInvalid = -1] = "kInvalid", E[E.kLeft = 0] = "kLeft", E[E.kMid = 1] = "kMid", E[E.kRight = 2] = "kRight", (A = O = t2.COMMAND_IN || (t2.COMMAND_IN = {}))[A.COMMAND_IN_NO_ENTITY = 0] = "COMMAND_IN_NO_ENTITY", A[A.COMMAND_IN_EMTPY = 1] = "COMMAND_IN_EMTPY", A[A.COMMAND_IN_KEY = 2] = "COMMAND_IN_KEY", A[A.COMMAND_IN_STRING = 3] = "COMMAND_IN_STRING", A[A.COMMAND_IN_COORD = 5] = "COMMAND_IN_COORD", A[A.COMMAND_IN_DIST = 6] = "COMMAND_IN_DIST", A[A.COMMAND_IN_INVALID = 7] = "COMMAND_IN_INVALID", A[A.COMMAND_IN_INVALID_ZERO = 8] = "COMMAND_IN_INVALID_ZERO", A[A.COMMAND_IN_INVALID_NEG = 9] = "COMMAND_IN_INVALID_NEG", A[A.COMMAND_IN_INT = 10] = "COMMAND_IN_INT", (R = P = t2.COMMAND_GET || (t2.COMMAND_GET = {}))[R.COMMAND_GET_STRING = 1] = "COMMAND_GET_STRING", R[R.COMMAND_GET_KEY = 2] = "COMMAND_GET_KEY", R[R.COMMAND_GET_DIST = 4] = "COMMAND_GET_DIST", R[R.COMMAND_GET_COORD = 8] = "COMMAND_GET_COORD", R[R.COMMAND_GET_INT = 16] = "COMMAND_GET_INT", (L = t2.DynamicInputType || (t2.DynamicInputType = {}))[L.kNoInput = 0] = "kNoInput", L[L.kXYCoordInput = 1] = "kXYCoordInput", L[L.kDistanceInput = 2] = "kDistanceInput", L[L.kDynTip = 3] = "kDynTip", L[L.kAutoInput = 4] = "kAutoInput", (I = t2.GETPOINTSTATUS || (t2.GETPOINTSTATUS = {}))[I.OsModeSValidLastPoint = 1] = "OsModeSValidLastPoint", I[I.OsModeSTempDisable = 2] = "OsModeSTempDisable", I[I.OsModeOrthoTempDisable = 4] = "OsModeOrthoTempDisable", I[I.OsModeSValidLastMovePoint = 8] = "OsModeSValidLastMovePoint", I[I.OsModePoloarTempDisable = 16] = "OsModePoloarTempDisable", I[I.OsModeDynTraceTempDisable = 32] = "OsModeDynTraceTempDisable", I[I.OsModeGridSnapTempDisable = 64] = "OsModeGridSnapTempDisable", (k = t2.OsnapMode || (t2.OsnapMode = {}))[k.kOsModekInValid = 0] = "kOsModekInValid", k[k.kOsModeEnd = 1] = "kOsModeEnd", k[k.kOsModeMid = 2] = "kOsModeMid", k[k.kOsModeCen = 3] = "kOsModeCen", k[k.kOsModeNode = 4] = "kOsModeNode", k[k.kOsModeQuad = 5] = "kOsModeQuad", k[k.kOsModeIns = 7] = "kOsModeIns", k[k.kOsModePerp = 8] = "kOsModePerp", k[k.kOsModeTan = 9] = "kOsModeTan", k[k.kOsModeNear = 10] = "kOsModeNear", k[k.kOsModeInt = 11] = "kOsModeInt";
      var j, N = void 0, V = void 0, F = r2.kNoChange, B = D.kInvalid, G = -9999999, z = new i.Vector2(G, G), U = false, H = void 0, W = false, J = 0, q = /* @__PURE__ */ new Map(), X = new Array(), Y = new p.MxString(), Z = void 0, K = -2;
      function $2() {
        null != N && N.notifySampler();
      }
      function Q(t3, e3) {
        var n3 = t3.srcElement;
        if (n3 && (m.MxDrawData.m_isMapBox || "CANVAS" == n3.tagName)) {
          if (null == N) return 0;
          if (N.getDynImput().isTruncatedInput()) return 0;
          z.x = t3.offsetX, z.y = t3.offsetY, e3 && (z.x = e3.x, z.y = e3.y), st(z);
        }
        return 0;
      }
      function tt(t3, e3) {
        if (t3.button != D.kLeft) return 0;
        var n3 = t3.srcElement;
        if (!n3 || !m.MxDrawData.m_isMapBox && "CANVAS" != n3.tagName) return 0;
        if (null == N) return 0;
        if (N.getDynImput().isTruncatedInput()) return 0;
        z.x = t3.offsetX, z.y = t3.offsetY, e3 && (z.x = e3.x, z.y = e3.y), j = N.getMxObject().screenCoord2Current(t3.offsetX, t3.offsetY, 0);
        var i2 = N.getOsnap();
        return j = i2.reCompteCurrentPoint(j), F = r2.kMouseUp, B = t3.button, $2(), t3.stopPropagation(), 1;
      }
      function et(t3, e3, n3) {
        var r3 = N.getMxObject().screenCoord2Current(t3, e3, n3), a2 = N.getOsnap();
        r3 = a2.reCompteCurrentPoint(r3);
        var o2, s2 = false, l2 = N.getDynImput().getCurrentInputPointCoordinates(r3);
        if (l2 instanceof i.Vector3 && (s2 = true, r3.x = l2.x, r3.y = l2.y), !s2) {
          var c2 = a2.getCurrentOSnapPoint(r3);
          r3 = c2.pt, c2.isSnapPoint && (s2 = true);
        }
        if (s2 || (o2 = N.getDynamicTrace().GetTracePoint()) && (r3.copy(o2), s2 = true), s2 || (o2 = N.getPolarAxisTrace().GetTracePoint()) && (r3.copy(o2), s2 = true), !s2) {
          var u2 = N.getOrtho();
          u2.OnViewMouseMove(r3);
          var h2 = u2.GetCurOrthoPoint();
          h2.isValid && (r3.copy(h2.pt), s2 = true);
        }
        return s2 || (o2 = N.getGridTrace().GetTracePoint()) && (r3.copy(o2), s2 = true), r3;
      }
      function nt(t3, e3) {
        if (t3.button != D.kLeft) return 0;
        null != N && N.getDynImput().isShow() && N.getDynImput().setFocus(true);
        var n3 = t3.srcElement;
        if (!n3 || !m.MxDrawData.m_isMapBox && "CANVAS" != n3.tagName) return 0;
        if (null == N) return 0;
        if (N.getDynImput().isTruncatedInput()) return 0;
        z.x = t3.offsetX, z.y = t3.offsetY, e3 && (z.x = e3.x, z.y = e3.y);
        var i2 = et(t3.offsetX, t3.offsetY, 0);
        return f.McEdImpJigGlobalData.setPrvPoint(i2), N.getOsnap().seInValidPoint(), j = i2, F = r2.kMouseDown, B = t3.button, $2(), t3.stopPropagation(), 1;
      }
      function rt(t3, e3) {
        void 0 === e3 && (e3 = true);
        var n3 = void 0, r3 = t3.touches;
        e3 && (r3 = t3.changedTouches);
        for (var i2 = 0; i2 < r3.length; i2++) if (0 == r3[i2].identifier) {
          n3 = r3[i2];
          break;
        }
        return n3;
      }
      function it(t3) {
        var e3;
        if (m.MxDrawData.m_isMobileCommandOperationSupportsMultipoint) {
          if (!(e3 = rt(t3, true))) return;
          t3.stopPropagation(), t3.preventDefault();
        } else {
          if (t3.stopPropagation(), t3.preventDefault(), 0 == t3.touches.length) return;
          e3 = t3.touches[0];
        }
        null != N && N.getDynImput().isShow() && N.getDynImput().setFocus(true);
        var n3 = t3.srcElement;
        if (n3 && (m.MxDrawData.m_isMapBox || "CANVAS" == n3.tagName)) {
          if (null == N) return;
          var i2 = t3.target.getBoundingClientRect();
          z.x = e3.clientX - i2.left, z.y = e3.clientY - i2.top;
          var a2 = et(z.x, z.y, 0);
          return f.McEdImpJigGlobalData.setPrvPoint(a2), N.getOsnap().seInValidPoint(), j = a2, F = r2.kBegan, B = D.kInvalid, $2(), 1;
        }
      }
      function at(t3) {
        var e3;
        if (m.MxDrawData.m_isMobileCommandOperationSupportsMultipoint) {
          if (!(e3 = rt(t3))) return;
          t3.stopPropagation(), t3.preventDefault();
        } else t3.stopPropagation(), t3.preventDefault(), 0 < t3.touches.length && (e3 = t3.touches[0]);
        var n3 = t3.srcElement;
        if (n3 && (m.MxDrawData.m_isMapBox || "CANVAS" == n3.tagName)) {
          if (null == N) return;
          if (z.x == G || z.y == G) return;
          if (e3) {
            var i2 = t3.target.getBoundingClientRect();
            z.x = e3.clientX - i2.left, z.y = e3.clientY - i2.top;
          }
          var a2 = et(z.x, z.y, 0);
          return f.McEdImpJigGlobalData.setPrvPoint(a2), N.getOsnap().seInValidPoint(), j = a2, F = r2.kEnd, B = D.kInvalid, $2(), 1;
        }
      }
      function ot(t3) {
        var e3;
        if (m.MxDrawData.m_isMobileCommandOperationSupportsMultipoint) {
          if (1 == t3.touches.length && (e3 = rt(t3)), !e3) return;
          t3.stopPropagation(), t3.preventDefault();
        } else {
          if (t3.stopPropagation(), t3.preventDefault(), 0 == t3.touches.length) return;
          e3 = t3.touches[0];
        }
        var n3 = t3.srcElement;
        if (n3 && (m.MxDrawData.m_isMapBox || "CANVAS" == n3.tagName)) {
          if (null == N) return;
          var r3 = t3.target.getBoundingClientRect();
          z.x = e3.clientX - r3.left, z.y = e3.clientY - r3.top, st(z);
        }
      }
      function st(e3, n3) {
        if (void 0 === n3 && (n3 = true), W = false, null == e3) {
          if (z.x == G || z.y == G) return;
          e3 = z;
        }
        N.getDynImput().ClearDisplay();
        var a2 = N.getMxObject().screenCoord2Current(e3.x, e3.y, 0), o2 = N.getOffsetArrow();
        o2.ReSetTempDisplay(), o2.MouseMove(a2);
        var s2 = N.getOsnap();
        a2 = s2.reCompteCurrentPoint(a2);
        var l2 = N.getMxObject().viewCoordLong2Cad(0.5 * m.MxDrawData.m_dInputRectWidth);
        n3 ? s2.setPoint(a2, l2) : s2.setPoint();
        var c2 = N.getDynamicTrace();
        c2.ReSetTempDisplay(), c2.OnDynamicTrace(0, a2, t2.OsnapMode.kOsModekInValid), c2.MouseMove(a2);
        var u2, h2 = false, p2 = N.getDynImput().getCurrentInputPointCoordinates(a2);
        p2 instanceof i.Vector3 && (h2 = true, a2.x = p2.x, a2.y = p2.y, a2.z = p2.z), h2 || (u2 = c2.GetTracePoint()) && (h2 = true);
        var d2 = N.getPolarAxisTrace();
        if (d2.ReSetTempDisplay(), h2 || (d2.MouseMove(a2), (u2 = d2.GetTracePoint()) && (a2.x = u2.x, a2.y = u2.y, a2.z = u2.z, h2 = true)), !h2) {
          var f2 = N.getOrtho();
          f2.OnViewMouseMove(a2);
          var g2 = f2.GetCurOrthoPoint();
          g2.isValid && a2.copy(g2.pt);
        }
        var y2 = N.getGridTrace();
        y2.ReSetTempDisplay(), h2 || (y2.MouseMove(a2), (u2 = y2.GetTracePoint()) && (a2.x = u2.x, a2.y = u2.y, a2.z = u2.z, h2 = true)), j = a2, F = r2.kMove;
        var v2 = N.getMxObject();
        v2.sysVariable().setSysVarPoint("LASTMOVEPOINT", a2);
        var x2 = v2.sysVariable().getSysVarNumber("GETPOINTSTATUS");
        x2 |= t2.GETPOINTSTATUS.OsModeSValidLastMovePoint, v2.sysVariable().setSysVarNumber("GETPOINTSTATUS", x2), $2.call(this);
      }
      function lt() {
        N && (Z = N.getMxObject().getEventManager(), a.MxFun.isPC() ? (Z.addEventListener("mouseup", tt, true), Z.addEventListener("mousemove", Q, true), Z.addEventListener("mousedown", nt, true)) : (Z.addEventListener("touchstart", it, true), Z.addEventListener("touchend", at, true), Z.addEventListener("touchmove", ot, true)));
      }
      function ct() {
        Z && (a.MxFun.isPC() ? (Z.removeEventListener("mouseup", tt, true), Z.removeEventListener("mousemove", Q, true), Z.removeEventListener("mousedown", nt, true)) : (Z.removeEventListener("touchstart", it, true), Z.removeEventListener("touchend", at, true), Z.removeEventListener("touchmove", ot, true)), Z = void 0);
      }
      function ut(t3) {
        d.MxWindowsEvent.clearKeyStatus();
        var e3 = t3.getOrbitControls();
        a.MxFun.isPC() ? (K = e3.mouseButtons.LEFT, e3.mouseButtons.LEFT = -1) : m.MxDrawData.m_isMobileCommandOperationSupportsMultipoint || (e3.enabled = false), e3.resetStatusValue(), t3.callEvent("dragWillStart"), t3.updateDisplay();
      }
      function ht(e3) {
        var n3 = new i.Vector3(), r3 = false, a2 = new p.MxString(e3), o2 = a2.AnalyzeString(",");
        if (o2.length < 2) for (; ; ) {
          var s2 = N.getDynImput().getFocusIndex();
          if (-1 == s2) break;
          if (a2.IsEmpty()) break;
          if (!h.MxTools.IsNumerical(a2)) break;
          var l2 = N.getDynImput().getLockValuesMap();
          if (0 == s2) {
            var c2 = h.MxTools._tstof(a2.m_val);
            if (h.MxTools.IsZero(c2)) break;
            if (!((w2 = (b2 = N.getMxObject()).sysVariable().getSysVarNumber("GETPOINTSTATUS")) & t2.GETPOINTSTATUS.OsModeSValidLastPoint)) break;
            if (!(w2 & t2.GETPOINTSTATUS.OsModeSValidLastMovePoint)) break;
            var u2 = void 0;
            l2.has(1) && (u2 = h.MxTools._tstof(l2.get(1)));
            var d2 = b2.sysVariable().getSysVarPoint("LASTPOINT"), f2 = b2.sysVariable().getSysVarPoint("LASTMOVEPOINT").clone().sub(d2);
            if (void 0 === u2) {
              if (f2.length() < 1e-7) break;
              f2.normalize();
            } else u2 = u2 * Math.PI / 180, f2.dot(new i.Vector3(0, 1, 0)) < 0 && (u2 = -u2), (f2 = new i.Vector3(1, 0, 0)).applyAxisAngle(new i.Vector3(0, 0, 1), u2);
            f2.multiplyScalar(c2);
            var m2 = (n3 = d2.clone().add(f2)).clone().add(f2.multiplyScalar(10));
            b2.sysVariable().setSysVarPoint("LASTMOVEPOINT", m2), r3 = true;
          } else if (1 == s2) {
            var g2 = h.MxTools._tstof(a2.m_val);
            if (!((w2 = (b2 = N.getMxObject()).sysVariable().getSysVarNumber("GETPOINTSTATUS")) & t2.GETPOINTSTATUS.OsModeSValidLastPoint)) break;
            if (!(w2 & t2.GETPOINTSTATUS.OsModeSValidLastMovePoint)) break;
            var y2 = void 0;
            l2.has(0) && (y2 = h.MxTools._tstof(l2.get(0))), d2 = b2.sysVariable().getSysVarPoint("LASTPOINT"), f2 = b2.sysVariable().getSysVarPoint("LASTMOVEPOINT").clone().sub(d2);
            var v2 = 0;
            if (void 0 === y2) {
              if (f2.length() < 1e-7) break;
              v2 = f2.length();
            } else v2 = y2;
            g2 = g2 * Math.PI / 180, f2.dot(new i.Vector3(0, 1, 0)) < 0 && (g2 = -g2);
            var x2 = new i.Vector3(v2, 0, 0);
            x2.applyAxisAngle(new i.Vector3(0, 0, 1), g2), m2 = (n3 = d2.clone().add(x2)).clone().add(x2.multiplyScalar(2)), b2.sysVariable().setSysVarPoint("LASTMOVEPOINT", m2), r3 = true;
          }
          break;
        }
        else {
          var w2, b2 = N.getMxObject(), M2 = new p.MxString(o2[0]), _2 = new p.MxString(o2[1]), T2 = new p.MxString("0");
          if (2 < o2.length && (T2.m_val = o2[2]), M2.IsEmpty() || "@" != M2.Left(1)) h.MxTools.IsNumerical(M2) && h.MxTools.IsNumerical(_2) && h.MxTools.IsNumerical(T2) ? (r3 = true, n3.x = h.MxTools._tstof(M2.m_val), n3.y = h.MxTools._tstof(_2.m_val), n3.z = h.MxTools._tstof(T2.m_val)) : r3 = false;
          else if (M2.m_val = M2.m_val.substring(1, M2.m_val.length), h.MxTools.IsNumerical(M2) && h.MxTools.IsNumerical(_2) && h.MxTools.IsNumerical(T2)) if ((w2 = b2.sysVariable().getSysVarNumber("GETPOINTSTATUS")) & t2.GETPOINTSTATUS.OsModeSValidLastPoint) {
            r3 = true;
            var C2 = h.MxTools._tstof(M2.m_val), S2 = h.MxTools._tstof(_2.m_val), D2 = h.MxTools._tstof(T2.m_val);
            d2 = b2.sysVariable().getSysVarPoint("LASTPOINT"), n3.x = d2.x + C2, n3.y = d2.y + S2, n3.z = d2.z + D2;
          } else r3 = false;
          else r3 = false;
        }
        return r3 ? n3 : null;
      }
      function pt(t3, e3) {
        void 0 === e3 && (e3 = false), u.MxUiVue.AcutPrintfNoFormat(t3, e3);
      }
      function dt(t3, n3) {
        if (t3 == O.COMMAND_IN_INVALID) {
          var r3 = u.MxUiVue.getCmdTip();
          return pt(n3), pt(r3), w.kNoChange;
        }
        return t3 == O.COMMAND_IN_INVALID_ZERO ? (r3 = u.MxUiVue.getCmdTip(), N.userInputControls() & e2.kNoNegativeResponseAccepted ? pt("\n 值必须为正 且非零。 \n") : pt("\n 值必不能为零。 \n"), pt(r3), w.kOther) : t3 != O.COMMAND_IN_INVALID_NEG ? w.kNoChange : (r3 = u.MxUiVue.getCmdTip(), N.userInputControls() & e2.kNoZeroResponseAccepted ? pt("\n 值必须为正 且非零。 \n") : pt("\n 值必不能为负。 \n"), pt(r3), w.kOther);
      }
      function ft(t3) {
        var n3 = { iRet: O.COMMAND_IN_NO_ENTITY, sValue: "", iKey: w.kNull, dDist: 0, iVal: 0, pt: null, cmdText: "" };
        if (!W) return n3;
        var r3 = N.userInputControls(), i2 = u.MxUiVue.getCmdText();
        if (0 == (n3.cmdText = i2).length) return r3 & e2.kNullResponseAccepted ? n3.iRet = O.COMMAND_IN_EMTPY : n3.iRet = O.COMMAND_IN_INVALID, n3;
        if (t3 & P.COMMAND_GET_KEY && 0 < q.size) {
          var a2 = new p.MxString(i2);
          a2.MakeUpper(), a2.TrimLeft(" "), a2.TrimRight(" ");
          var o2 = q.get(a2.m_val);
          if (null != o2) return n3.iRet = O.COMMAND_IN_KEY, n3.iKey = o2, n3.sValue = a2.m_val, n3;
        }
        if (t3 & P.COMMAND_GET_DIST && h.MxTools.IsNumerical(i2)) return n3.dDist = h.MxTools._tstof(i2), r3 & e2.kNoZeroResponseAccepted && h.MxTools.IsZero(n3.dDist) ? n3.iRet = O.COMMAND_IN_INVALID_ZERO : r3 & e2.kNoNegativeResponseAccepted && n3.dDist < 0 ? n3.iRet = O.COMMAND_IN_INVALID_NEG : (n3.sValue = i2, n3.iRet = O.COMMAND_IN_DIST), n3;
        if (t3 & P.COMMAND_GET_INT && h.MxTools.IsNumerical(i2)) return n3.iVal = h.MxTools._tstoi(i2), r3 & e2.kNoZeroResponseAccepted && 0 == n3.iVal ? n3.iRet = O.COMMAND_IN_INVALID_ZERO : r3 & e2.kNoNegativeResponseAccepted && n3.iVal < 0 ? n3.iRet = O.COMMAND_IN_INVALID_NEG : (n3.sValue = i2, n3.iRet = O.COMMAND_IN_INT), n3;
        if (t3 & P.COMMAND_GET_COORD) {
          var s2 = ht(i2);
          if (null != s2) return n3.sValue = i2, n3.iRet = O.COMMAND_IN_COORD, n3.pt = s2, n3;
        }
        return t3 & P.COMMAND_GET_STRING ? (n3.sValue = i2, n3.iRet = O.COMMAND_IN_STRING) : n3.iRet = O.COMMAND_IN_INVALID, n3;
      }
      function mt(e3) {
        var n3 = N.getMxObject();
        if (n3.sysVariable().setSysVarPoint("LASTPOINT", e3), e3) {
          var r3 = n3.sysVariable().getSysVarNumber("GETPOINTSTATUS");
          r3 |= t2.GETPOINTSTATUS.OsModeSValidLastPoint, n3.sysVariable().setSysVarNumber("GETPOINTSTATUS", r3);
        } else r3 = n3.sysVariable().getSysVarNumber("GETPOINTSTATUS"), r3 &= ~t2.GETPOINTSTATUS.OsModeSValidLastPoint, n3.sysVariable().setSysVarNumber("GETPOINTSTATUS", r3);
      }
      function gt(t3) {
        var e3 = new v();
        return F == r2.kMove ? (e3.status = w.kNormal, e3.pt = j, e3.exit = false) : F == r2.kEnd ? t3 & C.kGetEnd ? (e3.status = w.kNormal, e3.pt = j, e3.exit = true, e3.DetailedResult = M.kTouchUpIn, mt(e3.pt)) : (e3.status = w.kNormal, e3.pt = j, e3.exit = false) : F == r2.kCancle ? (e3.status = w.kCancel, e3.pt = j, e3.exit = true) : F == r2.kBegan ? t3 & C.kGetBegan ? (e3.status = w.kNormal, e3.pt = j, e3.exit = true, e3.DetailedResult = M.kTouchDownIn, mt(e3.pt)) : (e3.status = w.kNormal, e3.pt = j, e3.exit = false) : F == r2.kMouseDown ? (e3.status = w.kNormal, e3.pt = j, e3.exit = true, e3.DetailedResult = M.kMouseLeftIn, mt(e3.pt)) : (e3.status = w.kNoChange, e3.pt = void 0, e3.exit = false), e3;
      }
      t2.getInputKeyword = function(t3) {
        if (t3 < 1) return "";
        for (var e3, n3 = q.entries(); !(e3 = n3.next()).done; ) if (e3.value == t3) return e3.key;
        return "";
      }, t2.GetKeyWordToString = function() {
        return X;
      }, t2.keywordList = function() {
        return Y.m_val;
      }, t2.setKeywordList = function(t3) {
        if (Y.m_val = t3, q.clear(), X.length = 0, !Y.IsEmpty()) if (Y.TrimLeft(" "), Y.TrimRight(" "), "[" == Y.m_val[0] && "]" == Y.m_val[Y.m_val.length - 1]) {
          Y.TrimLeft("["), Y.TrimRight("]");
          for (var e3 = Y.AnalyzeString("/"), n3 = 1, r3 = 0; r3 < e3.length; r3++) {
            var i2 = (s2 = new p.MxString(e3[r3])).Find("(");
            if (-1 != i2) {
              var a2 = new p.MxString(s2.Left(i2)), o2 = new p.MxString(s2.Right(s2.GetLength() - i2 - 1));
              o2.TrimRight(")"), a2.IsEmpty() || o2.IsEmpty() || (o2.MakeUpper(), q.set(o2.m_val, n3), n3++, X.push(new h.MxPair(o2.m_val, a2.m_val)));
            }
          }
        } else for (e3 = Y.AnalyzeString(" "), n3 = 1, r3 = 0; r3 < e3.length; r3++) {
          var s2;
          (s2 = new p.MxString(e3[r3])).IsEmpty() || (s2.MakeUpper(), q.set(s2.m_val, n3), n3++);
        }
      }, t2.getAcquirePoint = function() {
        return j;
      }, t2.getAcquireStatus = function() {
        return F;
      }, t2.doMouseMoveImp = st, t2.OnThreeControlsChage = function() {
        if (null != N) return N.getOsnap().reComputeOffset(), void (z.x != G && z.y != G && st(z));
      }, t2.OnEnter = function(t3) {
        J = t3, W = true, F = r2.kNoChange, $2(), W = false;
      }, t2.Test = function() {
        W = true;
      }, t2.registEvent = lt, t2.unRegistEvent = ct, t2.getCurrentMouseButton = function() {
        return B;
      }, t2.isRunning = function() {
        return null != N;
      }, t2.getCurCmd = function() {
        return N;
      }, t2.commandRunComplete = function(t3) {
        N != t3 && console.log("aseert:_curCmd == cmd");
        var e3, n3, r3 = s.MxManager.currentMx();
        null != N && (r3 = N.getMxObject()), null != V ? (N = V, V = void 0, B = D.kInvalid, lt(), N.onStartCommand(), ut(r3)) : (ct(), N = void 0, n3 = (e3 = r3).getOrbitControls(), a.MxFun.isPC() ? -2 != K && (n3.mouseButtons.LEFT = K, K = -2, n3.resetStatusValue()) : (m.MxDrawData.m_isMobileCommandOperationSupportsMultipoint || (n3.enabled = true), n3.resetStatusValue()), y.MxCmdRunManager.clearCurrentSelectIfNeed(e3), e3.callEvent("dragWillEnd"), e3.updateDisplay(), m.MxDrawData.m_isAutoResetRenderer || e3.resetRenderer());
      }, t2.isWaitCmdNull = function() {
        return null == V;
      }, t2.stopCmd = function(t3) {
        s.MxManager.currentMx().endPanCommand(), null != N && (U = true, N.notifyCancleExit(t3), U = false);
      }, t2.setRunCmdEvent = function(t3) {
        H = t3;
      }, t2.runCmd = function(t3) {
        if (!U) {
          var e3 = s.MxManager.currentMx();
          t3.setMxObject(e3), e3.isValidCurMousePostion() ? z = e3.getCurrentMousePostion() : a.MxFun.isPC() ? (z.x = G, z.y = G) : (z.x = 0.5 * e3.getViewWidth(), z.y = 0.5 * e3.getViewHeight()), H && H(), null == N ? (N = t3, B = D.kInvalid, lt(), N.onStartCommand(), ut(e3)) : (V = t3, U = true, N.notifyCancleExit(M.kNewCommadIn), U = false);
        }
      }, t2.GetAcqurePointFromStringTo = ht, t2.ProcCommandRetResult = dt, t2.GetCommandLineContent = ft, t2.acquireKeyword = function() {
        var t3 = new v();
        if (null == N) return t3.status = w.kCancel, t3.exit = true, t3;
        var e3 = ft(P.COMMAND_GET_STRING | P.COMMAND_GET_KEY);
        return e3.iRet == O.COMMAND_IN_EMTPY ? (t3.status = w.kNull, t3.exit = true, 13 == J ? t3.DetailedResult = M.kNullEnterIn : 32 == J ? t3.DetailedResult = M.kNullSpaceIn : -1 == J && (t3.DetailedResult = M.kMouseRightIn)) : e3.iRet == O.COMMAND_IN_KEY ? (t3.status = e3.iKey, t3.exit = true, t3.sKeyValue = e3.sValue, t3.DetailedResult = M.kKeyIn) : (0 == e3.cmdText.length ? t3.status = w.kNoChange : t3.status = dt(e3.iRet, "\n需要输入关键字。 \n"), t3.exit = false), t3;
      }, t2.acquireString = function() {
        var t3 = new v();
        if (null == N) return t3.status = w.kCancel, t3.exit = true, t3;
        var e3 = ft(P.COMMAND_GET_STRING | P.COMMAND_GET_KEY);
        return e3.iRet == O.COMMAND_IN_EMTPY ? (t3.status = w.kNull, t3.exit = true, 13 == J ? t3.DetailedResult = M.kNullEnterIn : 32 == J ? t3.DetailedResult = M.kNullSpaceIn : -1 == J && (t3.DetailedResult = M.kMouseRightIn)) : e3.iRet == O.COMMAND_IN_KEY ? (t3.status = e3.iKey, t3.exit = true, t3.sKeyValue = e3.sValue, t3.DetailedResult = M.kKeyIn) : e3.iRet == O.COMMAND_IN_STRING ? (t3.status = w.kNormal, t3.sValue = e3.sValue, t3.exit = true, t3.DetailedResult = M.kKeyIn) : (t3.status = dt(e3.iRet, "\n需要输入非空字符串。 \n"), t3.exit = false), t3;
      }, t2.acquireInt = function() {
        var t3 = new v();
        if (null == N) return t3.status = w.kCancel, t3.exit = true, t3;
        var e3 = ft(P.COMMAND_GET_INT | P.COMMAND_GET_KEY);
        return e3.iRet == O.COMMAND_IN_EMTPY ? (t3.status = w.kNull, t3.exit = true, 13 == J ? t3.DetailedResult = M.kNullEnterIn : 32 == J ? t3.DetailedResult = M.kNullSpaceIn : -1 == J && (t3.DetailedResult = M.kMouseRightIn)) : e3.iRet == O.COMMAND_IN_KEY ? (t3.status = e3.iKey, t3.exit = true, t3.sKeyValue = e3.sValue, t3.DetailedResult = M.kKeyIn) : e3.iRet == O.COMMAND_IN_INT ? (t3.status = w.kNormal, t3.iVal = e3.iVal, t3.exit = true, t3.DetailedResult = M.kKeyIn) : (t3.status = dt(e3.iRet, "\n 需要整数或选项关键字。 \n"), t3.exit = false), t3;
      }, t2.acquireDist = function(t3, n3) {
        var r3 = new v();
        if (null == N) return r3.status = w.kCancel, r3.exit = true, r3;
        var i2 = ft(P.COMMAND_GET_DIST | P.COMMAND_GET_KEY);
        if (i2.iRet == O.COMMAND_IN_EMTPY) return r3.status = w.kNull, r3.exit = true, 13 == J ? r3.DetailedResult = M.kNullEnterIn : 32 == J ? r3.DetailedResult = M.kNullSpaceIn : -1 == J && (r3.DetailedResult = M.kMouseRightIn), r3;
        if (i2.iRet == O.COMMAND_IN_KEY) return r3.status = i2.iKey, r3.exit = true, r3.sKeyValue = i2.sValue, r3.DetailedResult = M.kKeyIn, r3;
        if (i2.iRet == O.COMMAND_IN_DIST) return r3.status = w.kNormal, r3.dist = i2.dDist, r3.exit = true, r3.DetailedResult = M.kCoordIn, r3;
        if (r3.status = dt(i2.iRet, "\n 需要点或选项关键字。 \n"), !n3) return r3.exit = false, r3;
        if (i2.iRet == O.COMMAND_IN_INVALID_ZERO || i2.iRet == O.COMMAND_IN_INVALID_NEG) return r3.exit = false, r3;
        var a2 = gt(t3);
        if (a2.status == w.kNormal && a2.exit) {
          var o2 = a2.pt.clone(), s2 = n3.clone();
          o2.z = s2.z = 0;
          var l2 = o2.distanceTo(s2);
          return N.userInputControls() & e2.kNoZeroResponseAccepted && h.MxTools.IsZero(l2) ? (dt(O.COMMAND_IN_INVALID_ZERO, "\n 需要点或选项关键字。 \n"), r3.status = w.kOther, r3.exit = false, r3) : (r3.status = w.kNormal, r3.dist = l2, r3.exit = true, r3.DetailedResult = a2.DetailedResult, r3);
        }
        return r3.exit = false, r3.status = w.kNoChange, r3;
      }, t2.acquirePoint = function(t3, e3) {
        void 0 === e3 && (e3 = true);
        var n3 = new v();
        if (null == N) return n3.status = w.kCancel, n3;
        var r3 = ft(P.COMMAND_GET_COORD | P.COMMAND_GET_KEY);
        return r3.iRet == O.COMMAND_IN_EMTPY ? (n3.status = w.kNull, n3.exit = true, 13 == J ? n3.DetailedResult = M.kNullEnterIn : 32 == J ? n3.DetailedResult = M.kNullSpaceIn : -1 == J && (n3.DetailedResult = M.kMouseRightIn), n3) : r3.iRet == O.COMMAND_IN_KEY ? (n3.status = r3.iKey, n3.exit = true, n3.sKeyValue = r3.sValue, n3.DetailedResult = M.kKeyIn, n3) : r3.iRet == O.COMMAND_IN_COORD ? (n3.status = w.kNormal, n3.pt = new i.Vector3(r3.pt.x, r3.pt.y, r3.pt.z), n3.exit = true, n3.DetailedResult = M.kCoordIn, n3) : (e3 && dt(r3.iRet, "\n 需要点或选项关键字。 \n"), gt(t3));
      }, t2.acquireAngle = function(t3, n3) {
        var r3 = new v();
        if (null == N) return r3.status = w.kCancel, r3.exit = true, r3;
        var a2 = ft(P.COMMAND_GET_DIST | P.COMMAND_GET_KEY);
        if (a2.iRet == O.COMMAND_IN_EMTPY) return r3.status = w.kNull, r3.exit = true, 13 == J ? r3.DetailedResult = M.kNullEnterIn : 32 == J ? r3.DetailedResult = M.kNullSpaceIn : -1 == J && (r3.DetailedResult = M.kMouseRightIn), r3;
        if (a2.iRet == O.COMMAND_IN_KEY) return r3.status = a2.iKey, r3.exit = true, r3.sKeyValue = a2.sValue, r3.DetailedResult = M.kKeyIn, r3;
        if (a2.iRet == O.COMMAND_IN_DIST) return r3.status = w.kNormal, r3.ang = 3.14159265 * a2.dDist / 180, r3.exit = true, r3.DetailedResult = M.kCoordIn, r3;
        if (r3.status = dt(a2.iRet, "\n 需要点或选项关键字。 \n"), !n3) return r3.exit = false, r3;
        if (a2.iRet == O.COMMAND_IN_INVALID_ZERO || a2.iRet == O.COMMAND_IN_INVALID_NEG) return r3.exit = false, r3;
        var o2 = gt(t3);
        if (o2.status == w.kNormal && o2.exit) {
          var s2 = new i.Vector3(o2.pt.x - n3.x, o2.pt.y - n3.y, 0), l2 = s2.angleTo(new i.Vector3(1, 0, 0));
          s2.dot(new i.Vector3(0, 1, 0)) < -1e-11 && (l2 = 2 * Math.PI - l2);
          var c2 = N.userInputControls();
          return c2 & e2.kNoZeroResponseAccepted && h.MxTools.IsZero(l2) ? (dt(O.COMMAND_IN_INVALID_ZERO, "\n 需要点或选项关键字。 \n"), r3.status = w.kOther, r3.exit = false, r3) : (c2 & e2.kNoNegativeResponseAccepted && l2 < 0 ? (dt(O.COMMAND_IN_INVALID_NEG, "\n 需要点或选项关键字。 \n"), r3.status = w.kOther, r3.exit = false) : (r3.status = w.kNormal, r3.ang = l2, r3.exit = true, r3.DetailedResult = o2.DetailedResult), r3);
        }
        return r3.exit = false, r3.status = w.kNoChange, r3;
      }, t2.getMcEdJigCommandClass = function() {
        return o.McEdJigCommand;
      }, t2.getMrxDbgUiPrPointClass = function() {
        return l.MrxDbgUiPrPoint;
      }, t2.getMrxDbgUiPrDistClass = function() {
        return g.MrxDbgUiPrDist;
      }, t2.getMrxDbgUiPrIntClass = function() {
        return g.MrxDbgUiPrInt;
      }, t2.getMrxDbgUiPrStringClass = function() {
        return g.MrxDbgUiPrString;
      }, t2.getMrxDbgUiPrKeyWordClass = function() {
        return g.MrxDbgUiPrKeyWord;
      }, t2.getMrxDbgUiPrAngleClass = function() {
        return g.MrxDbgUiPrAngle;
      }, t2.getMcEdGetPointWorldDrawClass = function() {
        return c.McEdGetPointWorldDraw;
      }, t2.McEdGetPointWorldDrawObjectClass = function() {
        return c.McEdGetPointWorldDrawObject;
      }, t2.init = function() {
        this._curCmd = void 0;
      };
    }(r || (n.MxJigCmdManager = r = {}));
  }, { "../MxDrawData": 22, "../MxFun": 27, "../MxManager": 29, "../MxString": 34, "../MxTools": 38, "../MxWindowsEvent": 41, "../UI/MxUiVue": 65, "./McEdJigOsnap": 43, "./MrxDbgUiPrBase": 45, "./MrxDbgUiPrDist": 46, "./MrxDbgUiPrPoint": 47, "./MxCmdRunManager": 48, "./MxJig": 53, three: 19 }], 55: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MxJigGetLine = void 0;
    var a, o = t("./MxJig"), s = t("./MxJigCmdManager"), l = (i(c, a = o.McEdJigCommand), c.prototype.sampler = function() {
      var t2 = s.MxJigCmdManager.InType.kGetBegan;
      this._isGetPt1 || (t2 = s.MxJigCmdManager.InType.kGetEnd);
      var e2 = this.acquirePoint(t2);
      return e2.status == s.MxJigCmdManager.DragStatus.kNormal && (this._isGetPt1 ? this._pt1 = e2.pt : this._pt2 = e2.pt), e2.status;
    }, c.prototype.setRetCall = function(t2) {
      this._retCall = t2;
    }, c.prototype.done = function(t2) {
      if (this._isGetPt1) return this._isGetPt1 = false, s.MxJigCmdManager.DoneStatius.kContinueCommand;
      var e2 = {};
      return e2.pt1 = this.getMxObject().worldCoord2Currnet(this._pt1.x, this._pt1.y, this._pt1.z), e2.pt2 = this.getMxObject().worldCoord2Currnet(this._pt2.x, this._pt2.y, this._pt2.z), this._retCall(e2), s.MxJigCmdManager.DoneStatius.kExitCommand;
    }, c.prototype.upDisplay = function() {
      this._isGetPt1 || null == this._pt1 || null == this._pt2 || this.drawLine(this._pt1, this._pt2);
    }, c);
    function c() {
      var t2 = null !== a && a.apply(this, arguments) || this;
      return t2._isGetPt1 = true, t2;
    }
    n.MxJigGetLine = l;
  }, { "./MxJig": 53, "./MxJigCmdManager": 54 }], 56: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxOffsetArrow = void 0;
    var r = t("three"), i = t("../MxFun"), a = t("../MxThreeJS"), o = t("../MxTools"), s = (l.prototype.ClearDynDrawEntity = function() {
      var t2 = this.m_vecDynDrawEntity.length;
      if (0 != t2) {
        for (var e2 = this.m_mxJig.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw(), n2 = 0; n2 < t2; n2++) i.MxFun.removeThreejsObject(this.m_vecDynDrawEntity[n2], e2);
        this.m_vecDynDrawEntity = [];
      }
    }, l.prototype.MouseMove = function(t2) {
      var e2 = this.m_mxJig.getMxObject();
      if (e2.getMcObject().isValid() && (this.ClearDynDrawEntity(), this.m_mxJig.isOffsetInputPostion())) {
        var n2 = t2.clone(), i2 = this.m_mxJig.getOsnap().reCompteCurrentPoint(n2.clone()), s2 = a.MxThreeJS.createLine(e2.toSmallcoord(n2), e2.toSmallcoord(i2), 16777215), l2 = e2.getTheTempDrawContainer_SmallCoord_JigDraw();
        l2.add(s2), this.m_vecDynDrawEntity.push(s2);
        var c = o.MxTools.MillimeterToPixels(2.9);
        c = e2.screenCoordLong2Doc(c);
        var u = a.MxThreeJS.createSolidCircle(e2.toSmallcoord(n2), 0.85 * c, 16777215);
        l2.add(u), this.m_vecDynDrawEntity.push(u);
        var h = a.MxThreeJS.createCircle(e2.toSmallcoord(n2), c, 16777215);
        l2.add(h), this.m_vecDynDrawEntity.push(h);
        var p = n2.sub(i2);
        p.normalize().multiplyScalar(0.8 * c);
        var d = p.clone().applyAxisAngle(new r.Vector3(0, 0, 1), 15 * Math.PI / 180), f = p.clone().applyAxisAngle(new r.Vector3(0, 0, 1), 15 * -Math.PI / 180), m = i2.clone().add(d), g = i2.clone().add(f), y = a.MxThreeJS.createLine(e2.toSmallcoord(m), e2.toSmallcoord(i2), 16777215);
        e2.getTheTempDrawContainer_SmallCoord_JigDraw().add(y), this.m_vecDynDrawEntity.push(y);
        var v = a.MxThreeJS.createLine(e2.toSmallcoord(g), e2.toSmallcoord(i2), 16777215);
        e2.getTheTempDrawContainer_SmallCoord_JigDraw().add(v), this.m_vecDynDrawEntity.push(v);
      }
    }, l.prototype.ClearDisplay = function() {
      this.ClearDynDrawEntity();
    }, l.prototype.ReSetTempDisplay = function() {
      this.ClearDynDrawEntity();
    }, l.prototype.Init = function() {
    }, l);
    function l(t2) {
      this.m_vecDynDrawEntity = [], this.m_mxJig = null, this.m_mxJig = t2;
    }
    n.MxOffsetArrow = s;
  }, { "../MxFun": 27, "../MxThreeJS": 37, "../MxTools": 38, three: 19 }], 57: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxPolarAxisTrace = void 0;
    var r = t("three"), i = t("./MxJigCmdManager"), a = t("../MxFun"), o = t("../MxDrawData"), s = t("../MxTools"), l = t("../MxManager"), c = t("../MxThreeJS"), u = (h.prototype.ClearDynDrawEntity = function() {
      for (var t2 = this.m_mxJig.getMxObject().getTheTempDrawContainer_SmallCoord_JigDraw(), e2 = this.m_vecDynDrawEntity.length, n2 = 0; n2 < e2; n2++) a.MxFun.removeThreejsObject(this.m_vecDynDrawEntity[n2], t2);
      this.m_vecDynDrawEntity = [];
    }, h.prototype.CreteTracePoint = function(t2, e2) {
      var n2 = this.m_mxJig.getMxObject(), r2 = n2.getTheTempDrawContainer_SmallCoord_JigDraw();
      e2 /= 2;
      var i2 = c.MxThreeJS.createLine(n2.toSmallcoord2(t2.x + e2, t2.y + e2, 0), n2.toSmallcoord2(t2.x - e2, t2.y - e2, 0), 16711680);
      r2.add(i2), this.m_vecDynDrawEntity.push(i2);
      var a2 = c.MxThreeJS.createLine(n2.toSmallcoord2(t2.x - e2, t2.y + e2, 0), n2.toSmallcoord2(t2.x + e2, t2.y - e2, 0), 16711680);
      r2.add(a2), this.m_vecDynDrawEntity.push(a2);
    }, h.prototype.MouseMove = function(t2) {
      var e2 = this.m_mxJig.getMxObject();
      if (e2.getMcObject().isValid()) {
        if (this.ClearDynDrawEntity(), this.m_isValidTracePoint = false, this.isTrace() && e2.sysVariable().getSysVarNumber("GETPOINTSTATUS") & i.MxJigCmdManager.GETPOINTSTATUS.OsModeSValidLastPoint) {
          var n2 = e2.sysVariable().getSysVarPoint("LASTPOINT"), a2 = e2.getSysVarDouble("POLARANG");
          if (a2 = 180 * a2 / Math.PI, !((a2 = Math.abs(a2)) < 1e-3)) {
            var u2 = e2.viewCoordLong2Cad(o.MxDrawData.m_dInputRectWidth), h2 = 2 * u2, p = t2.clone().sub(n2);
            if (!(p.length() < h2)) {
              p.normalize();
              var d = l.MxManager.getMxCpp().getMxCAD_MxCpp(), f = l.MxManager.getMxCpp().getMxCAD_App(), m = e2.getTheTempDrawContainer_SmallCoord_JigDraw(), g = e2.viewCoordLong2Cad(this.m_dashedLineLen);
              p = d.newMcGeVector3d(p);
              var y = d.newMcGeVector3d(new r.Vector3(1, 0, 0)), v = p.angleTo2(y), x = (v = 180 * v / Math.PI) % a2;
              x < a2 / 2 ? v -= x : v += a2 - x;
              var w = e2.viewCoordLong2Cad(e2.getViewWidth()), b = e2.viewCoordLong2Cad(e2.getViewHeight()), M = s.MxTools.MxMax(w, b);
              (p = y.clone()).rotateBy(v * Math.PI / 180), p.mult(M);
              var _ = new r.Vector3(n2.x + p.x, n2.y + p.y, n2.z + p.z), T = { pt1: _, pt2: n2 }, C = f.MxCADAssist.GetClosestPointTo(T.pt1.x, T.pt1.y, T.pt2.x, T.pt2.y, t2.x, t2.y, true);
              if (0 < C.length()) {
                var S = C.at(0), D = new r.Vector3(S.x, S.y, S.z);
                if (D.distanceTo(t2) < h2) {
                  var E = c.MxThreeJS.createDashedLine(e2.toSmallcoord2(n2.x - p.x, n2.y - p.y, n2.z - p.z), e2.toSmallcoord(_), this.m_iDashedLineLenColor, g, g);
                  m.add(E), this.m_vecDynDrawEntity.push(E), this.m_isValidTracePoint = true, this.m_ptTracePoint = D, this.CreteTracePoint(D, u2);
                }
              }
            }
          }
        }
      } else this.m_isTrace = false;
    }, h.prototype.isTrace = function() {
      return this.m_isTrace && 0 != (8 & this.m_mxJig.getMxObject().getSysVarLong("AUTOSNAP"));
    }, h.prototype.Init = function() {
      var t2 = this.m_mxJig.getMxObject();
      t2.getMcObject().isValid() ? (this.m_isValidTracePoint = false, this.m_isTrace = true, t2.sysVariable().getSysVarNumber("GETPOINTSTATUS") & i.MxJigCmdManager.GETPOINTSTATUS.OsModePoloarTempDisable && (this.m_isTrace = false), this.m_mxJig.isDisablePolarAxisTrace() && (this.m_isTrace = false)) : this.m_isTrace = false;
    }, h.prototype.GetTracePoint = function() {
      if (this.isTrace()) return this.m_isValidTracePoint ? this.m_ptTracePoint : void 0;
    }, h.prototype.ClearDisplay = function() {
      this.ClearDynDrawEntity();
    }, h.prototype.ReSetTempDisplay = function() {
      this.ClearDynDrawEntity(), this.m_isValidTracePoint = false;
    }, h);
    function h(t2) {
      this.m_vecDynDrawEntity = [], this.m_ptTracePoint = new r.Vector3(), this.m_isValidTracePoint = false, this.m_isTrace = false, this.m_mxJig = null, this.m_dashedLineLen = 1.5, this.m_iDashedLineLenColor = 11184810, this.m_mxJig = t2;
    }
    n.MxPolarAxisTrace = u;
  }, { "../MxDrawData": 22, "../MxFun": 27, "../MxManager": 29, "../MxThreeJS": 37, "../MxTools": 38, "./MxJigCmdManager": 54, three: 19 }], 58: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true });
    var r = t("./MxFun");
    window.MXFUN_THREE = r.MxFun.getTHREE();
    var i = t("./MxManager");
    function a() {
    }
    (a.CreateMx = function() {
      r.MxFun.init(), "undefined" != typeof MxMain && 0 == MxMain(t) || r.MxFun.createMxObject(), i.MxManager.callEvent("init");
      var e2 = r.MxFun.getUiObject();
      null != e2 && (e2.sTitle = r.MxFun.getCurrentDraw().getFileTitle(), setTimeout(function() {
        e2.init();
      }, 400));
    }, a.Main = function() {
      if ("undefined" != typeof MxUiMain) {
        MxUiMain(t);
        var e2 = r.MxFun.getUiObject();
        null != e2 && e2.writeUICSS();
      }
      "undefined" == typeof MxDocumentReady ? $(document).ready(function() {
        a.CreateMx();
      }) : MxDocumentReady(t, a.CreateMx);
    }, a).Main();
  }, { "./MxFun": 27, "./MxManager": 29 }], 59: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxSvgManager = void 0;
    var r = t("three"), i = t("three"), a = t("./SVGLoader"), o = function() {
      this.svg = new r.Group(), this.aryMeterial = [], this.boxSize = new i.Vector3(1, 1, 1);
    }, s = (l.prototype.loadSVGImp = function(t2, e2, n2, i2) {
      new a.SVGLoader().load(t2, function(o2) {
        if (o2.paths.length) {
          var s2 = [], l2 = o2.paths, c2 = new r.Group(), u2 = true, h = true, p = false, d = false;
          i2 && (i2.drawStrokes && (u2 = i2.drawStrokes), i2.drawFillShapes && (h = i2.drawFillShapes), i2.fillShapesWireframe && (p = i2.fillShapesWireframe), i2.strokesWireframe && (d = i2.strokesWireframe));
          for (var f = 0; f < l2.length; f++) {
            var m = l2[f], g = m.userData.style.fill;
            if (h && void 0 !== g && "none" !== g) {
              for (var y = new r.MeshBasicMaterial({ color: e2 || new r.Color().setStyle(g), opacity: m.userData.style.fillOpacity, transparent: m.userData.style.fillOpacity < 1, side: r.DoubleSide, depthWrite: false, wireframe: p }), v = a.SVGLoader.createShapes(m), x = 0; x < v.length; x++) {
                var w = v[x], b = new r.ShapeBufferGeometry(w), M = new r.Mesh(b, y);
                c2.add(M);
              }
              s2.push(y);
            }
            var _ = m.userData.style.stroke;
            if (u2 && void 0 !== _ && "none" !== _) {
              y = new r.MeshBasicMaterial({ color: e2 || new r.Color().setStyle(_), opacity: m.userData.style.strokeOpacity, transparent: m.userData.style.strokeOpacity < 1, side: r.DoubleSide, depthWrite: false, wireframe: d }), x = 0;
              for (var T = m.subPaths.length; x < T; x++) {
                var C = m.subPaths[x];
                (b = a.SVGLoader.pointsToStroke(C.getPoints(), m.userData.style, 12, 1e-3)) && (M = new r.Mesh(b, y), c2.add(M));
              }
              s2.push(y);
            }
          }
          n2 && n2(c2, s2);
        } else console.log("mx svg:" + t2 + " data.paths.length == 0"), n2 && n2(null, null);
      }, void 0, function() {
        n2 && n2(null, null);
      });
    }, l.prototype.loadSVG = function(t2, e2, n2, r2) {
      var a2 = this, s2 = this.mapSvgUrlToData.get(t2), l2 = !r2 || !r2.useBuffer || r2.useBuffer;
      if (s2 && l2) {
        if (n2) if (null == s2) n2(null, null);
        else {
          var c2 = s2.svg.clone();
          c2.boxSize = s2.boxSize, n2(c2, s2.aryMeterial);
        }
      } else this.loadSVGImp(t2, e2, function(e3, r3) {
        if (e3 && r3) {
          var s3 = new o();
          s3.svg = e3, s3.aryMeterial = r3;
          var l3 = new i.Box3().setFromObject(e3);
          s3.boxSize.x = l3.max.x - l3.min.x, s3.boxSize.y = l3.max.y - l3.min.y, s3.boxSize.x !== -1 / 0 && s3.boxSize.y !== -1 / 0 || console.log("mx svg:" + t2 + " boxSize invalid"), a2.mapSvgUrlToData.set(t2, s3);
          var c3 = s3.svg.clone();
          c3.boxSize = s3.boxSize, n2 && n2(c3, s3.aryMeterial);
        } else a2.mapSvgUrlToData.set(t2, null), n2 && n2(null, null);
      }, r2);
    }, l);
    function l() {
      this.mapSvgUrlToData = /* @__PURE__ */ new Map();
    }
    var c = (u.prototype.loadSVG = function(t2, e2, n2, r2) {
      n2 && this.mxThreeJsBuffer.loadSVG(t2, e2, n2, r2);
    }, u);
    function u() {
      this.mxThreeJsBuffer = new s();
    }
    n.MxSvgManager = c;
  }, { "./SVGLoader": 60, three: 19 }], 60: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.SVGLoader = void 0;
    var a, o = t("three"), s = (i(l, a = o.Loader), l.prototype.load = function(t2, e2, n2, r2) {
      var i2 = this, a2 = new o.FileLoader(i2.manager);
      a2.setPath(i2.path), a2.setRequestHeader(i2.requestHeader), a2.setWithCredentials(i2.withCredentials), a2.load(t2, function(n3) {
        try {
          e2(i2.parse(n3));
        } catch (n4) {
          r2 ? r2(n4) : console.error(n4), i2.manager.itemError(t2);
        }
      }, n2, r2);
    }, l.prototype.parse = function(t2) {
      var e2 = this;
      function n2(t3, e3, n3, i3, a3, o2, s3, l3) {
        if (0 != e3 && 0 != n3) {
          i3 = i3 * Math.PI / 180, e3 = Math.abs(e3), n3 = Math.abs(n3);
          var c2 = (s3.x - l3.x) / 2, u2 = (s3.y - l3.y) / 2, h2 = Math.cos(i3) * c2 + Math.sin(i3) * u2, p2 = -Math.sin(i3) * c2 + Math.cos(i3) * u2, d2 = e3 * e3, f2 = n3 * n3, m2 = h2 * h2, g2 = p2 * p2, y2 = m2 / d2 + g2 / f2;
          if (1 < y2) {
            var v2 = Math.sqrt(y2);
            d2 = (e3 *= v2) * e3, f2 = (n3 *= v2) * n3;
          }
          var x2 = d2 * g2 + f2 * m2, w2 = (d2 * f2 - x2) / x2, b2 = Math.sqrt(Math.max(0, w2));
          a3 === o2 && (b2 = -b2);
          var M = b2 * e3 * p2 / n3, _ = -b2 * n3 * h2 / e3, T = Math.cos(i3) * M - Math.sin(i3) * _ + (s3.x + l3.x) / 2, C = Math.sin(i3) * M + Math.cos(i3) * _ + (s3.y + l3.y) / 2, S = r2(1, 0, (h2 - M) / e3, (p2 - _) / n3), D = r2((h2 - M) / e3, (p2 - _) / n3, (-h2 - M) / e3, (-p2 - _) / n3) % (2 * Math.PI);
          t3.currentPath.absellipse(T, C, e3, n3, S, S + D, 0 === o2, i3);
        } else t3.lineTo(l3.x, l3.y);
      }
      function r2(t3, e3, n3, r3) {
        var i3 = t3 * n3 + e3 * r3, a3 = Math.sqrt(t3 * t3 + e3 * e3) * Math.sqrt(n3 * n3 + r3 * r3), o2 = Math.acos(Math.max(-1, Math.min(1, i3 / a3)));
        return t3 * r3 - e3 * n3 < 0 && (o2 = -o2), o2;
      }
      function i2(t3, e3) {
        e3 = Object.assign({}, e3);
        var n3 = {};
        if (t3.hasAttribute("class")) for (var r3 = t3.getAttribute("class").split(/\s/).filter(Boolean).map(function(t4) {
          return t4.trim();
        }), i3 = 0; i3 < r3.length; i3++) n3 = Object.assign(n3, p["." + r3[i3]]);
        function a3(r4, i4, a4) {
          void 0 === a4 && (a4 = function(t4) {
            return t4.startsWith("url") && console.warn("SVGLoader: url access in attributes is not implemented."), t4;
          }), t3.hasAttribute(r4) && (e3[i4] = a4(t3.getAttribute(r4))), n3[r4] && (e3[i4] = a4(n3[r4])), t3.style && "" !== t3.style[r4] && (e3[i4] = a4(t3.style[r4]));
        }
        function o2(t4) {
          return Math.max(0, Math.min(1, u(t4)));
        }
        function s3(t4) {
          return Math.max(0, u(t4));
        }
        return t3.hasAttribute("id") && (n3 = Object.assign(n3, p["#" + t3.getAttribute("id")])), a3("fill", "fill"), a3("fill-opacity", "fillOpacity", o2), a3("fill-rule", "fillRule"), a3("opacity", "opacity", o2), a3("stroke", "stroke"), a3("stroke-opacity", "strokeOpacity", o2), a3("stroke-width", "strokeWidth", s3), a3("stroke-linejoin", "strokeLineJoin"), a3("stroke-linecap", "strokeLineCap"), a3("stroke-miterlimit", "strokeMiterLimit", s3), a3("visibility", "visibility"), e3;
      }
      function a2(t3, e3) {
        return t3 - (e3 - t3);
      }
      function s2(t3, e3, n3) {
        if ("string" != typeof t3) throw new TypeError("Invalid input: " + typeof t3);
        var r3, i3 = { SEPARATOR: /[ \t\r\n\,.\-+]/, WHITESPACE: /[ \t\r\n]/, DIGIT: /[\d]/, SIGN: /[-+]/, POINT: /\./, COMMA: /,/, EXP: /e/i, FLAGS: /[01]/ }, a3 = 0, o2 = true, s3 = "", l3 = "", c2 = [];
        function u2(t4, e4, n4) {
          var r4 = new SyntaxError('Unexpected character "' + t4 + '" at index ' + e4 + ".");
          throw r4.partial = n4, r4;
        }
        function h2() {
          "" !== s3 && ("" === l3 ? c2.push(Number(s3)) : c2.push(Number(s3) * Math.pow(10, Number(l3)))), l3 = s3 = "";
        }
        for (var p2 = t3.length, d2 = 0; d2 < p2; d2++) if (r3 = t3[d2], Array.isArray(e3) && e3.includes(c2.length % n3) && i3.FLAGS.test(r3)) a3 = 1, s3 = r3, h2();
        else {
          if (0 === a3) {
            if (i3.WHITESPACE.test(r3)) continue;
            if (i3.DIGIT.test(r3) || i3.SIGN.test(r3)) {
              a3 = 1, s3 = r3;
              continue;
            }
            if (i3.POINT.test(r3)) {
              a3 = 2, s3 = r3;
              continue;
            }
            i3.COMMA.test(r3) && (o2 && u2(r3, d2, c2), o2 = true);
          }
          if (1 === a3) {
            if (i3.DIGIT.test(r3)) {
              s3 += r3;
              continue;
            }
            if (i3.POINT.test(r3)) {
              s3 += r3, a3 = 2;
              continue;
            }
            if (i3.EXP.test(r3)) {
              a3 = 3;
              continue;
            }
            i3.SIGN.test(r3) && 1 === s3.length && i3.SIGN.test(s3[0]) && u2(r3, d2, c2);
          }
          if (2 === a3) {
            if (i3.DIGIT.test(r3)) {
              s3 += r3;
              continue;
            }
            if (i3.EXP.test(r3)) {
              a3 = 3;
              continue;
            }
            i3.POINT.test(r3) && "." === s3[s3.length - 1] && u2(r3, d2, c2);
          }
          if (3 === a3) {
            if (i3.DIGIT.test(r3)) {
              l3 += r3;
              continue;
            }
            if (i3.SIGN.test(r3)) {
              if ("" === l3) {
                l3 += r3;
                continue;
              }
              1 === l3.length && i3.SIGN.test(l3) && u2(r3, d2, c2);
            }
          }
          i3.WHITESPACE.test(r3) ? (h2(), a3 = 0, o2 = false) : i3.COMMA.test(r3) ? (h2(), o2 = !(a3 = 0)) : i3.SIGN.test(r3) ? (h2(), a3 = 1, s3 = r3) : i3.POINT.test(r3) ? (h2(), a3 = 2, s3 = r3) : u2(r3, d2, c2);
        }
        return h2(), c2;
      }
      var l2 = ["mm", "cm", "in", "pt", "pc", "px"], c = { mm: { mm: 1, cm: 0.1, in: 1 / 25.4, pt: 72 / 25.4, pc: 6 / 25.4, px: -1 }, cm: { mm: 10, cm: 1, in: 1 / 2.54, pt: 72 / 2.54, pc: 6 / 2.54, px: -1 }, in: { mm: 25.4, cm: 2.54, in: 1, pt: 72, pc: 6, px: -1 }, pt: { mm: 25.4 / 72, cm: 2.54 / 72, in: 1 / 72, pt: 1, pc: 6 / 72, px: -1 }, pc: { mm: 25.4 / 6, cm: 2.54 / 6, in: 1 / 6, pt: 12, pc: 1, px: -1 }, px: { px: 1 } };
      function u(t3) {
        var n3 = "px";
        if ("string" == typeof t3 || t3 instanceof String) for (var r3 = 0, i3 = l2.length; r3 < i3; r3++) {
          var a3 = l2[r3];
          if (t3.endsWith(a3)) {
            n3 = a3, t3 = t3.substring(0, t3.length - a3.length);
            break;
          }
        }
        var o2 = void 0;
        return "px" === n3 && "px" !== e2.defaultUnit ? o2 = c.in[e2.defaultUnit] / e2.defaultDPI : (o2 = c[n3][e2.defaultUnit]) < 0 && (o2 = c[n3].in * e2.defaultDPI), o2 * parseFloat(t3);
      }
      var h = [], p = {}, d = [], f = new o.Matrix3(), m = new o.Matrix3(), g = new o.Matrix3(), y = new o.Matrix3(), v = new o.Vector2(), x = new o.Vector3(), w = new o.Matrix3(), b = new DOMParser().parseFromString(t2, "image/svg+xml");
      return function t3(e3, r3) {
        if (1 === e3.nodeType) {
          var l3, c2, b2, M, _, T, C, S, D, E, O, A, P = function(t4) {
            if (!(t4.hasAttribute("transform") || "use" === t4.nodeName && (t4.hasAttribute("x") || t4.hasAttribute("y")))) return null;
            var e4 = function(t5) {
              var e5 = new o.Matrix3(), n3 = f;
              if ("use" === t5.nodeName && (t5.hasAttribute("x") || t5.hasAttribute("y"))) {
                var r4 = u(t5.getAttribute("x")), i3 = u(t5.getAttribute("y"));
                e5.translate(r4, i3);
              }
              if (t5.hasAttribute("transform")) for (var a3 = t5.getAttribute("transform").split(")"), l4 = a3.length - 1; 0 <= l4; l4--) {
                var c3 = a3[l4].trim();
                if ("" !== c3) {
                  var h2 = c3.indexOf("("), p2 = c3.length;
                  if (0 < h2 && h2 < p2) {
                    var d2 = c3.substr(0, h2), v2 = s2(c3.substr(h2 + 1, p2 - h2 - 1));
                    switch (n3.identity(), d2) {
                      case "translate":
                        1 <= v2.length && (i3 = r4 = v2[0], 2 <= v2.length && (i3 = v2[1]), n3.translate(r4, i3));
                        break;
                      case "rotate":
                        if (1 <= v2.length) {
                          var x2, w2 = 0, b3 = 0;
                          x2 = -v2[0] * Math.PI / 180, 3 <= v2.length && (w2 = v2[1], b3 = v2[2]), m.identity().translate(-w2, -b3), g.identity().rotate(x2), y.multiplyMatrices(g, m), m.identity().translate(w2, b3), n3.multiplyMatrices(m, y);
                        }
                        break;
                      case "scale":
                        if (1 <= v2.length) {
                          var M2 = v2[0], _2 = M2;
                          2 <= v2.length && (_2 = v2[1]), n3.scale(M2, _2);
                        }
                        break;
                      case "skewX":
                        1 === v2.length && n3.set(1, Math.tan(v2[0] * Math.PI / 180), 0, 0, 1, 0, 0, 0, 1);
                        break;
                      case "skewY":
                        1 === v2.length && n3.set(1, 0, 0, Math.tan(v2[0] * Math.PI / 180), 1, 0, 0, 0, 1);
                        break;
                      case "matrix":
                        6 === v2.length && n3.set(v2[0], v2[2], v2[4], v2[1], v2[3], v2[5], 0, 0, 1);
                    }
                  }
                  e5.premultiply(n3);
                }
              }
              return e5;
            }(t4);
            return 0 < d.length && e4.premultiply(d[d.length - 1]), w.copy(e4), d.push(e4), e4;
          }(e3), R = true, L = null;
          switch (e3.nodeName) {
            case "svg":
              break;
            case "style":
              !function(t4) {
                if (t4.sheet && t4.sheet.cssRules && t4.sheet.cssRules.length) for (var e4 = 0; e4 < t4.sheet.cssRules.length; e4++) {
                  var n3 = t4.sheet.cssRules[e4];
                  if (1 === n3.type) for (var r4 = n3.selectorText.split(/,/gm).filter(Boolean).map(function(t5) {
                    return t5.trim();
                  }), i3 = 0; i3 < r4.length; i3++) p[r4[i3]] = Object.assign(p[r4[i3]] || {}, n3.style);
                }
              }(e3);
              break;
            case "g":
              r3 = i2(e3, r3);
              break;
            case "path":
              r3 = i2(e3, r3), e3.hasAttribute("d") && (L = function(t4) {
                for (var e4 = new o.ShapePath(), r4 = new o.Vector2(), i3 = new o.Vector2(), l4 = new o.Vector2(), c3 = true, u2 = false, h2 = t4.getAttribute("d").match(/[a-df-z][^a-df-z]*/gi), p2 = 0, d2 = h2.length; p2 < d2; p2++) {
                  var f2 = h2[p2], m2 = f2.charAt(0), g2 = f2.substr(1).trim();
                  true === c3 && (c3 = !(u2 = true));
                  var y2 = void 0;
                  switch (m2) {
                    case "M":
                      for (var v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 2) r4.x = y2[v2 + 0], r4.y = y2[v2 + 1], i3.x = r4.x, i3.y = r4.y, 0 === v2 ? e4.moveTo(r4.x, r4.y) : e4.lineTo(r4.x, r4.y), 0 === v2 && l4.copy(r4);
                      break;
                    case "H":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2++) r4.x = y2[v2], i3.x = r4.x, i3.y = r4.y, e4.lineTo(r4.x, r4.y), 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "V":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2++) r4.y = y2[v2], i3.x = r4.x, i3.y = r4.y, e4.lineTo(r4.x, r4.y), 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "L":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 2) r4.x = y2[v2 + 0], r4.y = y2[v2 + 1], i3.x = r4.x, i3.y = r4.y, e4.lineTo(r4.x, r4.y), 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "C":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 6) e4.bezierCurveTo(y2[v2 + 0], y2[v2 + 1], y2[v2 + 2], y2[v2 + 3], y2[v2 + 4], y2[v2 + 5]), i3.x = y2[v2 + 2], i3.y = y2[v2 + 3], r4.x = y2[v2 + 4], r4.y = y2[v2 + 5], 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "S":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 4) e4.bezierCurveTo(a2(r4.x, i3.x), a2(r4.y, i3.y), y2[v2 + 0], y2[v2 + 1], y2[v2 + 2], y2[v2 + 3]), i3.x = y2[v2 + 0], i3.y = y2[v2 + 1], r4.x = y2[v2 + 2], r4.y = y2[v2 + 3], 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "Q":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 4) e4.quadraticCurveTo(y2[v2 + 0], y2[v2 + 1], y2[v2 + 2], y2[v2 + 3]), i3.x = y2[v2 + 0], i3.y = y2[v2 + 1], r4.x = y2[v2 + 2], r4.y = y2[v2 + 3], 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "T":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 2) {
                        var w2 = a2(r4.x, i3.x), b3 = a2(r4.y, i3.y);
                        e4.quadraticCurveTo(w2, b3, y2[v2 + 0], y2[v2 + 1]), i3.x = w2, i3.y = b3, r4.x = y2[v2 + 0], r4.y = y2[v2 + 1], 0 === v2 && true === u2 && l4.copy(r4);
                      }
                      break;
                    case "A":
                      for (v2 = 0, x2 = (y2 = s2(g2, [3, 4], 7)).length; v2 < x2; v2 += 7) if (y2[v2 + 5] != r4.x || y2[v2 + 6] != r4.y) {
                        var M2 = r4.clone();
                        r4.x = y2[v2 + 5], r4.y = y2[v2 + 6], i3.x = r4.x, i3.y = r4.y, n2(e4, y2[v2], y2[v2 + 1], y2[v2 + 2], y2[v2 + 3], y2[v2 + 4], M2, r4), 0 === v2 && true === u2 && l4.copy(r4);
                      }
                      break;
                    case "m":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 2) r4.x += y2[v2 + 0], r4.y += y2[v2 + 1], i3.x = r4.x, i3.y = r4.y, 0 === v2 ? e4.moveTo(r4.x, r4.y) : e4.lineTo(r4.x, r4.y), 0 === v2 && l4.copy(r4);
                      break;
                    case "h":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2++) r4.x += y2[v2], i3.x = r4.x, i3.y = r4.y, e4.lineTo(r4.x, r4.y), 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "v":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2++) r4.y += y2[v2], i3.x = r4.x, i3.y = r4.y, e4.lineTo(r4.x, r4.y), 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "l":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 2) r4.x += y2[v2 + 0], r4.y += y2[v2 + 1], i3.x = r4.x, i3.y = r4.y, e4.lineTo(r4.x, r4.y), 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "c":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 6) e4.bezierCurveTo(r4.x + y2[v2 + 0], r4.y + y2[v2 + 1], r4.x + y2[v2 + 2], r4.y + y2[v2 + 3], r4.x + y2[v2 + 4], r4.y + y2[v2 + 5]), i3.x = r4.x + y2[v2 + 2], i3.y = r4.y + y2[v2 + 3], r4.x += y2[v2 + 4], r4.y += y2[v2 + 5], 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "s":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 4) e4.bezierCurveTo(a2(r4.x, i3.x), a2(r4.y, i3.y), r4.x + y2[v2 + 0], r4.y + y2[v2 + 1], r4.x + y2[v2 + 2], r4.y + y2[v2 + 3]), i3.x = r4.x + y2[v2 + 0], i3.y = r4.y + y2[v2 + 1], r4.x += y2[v2 + 2], r4.y += y2[v2 + 3], 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "q":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 4) e4.quadraticCurveTo(r4.x + y2[v2 + 0], r4.y + y2[v2 + 1], r4.x + y2[v2 + 2], r4.y + y2[v2 + 3]), i3.x = r4.x + y2[v2 + 0], i3.y = r4.y + y2[v2 + 1], r4.x += y2[v2 + 2], r4.y += y2[v2 + 3], 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "t":
                      for (v2 = 0, x2 = (y2 = s2(g2)).length; v2 < x2; v2 += 2) w2 = a2(r4.x, i3.x), b3 = a2(r4.y, i3.y), e4.quadraticCurveTo(w2, b3, r4.x + y2[v2 + 0], r4.y + y2[v2 + 1]), i3.x = w2, i3.y = b3, r4.x = r4.x + y2[v2 + 0], r4.y = r4.y + y2[v2 + 1], 0 === v2 && true === u2 && l4.copy(r4);
                      break;
                    case "a":
                      for (v2 = 0, x2 = (y2 = s2(g2, [3, 4], 7)).length; v2 < x2; v2 += 7) 0 == y2[v2 + 5] && 0 == y2[v2 + 6] || (M2 = r4.clone(), r4.x += y2[v2 + 5], r4.y += y2[v2 + 6], i3.x = r4.x, i3.y = r4.y, n2(e4, y2[v2], y2[v2 + 1], y2[v2 + 2], y2[v2 + 3], y2[v2 + 4], M2, r4), 0 === v2 && true === u2 && l4.copy(r4));
                      break;
                    case "Z":
                    case "z":
                      e4.currentPath.autoClose = true, 0 < e4.currentPath.curves.length && (r4.copy(l4), e4.currentPath.currentPoint.copy(r4), c3 = true);
                      break;
                    default:
                      console.warn(f2);
                  }
                  u2 = false;
                }
                return e4;
              }(e3));
              break;
            case "rect":
              r3 = i2(e3, r3), L = function(t4) {
                var e4 = u(t4.getAttribute("x") || 0), n3 = u(t4.getAttribute("y") || 0), r4 = u(t4.getAttribute("rx") || t4.getAttribute("ry") || 0), i3 = u(t4.getAttribute("ry") || t4.getAttribute("rx") || 0), a3 = u(t4.getAttribute("width")), s3 = u(t4.getAttribute("height")), l4 = 0.448084975506, c3 = new o.ShapePath();
                return c3.moveTo(e4 + r4, n3), c3.lineTo(e4 + a3 - r4, n3), 0 === r4 && 0 === i3 || c3.bezierCurveTo(e4 + a3 - r4 * l4, n3, e4 + a3, n3 + i3 * l4, e4 + a3, n3 + i3), c3.lineTo(e4 + a3, n3 + s3 - i3), 0 === r4 && 0 === i3 || c3.bezierCurveTo(e4 + a3, n3 + s3 - i3 * l4, e4 + a3 - r4 * l4, n3 + s3, e4 + a3 - r4, n3 + s3), c3.lineTo(e4 + r4, n3 + s3), 0 === r4 && 0 === i3 || c3.bezierCurveTo(e4 + r4 * l4, n3 + s3, e4, n3 + s3 - i3 * l4, e4, n3 + s3 - i3), c3.lineTo(e4, n3 + i3), 0 === r4 && 0 === i3 || c3.bezierCurveTo(e4, n3 + i3 * l4, e4 + r4 * l4, n3, e4 + r4, n3), c3;
              }(e3);
              break;
            case "polygon":
              r3 = i2(e3, r3), E = e3, O = new o.ShapePath(), A = 0, E.getAttribute("points").replace(/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g, function(t4, e4, n3) {
                var r4 = u(e4), i3 = u(n3);
                0 === A ? O.moveTo(r4, i3) : O.lineTo(r4, i3), A++;
              }), O.currentPath.autoClose = true, L = O;
              break;
            case "polyline":
              r3 = i2(e3, r3), C = e3, S = new o.ShapePath(), D = 0, C.getAttribute("points").replace(/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g, function(t4, e4, n3) {
                var r4 = u(e4), i3 = u(n3);
                0 === D ? S.moveTo(r4, i3) : S.lineTo(r4, i3), D++;
              }), S.currentPath.autoClose = false, L = S;
              break;
            case "circle":
              r3 = i2(e3, r3), L = function(t4) {
                var e4 = u(t4.getAttribute("cx") || 0), n3 = u(t4.getAttribute("cy") || 0), r4 = u(t4.getAttribute("r") || 0), i3 = new o.Path();
                i3.absarc(e4, n3, r4, 0, 2 * Math.PI, false);
                var a3 = new o.ShapePath();
                return a3.subPaths.push(i3), a3;
              }(e3);
              break;
            case "ellipse":
              r3 = i2(e3, r3), L = function(t4) {
                var e4 = u(t4.getAttribute("cx") || 0), n3 = u(t4.getAttribute("cy") || 0), r4 = u(t4.getAttribute("rx") || 0), i3 = u(t4.getAttribute("ry") || 0), a3 = new o.Path();
                a3.absellipse(e4, n3, r4, i3, 0, 2 * Math.PI, void 0, void 0);
                var s3 = new o.ShapePath();
                return s3.subPaths.push(a3), s3;
              }(e3);
              break;
            case "line":
              r3 = i2(e3, r3), c2 = u((l3 = e3).getAttribute("x1") || 0), b2 = u(l3.getAttribute("y1") || 0), M = u(l3.getAttribute("x2") || 0), _ = u(l3.getAttribute("y2") || 0), (T = new o.ShapePath()).moveTo(c2, b2), T.lineTo(M, _), T.currentPath.autoClose = false, L = T;
              break;
            case "defs":
              R = false;
              break;
            case "use":
              r3 = i2(e3, r3);
              var I = e3.href.baseVal.substring(1), k = e3.viewportElement.getElementById(I);
              k ? t3(k, r3) : console.warn("SVGLoader: 'use node' references non-existent node id: " + I);
          }
          if (L && (void 0 !== r3.fill && "none" !== r3.fill && L.color.setStyle(r3.fill), function(t4, e4) {
            function n3(t5) {
              x.set(t5.x, t5.y, 1).applyMatrix3(e4), t5.set(x.x, x.y);
            }
            for (var r4 = function(t5) {
              return 0 !== t5.elements[1] || 0 !== t5.elements[3];
            }(e4), i3 = t4.subPaths, a3 = 0, o2 = i3.length; a3 < o2; a3++) for (var s3 = i3[a3].curves, l4 = 0; l4 < s3.length; l4++) {
              var c3 = s3[l4];
              c3.isLineCurve ? (n3(c3.v1), n3(c3.v2)) : c3.isCubicBezierCurve ? (n3(c3.v0), n3(c3.v1), n3(c3.v2), n3(c3.v3)) : c3.isQuadraticBezierCurve ? (n3(c3.v0), n3(c3.v1), n3(c3.v2)) : c3.isEllipseCurve && (r4 && console.warn("SVGLoader: Elliptic arc or ellipse rotation or skewing is not implemented."), v.set(c3.aX, c3.aY), n3(v), c3.aX = v.x, c3.aY = v.y, c3.xRadius *= (h2 = e4.elements, Math.sqrt(h2[0] * h2[0] + h2[1] * h2[1])), c3.yRadius *= (u2 = e4.elements, Math.sqrt(u2[3] * u2[3] + u2[4] * u2[4])));
            }
            var u2, h2;
          }(L, w), h.push(L), L.userData = { node: e3, style: r3 }), R) for (var j = e3.childNodes, N = 0; N < j.length; N++) t3(j[N], r3);
          P && (d.pop(), 0 < d.length ? w.copy(d[d.length - 1]) : w.identity());
        }
      }(b.documentElement, { fill: "#000", fillOpacity: 1, strokeOpacity: 1, strokeWidth: 1, strokeLineJoin: "miter", strokeLineCap: "butt", strokeMiterLimit: 4 }), { paths: h, xml: b.documentElement };
    }, l.createShapes = function(t2) {
      var e2 = 999999999, n2 = { ORIGIN: 0, DESTINATION: 1, BETWEEN: 2, LEFT: 3, RIGHT: 4, BEHIND: 5, BEYOND: 6 }, r2 = { loc: n2.ORIGIN, t: 0 };
      function i2(t3, e3, i3, o2) {
        var s3 = t3.x, l3 = e3.x, c2 = i3.x, u2 = o2.x, h2 = t3.y, p2 = e3.y, d2 = i3.y, f = o2.y, m = (u2 - c2) * (h2 - d2) - (f - d2) * (s3 - c2), g = (f - d2) * (l3 - s3) - (u2 - c2) * (p2 - h2), y = m / g, v = ((l3 - s3) * (h2 - d2) - (p2 - h2) * (s3 - c2)) / g;
        if (0 == g && 0 != m || y <= 0 || 1 <= y || v < 0 || 1 < v) return null;
        if (0 == m && 0 == g) {
          for (var x = 0; x < 2; x++) {
            if (a2(0 === x ? i3 : o2, t3, e3), r2.loc == n2.ORIGIN) return { x: (w = 0 === x ? i3 : o2).x, y: w.y, t: r2.t };
            if (r2.loc == n2.BETWEEN) return { x: +(s3 + r2.t * (l3 - s3)).toPrecision(10), y: +(h2 + r2.t * (p2 - h2)).toPrecision(10), t: r2.t };
          }
          return null;
        }
        for (x = 0; x < 2; x++) {
          var w;
          if (a2(0 === x ? i3 : o2, t3, e3), r2.loc == n2.ORIGIN) return { x: (w = 0 === x ? i3 : o2).x, y: w.y, t: r2.t };
        }
        return { x: +(s3 + y * (l3 - s3)).toPrecision(10), y: +(h2 + y * (p2 - h2)).toPrecision(10), t: y };
      }
      function a2(t3, e3, i3) {
        var a3, o2 = i3.x - e3.x, s3 = i3.y - e3.y, l3 = t3.x - e3.x, c2 = t3.y - e3.y, u2 = o2 * c2 - l3 * s3;
        return t3.x === e3.x && t3.y === e3.y ? (r2.loc = n2.ORIGIN, r2.t = 0) : t3.x === i3.x && t3.y === i3.y ? (r2.loc = n2.DESTINATION, r2.t = 1, 0) : void (u2 < -Number.EPSILON ? r2.loc = n2.LEFT : u2 > Number.EPSILON ? r2.loc = n2.RIGHT : o2 * l3 < 0 || s3 * c2 < 0 ? r2.loc = n2.BEHIND : Math.sqrt(o2 * o2 + s3 * s3) < Math.sqrt(l3 * l3 + c2 * c2) ? r2.loc = n2.BEYOND : (a3 = 0 != o2 ? l3 / o2 : c2 / s3, r2.loc = n2.BETWEEN, r2.t = a3));
      }
      function s2(t3, e3, n3) {
        var r3 = new o.Vector2();
        e3.getCenter(r3);
        var a3 = [];
        return n3.forEach(function(e4) {
          e4.boundingBox.containsPoint(r3) && function(t4, e5) {
            for (var n4 = [], r4 = [], a4 = 1; a4 < t4.length; a4++) for (var s3 = t4[a4 - 1], l3 = t4[a4], c2 = function(t5) {
              var a5 = e5[t5 - 1], c3 = e5[t5], u3 = i2(s3, l3, a5, c3);
              null !== u3 && void 0 === n4.find(function(t6) {
                return t6.t <= u3.t + Number.EPSILON && t6.t >= u3.t - Number.EPSILON;
              }) && (n4.push(u3), r4.push(new o.Vector2(u3.x, u3.y)));
            }, u2 = 1; u2 < e5.length; u2++) c2(u2);
            return r4;
          }(t3, e4.points).forEach(function(t4) {
            a3.push({ identifier: e4.identifier, isCW: e4.isCW, point: t4 });
          });
        }), a3.sort(function(t4, e4) {
          return t4.point.x - e4.point.x;
        }), a3;
      }
      var l2 = 0, c = e2, u = -e2, h = t2.subPaths.map(function(t3) {
        for (var n3 = t3.getPoints(), r3 = -e2, i3 = e2, a3 = -e2, s3 = e2, h2 = 0; h2 < n3.length; h2++) {
          var p2 = n3[h2];
          p2.y > r3 && (r3 = p2.y), p2.y < i3 && (i3 = p2.y), p2.x > a3 && (a3 = p2.x), p2.x < s3 && (s3 = p2.x);
        }
        return u <= a3 && (u = a3 + 1), s3 <= c && (c = s3 - 1), { curves: t3.curves, points: n3, isCW: o.ShapeUtils.isClockWise(n3), identifier: l2++, boundingBox: new o.Box2(new o.Vector2(s3, i3), new o.Vector2(a3, r3)) };
      });
      h = h.filter(function(t3) {
        return 1 < t3.points.length;
      }), l2 = 0;
      var p = (h = h.map(function(t3) {
        return t3.identifier = l2, l2++, t3;
      })).map(function(e3) {
        return function(t3, e4, n3, r3, i3) {
          null != i3 && "" !== i3 || (i3 = "nonzero");
          var a3 = new o.Vector2();
          t3.boundingBox.getCenter(a3);
          var l3 = s2([new o.Vector2(n3, a3.y), new o.Vector2(r3, a3.y)], t3.boundingBox, e4);
          l3.sort(function(t4, e5) {
            return t4.point.x - e5.point.x;
          });
          var c2 = [], u2 = [];
          l3.forEach(function(e5) {
            e5.identifier === t3.identifier ? c2.push(e5) : u2.push(e5);
          });
          for (var h2 = c2[0].point.x, p2 = [], d2 = 0; d2 < u2.length && u2[d2].point.x < h2; ) 0 < p2.length && p2[p2.length - 1] === u2[d2].identifier ? p2.pop() : p2.push(u2[d2].identifier), d2++;
          if (p2.push(t3.identifier), "evenodd" === i3) {
            var f = p2.length % 2 == 0, m = p2[p2.length - 2];
            return { identifier: t3.identifier, isHole: f, for: m };
          }
          if ("nonzero" === i3) {
            f = true;
            for (var g = m = null, y = 0; y < p2.length; y++) {
              var v = p2[y];
              f ? (g = e4[v].isCW, f = false, m = v) : g !== e4[v].isCW && (g = e4[v].isCW, f = true);
            }
            return { identifier: t3.identifier, isHole: f, for: m };
          }
          console.warn('fill-rule: "' + i3 + '" is currently not implemented.');
        }(e3, h, c, u, t2.userData.style.fillRule);
      }), d = [];
      return h.forEach(function(t3) {
        if (!p[t3.identifier].isHole) {
          var e3 = new o.Shape();
          e3.curves = t3.curves, p.filter(function(e4) {
            return e4.isHole && e4.for === t3.identifier;
          }).forEach(function(t4) {
            var n3 = h[t4.identifier], r3 = new o.Path();
            r3.curves = n3.curves, e3.holes.push(r3);
          }), d.push(e3);
        }
      }), d;
    }, l.getStrokeStyle = function(t2, e2, n2, r2, i2) {
      return { strokeColor: e2 = void 0 !== e2 ? e2 : "#000", strokeWidth: t2 = void 0 !== t2 ? t2 : 1, strokeLineJoin: n2 = void 0 !== n2 ? n2 : "miter", strokeLineCap: r2 = void 0 !== r2 ? r2 : "butt", strokeMiterLimit: i2 = void 0 !== i2 ? i2 : 4 };
    }, l.pointsToStroke = function(t2, e2, n2, r2) {
      var i2 = [], a2 = [], s2 = [];
      if (0 === l.pointsToStrokeWithBuffers(t2, e2, n2, r2, i2, a2, s2)) return null;
      var c = new o.BufferGeometry();
      return c.setAttribute("position", new o.Float32BufferAttribute(i2, 3)), c.setAttribute("normal", new o.Float32BufferAttribute(a2, 3)), c.setAttribute("uv", new o.Float32BufferAttribute(s2, 2)), c;
    }, l.pointsToStrokeWithBuffers = function(t2, e2, n2, r2, i2, a2, s2, l2) {
      var c = new o.Vector2(), u = new o.Vector2(), h = new o.Vector2(), p = new o.Vector2(), d = new o.Vector2(), f = new o.Vector2(), m = new o.Vector2(), g = new o.Vector2(), y = new o.Vector2(), v = new o.Vector2(), x = new o.Vector2(), w = new o.Vector2(), b = new o.Vector2(), M = new o.Vector2(), _ = new o.Vector2(), T = new o.Vector2(), C = new o.Vector2();
      n2 = void 0 !== n2 ? n2 : 12, r2 = void 0 !== r2 ? r2 : 1e-3, l2 = void 0 !== l2 ? l2 : 0;
      var S = (t2 = function(t3) {
        for (var e3 = false, n3 = 1, i3 = t3.length - 1; n3 < i3; n3++) if (t3[n3].distanceTo(t3[n3 + 1]) < r2) {
          e3 = true;
          break;
        }
        if (!e3) return t3;
        var a3 = [];
        for (a3.push(t3[0]), n3 = 1, i3 = t3.length - 1; n3 < i3; n3++) t3[n3].distanceTo(t3[n3 + 1]) >= r2 && a3.push(t3[n3]);
        return a3.push(t3[t3.length - 1]), a3;
      }(t2)).length;
      if (S < 2) return 0;
      var D, E, O, A, P, R, L = t2[0].equals(t2[S - 1]), I = t2[0], k = e2.strokeWidth / 2, j = 1 / (S - 1), N = 0, V = false, F = 0, B = 3 * l2, G = 2 * l2;
      $2(t2[0], t2[1], c).multiplyScalar(k), g.copy(t2[0]).sub(c), y.copy(t2[0]).add(c), v.copy(g), x.copy(y);
      for (var z = 1; z < S; z++) {
        D = t2[z], E = z === S - 1 ? L ? t2[1] : void 0 : t2[z + 1];
        var U = c;
        if ($2(I, D, U), h.copy(U).multiplyScalar(k), w.copy(D).sub(h), b.copy(D).add(h), O = N + j, A = false, void 0 !== E) {
          $2(D, E, u), h.copy(u).multiplyScalar(k), M.copy(D).sub(h), _.copy(D).add(h), P = true, h.subVectors(E, I), U.dot(h) < 0 && (P = false), 1 === z && (V = P), h.subVectors(E, D), h.normalize();
          var H = Math.abs(U.dot(h));
          if (0 !== H) {
            var W = k / H;
            h.multiplyScalar(-W), p.subVectors(D, I), d.copy(p).setLength(W).add(h), T.copy(d).negate();
            var J = d.length(), q = p.length();
            p.divideScalar(q), f.subVectors(E, D);
            var X = f.length();
            switch (f.divideScalar(X), p.dot(T) < q && f.dot(T) < X && (A = true), C.copy(d).add(D), T.add(D), R = false, A ? P ? (_.copy(T), b.copy(T)) : (M.copy(T), w.copy(T)) : et(), e2.strokeLineJoin) {
              case "bevel":
                nt(P, A, O);
                break;
              case "round":
                rt(P, A), P ? tt(D, w, M, O, 0) : tt(D, _, b, O, 1);
                break;
              default:
                var Y = k * e2.strokeMiterLimit / J;
                if (Y < 1) {
                  if ("miter-clip" !== e2.strokeLineJoin) {
                    nt(P, A, O);
                    break;
                  }
                  rt(P, A), P ? (f.subVectors(C, w).multiplyScalar(Y).add(w), m.subVectors(C, M).multiplyScalar(Y).add(M), Q(w, O, 0), Q(f, O, 0), Q(D, O, 0.5), Q(D, O, 0.5), Q(f, O, 0), Q(m, O, 0), Q(D, O, 0.5), Q(m, O, 0), Q(M, O, 0)) : (f.subVectors(C, b).multiplyScalar(Y).add(b), m.subVectors(C, _).multiplyScalar(Y).add(_), Q(b, O, 1), Q(f, O, 1), Q(D, O, 0.5), Q(D, O, 0.5), Q(f, O, 1), Q(m, O, 1), Q(D, O, 0.5), Q(m, O, 1), Q(_, O, 1));
                } else A ? (P ? (Q(y, N, 1), Q(g, N, 0), Q(C, O, 0), Q(y, N, 1), Q(C, O, 0), Q(T, O, 1)) : (Q(y, N, 1), Q(g, N, 0), Q(C, O, 1), Q(g, N, 0), Q(T, O, 0), Q(C, O, 1)), P ? M.copy(C) : _.copy(C)) : P ? (Q(w, O, 0), Q(C, O, 0), Q(D, O, 0.5), Q(D, O, 0.5), Q(C, O, 0), Q(M, O, 0)) : (Q(b, O, 1), Q(C, O, 1), Q(D, O, 0.5), Q(D, O, 0.5), Q(C, O, 1), Q(_, O, 1)), R = true;
            }
          } else et();
        } else et();
        L || z !== S - 1 || it(t2[0], v, x, P, true, N), N = O, I = D, g.copy(M), y.copy(_);
      }
      if (L) {
        if (A && i2) {
          var Z = C, K = T;
          V !== P && (Z = T, K = C), P ? (R || V) && (K.toArray(i2, 0), K.toArray(i2, 9), R && Z.toArray(i2, 3)) : !R && V || (K.toArray(i2, 3), K.toArray(i2, 9), R && Z.toArray(i2, 0));
        }
      } else it(D, w, b, P, false, O);
      return F;
      function $2(t3, e3, n3) {
        return n3.subVectors(e3, t3), n3.set(-n3.y, n3.x).normalize();
      }
      function Q(t3, e3, n3) {
        i2 && (i2[B] = t3.x, i2[B + 1] = t3.y, i2[B + 2] = 0, a2 && (a2[B] = 0, a2[B + 1] = 0, a2[B + 2] = 1), B += 3, s2 && (s2[G] = e3, s2[G + 1] = n3, G += 2)), F += 3;
      }
      function tt(t3, e3, r3, i3, a3) {
        c.copy(e3).sub(t3).normalize(), u.copy(r3).sub(t3).normalize();
        var o2 = Math.PI, s3 = c.dot(u);
        Math.abs(s3) < 1 && (o2 = Math.abs(Math.acos(s3))), o2 /= n2, h.copy(e3);
        for (var l3 = 0, d2 = n2 - 1; l3 < d2; l3++) p.copy(h).rotateAround(t3, o2), Q(h, i3, a3), Q(p, i3, a3), Q(t3, i3, 0.5), h.copy(p);
        Q(p, i3, a3), Q(r3, i3, a3), Q(t3, i3, 0.5);
      }
      function et() {
        Q(y, N, 1), Q(g, N, 0), Q(w, O, 0), Q(y, N, 1), Q(w, O, 1), Q(b, O, 0);
      }
      function nt(t3, e3, n3) {
        e3 ? (t3 ? (Q(y, N, 1), Q(g, N, 0), Q(w, O, 0), Q(y, N, 1), Q(w, O, 0), Q(T, O, 1), Q(w, n3, 0), Q(M, n3, 0)) : (Q(y, N, 1), Q(g, N, 0), Q(b, O, 1), Q(g, N, 0), Q(T, O, 0), Q(b, O, 1), Q(b, n3, 1), Q(_, n3, 0)), Q(T, n3, 0.5)) : (t3 ? (Q(w, n3, 0), Q(M, n3, 0)) : (Q(b, n3, 1), Q(_, n3, 0)), Q(D, n3, 0.5));
      }
      function rt(t3, e3) {
        e3 && (t3 ? (Q(y, N, 1), Q(g, N, 0), Q(w, O, 0), Q(y, N, 1), Q(w, O, 0), Q(T, O, 1), Q(w, N, 0), Q(D, O, 0.5), Q(T, O, 1), Q(D, O, 0.5), Q(M, N, 0), Q(T, O, 1)) : (Q(y, N, 1), Q(g, N, 0), Q(b, O, 1), Q(g, N, 0), Q(T, O, 0), Q(b, O, 1), Q(b, N, 1), Q(T, O, 0), Q(D, O, 0.5), Q(D, O, 0.5), Q(T, O, 0), Q(_, N, 1)));
      }
      function it(t3, n3, r3, a3, o2, s3) {
        switch (e2.strokeLineCap) {
          case "round":
            o2 ? tt(t3, r3, n3, s3, 0.5) : tt(t3, n3, r3, s3, 0.5);
            break;
          case "square":
            if (o2) c.subVectors(n3, t3), u.set(c.y, -c.x), h.addVectors(c, u).add(t3), p.subVectors(u, c).add(t3), a3 ? (h.toArray(i2, 3), p.toArray(i2, 0), p.toArray(i2, 9)) : (h.toArray(i2, 3), h.toArray(i2, 9), p.toArray(i2, 0));
            else {
              c.subVectors(r3, t3), u.set(c.y, -c.x), h.addVectors(c, u).add(t3), p.subVectors(u, c).add(t3);
              var l3 = i2.length;
              a3 ? (h.toArray(i2, l3 - 3), p.toArray(i2, l3 - 6)) : (h.toArray(i2, l3 - 6), p.toArray(i2, l3 - 3)), p.toArray(i2, l3 - 12);
            }
        }
      }
    }, l);
    function l(t2) {
      var e2 = a.call(this, t2) || this;
      return e2.defaultDPI = 90, e2.defaultUnit = "px", e2;
    }
    n.SVGLoader = s;
  }, { three: 19 }], 61: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MxTest = void 0;
    var a, o, s, l = t("../Operate/MrxDbgUiPrBase"), c = t("../Operate/MrxDbgUiPrPoint"), u = t("../MxThreeJS"), h = t("three"), p = t("../MxFun"), d = t("../View/MxDbEntity"), f = t("../MrxDbgUtils"), m = t("../Operate/MrxDbgUiPrDist"), g = (t("../MxString"), i(y, a = d.MxDbEntityUserObject), y.prototype.worldDraw = function(t2) {
      var e2 = new h.Vector3(this.pt.x - this.r, this.pt.y - this.r, 0), n2 = new h.Vector3(this.pt.x + this.r, this.pt.y + this.r, 0);
      new h.Vector3(e2.x, n2.y);
      var r2 = new h.Vector3(n2.x, e2.y);
      t2.setDashLineDisplay(true), t2.setDash(0.1, 0.2), t2.drawLine(r2, e2);
    }, y.prototype.setPoint = function(t2) {
      this.pt = t2;
    }, y.prototype.setR = function(t2) {
      this.r = t2;
    }, y.prototype.getTypeName = function() {
      return "MxDbTest";
    }, y.prototype.getGripPoints = function() {
      var t2 = [];
      return t2.push(this.pt), t2;
    }, y.prototype.moveGripPointsAt = function(t2, e2) {
      return 0 == t2 && this.pt.add(e2), true;
    }, y.prototype.dwgIn = function(t2) {
      return a.prototype.dwgIn.call(this, t2), this.pt.copy(t2.pt), this.r = t2.r, true;
    }, y.prototype.dwgOut = function(t2) {
      return a.prototype.dwgOut.call(this, t2), t2.pt = this.pt, t2.r = this.r, t2;
    }, y.prototype.create = function() {
      return new y();
    }, y);
    function y() {
      var t2 = null !== a && a.apply(this, arguments) || this;
      return t2.pt = new h.Vector3(), t2.r = 100, t2;
    }
    function v(t2) {
      var e2 = new c.MrxDbgUiPrPoint();
      e2.setMessage("\n指定第一点:"), e2.go(function(t3) {
        if (0 == t3) {
          var n2 = e2.value(), r2 = new h.Vector3();
          r2.x = n2.x, r2.y = n2.y;
          var i2 = new l.McEdGetPointWorldDrawObject();
          i2.setDraw(function(t4, e3) {
            e3.setColor(255), e3.drawLine(t4, r2);
          }), e2.setUserDraw(i2), e2.setMessage("\n指定下一点:"), e2.go(function(t4) {
            if (0 == t4) {
              var r3 = e2.value(), i3 = p.MxFun.getCurrentDraw(), a2 = u.MxThreeJS.createLine(n2, r3, 16777215);
              i3.addObject(a2);
            }
          });
        }
      });
    }
    function x() {
      var t2 = new c.MrxDbgUiPrPoint();
      t2.setMessage("\n指定第一点:"), t2.go(function(e2) {
        if (0 == e2) {
          var n2 = p.MxFun.getCurrentDraw(), r2 = new g();
          r2.setColor(16711680), r2.setPoint(t2.value()), r2.setR(n2.viewCoordLong2Cad(100)), n2.addMxEntity(r2), n2.addMxCurrentSelect(r2.objectId());
        }
      });
    }
    function w() {
      f.MrxDbgUtils.selectEnt("Test").then(function(t2) {
        console.log(t2);
      });
    }
    function b() {
      var t2 = p.MxFun.getCurrentDraw();
      s ? (t2.eraseAllMxEntity(), t2.loadMxEntityFromJson(s)) : (s = t2.saveMxEntityToJson(), console.log(s));
    }
    function M() {
      p.MxFun.openFile("demo/buf/hhhh.dwg?token=123456");
    }
    function _() {
      var t2 = new c.MrxDbgUiPrPoint();
      t2.setMessage("\n指定第一点:"), t2.go(function(e2) {
        if (0 == e2) {
          var n2 = t2.value();
          f.MrxDbgUtils.getCorner(n2, "Test", true).then(function(t3) {
            console.log("xxxdddd"), console.log(t3);
          });
        }
      });
    }
    function T() {
      var t2 = new m.MrxDbgUiPrDist();
      t2.setMessage("\n输入距离:"), t2.go(function(e2) {
        if (0 == e2) {
          var n2 = t2.value();
          console.log(n2);
        }
      });
    }
    (o || (n.MxTest = o = {})).registerCommand = function() {
      console.log("regist mx test"), new g().init(), p.MxFun.addCommand("MxTest_GetPoint", v), p.MxFun.addCommand("MxTest_GetDist", T), p.MxFun.addCommand("MxTest_DrawCustomEntity", x), p.MxFun.addCommand("MxTest_EntSel", w), p.MxFun.addCommand("MxTest_SaveMxDbEntityToJson", b), p.MxFun.addCommand("MxTest_OpenFile", M), p.MxFun.addCommand("MxTest_GetCorner", _), p.MxFun.addWindowsEvent(function(t2, e2) {
        if ("mouseup" == t2) {
          if (p.MxFun.isRunningCommand()) return 0;
          if (0 != e2.button) return 0;
          var n2 = e2.srcElement;
          if (n2 && "CANVAS" == n2.tagName) {
            var r2 = p.MxFun.getCurrentDraw(), i2 = new h.Vector3(e2.offsetX, e2.offsetY, 0);
            r2.findMxEntityAtPoint(i2, false).length && e2.preventDefault();
          }
          return 0;
        }
      });
    };
  }, { "../MrxDbgUtils": 20, "../MxFun": 27, "../MxString": 34, "../MxThreeJS": 37, "../Operate/MrxDbgUiPrBase": 45, "../Operate/MrxDbgUiPrDist": 46, "../Operate/MrxDbgUiPrPoint": 47, "../View/MxDbEntity": 69, three: 19 }], 62: [function(require, module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true }), exports.MxUiObject = exports.MxToolBarItem = exports.MxMenuItem = void 0;
    var MxFun_1 = require("../MxFun"), MxMenuItem = function() {
      this.id = -1, this.text = "", this.evalString = "", this.parentId = -1;
    };
    exports.MxMenuItem = MxMenuItem;
    var MxToolBarItem = function() {
      this.isMxCommand = false, this.itemid = "";
    };
    exports.MxToolBarItem = MxToolBarItem;
    var MxUiObject = function() {
      function MxUiObject() {
        this.vecMenuItem = new Array(), this.vecToolBarItem = new Array(), this.uiPath = "./ui", this.idMenuItemCount = 100, this.isShowTitle = false, this.isShowStructTree = false, this.isEnableLoading = true, this.isShowLayer = false, this.isShowTakeColor = false, this.isShowLayout = false, this.isEnableObjectProperty = false, this.isShowToolbar = false, this.isShowMainMenu = false, this.sTitle = "", this.sLanguageTable = { layout: "布局", layer: "图层", visible: "可见", color: "颜色", name: "名字", status: "状态", openComplete: "提示：打开图纸完成" };
      }
      return MxUiObject.prototype.SetLayoutData = function(t) {
        this.vecLayoutData = t;
      }, MxUiObject.prototype.CallMxCommand = function(t) {
        MxFun_1.MxFun.callCommand(t, "");
      }, MxUiObject.prototype.EvalJs = function(value) {
        eval(value);
      }, MxUiObject.prototype.SetLayerData = function(t) {
        this.vecLayerData = t;
      }, MxUiObject.prototype.SetSketchLayerData = function(t) {
        this.vecSketchLayerData = t;
      }, MxUiObject.prototype.init = function() {
        this.onInit();
      }, MxUiObject.prototype.addMenuItem = function(t, e, n, r) {
        void 0 === e && (e = ""), void 0 === n && (n = -1), void 0 === r && (r = -1);
        var i = new MxMenuItem();
        i.text = t, i.evalString = e, -1 == r && (r = this.idMenuItemCount, this.idMenuItemCount++), i.id = r, i.parentId = n, this.vecMenuItem.push(i);
      }, MxUiObject.prototype.addToolBarItem = function(t, e, n, r, i) {
        void 0 === e && (e = ""), void 0 === n && (n = ""), void 0 === r && (r = false), void 0 === i && (i = "");
        var a = new MxToolBarItem();
        a.image = t, a.evalString = n, a.text = e, a.isMxCommand = r, a.itemid = i, this.vecToolBarItem.push(a);
      }, MxUiObject.prototype.setPath = function(t) {
        this.uiPath = t;
      }, MxUiObject.prototype.getPath = function() {
        return this.uiPath;
      }, MxUiObject.prototype.create = function() {
        this.onCreate();
      }, MxUiObject.prototype.writeUICSS = function() {
        var t = this.uiPath;
        MxFun_1.MxFun.isPC() ? (document.write("<link rel='stylesheet' href='" + t + "/css/mxbimpcm.css'>"), this.isShowMainMenu && (document.write("<link rel='stylesheet' href='" + t + "/css/rightfacefonts2.css'>"), document.write("<link rel='stylesheet' href='" + t + "/css/rightmnu.css'>"), document.write("<script type='text/javascript' src='" + t + "/hc-mobile-nav.js'><\/script>"))) : (document.write("<link rel='stylesheet' href='" + t + "/css/mxmobile.css'>"), this.isShowMainMenu && (document.write("<link href='" + t + "/css/font-awesome.min.css' rel='stylesheet'>"), document.write("<link rel='stylesheet' href='" + t + "/css/rightfacefonts1.css'>"), document.write("<link rel='stylesheet' href='" + t + "/css/rightfacefonts2.css'>"), document.write("<link rel='stylesheet' href='" + t + "/css/rightmnu.css'>"), document.write("<script type='text/javascript' src='" + t + "/hc-mobile-nav.js'><\/script>")));
      }, MxUiObject;
    }();
    exports.MxUiObject = MxUiObject;
  }, { "../MxFun": 27 }], 63: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MxUiObjectMobile = void 0;
    var a, o = t("./MxUiObject"), s = t("../MxFun"), l = (i(c, a = o.MxUiObject), c.prototype.onCreate = function() {
      this.isShowTitle && this.WriteTitle(), this.WriteStructTree(), this.isEnableLoading && this.WriteLoading(), this.WriteLayer(), this.WriteTakeColor(), this.WriteLayout(), this.isEnableObjectProperty && this.WriteObjectProperty(), this.isShowToolbar && this.WriteToolbar();
    }, c.prototype.onInit = function() {
      this.InitEvent();
    }, c.prototype.ShowLoading = function() {
      this.isEnableLoading && ($(".Prompt").css("background", "rgba(0, 0, 0, 0)"), $(".Prompt").fadeIn(100), $(".Prompt span").css("display", "none"));
    }, c.prototype.HideLoading = function() {
      this.isEnableLoading && ($(".Prompt").css("background", "rgba(0, 0, 0, 0.8)"), $(".Prompt div").fadeOut(100), $(".Prompt span").fadeIn(200), setTimeout(function() {
        $(".Prompt").fadeOut(1e3);
      }, 1e3));
    }, c.prototype.ShowObjectProperty = function(t2) {
      if (0 != t2.length) {
        var e2;
        e2 = "string" == typeof t2 ? JSON.parse(t2) : t2;
        var n2 = "";
        for (var r2 in e2) {
          var i2 = e2[r2];
          for (var a2 in n2 += '<tbody class="bf-group undefined bf-collapse">', n2 += '<tr class="bf-group-title">', n2 += '<td colspan="2"><i class="bf-icon" style=" padding: 12px;"></i>' + i2.name + "</td>", n2 += "</tr>", i2.datas) {
            var o2 = i2.datas[a2];
            n2 += "<tr class='bf-group-content'>", n2 += "<td class='bf-key'>" + o2.name + "</td>", n2 += "<td class='bf-value'>" + o2.value + "</td>", n2 += "</tr>";
          }
          n2 += "</tbody>";
        }
        document.getElementById("ComponentContent").innerHTML = n2, $(".bf-group").click(function() {
          $(this).hasClass("bf-collapse") ? $(this).removeClass("bf-collapse") : $(this).addClass("bf-collapse");
        });
      }
    }, c.prototype.HideObjectProp = function() {
    }, c.prototype.SwitchShowLayer = function() {
      var t2 = document.getElementById("LayerInterface");
      "none" == t2.style.display ? (t2.style.display = "block", t2.style.left = "80px", t2.style.top = "50px") : t2.style.display = "none";
    }, c.prototype.SwitchShowStructTree = function() {
    }, c.prototype.Chosecolor = function() {
      document.getElementById("color-picker").click();
    }, c.prototype.ColorChange = function(t2) {
      document.getElementById("colorbox").style.backgroundColor = t2, s.MxFun.setCurrentColor(t2);
    }, c.prototype.SwitchShowLayout = function() {
      var t2 = document.getElementById("LayerOutInterface");
      "none" == t2.style.display ? t2.style.display = "block" : t2.style.display = "none";
    }, c.prototype.WriteTitle = function() {
      var t2 = this.uiPath;
      document.write("<div class='bar1'>"), document.write("<img src='" + t2 + "/image/mxcad.png' style='height: 50%;position: absolute;top: 12px;left: 10px;'>"), document.write("<span  class='barspan'  style='position: absolute;left: 45px;'>"), document.write("</span>"), document.write("<div id='container'>"), this.isShowMainMenu && (document.write("<header>"), document.write("<div class='wrapper cf'style='z-index: 999'>"), document.write("<nav id='main-nav' >"), document.write("</nav>"), document.write("<a class='toggle'>"), document.write("<span></span>"), document.write("</a>"), document.write("</div>"), document.write("</header>")), document.write("</div>"), document.write("</div>");
    }, c.prototype.WriteToolbar = function() {
      document.write("<div id='MainMenuContent' class='bf-toolbar bf-toolbar-bottom'>"), document.write("</div>");
    }, c.prototype.WriteLoading = function() {
      var t2 = this.uiPath;
      document.write("<div class='Prompt' style='width: 100px;height:30px;position:"), document.write("absolute;top: 60px;left: 50%;margin-left: -50px;color: #fff;text-align: center;'>"), document.write("<div style='text-align: center;'>"), document.write("<img src='" + t2 + "/image/loading.gif' alt='' style='width:30px;height:30px;float: left'>"), document.write("<p style='color:black;vertical-align: middle;float: left;  margin-top: 5px;margin-left: 5px;'>加载中.....</p>"), document.write("</div>"), document.write("<span style='vertical-align: middle;display: none'>图纸加载完毕</span>"), document.write("</div>");
    }, c.prototype.WriteLayer = function() {
      var t2 = this.uiPath;
      this.isShowLayer && (document.write("<div class='bf-toolbar bf-toolbar bf-tree-toolbar' title='ModelTree' style='position: absolute; top:111px;left: 0px;' onclick='uiObj.SwitchShowLayer()'>"), document.write("<div class='bf-button mxbim-bf-tree' title='图层'>"), document.write("<img src='" + t2 + "/image/layer.png.gif' alt='' style='width: 24px;'>"), document.write("</div>"), document.write("</div>")), document.write("<div class='bf-panel bf-has-title bf-sizable' id='LayerInterface' title='图层'"), document.write("style='left: 0px;"), document.write("top: 0px;"), document.write("width: 100%;"), document.write("height: 100%;"), document.write("display: none;'>"), document.write("<div class='bf-close' onclick='uiObj.SwitchShowLayer()' style='text-align: center;'><i class='fa fa-times' aria-hidden='true'></i></div>"), document.write("<div class='bf-title' style='cursor: move; user-select: none;'>图层</div>"), document.write("<div>"), document.write("<div class='layer-title' style='width: 12.5%;'>可见</div>"), document.write("<div class='layer-title' style='width: 12.5%;'>颜色</div>"), document.write("<div class='layer-title' style='width: 62.5%'>名字</div>"), document.write("<div class='layer-title' style='width: 12.5%'>状态</div>"), document.write("</div>"), document.write("<div id='Layer-Info'  style='margin-top: 26px;height: 79%;width: 100%; position: absolute;overflow-y: auto;'>"), document.write("</div>"), document.write("</div>");
    }, c.prototype.WriteStructTree = function() {
      this.isShowStructTree && (document.write("<div class='bf-toolbar bf-toolbar bf-tree-toolbar' id='Fmj' title='ModelTree'"), document.write("style='position: absolute; top:60px;left: 0px;' onclick='uiObj.SwitchShowStructTree()'>"), document.write("<div class='bf-button mxbim-bf-tree' title='构件树'><i class='fa fa-sitemap' aria-hidden='true' style='font-size: 24px;'></i></div>"), document.write("</div>")), document.write("<div class='bf-panel  bf-has-title bf-sizable tree-panel' id='dv' title='目录树' style='left: 0px; top: 0px; width: 100%; height: 100%; display: none;'>"), document.write("<div class='bf-close' onclick='uiObj.SwitchShowStructTree()'><i class='fa fa-times fa-2x' aria-hidden='true'></i></div>"), document.write("<div class='bf-title' style='cursor: move; user-select: none;'>目录树</div>"), document.write("<div class='bf-panel-body' style='padding-top: 57px;overflow-y: scroll;'>"), document.write("<div class='bf-panel-header'>"), document.write("<div class='bf-panel-header'>"), document.write("<div class='bf-tree-header' style='margin-top: -57px;'>"), document.write("<div class='bf-tabs bf-tabs-tree'>"), document.write("<ul class='bf-tabs-list'>"), document.write("<li class='bf-tabs-option my-option undefined active' id='component'>构件</li>"), document.write("<li class='bf-tabs-option my-option undefined' id='area'>空间</li>"), document.write("<li class='bf-tabs-option my-option undefined' id='drawing'>图纸</li>"), document.write("</ul>"), document.write("</div>"), document.write("</div>"), document.write("</div>"), document.write("</div>"), document.write("<div class='' style='margin-bottom: 100px;' id='DirectoryContent'>"), document.write("</div>"), document.write("</div>"), document.write("</div>");
    }, c.prototype.WriteTakeColor = function() {
      var t2 = this.uiPath;
      this.isShowTakeColor && (document.write("<div class='bf-toolbar bf-toolbar bf-tree-toolbar' id='TakeColor'"), document.write("style='position: absolute;left: 0px; top: 162px;width: 45px; '>"), document.write("<div class='bf-button' onclick='uiObj.Chosecolor()' style='opacity: 1;width: 45px;'>"), document.write("<div  style='position: relative;margin-left: 10px;margin-top: -5px;'>"), document.write("<img src='" + t2 + "/image/color.png' alt='' style='width: 40px;margin-left: -21px;'>"), document.write("</div>"), document.write("<div id='colorbox' style='width: 30px;height: 5px;background-color: #cccccc;margin-left: -3px;margin-top: -5px;'>"), document.write("</div>"), document.write("<div style='width: 18px;height: 40px;float: right;margin-top: -38px;margin-left: 14px;position: absolute;'>"), document.write("<img src='" + t2 + "/image/daojiao.png' alt='' style='width: 15px;margin-top: 10px;z-index: 999;position: relative'>"), document.write("<input id='color-picker' type='color' value='#c0c0c0'   style='display: none' onchange='colorChange(value)'>"), document.write("</div>"), document.write("</div>"), document.write("</div>"));
    }, c.prototype.WriteLayout = function() {
      var t2 = this.uiPath;
      this.isShowLayout && (document.write("<div class='bf-toolbar bf-toolbar bf-tree-toolbar' id='LayerOut'"), document.write("style='position: absolute;left: 0px; top: 213px; ' onclick='uiObj.SwitchShowLayout()'>"), document.write("<div class='bf-button'>"), document.write("<img src='" + t2 + "/image/layout.png' alt='' style='width: 24px;'>"), document.write("</div>"), document.write("</div>")), document.write("<div class='bf-panel bf-has-title bf-sizable' id='LayerOutInterface'"), document.write("style='left: 0; top: 0; width: 100%;display:none'>"), document.write("<div class='bf-close' onclick='uiObj.SwitchShowLayout()'><i class='fa fa-times' aria-hidden='true'></i></div>"), document.write("<div class='bf-title' id='buju' style='cursor: move; user-select: none;'>布局</div>"), document.write("<div>"), document.write("</div>"), document.write("<div id=''>"), document.write("<div>"), document.write("<table  class='bf-table'>"), document.write("<tbody class='bf-group'>"), document.write("<tr class='bf-group-title  bf_layerout' style='height: 30px;cursor: pointer;'>"), document.write("<td class='bf_layerout_td'  style='width: 60px' >"), document.write("<div class='bf_layer_div layer_on'></div>"), document.write("</td>"), document.write("<td  style='width: 238px' >"), document.write("<span  style='color: white;cursor: pointer;'>LayerOut</span>"), document.write("</td>"), document.write("</tr>"), document.write("<tr class='bf-group-title  bf_layerout' style='height: 30px;cursor: pointer;'>"), document.write("<td class='bf_layerout_td'  style='width: 60px' >"), document.write("<div class='bf_layer_div' ></div>"), document.write("</td>"), document.write("<td  style='width: 238px' >"), document.write("<span  style='color: white;cursor: pointer;'>LayerOut</span>"), document.write("</td>"), document.write("</tr>"), document.write("<tr class='bf-group-title  bf_layerout' style='height: 30px;cursor: pointer;'>"), document.write("<td class='bf_layerout_td'  style='width: 60px' >"), document.write("<div class='bf_layer_div' ></div>"), document.write("</td>"), document.write("<td  style='width: 238px' >"), document.write("<span  style='color: white;cursor: pointer;'>LayerOut</span>"), document.write("</td>"), document.write("</tr>"), document.write("<tr class='bf-group-title  bf_layerout' style='height: 30px;cursor: pointer;'>"), document.write("<td class='bf_layerout_td'  style='width: 60px' >"), document.write("<div class='bf_layer_div'></div>"), document.write("</td>"), document.write("<td  style='width: 238px' >"), document.write("<span  style='color: white;cursor: pointer;'>LayerOut</span>"), document.write("</td>"), document.write("</tr>"), document.write("</tbody>"), document.write("</table>"), document.write("</div>"), document.write("</div>"), document.write("</div>");
    }, c.prototype.WriteObjectProperty = function() {
      document.write("<div class='bf-panel bf-has-title bf-sizable property-panel' id='fmj2' title='构件详情' style='left: 0px; top: 0px; width: 100%; height: 100%;display: none;'>"), document.write("<div class='bf-close' id='close2' style='top:4.0em;'><i class='fa fa-times fa-2x' aria-hidden='true'></i></div>"), document.write("<div class='bf-title' style='cursor: move; user-select: none;'>构件详情</div>"), document.write("<div class='bf-panel-body' style='padding-top: 41px;'>"), document.write("<div class='bf-panel-container bf-scroll-bar' style='top:0;width: 100%;height: 100%;overflow-y: auto;position: relative;'>"), document.write("<table class='bf-table' id='ComponentContent'>"), document.write("</table>"), document.write("</div>"), document.write("</div>"), document.write("</div>");
    }, c.prototype.UpDisplayLayout = function() {
    }, c.prototype.UpDisplayLayer = function() {
      var t2 = this.uiPath, e2 = this.vecLayerData, n2 = this.vecSketchLayerData, r2 = "";
      if (null != n2) {
        var i2 = n2;
        for (var a2 in i2) {
          r2 += "<div>";
          var o2 = "hide.png";
          0 == i2[a2].off && (o2 = "show.png");
          var s2 = "unlock.png";
          r2 += "<table class='bf-table'>", r2 += "<tbody class='bf-group'>", r2 += "<tr class='bf-group-title'>", r2 += '<td><img class="layer-enable" sketch=1 id=' + i2[a2].id + ' src="' + t2 + "/image/" + o2 + '"/></td>', r2 += '<td><span class="layer-color" style="background-color:' + i2[a2].color + '"></span></td>', r2 += '<td><span class="layer-text">草图_' + i2[a2].name + "</span></td>", r2 += '<td><img class="layer-state" src="' + t2 + "/image/" + s2 + '"/></td>', r2 += "</tr>", r2 += "</tbody>", r2 += "</table>", r2 += "</div>";
        }
      }
      if (null != e2) for (var a2 in i2 = e2) r2 += "<div>", o2 = "hide.png", 0 == i2[a2].off && (o2 = "show.png"), s2 = "lock.png", r2 += "<table class='bf-table'>", r2 += "<tbody class='bf-group'>", r2 += "<tr class='bf-group-title'>", r2 += '<td><img class="layer-enable" sketch=0 id=' + i2[a2].id + ' src="' + t2 + "/image/" + o2 + '"/></td>', r2 += '<td><span class="layer-color" style="background-color:' + i2[a2].color + '"></span></td>', r2 += '<td><span class="layer-text">' + i2[a2].name + "</span></td>", r2 += '<td><img class="layer-state" src="' + t2 + "/image/" + s2 + '"/></td>', r2 += "</tr>", r2 += "</tbody>", r2 += "</table>", r2 += "</div>";
      var l2 = document.getElementById("Layer-Info");
      null != l2 && (l2.innerHTML = r2);
    }, c.prototype.WriteFooter = function() {
      document.write("<div class='footer' style='background: rgba(0, 0, 0, 0.7);min-width: auto;position: fixed;left: 0;bottom: 0;width: 100%;'>"), document.write("<div style='line-height: 40px;font-size: 12px;color: #999;padding: 0 10px;'>"), document.write("<p style='float: right;line-height: 15px;font-size: 12px;color: #999;display: block;'>"), document.write("<a style='color: #4a90e2;text-decoration: none;outline: none;' href='http://www.mxdraw.com/' target='_blank'>梦想CAD</a>旗下产品"), document.write("</p>"), document.write("<a style='color: #4a90e2;text-decoration: none;outline: none;' href='http://www.mxdraw.com' target='_blank'>MX3D</a> 蜀ICP备15011727号"), document.write("</div>"), document.write("</div>");
    }, c.prototype.CreateToolBar = function(t2) {
      if (this.isShowToolbar) {
        var e2 = "";
        for (var n2 in t2) {
          var r2 = t2[n2], i2 = "uiObj.CallMxCommand";
          r2.isMxCommand || (i2 = "uiObj.EvalJs"), 0 < r2.itemid.length ? e2 += '<div class="bf-button" onclick="' + i2 + "('" + t2[n2].evalString + `')"><img class="mainimage-bf-butto" id="` + r2.itemid + '" src="' + this.uiPath + "\\image\\" + r2.image + '" title="' + t2[n2].text + '"></div>' : e2 += '<div class="bf-button" onclick="' + i2 + "('" + t2[n2].evalString + `')"><img class="mainimage-bf-butto" src="` + this.uiPath + "\\image\\" + r2.image + '" title="' + t2[n2].text + '"></div>';
        }
        document.getElementById("MainMenuContent").innerHTML = e2;
      }
    }, c.prototype.InitEvent = function() {
      var t2 = document.getElementById("LayerInterface");
      this.CreateToolBar(this.vecToolBarItem), t2.style.display = "none";
      var e2 = this.vecMenuItem;
      this.isShowMainMenu && function(t3) {
        var n3 = "";
        !function t4(e3, r4) {
          var i4 = function(t5, e4) {
            var n4 = new Array();
            for (var r5 in e4) e4[r5].parentId == t5 && n4.push(e4[r5]);
            return n4;
          }(e3, r4);
          if (0 < i4.length) {
            for (var a4 in n3 += "<ul>", i4) 0 != i4[a4].evalString.length ? (n3 += '<li><p class="li_option" ', n3 += `onclick="uiObj.EvalJs('` + i4[a4].evalString + `')"`, n3 += ">" + i4[a4].text + "</p>") : (n3 += "<li><a ", n3 += ">" + i4[a4].text + "</a>"), t4(i4[a4].id, r4), n3 += "</li>";
            n3 += "</br>", n3 += "</br>", n3 += "</br>", n3 += "</ul>";
          }
        }(-1, e2), t3("#main-nav").append(n3);
        var r3 = t3("#main-nav"), i3 = t3(".toggle"), a3 = { maxWidth: false, customToggle: i3, levelTitles: true }, o2 = null, s2 = {};
        o2 && o2.remove(), i3.off("click"), o2 = r3.clone(), t3.extend(s2, { side: "right" }), o2.hcMobileNav(t3.extend({}, a3, s2));
      }(jQuery);
      var n2 = window.location.href, r2 = n2.length, i2 = n2.indexOf("?"), a2 = n2.substr(i2, r2).split("=")[1];
      $(".barspan").html(decodeURIComponent(a2)), $("#close2").click(function() {
        $(this).parent("div").fadeOut(200);
      }), $(".bf-select-current").click(function() {
        $(this).hasClass("bf-open") ? $(this).removeClass("bf-open") : $(this).addClass("bf-open");
      }), $(".my-option").click(function() {
        var t3 = $(this);
        $(".my-option").each(function() {
          $(this).removeClass("active");
        }), t3.addClass("active");
      }), $(".bf-select-option").click(function() {
        $(this).parent("ul").prev("span").html($(this).text()), $(this).parent("ul").prev("span").removeClass("bf-open");
      }), $(document).on("click", ".layer-enable", function() {
        var t3 = s.MxFun.getUiObj().getPath(), e3 = parseInt($(this).attr("id")), n3 = true;
        $(this).attr("src") == t3 + "/image/show.png" ? ($(this).attr("src", t3 + "/image/hide.png"), n3 = false) : $(this).attr("src", t3 + "/image/show.png"), s.MxFun.showLayer(e3, n3);
      });
    }, c.prototype.Fullscreen = function() {
      var t2 = document.documentElement;
      t2.requestFullscreen ? t2.requestFullscreen() : t2.mozRequestFullScreen ? t2.mozRequestFullScreen() : t2.webkitRequestFullScreen && t2.webkitRequestFullScreen(), document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitCancelFullScreen ? document.webkitCancelFullScreen() : document.msExitFullscreen && document.msExitFullscreen(), this.IsFullStatus() ? ($("img[title='取消全屏']").attr("src", this.uiPath + "/image\\fullscreen1.gif"), $("img[title='取消全屏']").attr("title", "全屏")) : ($("img[title='全屏']").attr("src", this.uiPath + "/image\\escscreen1.gif"), $("img[title='全屏']").attr("title", "取消全屏"));
    }, c.prototype.IsFullStatus = function() {
      return null != (document.fullscreenEnabled || document.mozFullscreenElement || document.webkitFullscreenElement);
    }, c);
    function c() {
      return null !== a && a.apply(this, arguments) || this;
    }
    n.MxUiObjectMobile = l;
  }, { "../MxFun": 27, "./MxUiObject": 62 }], 64: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MxUiObjectPC = void 0;
    var a, o = t("./MxUiObject"), s = t("../MxFun"), l = (i(c, a = o.MxUiObject), c.prototype.onCreate = function() {
      this.isShowTitle && this.WriteTitle(), this.WriteStructTree(), this.isEnableLoading && this.WriteLoading(), this.WriteLayer(), this.WriteTakeColor(), this.WriteLayout(), this.isEnableObjectProperty && this.WriteObjectProperty(), this.isShowToolbar && this.WriteToolbar();
    }, c.prototype.onInit = function() {
      this.InitEvent();
    }, c.prototype.WriteTitle = function() {
      var t2 = this.uiPath;
      document.write("<div id='all'>"), document.write("   <div class='bar1'>"), document.write("   <img src=" + t2 + "/image/mxcad.png style='height: 50%;position: absolute;top: 12px;left: 10px;'>"), document.write("   <span  class='barspan' style='position: absolute;left: 45px;'>"), document.write("   </span>"), document.write("   <div id='container'>"), this.isShowMainMenu && (document.write("   <header>"), document.write("    <div class='wrapper cf'style='z-index: 999'>"), document.write("   <nav id='main-nav' >"), document.write("    </nav>"), document.write("    <a class='toggle'>"), document.write("   <span></span>"), document.write("    </a>"), document.write("    </div>"), document.write("    </header>")), document.write("    </div>"), document.write("    </div>");
    }, c.prototype.WriteStructTree = function() {
      this.isShowStructTree && (document.write("<div class='bf-toolbar bf-toolbar bf-tree-toolbar' id='ModelTreeThumbnail' title='目录树'"), document.write("style='position: absolute;left: 10px; top: 97px; ' onclick='uiObj.SwitchShowStructTree()'>"), document.write("<div class='bf-button mxbim-bf-tree' title='目录树'><i class='fa fa-sitemap' aria-hidden='true'></i></div>"), document.write("</div>")), document.write("<div class='bf-panel bf-has-title bf-sizable' id='ModelTreeInterface' title='目录树'"), document.write("style='left:0px; top: 0px; width: 300px; height: 416px;display: none'>"), document.write("   <div class='bf-close' onclick='uiObj.SwitchShowStructTree()'><i class='fa fa-times' aria-hidden='true'></i></div>"), document.write("<div class='bf-title' style='cursor: move; user-select: none;' id='mulushu'>目录树</div>"), document.write("<div class='bf-panel-body' style='padding-top: 36px;'>"), document.write("<div class='bf-panel-header'>"), document.write("<div class='bf-tree-header' style='margin-top: -36px;'>"), document.write("<div class='bf-select bf-select-tree'>"), document.write("<span class='bf-select-current'>构件</span>"), document.write("<ul class='bf-select-list'>"), document.write("<li class='bf-select-option' id='type'>构件</li>"), document.write("<li class='bf-select-option' id='file'>文件</li>"), document.write("<li class='bf-select-option' id='area'>空间</li>"), document.write("<li class='bf-select-option' id='drawing'>图纸</li>"), document.write("</ul>"), document.write("</div>"), document.write("</div>"), document.write("</div>"), document.write("<div id='DirectoryContent' class='bf-panel-container TreeInfo'>"), document.write("</div>"), document.write("</div>"), document.write("</div>");
    }, c.prototype.WriteLoading = function() {
      var t2 = this.uiPath;
      document.write("<div class='Prompt'>"), document.write("<div style='text-align: center;'>"), document.write("<img src='" + t2 + "/image/loading.gif' alt='' style='width:30px;height:30px;float: left'>"), document.write("<p  style='color:black;vertical-align: middle;float: left; margin-top: 5px;margin-left: 5px;'>加载中.....</p>"), document.write("</div>"), document.write("<span style='display: none'>" + this.sLanguageTable.openComplete + "</span>"), document.write("</div>");
    }, c.prototype.WriteLayer = function() {
      var t2 = this.uiPath;
      this.isShowLayer && (document.write("<div class='bf-toolbar bf-toolbar bf-tree-toolbar' id='LayerThumbnail' title='" + this.sLanguageTable.layer + "'"), document.write("style='position: absolute;left: 10px; top: 45px; ' onclick='uiObj.SwitchShowLayer()'>"), document.write("<div class='bf-button'>"), document.write("<img src='" + t2 + "/image/layer.png.gif' alt='' style='width: 32px;'>"), document.write("</div>"), document.write("</div>")), document.write("<div class='bf-panel bf-has-title bf-sizable' id='LayerInterface'"), document.write("style='left: 10px; top: 50px; width: 300px; height: 416px;display: none'>"), document.write("<div class='bf-close' onclick='uiObj.SwitchShowLayer(false)'><i class='fa fa-times' aria-hidden='true'></i></div>"), document.write("<div class='bf-title' id='tuceng' style='cursor: move; user-select: none;'>" + this.sLanguageTable.layer + "</div>"), document.write("<div>"), document.write("<div class='layer-title' style='width: 50px;font-size: 14px'>" + this.sLanguageTable.visible + "</div>"), document.write("<div class='layer-title' style='width: 50px;font-size: 14px'>" + this.sLanguageTable.color + "</div>"), document.write("<div class='layer-title' style='width: 148px;font-size: 14px'>" + this.sLanguageTable.name + "</div>"), document.write("<div class='layer-title' style='width: 50px;font-size: 14px'>" + this.sLanguageTable.status + "</div>"), document.write("</div>"), document.write("<div id='Layer-Info' style='margin-top: 25px;height: 349px;position: absolute;overflow-y: auto;'>"), document.write("</div>"), document.write("</div>");
    }, c.prototype.WriteTakeColor = function() {
      var t2 = this.uiPath;
      this.isShowTakeColor && (document.write("<div class='bf-toolbar bf-toolbar bf-tree-toolbar' id='TakeColor' title='选择颜色'"), document.write("style='position: absolute;left: 10px; top: 149px; '>"), document.write("<div class='bf-button' onclick='uiObj.Chosecolor()' style='opacity: 1;'>"), document.write("<img src='" + t2 + "/image/color.png' alt='' style='width: 40px;margin-left: -10px;'>"), document.write("<div id='colorbox' style='width: 35px;height: 5px;background-color: #cccccc;margin-left: -3px'>"), document.write("</div>"), document.write("<div style='width: 18px;height: 40px;float: right;margin-top: -42px;margin-left: 14px;'>"), document.write("<img src='" + t2 + "/image/daojiao.png' alt='' style='width: 15px;margin-top: 10px;z-index: 999;position: relative'>"), document.write("<input id='color-picker' type='color' value='#c0c0c0'   style='display: none' onchange='uiObj.ColorChange(value)'>"), document.write("</div>"), document.write("</div>"), document.write("</div>"));
    }, c.prototype.WriteLayout = function() {
      var t2 = this.uiPath;
      this.isShowLayout && (document.write("<div class='bf-toolbar bf-toolbar bf-tree-toolbar' id='LayerOut' title='" + this.sLanguageTable.layout + "'"), document.write("style='position: absolute;left: 10px; top: 97px; ' onclick='uiObj.SwitchShowLayout()'>"), document.write("<div class='bf-button'>"), document.write("<img src='" + t2 + "/image/layout.png' alt='' style='width: 32px;'>"), document.write("</div>"), document.write("</div>")), document.write("<div class='bf-panel bf-has-title bf-sizable' id='LayerOutInterface'"), document.write("style='left: 10px; top: 50px; width: 300px;display:none'>"), document.write("<div class='bf-close' onclick='uiObj.SwitchShowLayout()'><i class='fa fa-times' aria-hidden='true'></i></div>"), document.write("<div class='bf-title' id='buju' style='cursor: move; user-select: none;'>" + this.sLanguageTable.layout + "</div>"), document.write("<div>"), document.write("</div>"), document.write("<div id='layout-Info'>"), document.write("</div>"), document.write("</div>");
    }, c.prototype.WriteObjectProperty = function() {
      document.write("<div class='bf-panel bf-has-title bf-sizable' id='StrcutInfoBase' title='属性'"), document.write("style='right: 10px; top: 45px; width: 300px; height: 416px;display: none'>"), document.write("<div class='bf-close' id='close2'><i class='fa fa-times' aria-hidden='true'></i></div>"), document.write("<div class='bf-title' style='cursor: move; user-select: none;'>属性</div>"), document.write("<div id='ComponentContent' class='bf-panel-body StructInfo'></div>"), document.write("<div class='bf-resize'></div>"), document.write("</div>");
    }, c.prototype.WriteToolbar = function() {
      document.write("<div id='MainMenuContent' class='bf-toolbar bf-toolbar-bottom' style='position: fixed'></div>");
    }, c.prototype.CreateToolBar = function(t2) {
      if (this.isShowToolbar) {
        var e2 = "";
        for (var n2 in t2) {
          var r2 = t2[n2], i2 = "uiObj.CallMxCommand";
          r2.isMxCommand || (i2 = "uiObj.EvalJs"), 0 < r2.itemid.length ? e2 += '<div class="bf-button" onclick="' + i2 + "('" + t2[n2].evalString + `')"><img class="mainimage-bf-butto" id="` + r2.itemid + '" src="' + this.uiPath + "\\image\\" + r2.image + '" title="' + t2[n2].text + '"></div>' : e2 += '<div class="bf-button" onclick="' + i2 + "('" + t2[n2].evalString + `')"><img class="mainimage-bf-butto" src="` + this.uiPath + "\\image\\" + r2.image + '" title="' + t2[n2].text + '"></div>';
        }
        document.getElementById("MainMenuContent").innerHTML = e2;
      }
    }, c.prototype.UpDisplayLayer = function() {
      var t2 = this.uiPath, e2 = this.vecLayerData, n2 = this.vecSketchLayerData, r2 = "";
      if (null != n2) {
        var i2 = n2;
        for (var a2 in i2) {
          r2 += "<div>";
          var o2 = "hide.png";
          0 == i2[a2].off && (o2 = "show.png");
          var s2 = "unlock.png";
          r2 += "<table class='bf-table'>", r2 += "<tbody class='bf-group'>", r2 += "<tr class='bf-group-title'>", r2 += '<td><img class="layer-enable" sketch=1 id=' + i2[a2].id + ' src="' + t2 + "/image/" + o2 + '"/></td>', r2 += '<td><span class="layer-color" style="background-color:' + i2[a2].color + '"></span></td>', r2 += '<td><span class="layer-text">草图_' + i2[a2].name + "</span></td>", r2 += '<td><img class="layer-state" src="' + t2 + "/image/" + s2 + '"/></td>', r2 += "</tr>", r2 += "</tbody>", r2 += "</table>", r2 += "</div>";
        }
      }
      if (null != e2) for (var a2 in i2 = e2) r2 += "<div>", o2 = "hide.png", 0 == i2[a2].off && (o2 = "show.png"), s2 = "lock.png", r2 += "<table class='bf-table'>", r2 += "<tbody class='bf-group'>", r2 += "<tr class='bf-group-title'>", r2 += '<td><img class="layer-enable" sketch=0 id=' + i2[a2].id + ' src="' + t2 + "/image/" + o2 + '"/></td>', r2 += '<td><span class="layer-color" style="background-color:' + i2[a2].color + '"></span></td>', r2 += '<td><span class="layer-text">' + i2[a2].name + "</span></td>", r2 += '<td><img class="layer-state" src="' + t2 + "/image/" + s2 + '"/></td>', r2 += "</tr>", r2 += "</tbody>", r2 += "</table>", r2 += "</div>";
      var l2 = document.getElementById("Layer-Info");
      null != l2 && (l2.innerHTML = r2);
    }, c.prototype.UpDisplayLayout = function() {
      var t2 = this.vecLayoutData, e2 = "";
      if (e2 += "<div>", e2 += "<table  class='bf-table'>", e2 += "<tbody class='bf-group'>", e2 += "<tr class='bf-group-title  bf_layerout' style='height: 30px;cursor: pointer;'>", e2 += "<td class='bf_layerout_td'  style='width: 60px' >", e2 += "<div class='bf_layer_div layer_on'></div>", e2 += "</td>", e2 += "<td  style='width: 238px' >", e2 += "<span  class='layout-name' name='Model' style='color: white;cursor: pointer;'>Model</span>", e2 += "</td>", e2 += "</tr>", null != t2) {
        var n2 = t2;
        for (var r2 in n2) e2 += "<tr class='bf-group-title  bf_layerout' style='height: 30px;cursor: pointer;'>", e2 += "<td class='bf_layerout_td'  style='width: 60px' >", e2 += "<div class='bf_layer_div layer_on'></div>", e2 += "</td>", e2 += "<td style='width: 238px' >", e2 += "<span class='layout-name' name='" + n2[r2] + "' style='color: white;cursor: pointer;'>" + n2[r2] + "</span>", e2 += "</td>", e2 += "</tr>";
      }
      e2 += "</tbody>", e2 += "</table>", e2 += "</div>";
      var i2 = document.getElementById("layout-Info");
      null != i2 && (i2.innerHTML = e2);
    }, c.prototype.InitEvent = function() {
      var t2 = document.getElementById("ModelTreeInterface"), e2 = document.getElementById("LayerInterface"), n2 = document.getElementById("LayerOutInterface"), r2 = document.getElementById("tuceng"), i2 = document.getElementById("mulushu"), a2 = document.getElementById("buju"), o2 = 0, l2 = 0, c2 = 0, u = 0, h = false;
      i2.onmousedown = function(e3) {
        o2 = e3.clientX, l2 = e3.clientY, c2 = t2.offsetLeft, u = t2.offsetTop, h = true, t2.style.cursor = "move";
      }, r2.onmousedown = function(t3) {
        o2 = t3.clientX, l2 = t3.clientY, c2 = e2.offsetLeft, u = e2.offsetTop, h = true, e2.style.cursor = "move";
      }, a2.onmousedown = function(t3) {
        o2 = t3.clientX, l2 = t3.clientY, c2 = n2.offsetLeft, u = n2.offsetTop, h = true, n2.style.cursor = "move";
      }, window.onmousemove = function(r3) {
        if (0 != h) {
          var i3 = r3.clientX, a3 = r3.clientY, s2 = i3 - (o2 - c2), p2 = a3 - (l2 - u);
          t2.style.left = s2 + "px", t2.style.top = p2 + "px", e2.style.left = s2 + "px", e2.style.top = p2 + "px", n2.style.left = s2 + "px", n2.style.top = p2 + "px";
        }
      }, i2.onmouseup = function() {
        h = false, t2.style.cursor = "default";
      }, r2.onmouseup = function() {
        h = false, e2.style.cursor = "default";
      }, a2.onmouseup = function() {
        h = false, n2.style.cursor = "default";
      }, $("#close2").click(function() {
        $(this).parent("div").fadeOut(200);
      }), $("#menu4").click(function() {
        $("#StrcutInfoBase").hasClass("hide") ? ($("#StrcutInfoBase").fadeIn(200), $("#StrcutInfoBase").removeClass("hide")) : ($("#StrcutInfoBase").fadeOut(200), $("#StrcutInfoBase").addClass("hide"));
      }), $(".bf-select-current").click(function() {
        $(this).hasClass("bf-open") ? $(this).removeClass("bf-open") : $(this).addClass("bf-open");
      }), $(".bf-select-option").click(function() {
        $(this).parent("ul").prev("span").html($(this).text()), $(this).parent("ul").prev("span").removeClass("bf-open");
      });
      var p = $("#StrcutInfoBase");
      p.bind("mousedown", function(t3) {
        var e3 = $(this)[0].offsetLeft, n3 = $(this)[0].offsetTop, r3 = t3.pageX, i3 = t3.pageY;
        $(document).bind("mousemove", function(t4) {
          var a3 = t4.pageX - r3, o3 = t4.pageY - i3, s2 = e3 + a3 + "px", l3 = n3 + o3 + "px";
          p.css({ top: l3, left: s2 });
        });
      }), $(document).bind("mouseup", function() {
        $(this).unbind("mousemove");
      }), this.CreateToolBar(this.vecToolBarItem);
      var d = this.vecMenuItem;
      if (this.isShowMainMenu && function(t3) {
        var e3 = "";
        !function t4(n4, r4) {
          var i4 = function(t5, e4) {
            var n5 = new Array();
            for (var r5 in e4) e4[r5].parentId == t5 && n5.push(e4[r5]);
            return n5;
          }(n4, r4);
          if (0 < i4.length) {
            for (var a4 in e3 += "<ul>", i4) 0 != i4[a4].evalString.length ? (e3 += '<li><p class="li_option" ', e3 += `onclick="uiObj.EvalJs('` + i4[a4].evalString + `')"`, e3 += ">" + i4[a4].text + "</p>") : (e3 += "<li><a ", e3 += ">" + i4[a4].text + "</a>"), t4(i4[a4].id, r4), e3 += "</li>";
            e3 += "</br>", e3 += "</br>", e3 += "</br>", e3 += "</ul>";
          }
        }(-1, d), t3("#main-nav").append(e3);
        var n3 = t3("#main-nav"), r3 = t3(".toggle"), i3 = { maxWidth: false, customToggle: r3, levelTitles: true }, a3 = null, o3 = {};
        a3 && a3.remove(), r3.off("click"), a3 = n3.clone(), t3.extend(o3, { side: "right" }), a3.hcMobileNav(t3.extend({}, i3, o3));
      }(jQuery), $(".li_option").click(function() {
        var t3 = $(this);
        $(".li_option").each(function() {
          $(this).removeClass("active");
        }), t3.addClass("active");
      }), "" == this.sTitle) {
        var f = window.location.href, m = f.length, g = f.indexOf("?"), y = f.substr(g, m).split("=")[1];
        null != y && (this.sTitle = y);
      }
      $(".barspan").html(decodeURIComponent(this.sTitle)), $(document).on("click", ".layer-enable", function() {
        var t3 = s.MxFun.getUiObj().getPath(), e3 = parseInt($(this).attr("id")), n3 = (parseInt($(this).attr("sketch")), true);
        $(this).attr("src") == t3 + "/image/show.png" ? ($(this).attr("src", t3 + "/image/hide.png"), n3 = false) : $(this).attr("src", t3 + "/image/show.png"), s.MxFun.showLayer(e3, n3);
      }), $(document).on("click", ".layout-name", function() {
        var t3 = $(this).attr("name");
        "Model" == t3 && (t3 = ""), s.MxFun.getCurrentDraw().gotoLayout(t3);
      });
    }, c.prototype.WriteFooter = function() {
      document.write("<div class='footer' style='background: rgba(0, 0, 0, 0.7);position: fixed;left: 0;bottom: 0;width: 100%;'>"), document.write("   <div style='line-height: 40px;font-size: 12px;color: #999;padding: 0 10px;'>"), document.write("    <p style='float: right;line-height: 15px;font-size: 12px;color: #999;display: block;'>"), document.write("    <a style='color: #4a90e2;text-decoration: none;outline: none;' href='http://www.mxdraw.com/' target='_blank'>MxDraw </a>旗下产品"), document.write("    </p>"), document.write("    <a style='color: #4a90e2;text-decoration: none;outline: none;' href='http://www.mxdraw.com' target='_blank'>MX3D </a> 蜀ICP备15011727号"), document.write("    </div>"), document.write("   </div>");
    }, c.prototype.ShowLoading = function() {
      this.isEnableLoading && ($(".Prompt").css("background", "rgba(0, 0, 0, 0)"), $(".Prompt").fadeIn(100), $(".Prompt span").css("display", "none"));
    }, c.prototype.HideLoading = function() {
      this.isEnableLoading && ($(".Prompt").css("background", "rgba(0, 0, 0, 0.8)"), $(".Prompt div").fadeOut(100), $(".Prompt span").fadeIn(200), setTimeout(function() {
        $(".Prompt").fadeOut(1e3);
      }, 1e3));
    }, c.prototype.ShowObjectProperty = function(t2) {
      if (0 != t2.length) {
        var e2;
        e2 = "string" == typeof t2 ? JSON.parse(t2) : t2;
        var n2 = "";
        for (var r2 in e2) {
          var i2 = e2[r2];
          for (var a2 in n2 += "<table class='bf-table'>", n2 += "<tbody class='bf-group'>", n2 += "<tr class='bf-group-title'>", n2 += "<td colspan='2'><i class='bf-icon'></i>" + i2.name + "</td>", n2 += "</tr>", i2.datas) {
            var o2 = i2.datas[a2];
            n2 += "<tr class='bf-group-content'>", n2 += "<td class='bf-key'>" + o2.name + "</td>", n2 += "<td class='bf-value'>" + o2.value + "</td>", n2 += "</tr>";
          }
          n2 += "</tbody>", n2 += "</table>";
        }
        document.getElementById("ComponentContent").innerHTML = n2, $(".bf-group").click(function() {
          $(this).hasClass("bf-collapse") ? $(this).removeClass("bf-collapse") : $(this).addClass("bf-collapse");
        }), $("#StrcutInfoBase").fadeIn(200), $("#StrcutInfoBase").removeClass("hide");
      }
    }, c.prototype.HideObjectProp = function() {
      $("#StrcutInfoBase").hasClass("hide") || ($("#StrcutInfoBase").fadeOut(200), $("#StrcutInfoBase").addClass("hide"));
    }, c.prototype.SwitchShowLayer = function() {
      var t2 = document.getElementById("ModelTreeInterface"), e2 = document.getElementById("ModelTreeThumbnail"), n2 = document.getElementById("LayerThumbnail"), r2 = document.getElementById("LayerInterface"), i2 = document.getElementById("LayerOut"), a2 = document.getElementById("LayerOutInterface");
      t2.style.display = "none", (a2.style.display = "none") == r2.style.display ? (n2.style.display = "block", r2.style.display = "block", r2.style.left = "80px", r2.style.top = "50px", null != e2 && (e2.style.display = "block"), null != i2 && (i2.style.display = "block"), t2.style.display = "none", a2.style.display = "none") : (r2.style.display = "none", null != e2 && (e2.style.display = "block"), n2.style.display = "block", null != i2 && (i2.style.display = "block"));
    }, c.prototype.SwitchShowStructTree = function() {
      var t2 = document.getElementById("ModelTreeInterface"), e2 = document.getElementById("ModelTreeThumbnail"), n2 = document.getElementById("LayerThumbnail"), r2 = document.getElementById("LayerInterface"), i2 = document.getElementById("LayerOut"), a2 = document.getElementById("LayerOutInterface");
      r2.style.display = "none", (a2.style.display = "none") == t2.style.display ? (null != e2 && (e2.style.display = "block"), t2.style.display = "block", t2.style.left = "80px", t2.style.top = "50px", n2.style.display = "block", null != i2 && (i2.style.display = "block"), r2.style.display = "none", a2.style.display = "none") : (t2.style.display = "none", null != e2 && (e2.style.display = "block"), n2.style.display = "block", null != i2 && (i2.style.display = "block"));
    }, c.prototype.Chosecolor = function() {
      document.getElementById("color-picker").click();
    }, c.prototype.ColorChange = function(t2) {
      document.getElementById("colorbox").style.backgroundColor = t2, s.MxFun.setCurrentColor(t2);
    }, c.prototype.SwitchShowLayout = function() {
      var t2 = document.getElementById("ModelTreeInterface"), e2 = document.getElementById("ModelTreeThumbnail"), n2 = document.getElementById("LayerThumbnail"), r2 = document.getElementById("LayerInterface"), i2 = document.getElementById("LayerOut"), a2 = document.getElementById("LayerOutInterface");
      t2.style.display = "none", r2.style.display = "none", a2 && "none" == a2.style.display ? (i2 && (i2.style.display = "block"), a2.style.display = "block", a2.style.left = "80px", a2.style.top = "120px", null != e2 && (e2.style.display = "block"), n2 && (n2.style.display = "block"), t2.style.display = "none", r2.style.display = "none") : (a2 && (a2.style.display = "none"), null != e2 && (e2.style.display = "block"), n2 && (n2.style.display = "block"), i2 && (i2.style.display = "block"));
    }, c.prototype.Fullscreen = function() {
      var t2 = document.documentElement;
      t2.requestFullscreen ? t2.requestFullscreen() : t2.mozRequestFullScreen ? t2.mozRequestFullScreen() : t2.webkitRequestFullScreen && t2.webkitRequestFullScreen(), document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitCancelFullScreen ? document.webkitCancelFullScreen() : document.msExitFullscreen && document.msExitFullscreen(), this.IsFullStatus() ? ($("img[title='取消全屏']").attr("src", this.uiPath + "/image\\fullscreen1.gif"), $("img[title='取消全屏']").attr("title", "全屏")) : ($("img[title='全屏']").attr("src", this.uiPath + "/image\\escscreen1.gif"), $("img[title='全屏']").attr("title", "取消全屏"));
    }, c.prototype.IsFullStatus = function() {
      return null != (document.fullscreenEnabled || document.mozFullscreenElement || document.webkitFullscreenElement);
    }, c);
    function c() {
      return null !== a && a.apply(this, arguments) || this;
    }
    n.MxUiObjectPC = l;
  }, { "../MxFun": 27, "./MxUiObject": 62 }], 65: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxUiVue = n.MxUiOperations = void 0;
    var r, i, a, o, s, l = t("three"), c = t("../MxFun"), u = t("../Operate/MxJigCmdManager"), h = t("../MxTools"), p = t("../Operate/MxCmdRunManager");
    function d(t2) {
      var e2 = u.MxJigCmdManager.getCurCmd();
      null != e2 && e2.getOsnap().setSpecificOsMode(t2);
    }
    function f(t2) {
      if (32 == t2 || 13 == t2) {
        if (u.MxJigCmdManager.isRunning()) u.MxJigCmdManager.OnEnter(t2);
        else {
          var e2 = v(), n2 = "";
          n2 = 0 == e2.length ? p.MxCmdRunManager.GetPrvCmd() : e2, x(""), n2 = h.MxTools.stringTrimLeftSpace(n2), c.MxFun.sendStringToExecute(n2);
        }
        return 1;
      }
      if (38 == t2) u.MxJigCmdManager.isRunning() || (p.MxCmdRunManager.MoveUpKey(), 0 != (r2 = p.MxCmdRunManager.GetListCommad()).length && (x(r2), y()));
      else if (40 == t2) {
        var r2;
        u.MxJigCmdManager.isRunning() || (p.MxCmdRunManager.MoveDownKey(), 0 != (r2 = p.MxCmdRunManager.GetListCommad()).length && (x(r2), y()));
      }
      return 0;
    }
    function m(t2, e2) {
      void 0 === e2 && (e2 = true);
      var n2 = t2.length;
      if (!(n2 < 1)) {
        for (var r2 = o.getCmdLine(), i2 = r2.getCmdTip(), a2 = r2.getCmdText(), s2 = t2.indexOf("\n"), l2 = 0, c2 = true; -1 != s2 && (c2 ? (r2.addCmdDisplay("\n" + i2 + a2 + t2.substring(l2, s2 - l2)), a2 = i2 = "", c2 = false) : r2.addCmdDisplay("\n" + t2.substring(l2, s2 - l2)), (l2 = s2 + 1) < n2); ) s2 = t2.indexOf("\n", l2);
        if (c2) {
          var u2 = t2.substring(l2, n2 - l2), h2 = u2.indexOf("\r"), p2 = u2.length;
          i2 = -1 == h2 ? i2 + a2 + u2 : h2 + 1 < p2 ? u2.substring(h2 + 1, p2 - h2 - 1) : "";
        } else l2 < n2 && (i2 = t2.substring(l2, n2));
        a2 = "", e2 && (i2 += " "), r2.setCmdTip(i2), r2.setCmdText(a2), r2.upDisplay();
      }
    }
    function g(t2) {
      for (var e2 = [], n2 = 1; n2 < arguments.length; n2++) e2[n2 - 1] = arguments[n2];
      if (null != o) {
        for (var r2 = arguments, i2 = r2[0], a2 = 0; a2 < r2.length - 1; a2++) {
          var s2 = new RegExp("\\{" + a2 + "\\}", "gm");
          i2 = i2.replace(s2, r2[a2 + 1]);
        }
        m(i2, true);
      }
    }
    function y() {
      null != o && o.getCmdLine().upDisplay();
    }
    function v() {
      if (null == o) return "";
      var t2 = o.getCmdLine();
      return h.MxTools.stringTrimLeftRightSpace(t2.getCmdText());
    }
    function x(t2) {
      if (null != o) return o.getCmdLine().setCmdText(t2);
    }
    function w(t2) {
      var e2 = u.MxJigCmdManager.getCurCmd();
      return null == e2 ? 0 : e2.getDynImput().onKeyDonw(t2) ? 1 : f(t2);
    }
    n.MxUiOperations = { kOkCommand: 1, kCancaleCommand: 2 }, i = r || (n.MxUiVue = r = {}), o = void 0, s = new l.Vector3(), i.SetLasetPoint = function(t2) {
      s = t2;
    }, i.GetLasetPoint = function() {
      return s;
    }, (a = i.CursorType || (i.CursorType = {}))[a.kNormal = 0] = "kNormal", a[a.kRect = 1] = "kRect", a[a.kCross = 2] = "kCross", a[a.kPan = 3] = "kPan", i.isNull = function() {
      return null == o;
    }, i.init = function(t2) {
      (o = t2).mountKeydownEvent(f), o.getDynamicInput().mountKeydownEvent(w), o.mountsetRightMenuSnapTypeFun && o.mountsetRightMenuSnapTypeFun(d), o.mountTsWeb_MxUiVue && o.mountTsWeb_MxUiVue(this);
    }, i.executeOperations = function(t2) {
      t2 == n.MxUiOperations.kOkCommand ? u.MxJigCmdManager.getCurCmd() && u.MxJigCmdManager.OnEnter(-1) : t2 == n.MxUiOperations.kCancaleCommand && u.MxJigCmdManager.getCurCmd() && u.MxJigCmdManager.stopCmd(u.MxJigCmdManager.DetailedResult.kEcsIn);
    }, i.setTipCoord = function(t2) {
      null != o && o.setTipCoord(t2);
    }, i.setCursorType = function(t2) {
      null != o && o.setCursorType(t2);
    }, i.AcutPrintfNoFormat = m, i.acutPrintf = g, i.cmdLineUpDisplay = y, i.getCmdText = v, i.setCmdText = x, i.getCmdDisplay = function() {
      return null == o ? "" : o.getCmdLine().getCmdDisplay();
    }, i.setCmdDisplay = function(t2) {
      if (null != o) return o.getCmdLine().setCmdDisplay(t2);
    }, i.getCmdTip = function() {
      return null == o ? "" : o.getCmdLine().getCmdTip();
    }, i.setCmdTip = function(t2) {
      if (null != o) return o.getCmdLine().setCmdTip(t2);
    }, i.restoreCmdStatus = function() {
      if (null != o) {
        var t2 = o.getCmdLine();
        " " == t2.getCmdTip() && 0 == t2.getCmdText().length ? (t2.setCmdTip(""), g("{0}:", "命令")) : g("\n{0}:", "命令");
      }
    }, i.DynamicInput_upDisplay = function() {
      null != o && i.OnMxEvent({ name: "dynInputUpDisplay" });
    }, i.DynamicInput_setType = function(t2) {
      null != o && o.getDynamicInput().setType(t2);
    }, i.DynamicInput_getType = function() {
      return null == o ? u.MxJigCmdManager.DynamicInputType.kNoInput : o.getDynamicInput().getType();
    }, i.DynamicInput_setPos = function(t2) {
      null != o && o.getDynamicInput().setPos([t2.x, t2.y]);
    }, i.DynamicInput_setTip = function(t2) {
      null != o && o.getDynamicInput().setTip(t2);
    }, i.DynamicInput_setValue1 = function(t2) {
      null != o && o.getDynamicInput().setValue1(t2);
    }, i.DynamicInput_getValue1 = function() {
      return null == o ? "" : o.getDynamicInput().getValue1();
    }, i.DynamicInput_setValue1Pos = function(t2) {
      null != o && o.getDynamicInput().setValue1Pos([t2.x, t2.y]);
    }, i.DynamicInput_setValue2 = function(t2) {
      null != o && o.getDynamicInput().setValue2(t2);
    }, i.DynamicInput_getValue2 = function() {
      return null == o ? "" : o.getDynamicInput().getValue2();
    }, i.DynamicInput_getFocusValue = function() {
      return null == o ? "" : o.getDynamicInput().getFocusValue();
    }, i.DynamicInput_getFocusIndex = function() {
      return null == o ? 0 : o.getDynamicInput().getFocusIndex();
    }, i.DynamicInput_setValue2Pos = function(t2) {
      null != o && o.getDynamicInput().setValue2Pos([t2.x, t2.y]);
    }, i.DynamicInput_setShow = function(t2) {
      null != o && o.getDynamicInput().setShow(t2);
    }, i.DynamicInput_isShow = function() {
      return null != o && o.getDynamicInput().isShow();
    }, i.OnMxEvent = function(t2) {
      if (null == o) return false;
      o.OnMxEvent(t2);
    }, i.DynamicInput_getLockValuesMap = function() {
      return null == o ? /* @__PURE__ */ new Map() : o.getDynamicInput().getLockValuesMap();
    }, i.DynamicInput_clearLockValuesMap = function() {
      null != o && o.getDynamicInput().clearLockValuesMap();
    };
  }, { "../MxFun": 27, "../MxTools": 38, "../Operate/MxCmdRunManager": 48, "../Operate/MxJigCmdManager": 54, three: 19 }], 66: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.ExternalReferenceManager = n.ExternalReferenceDatabase = n.Blocks = n.Block = n.Layer = n.MxNewDisplayMemorySection = n.MxNewDisplayMemorySectionType = n.TextureData = n.BlockInstance = n.BlockRef = n.ClipPlans = n.ClipPlan = void 0;
    var r = t("three"), i = t("../MxShader"), a = t("./MxBrowseLayerData"), o = t("../MxManager"), s = t("../MxNetData"), l = t("../MxStencilObject"), c = t("../MxFun"), u = function() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0;
    };
    n.ClipPlan = u;
    var h = function() {
      this.ver = 4, this.id = 1, this.clipPlanArray = new Array(), this.clipPoints = [], this.instansClipePoints = [];
    };
    n.ClipPlans = h;
    var p = function() {
      this.ver = 4, this.mat = new r.Matrix4(), this.blkRecId = -1, this.blkOwnerId = 0, this.layerId = -1, this.color = 16777215, this.clipPlans = new h();
    };
    n.BlockRef = p;
    var d = function() {
      this.mat = new r.Matrix4(), this.color = new Array(), this.topLayerColor = new Array(), this.clipPlans = new h(), this.clipMat = new r.Matrix4();
    };
    n.BlockInstance = d;
    var f, m, g = function() {
    };
    n.TextureData = g, (m = f || (n.MxNewDisplayMemorySectionType = f = {}))[m.kLinesType = 1] = "kLinesType", m[m.kTriangleType = 2] = "kTriangleType", m[m.kLinesType_Float = 3] = "kLinesType_Float", m[m.kTriangleType_Float = 4] = "kTriangleType_Float", m[m.kPointType_Float = 5] = "kPointType_Float", m[m.kPointType = 6] = "kPointType", n.MxNewDisplayMemorySection = function() {
      this.id = 0, this.type = f.kLinesType, this.blockId = 0, this.layerId = 0, this.color = 0, this.points = [];
    };
    var y = (v.prototype.Show = function(t2) {
      for (var e2 = 0, n2 = this._entitys.length; e2 < n2; e2++) this._entitys[e2].visible = t2;
    }, v.prototype.updataClipMaterial = function(t2) {
      for (var e2 = this._material_clip.length, n2 = 0.5 * t2.width, r2 = 0.5 * t2.height, i2 = 0; i2 < e2; i2++) this._material_clip[i2].uniforms.vieww.value = n2, this._material_clip[i2].uniforms.viewh.value = r2;
    }, v.prototype.createThreejsObjForMesh_Clip = function(t2, e2, n2) {
      0 != t2.size && t2.forEach(function(t3) {
        var a2 = t3;
        if (0 != a2.length) {
          var s2 = [], c2 = [], u2 = a2[0].clipPlans;
          u2.ver <= 3 && (s2.push(u2.clipPlanArray[0].x1, u2.clipPlanArray[0].y1), c2.push(u2.clipPlanArray[0].x2, u2.clipPlanArray[0].y2));
          for (var h2 = [], p2 = [], d2 = [], f2 = [], m2 = [], g2 = [], y2 = [], v2 = 0; v2 < a2.length; v2++) {
            var x2 = a2[v2];
            h2 = h2.concat(x2.mat.elements.slice(0, 4)), p2 = p2.concat(x2.mat.elements.slice(4, 8)), d2 = d2.concat(x2.mat.elements.slice(8, 12)), f2 = f2.concat(x2.mat.elements.slice(12, 16)), m2.push(0), g2 = g2.concat(a2[v2].color);
          }
          if (0 < this._geometryMeshPositionsByBlock.length) for (v2 = 0; v2 < a2.length; v2++) g2 = g2.concat(a2[v2].color);
          if (0 < this._geometryMeshPositionsByBlock_ZeroLayer.length) for (v2 = 0; v2 < a2.length; v2++) y2 = y2.concat(a2[v2].topLayerColor);
          var w2, b2 = 0.5 * n2.width, M2 = 0.5 * n2.height;
          u2.ver <= 3 ? (w2 = new r.RawShaderMaterial({ uniforms: { clippt1: { value: s2 }, clippt2: { value: c2 }, vieww: { value: b2 }, viewh: { value: M2 } }, vertexShader: i.MxShader.VSHADER_COLOR_POINT_CLIP, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_CLIP, linewidth: 1, transparent: true, side: r.DoubleSide }), this._material_clip.push(w2)) : w2 = new r.RawShaderMaterial({ vertexShader: i.MxShader.VSHADER_COLOR_POINT, fragmentShader: i.MxShader.FSHADER_COLOR_POINT, linewidth: 1, transparent: true, side: r.DoubleSide });
          for (var _2 = 0; _2 < this._geometryMeshPostion.length; _2++) (C2 = new r.InstancedBufferGeometry()).maxInstancedCount = a2.length, C2.setAttribute("position", new r.Float32BufferAttribute(this._geometryMeshPostion[_2], 2)), C2.setAttribute("color", new r.Float32BufferAttribute(this._geometryMeshColor[_2], 3)), C2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(h2), 4)), C2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(p2), 4)), C2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(d2), 4)), C2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(f2), 4)), C2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(m2), 1)), (S = new r.Mesh(C2, w2)).frustumCulled = false, S.renderOrder = o.MxData.iCADMeshRenderOrder, e2.add(S), this._entitys.push(S), 4 <= u2.ver && 0 < u2.instansClipePoints.length && new l.MxStencilObject().associateObject(S, u2.instansClipePoints);
          for (_2 = 0; _2 < this._geometryMeshPositionsByBlock.length; _2++) (C2 = new r.InstancedBufferGeometry()).maxInstancedCount = a2.length, C2.setAttribute("position", new r.Float32BufferAttribute(this._geometryMeshPositionsByBlock[_2], 2)), C2.setAttribute("color", new r.InstancedBufferAttribute(new Float32Array(g2), 3)), C2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(h2), 4)), C2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(p2), 4)), C2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(d2), 4)), C2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(f2), 4)), C2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(m2), 1)), (S = new r.Mesh(C2, w2)).frustumCulled = false, S.renderOrder = o.MxData.iCADMeshRenderOrder, e2.add(S), this._entitys.push(S), 4 <= u2.ver && 0 < u2.instansClipePoints.length && new l.MxStencilObject().associateObject(S, u2.instansClipePoints);
          for (_2 = 0; _2 < this._geometryMeshPositionsByBlock_ZeroLayer.length; _2++) (C2 = new r.InstancedBufferGeometry()).maxInstancedCount = a2.length, C2.setAttribute("position", new r.Float32BufferAttribute(this._geometryMeshPositionsByBlock_ZeroLayer[_2], 2)), C2.setAttribute("color", new r.InstancedBufferAttribute(new Float32Array(y2), 3)), C2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(h2), 4)), C2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(p2), 4)), C2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(d2), 4)), C2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(f2), 4)), C2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(m2), 1)), (S = new r.Mesh(C2, w2)).frustumCulled = false, S.renderOrder = o.MxData.iCADMeshRenderOrder, e2.add(S), this._entitys.push(S), 4 <= u2.ver && 0 < u2.instansClipePoints.length && new l.MxStencilObject().associateObject(S, u2.instansClipePoints);
          var T2 = new r.RawShaderMaterial({ uniforms: { color: { value: this._color }, clippt1: { value: s2 }, clippt2: { value: c2 }, vieww: { value: b2 }, viewh: { value: M2 } }, vertexShader: i.MxShader.VSHADER_COLOR_POINT_BYLAYER_CLIP, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_CLIP, linewidth: 1, transparent: true, side: r.DoubleSide });
          for (this._material_clip.push(T2), _2 = 0; _2 < this._geometryMeshPositionsByLayer.length; _2++) {
            var C2, S;
            (C2 = new r.InstancedBufferGeometry()).maxInstancedCount = a2.length, C2.setAttribute("position", new r.Float32BufferAttribute(this._geometryMeshPositionsByLayer[_2], 2)), C2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(h2), 4)), C2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(p2), 4)), C2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(d2), 4)), C2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(f2), 4)), C2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(m2), 1)), (S = new r.Mesh(C2, T2)).frustumCulled = false, S.renderOrder = o.MxData.iCADMeshRenderOrder, e2.add(S), this._entitys.push(S), 4 <= u2.ver && 0 < u2.instansClipePoints.length && new l.MxStencilObject().associateObject(S, u2.instansClipePoints);
          }
        }
      }, this);
    }, v.prototype.createThreejsObjForCurve_Clip = function(t2, e2, n2) {
      0 != t2.size && t2.forEach(function(t3, a2, s2) {
        var c2 = t3;
        if (0 != c2.length) {
          var u2 = [], h2 = [], p2 = c2[0].clipPlans;
          p2.ver <= 3 && (u2.push(p2.clipPlanArray[0].x1, p2.clipPlanArray[0].y1), h2.push(p2.clipPlanArray[0].x2, p2.clipPlanArray[0].y2));
          for (var d2 = [], f2 = [], m2 = [], g2 = [], y2 = [], v2 = [], x2 = [], w2 = 0; w2 < c2.length; w2++) {
            var b2 = c2[w2];
            d2 = d2.concat(b2.mat.elements.slice(0, 4)), f2 = f2.concat(b2.mat.elements.slice(4, 8)), m2 = m2.concat(b2.mat.elements.slice(8, 12)), g2 = g2.concat(b2.mat.elements.slice(12, 16)), y2.push(0);
          }
          if (0 < this._geometryCurvePositionsByBlock.length) for (w2 = 0; w2 < c2.length; w2++) v2 = v2.concat(c2[w2].color);
          if (0 < this._geometryCurvePositionsByBlock_ZeroLayer.length) for (w2 = 0; w2 < c2.length; w2++) x2 = x2.concat(c2[w2].topLayerColor);
          var M2, _2 = 0.5 * n2.width, T2 = 0.5 * n2.height;
          p2.ver <= 3 ? (M2 = new r.RawShaderMaterial({ uniforms: { clippt1: { value: u2 }, clippt2: { value: h2 }, vieww: { value: _2 }, viewh: { value: T2 } }, vertexShader: i.MxShader.VSHADER_COLOR_POINT_CLIP, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_CLIP, linewidth: 1, transparent: true, side: r.DoubleSide }), this._material_clip.push(M2)) : M2 = new r.RawShaderMaterial({ vertexShader: i.MxShader.VSHADER_COLOR_POINT, fragmentShader: i.MxShader.FSHADER_COLOR_POINT, linewidth: 1, transparent: true, side: r.DoubleSide });
          for (var C2 = 0; C2 < this._geometryCurvePostion.length; C2++) (D = new r.InstancedBufferGeometry()).maxInstancedCount = c2.length, D.setAttribute("position", new r.Float32BufferAttribute(this._geometryCurvePostion[C2], 2)), D.setAttribute("color", new r.Float32BufferAttribute(this._geometryCurveColor[C2], 3)), D.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(d2), 4)), D.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(f2), 4)), D.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(m2), 4)), D.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(g2), 4)), D.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(y2), 1)), (E = new r.LineSegments(D, M2)).frustumCulled = false, E.renderOrder = o.MxData.iCADCurveRenderOrder, e2.add(E), this._entitys.push(E), 4 <= p2.ver && 0 < p2.instansClipePoints.length && new l.MxStencilObject().associateObject(E, p2.instansClipePoints);
          for (C2 = 0; C2 < this._geometryCurvePositionsByBlock.length; C2++) (D = new r.InstancedBufferGeometry()).maxInstancedCount = c2.length, D.setAttribute("position", new r.Float32BufferAttribute(this._geometryCurvePositionsByBlock[C2], 2)), D.setAttribute("color", new r.InstancedBufferAttribute(new Float32Array(v2), 3)), D.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(d2), 4)), D.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(f2), 4)), D.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(m2), 4)), D.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(g2), 4)), D.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(y2), 1)), (E = new r.LineSegments(D, M2)).frustumCulled = false, E.renderOrder = o.MxData.iCADCurveRenderOrder, e2.add(E), this._entitys.push(E), 4 <= p2.ver && 0 < p2.instansClipePoints.length && new l.MxStencilObject().associateObject(E, p2.instansClipePoints);
          for (C2 = 0; C2 < this._geometryCurvePositionsByBlock_ZeroLayer.length; C2++) (D = new r.InstancedBufferGeometry()).maxInstancedCount = c2.length, D.setAttribute("position", new r.Float32BufferAttribute(this._geometryCurvePositionsByBlock_ZeroLayer[C2], 2)), D.setAttribute("color", new r.InstancedBufferAttribute(new Float32Array(x2), 3)), D.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(d2), 4)), D.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(f2), 4)), D.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(m2), 4)), D.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(g2), 4)), D.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(y2), 1)), (E = new r.LineSegments(D, M2)).frustumCulled = false, E.renderOrder = o.MxData.iCADCurveRenderOrder, e2.add(E), this._entitys.push(E), 4 <= p2.ver && 0 < p2.instansClipePoints.length && new l.MxStencilObject().associateObject(E, p2.instansClipePoints);
          var S = new r.RawShaderMaterial({ uniforms: { color: { value: this._color }, clippt1: { value: u2 }, clippt2: { value: h2 }, vieww: { value: _2 }, viewh: { value: T2 } }, vertexShader: i.MxShader.VSHADER_COLOR_POINT_BYLAYER_CLIP, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_CLIP, linewidth: 1, transparent: true, side: r.DoubleSide });
          for (this._material_clip.push(S), C2 = 0; C2 < this._geometryCurvePositionsByLayer.length; C2++) {
            var D, E;
            (D = new r.InstancedBufferGeometry()).maxInstancedCount = c2.length, D.setAttribute("position", new r.Float32BufferAttribute(this._geometryCurvePositionsByLayer[C2], 2)), D.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(d2), 4)), D.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(f2), 4)), D.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(m2), 4)), D.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(g2), 4)), D.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(y2), 1)), (E = new r.LineSegments(D, S)).frustumCulled = false, E.renderOrder = o.MxData.iCADCurveRenderOrder, e2.add(E), this._entitys.push(E), 4 <= p2.ver && 0 < p2.instansClipePoints.length && new l.MxStencilObject().associateObject(E, p2.instansClipePoints);
          }
        }
      }, this);
    }, v.prototype.createThreejsObjForCurve = function(t2, e2) {
      if (0 != t2.length) {
        for (var n2 = [], a2 = [], s2 = [], l2 = [], c2 = [], u2 = [], h2 = [], p2 = 0; p2 < t2.length; p2++) {
          var d2 = t2[p2];
          n2 = n2.concat(d2.mat.elements.slice(0, 4)), a2 = a2.concat(d2.mat.elements.slice(4, 8)), s2 = s2.concat(d2.mat.elements.slice(8, 12)), l2 = l2.concat(d2.mat.elements.slice(12, 16)), c2.push(0);
        }
        if (0 < this._geometryCurvePositionsByBlock.length) for (p2 = 0; p2 < t2.length; p2++) u2 = u2.concat(t2[p2].color);
        if (0 < this._geometryCurvePositionsByBlock_ZeroLayer.length) for (p2 = 0; p2 < t2.length; p2++) h2 = h2.concat(t2[p2].topLayerColor);
        for (var f2 = new r.RawShaderMaterial({ vertexShader: i.MxShader.VSHADER_COLOR_POINT, fragmentShader: i.MxShader.FSHADER_COLOR_POINT, linewidth: 1, transparent: true, side: r.DoubleSide }), m2 = 0; m2 < this._geometryCurvePostion.length; m2++) (y2 = new r.InstancedBufferGeometry()).maxInstancedCount = t2.length, y2.setAttribute("position", new r.Float32BufferAttribute(this._geometryCurvePostion[m2], 2)), y2.setAttribute("color", new r.Float32BufferAttribute(this._geometryCurveColor[m2], 3)), y2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(n2), 4)), y2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), y2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), y2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), y2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(c2), 1)), (v2 = new r.LineSegments(y2, f2)).frustumCulled = false, v2.renderOrder = o.MxData.iCADCurveRenderOrder, e2.add(v2), this._entitys.push(v2);
        for (m2 = 0; m2 < this._geometryCurvePositionsByBlock.length; m2++) (y2 = new r.InstancedBufferGeometry()).maxInstancedCount = t2.length, y2.setAttribute("position", new r.Float32BufferAttribute(this._geometryCurvePositionsByBlock[m2], 2)), y2.setAttribute("color", new r.InstancedBufferAttribute(new Float32Array(u2), 3)), y2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(n2), 4)), y2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), y2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), y2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), y2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(c2), 1)), (v2 = new r.LineSegments(y2, f2)).frustumCulled = false, v2.renderOrder = o.MxData.iCADCurveRenderOrder, e2.add(v2), this._entitys.push(v2);
        for (m2 = 0; m2 < this._geometryCurvePositionsByBlock_ZeroLayer.length; m2++) (y2 = new r.InstancedBufferGeometry()).maxInstancedCount = t2.length, y2.setAttribute("position", new r.Float32BufferAttribute(this._geometryCurvePositionsByBlock_ZeroLayer[m2], 2)), y2.setAttribute("color", new r.InstancedBufferAttribute(new Float32Array(h2), 3)), y2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(n2), 4)), y2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), y2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), y2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), y2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(c2), 1)), (v2 = new r.LineSegments(y2, f2)).frustumCulled = false, v2.renderOrder = o.MxData.iCADCurveRenderOrder, e2.add(v2), this._entitys.push(v2);
        var g2 = new r.RawShaderMaterial({ uniforms: { color: { value: this._color } }, vertexShader: i.MxShader.VSHADER_COLOR_POINT_BYLAYER, fragmentShader: i.MxShader.FSHADER_COLOR_POINT, linewidth: 1, transparent: true, side: r.DoubleSide });
        for (m2 = 0; m2 < this._geometryCurvePositionsByLayer.length; m2++) {
          var y2, v2;
          (y2 = new r.InstancedBufferGeometry()).maxInstancedCount = t2.length, y2.setAttribute("position", new r.Float32BufferAttribute(this._geometryCurvePositionsByLayer[m2], 2)), y2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(n2), 4)), y2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), y2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), y2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), y2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(c2), 1)), (v2 = new r.LineSegments(y2, g2)).frustumCulled = false, v2.renderOrder = o.MxData.iCADCurveRenderOrder, e2.add(v2), this._entitys.push(v2);
        }
      }
    }, v.prototype.createThreejsObjForMemorySections_clip = function(t2, e2, n2) {
      0 != t2.size && t2.forEach(function(t3) {
        var a2 = t3;
        if (0 != a2.length) {
          for (var s2 = a2[0].clipPlans, c2 = [], u2 = [], h2 = [], p2 = [], d2 = [], m2 = 0; m2 < a2.length; m2++) {
            var g2 = a2[m2];
            c2.push.apply(c2, g2.mat.elements.slice(0, 4)), u2.push.apply(u2, g2.mat.elements.slice(4, 8)), h2.push.apply(h2, g2.mat.elements.slice(8, 12)), p2.push.apply(p2, g2.mat.elements.slice(12, 16)), d2.push(0);
          }
          for (var y2 = this._MemorySections.length, v2 = 0; v2 < y2; v2++) {
            var x2 = this._MemorySections[v2], w2 = n2.automaticInversionColor2(x2.color), b2 = [];
            if (16777216 == (4278190080 & w2) ? b2 = this._color : b2.push((255 & w2) / 255, (w2 >> 8 & 255) / 255, (w2 >> 16 & 255) / 255), x2.type == f.kLinesType) {
              var M2 = new r.RawShaderMaterial({ uniforms: { color: { value: b2 } }, vertexShader: i.MxShader.VSHADER_COLOR_POINT_FORMXCAD, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_FORMXCAD, linewidth: 1, transparent: true, side: r.DoubleSide });
              (T2 = new r.InstancedBufferGeometry()).maxInstancedCount = a2.length, T2.setAttribute("position", new r.Float32BufferAttribute(x2.points, 3)), T2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(c2), 4)), T2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(u2), 4)), T2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(h2), 4)), T2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(p2), 4)), T2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(d2), 1)), (C2 = new r.LineSegments(T2, M2)).frustumCulled = false, C2.renderOrder = o.MxData.iCADCurveRenderOrder, 4 <= s2.ver && 0 < s2.instansClipePoints.length && new l.MxStencilObject().associateObject(C2, s2.instansClipePoints), e2.add(C2), this._entitys.push(C2);
            } else if (x2.type == f.kTriangleType) {
              M2 = new r.RawShaderMaterial({ uniforms: { color: { value: b2 } }, vertexShader: i.MxShader.VSHADER_COLOR_POINT_FORMXCAD, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_FORMXCAD, transparent: true, side: r.DoubleSide }), (T2 = new r.InstancedBufferGeometry()).maxInstancedCount = a2.length, T2.setAttribute("position", new r.Float32BufferAttribute(x2.points, 3)), T2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(c2), 4)), T2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(u2), 4)), T2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(h2), 4)), T2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(p2), 4)), T2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(d2), 1));
              var _2 = new r.Mesh(T2, M2);
              _2.frustumCulled = false, _2.renderOrder = o.MxData.iCADMeshRenderOrder, 4 <= s2.ver && 0 < s2.instansClipePoints.length && new l.MxStencilObject().associateObject(_2, s2.instansClipePoints), e2.add(_2), this._entitys.push(_2);
            } else if (x2.type == f.kPointType) {
              var T2, C2;
              M2 = new r.RawShaderMaterial({ uniforms: { color: { value: b2 } }, vertexShader: i.MxShader.VSHADER_COLOR_POINT_FORMXCAD, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_FORMXCAD, transparent: true, side: r.DoubleSide }), (T2 = new r.InstancedBufferGeometry()).maxInstancedCount = a2.length, T2.setAttribute("position", new r.Float32BufferAttribute(x2.points, 3)), T2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(c2), 4)), T2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(u2), 4)), T2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(h2), 4)), T2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(p2), 4)), T2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(d2), 1)), (C2 = new r.Points(T2, M2)).frustumCulled = false, C2.renderOrder = o.MxData.iCADCurveRenderOrder, 4 <= s2.ver && 0 < s2.instansClipePoints.length && new l.MxStencilObject().associateObject(C2, s2.instansClipePoints), e2.add(C2), this._entitys.push(C2);
            }
          }
        }
      }, this);
    }, v.prototype.createThreejsObjForMemorySections = function(t2, e2, n2) {
      if (0 != t2.length) {
        for (var a2 = [], s2 = [], l2 = [], c2 = [], u2 = [], h2 = 0; h2 < t2.length; h2++) {
          var p2 = t2[h2];
          a2.push.apply(a2, p2.mat.elements.slice(0, 4)), s2.push.apply(s2, p2.mat.elements.slice(4, 8)), l2.push.apply(l2, p2.mat.elements.slice(8, 12)), c2.push.apply(c2, p2.mat.elements.slice(12, 16)), u2.push(0);
        }
        for (var d2 = this._MemorySections.length, m2 = 0; m2 < d2; m2++) {
          var g2 = this._MemorySections[m2], y2 = n2.automaticInversionColor2(g2.color), v2 = [];
          if (16777216 == (4278190080 & y2) ? (v2 = this._color, this._colorValue) : v2.push((255 & y2) / 255, (y2 >> 8 & 255) / 255, (y2 >> 16 & 255) / 255), g2.type == f.kLinesType) {
            var x2 = new r.RawShaderMaterial({ uniforms: { color: { value: v2 } }, vertexShader: i.MxShader.VSHADER_COLOR_POINT_FORMXCAD, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_FORMXCAD, linewidth: 1, transparent: true, side: r.DoubleSide });
            (b2 = new r.InstancedBufferGeometry()).maxInstancedCount = t2.length, b2.setAttribute("position", new r.Float32BufferAttribute(g2.points, 3)), b2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), b2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), b2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), b2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(c2), 4)), b2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(u2), 1)), (M2 = new r.LineSegments(b2, x2)).frustumCulled = false, M2.renderOrder = o.MxData.iCADCurveRenderOrder, e2.add(M2), this._entitys.push(M2);
          } else if (g2.type == f.kTriangleType) {
            x2 = new r.RawShaderMaterial({ uniforms: { color: { value: v2 } }, vertexShader: i.MxShader.VSHADER_COLOR_POINT_FORMXCAD, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_FORMXCAD, transparent: true, side: r.DoubleSide }), (b2 = new r.InstancedBufferGeometry()).maxInstancedCount = t2.length, b2.setAttribute("position", new r.Float32BufferAttribute(g2.points, 3)), b2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), b2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), b2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), b2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(c2), 4)), b2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(u2), 1));
            var w2 = new r.Mesh(b2, x2);
            w2.frustumCulled = false, w2.renderOrder = o.MxData.iCADMeshRenderOrder, e2.add(w2), this._entitys.push(w2);
          } else if (g2.type == f.kPointType) {
            var b2, M2;
            x2 = new r.RawShaderMaterial({ uniforms: { color: { value: v2 }, size: 1 }, vertexShader: i.MxShader.VSHADER_COLOR_POINT_FORMXCAD, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_FORMXCAD, transparent: true, side: r.DoubleSide }), (b2 = new r.InstancedBufferGeometry()).maxInstancedCount = t2.length, b2.setAttribute("position", new r.Float32BufferAttribute(g2.points, 3)), b2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), b2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), b2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), b2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(c2), 4)), b2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(u2), 1)), (M2 = new r.Points(b2, x2)).frustumCulled = false, M2.renderOrder = o.MxData.iCADCurveRenderOrder, e2.add(M2), this._entitys.push(M2);
          }
        }
      }
    }, v.prototype.createThreejsObjForTexture = function(t2, e2, n2) {
      if (0 != t2.length) {
        var a2 = [], s2 = [], l2 = [], u2 = [], h2 = [], p2 = n2.getCurrentLoadUrl(), d2 = c.MxFun.dwgDir();
        0 != d2.length && "/buf/" != p2.substring(p2.lastIndexOf("/buf/")).toLowerCase() && (p2 = p2 + d2 + "/buf/");
        for (var f2 = 0; f2 < t2.length; f2++) {
          var m2 = t2[f2];
          a2 = a2.concat(m2.mat.elements.slice(0, 4)), s2 = s2.concat(m2.mat.elements.slice(4, 8)), l2 = l2.concat(m2.mat.elements.slice(8, 12)), u2 = u2.concat(m2.mat.elements.slice(12, 16)), h2.push(0);
        }
        for (var g2 = 0; g2 < this._TextureData.length; g2++) {
          var y2 = this._TextureData[g2], v2 = new r.InstancedBufferGeometry();
          v2.maxInstancedCount = t2.length, v2.setAttribute("position", new r.Float32BufferAttribute(y2.pos, 2)), v2.setAttribute("uv", new r.Float32BufferAttribute(y2.textureCoord, 2)), v2.setAttribute("color", new r.Float32BufferAttribute(y2.color, 3)), v2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), v2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), v2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), v2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(u2), 4)), v2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(h2), 1));
          var x2 = p2 + y2.sFileName, w2 = { texture: { value: new r.TextureLoader().load(x2, function(t3) {
            t3 && n2.updateDisplay();
          }) } };
          w2.texture.value.wrapS = w2.texture.value.wrapT = r.RepeatWrapping;
          var b2 = new r.RawShaderMaterial({ uniforms: w2, vertexShader: i.MxShader.VSHADER_COLOR_POINT_TEXTURE, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_TEXTURE, transparent: true, side: r.DoubleSide }), M2 = new r.Mesh(v2, b2);
          M2.renderOrder = o.MxData.iCADMeshRenderOrder, M2.frustumCulled = false, e2.add(M2), this._entitys.push(M2);
        }
      }
    }, v.prototype.createThreejsObjForTexture_Clip = function(t2, e2, n2) {
      if (0 != t2.size) {
        var a2 = n2.getCurrentLoadUrl(), s2 = c.MxFun.dwgDir();
        0 != s2.length && "/buf/" != a2.substring(a2.lastIndexOf("/buf/")).toLowerCase() && (a2 = a2 + s2 + "/buf/"), t2.forEach(function(t3) {
          var s3 = t3;
          if (0 != s3.length) {
            for (var c2 = s3[0].clipPlans, u2 = [], h2 = [], p2 = [], d2 = [], f2 = [], m2 = 0; m2 < s3.length; m2++) {
              var g2 = s3[m2];
              u2 = u2.concat(g2.mat.elements.slice(0, 4)), h2 = h2.concat(g2.mat.elements.slice(4, 8)), p2 = p2.concat(g2.mat.elements.slice(8, 12)), d2 = d2.concat(g2.mat.elements.slice(12, 16)), f2.push(0);
            }
            for (var y2 = 0; y2 < this._TextureData.length; y2++) {
              var v2 = this._TextureData[y2], x2 = new r.InstancedBufferGeometry();
              x2.maxInstancedCount = s3.length, x2.setAttribute("position", new r.Float32BufferAttribute(v2.pos, 2)), x2.setAttribute("uv", new r.Float32BufferAttribute(v2.textureCoord, 2)), x2.setAttribute("color", new r.Float32BufferAttribute(v2.color, 3)), x2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(u2), 4)), x2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(h2), 4)), x2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(p2), 4)), x2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(d2), 4)), x2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(f2), 1));
              var w2 = a2 + v2.sFileName, b2 = { texture: { value: new r.TextureLoader().load(w2, function(t4) {
                t4 && n2.updateDisplay();
              }) } };
              b2.texture.value.wrapS = b2.texture.value.wrapT = r.RepeatWrapping;
              var M2 = new r.RawShaderMaterial({ uniforms: b2, vertexShader: i.MxShader.VSHADER_COLOR_POINT_TEXTURE, fragmentShader: i.MxShader.FSHADER_COLOR_POINT_TEXTURE, transparent: true, side: r.DoubleSide }), _2 = new r.Mesh(x2, M2);
              _2.renderOrder = o.MxData.iCADMeshRenderOrder, _2.frustumCulled = false, 4 <= c2.ver && 0 < c2.instansClipePoints.length && new l.MxStencilObject().associateObject(_2, c2.instansClipePoints), e2.add(_2), this._entitys.push(_2);
            }
          }
        }, this);
      }
    }, v.prototype.createThreejsObjForMesh = function(t2, e2) {
      if (0 != t2.length) {
        for (var n2 = [], a2 = [], s2 = [], l2 = [], c2 = [], u2 = [], h2 = [], p2 = 0; p2 < t2.length; p2++) {
          var d2 = t2[p2];
          n2 = n2.concat(d2.mat.elements.slice(0, 4)), a2 = a2.concat(d2.mat.elements.slice(4, 8)), s2 = s2.concat(d2.mat.elements.slice(8, 12)), l2 = l2.concat(d2.mat.elements.slice(12, 16)), c2.push(0), u2 = u2.concat(t2[p2].color);
        }
        if (0 < this._geometryMeshPositionsByBlock.length) for (p2 = 0; p2 < t2.length; p2++) u2 = u2.concat(t2[p2].color);
        if (0 < this._geometryMeshPositionsByBlock_ZeroLayer.length) for (p2 = 0; p2 < t2.length; p2++) h2 = h2.concat(t2[p2].topLayerColor);
        for (var f2 = new r.RawShaderMaterial({ vertexShader: i.MxShader.VSHADER_COLOR_POINT, fragmentShader: i.MxShader.FSHADER_COLOR_POINT, transparent: true, side: r.DoubleSide }), m2 = 0; m2 < this._geometryMeshPostion.length; m2++) (y2 = new r.InstancedBufferGeometry()).maxInstancedCount = t2.length, y2.setAttribute("position", new r.Float32BufferAttribute(this._geometryMeshPostion[m2], 2)), y2.setAttribute("color", new r.Float32BufferAttribute(this._geometryMeshColor[m2], 3)), y2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(n2), 4)), y2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), y2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), y2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), y2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(c2), 1)), (v2 = new r.Mesh(y2, f2)).frustumCulled = false, v2.renderOrder = o.MxData.iCADMeshRenderOrder, e2.add(v2), this._entitys.push(v2);
        for (m2 = 0; m2 < this._geometryMeshPositionsByBlock.length; m2++) (y2 = new r.InstancedBufferGeometry()).maxInstancedCount = t2.length, y2.setAttribute("position", new r.Float32BufferAttribute(this._geometryMeshPositionsByBlock[m2], 2)), y2.setAttribute("color", new r.InstancedBufferAttribute(new Float32Array(u2), 3)), y2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(n2), 4)), y2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), y2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), y2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), y2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(c2), 1)), (v2 = new r.Mesh(y2, f2)).frustumCulled = false, v2.renderOrder = o.MxData.iCADMeshRenderOrder, e2.add(v2), this._entitys.push(v2);
        for (m2 = 0; m2 < this._geometryMeshPositionsByBlock_ZeroLayer.length; m2++) (y2 = new r.InstancedBufferGeometry()).maxInstancedCount = t2.length, y2.setAttribute("position", new r.Float32BufferAttribute(this._geometryMeshPositionsByBlock_ZeroLayer[m2], 2)), y2.setAttribute("color", new r.InstancedBufferAttribute(new Float32Array(h2), 3)), y2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(n2), 4)), y2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), y2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), y2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), y2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(c2), 1)), (v2 = new r.Mesh(y2, f2)).frustumCulled = false, v2.renderOrder = o.MxData.iCADMeshRenderOrder, e2.add(v2), this._entitys.push(v2);
        var g2 = new r.RawShaderMaterial({ uniforms: { color: { value: this._color } }, vertexShader: i.MxShader.VSHADER_COLOR_POINT, fragmentShader: i.MxShader.FSHADER_COLOR_POINT, transparent: true, side: r.DoubleSide });
        for (m2 = 0; m2 < this._geometryMeshPositionsByLayer.length; m2++) {
          var y2, v2;
          (y2 = new r.InstancedBufferGeometry()).maxInstancedCount = t2.length, y2.setAttribute("position", new r.Float32BufferAttribute(this._geometryMeshPositionsByLayer[m2], 2)), y2.setAttribute("tran1", new r.InstancedBufferAttribute(new Float32Array(n2), 4)), y2.setAttribute("tran2", new r.InstancedBufferAttribute(new Float32Array(a2), 4)), y2.setAttribute("tran3", new r.InstancedBufferAttribute(new Float32Array(s2), 4)), y2.setAttribute("tran4", new r.InstancedBufferAttribute(new Float32Array(l2), 4)), y2.setAttribute("ishide", new r.InstancedBufferAttribute(new Float32Array(c2), 1)), (v2 = new r.Mesh(y2, g2)).frustumCulled = false, v2.renderOrder = o.MxData.iCADMeshRenderOrder, e2.add(v2), this._entitys.push(v2);
        }
      }
    }, v.prototype.addGeometryCurve = function(t2, e2, n2, r2, i2) {
      0 < t2.length && (this._geometryCurvePostion.push(t2), this._geometryCurveColor.push(e2)), 0 < n2.length && this._geometryCurvePositionsByBlock.push(n2), 0 < r2.length && this._geometryCurvePositionsByLayer.push(r2), 0 < i2.length && this._geometryCurvePositionsByBlock_ZeroLayer.push(i2);
    }, v.prototype.addGeometryMesh = function(t2, e2, n2, r2, i2) {
      0 < t2.length && (this._geometryMeshPostion.push(t2), this._geometryMeshColor.push(e2)), 0 < n2.length && this._geometryMeshPositionsByBlock.push(n2), 0 < r2.length && this._geometryMeshPositionsByLayer.push(r2), 0 < i2.length && this._geometryMeshPositionsByBlock_ZeroLayer.push(i2);
    }, v.prototype.addGeometryTexture = function(t2, e2, n2, r2, i2, a2, o2) {
      var s2 = new g();
      s2.pos = t2, s2.textureCoord = e2, s2.color = n2, s2.sFileName = r2, s2.dAngel = i2, s2.ptRotationPostionX = a2, s2.ptRotationPostionY = o2, this._TextureData.push(s2);
    }, v.prototype.addMemorySections = function(t2) {
      this._MemorySections.push(t2);
    }, v.prototype.createThreejsObj = function(t2, e2, n2, r2, i2) {
      var a2 = n2.getScene(), o2 = n2.getCanvas();
      if (0 != t2.length) {
        if (null == this._color) {
          var s2 = r2.getColor(i2);
          this._color = [], this._color.push((255 & s2) / 255, (s2 >> 8 & 255) / 255, (s2 >> 16 & 255) / 255), this._colorValue = 16777215 & s2;
        }
        0 == this._geometryCurvePostion.length && 0 == this._geometryCurvePositionsByBlock.length && 0 == this._geometryCurvePositionsByLayer.length && 0 == this._geometryCurvePositionsByBlock_ZeroLayer.length || this.createThreejsObjForCurve(t2, a2), 0 == this._geometryMeshPostion.length && 0 == this._geometryMeshPositionsByBlock.length && 0 == this._geometryMeshPositionsByLayer.length && 0 == this._geometryMeshPositionsByBlock_ZeroLayer.length || this.createThreejsObjForMesh(t2, a2), 0 != this._TextureData.length && this.createThreejsObjForTexture(t2, a2, n2), 0 != this._MemorySections.length && this.createThreejsObjForMemorySections(t2, a2, n2);
      }
      0 != e2.size && (null == this._color && (s2 = r2.getColor(i2), this._color = [], this._color.push((255 & s2) / 255, (s2 >> 8 & 255) / 255, (s2 >> 16 & 255) / 255), this._colorValue = 16777215 & s2), 0 == this._geometryCurvePostion.length && 0 == this._geometryCurvePositionsByBlock.length && 0 == this._geometryCurvePositionsByLayer.length && 0 == this._geometryCurvePositionsByBlock_ZeroLayer.length || this.createThreejsObjForCurve_Clip(e2, a2, o2), 0 == this._geometryMeshPostion.length && 0 == this._geometryMeshPositionsByBlock.length && 0 == this._geometryMeshPositionsByLayer.length && 0 == this._geometryMeshPositionsByBlock_ZeroLayer.length || this.createThreejsObjForMesh_Clip(e2, a2, o2), 0 != this._TextureData.length && this.createThreejsObjForTexture_Clip(e2, a2, n2), 0 != this._MemorySections.length && this.createThreejsObjForMemorySections_clip(e2, a2, n2)), this._geometryCurvePostion = [], this._geometryCurvePositionsByBlock = [], this._geometryCurvePositionsByLayer = [], this._geometryCurvePositionsByBlock_ZeroLayer = [], this._geometryCurveColor = [], this._geometryMeshPostion = [], this._geometryMeshPositionsByBlock = [], this._geometryMeshPositionsByLayer = [], this._geometryMeshPositionsByBlock_ZeroLayer = [], this._geometryMeshColor = [], this._TextureData = [], this._MemorySections = [];
    }, v);
    function v(t2) {
      this._blockRecId = 0, this._TextureData = [], this._MemorySections = [], this._geometryCurvePostion = new Array(), this._geometryCurveColor = new Array(), this._geometryMeshPostion = new Array(), this._geometryMeshColor = new Array(), this._geometryCurvePositionsByBlock = new Array(), this._geometryMeshPositionsByBlock = new Array(), this._geometryCurvePositionsByLayer = new Array(), this._geometryMeshPositionsByLayer = new Array(), this._geometryCurvePositionsByBlock_ZeroLayer = new Array(), this._geometryMeshPositionsByBlock_ZeroLayer = new Array(), this._entitys = new Array(), this._color = void 0, this._colorValue = 16777215, this._material_clip = [], this._blockRecId = t2;
    }
    n.Layer = y;
    var x = (w.prototype.showLayer = function(t2, e2) {
      var n2 = this._layerTogeometry.get(t2);
      null != n2 && n2.Show(e2);
    }, w.prototype.updataClipMaterial = function(t2) {
      var e2 = t2.getCanvas();
      this._layerTogeometry.forEach(function(t3, n2, r2) {
        t3.updataClipMaterial(e2);
      });
    }, w.prototype.getId = function() {
      return this._id;
    }, w.prototype.getBlkRef = function() {
      return this._blkRef;
    }, w.prototype.createThreejsObj = function(t2, e2) {
      var n2 = this;
      this._layerTogeometry.forEach(function(r2, i2, a2) {
        r2.createThreejsObj(n2._instance, n2._instance_clip, t2, e2, i2);
      });
    }, w.prototype.addGeometryCurve = function(t2, e2, n2, r2, i2, a2) {
      var o2 = this._layerTogeometry.get(n2);
      null == o2 && (o2 = new y(this._id), this._layerTogeometry.set(n2, o2)), o2.addGeometryCurve(t2, e2, r2, i2, a2);
    }, w.prototype.addMemorySections = function(t2) {
      var e2 = this._layerTogeometry.get(t2.layerId);
      null == e2 && (e2 = new y(this._id), this._layerTogeometry.set(t2.layerId, e2)), e2.addMemorySections(t2);
    }, w.prototype.addGeometryTexture = function(t2, e2, n2, r2, i2, a2, o2, s2) {
      var l2 = this._layerTogeometry.get(r2);
      null == l2 && (l2 = new y(this._id), this._layerTogeometry.set(r2, l2)), l2.addGeometryTexture(t2, e2, n2, i2, a2, o2, s2);
    }, w.prototype.addGeometryMesh = function(t2, e2, n2, r2, i2, a2) {
      var o2 = this._layerTogeometry.get(n2);
      null == o2 && (o2 = new y(this._id), this._layerTogeometry.set(n2, o2)), o2.addGeometryMesh(t2, e2, r2, i2, a2);
    }, w.prototype.addInstance = function(t2) {
      var e2;
      t2.clipPlans.ver <= 3 ? 0 == t2.clipPlans.clipPlanArray.length ? this._instance.length < 5e4 && this._instance.push(t2) : (null == (e2 = this._instance_clip.get(t2.clipPlans.id)) && (e2 = [], this._instance_clip.set(t2.clipPlans.id, e2)), e2.push(t2)) : 0 == t2.clipPlans.instansClipePoints.length || 100 < this._instance_clip.size ? this._instance.length < 5e4 && this._instance.push(t2) : (null == (e2 = this._instance_clip.get(t2.clipPlans.id)) && (e2 = [], this._instance_clip.set(t2.clipPlans.id, e2)), e2.push(t2));
    }, w.prototype.addBlkRef = function(t2) {
      this._blkRef.push(t2);
    }, w);
    function w(t2) {
      this._id = 0, this._layerTogeometry = /* @__PURE__ */ new Map(), this._blkRef = [], this._instance = [], this._instance_clip = /* @__PURE__ */ new Map(), this._id = t2;
    }
    n.Block = x;
    var b = (M.prototype.crateBlock = function(t2) {
      var e2 = this._mapBlock.get(t2);
      return null == e2 && (e2 = new x(t2), this._mapBlock.set(t2, e2)), e2;
    }, M.prototype.getBlock = function(t2) {
      return this._mapBlock.get(t2);
    }, M.prototype.addBlockRef = function(t2) {
      this.crateBlock(t2.blkOwnerId).addBlkRef(t2);
    }, M.prototype.showLayer = function(t2, e2) {
      this._mapBlock.forEach((function(t3, e3) {
        var n2 = t3, r2 = e3;
        return function(t4, e4, i2) {
          t4.showLayer(n2, r2);
        };
      }).call(this, t2, e2));
    }, M.prototype.createBlocks_30 = function(t2, e2) {
      if (!this._isCreate) {
        this.crateBlock(0);
        for (var n2 = 1, i2 = t2.getInt32(12, true), a2 = 80, o2 = 0; o2 < i2; o2++) {
          var s2 = t2.getInt32(a2, true);
          a2 += 4;
          var l2 = t2.getInt32(a2, true);
          a2 += 4;
          var c2 = t2.getInt32(a2, true);
          a2 += 4;
          var d2 = t2.getInt32(a2, true);
          a2 += 4;
          for (var f2 = new Array(), m2 = 0; m2 < 16; m2++) {
            var g2 = t2.getFloat32(a2, true);
            a2 += 4, f2.push(g2);
          }
          var y2 = t2.getInt32(a2, true);
          a2 += 4;
          var v2 = new h();
          v2.id = n2, v2.ver = 3, n2++, v2.clipPlanArray = [];
          for (var x2 = 0; x2 < y2; x2++) {
            var w2 = t2.getFloat32(a2, true);
            a2 += 4;
            var b2 = t2.getFloat32(a2, true);
            a2 += 4;
            var M2 = t2.getFloat32(a2, true);
            a2 += 4;
            var _2 = t2.getFloat32(a2, true);
            a2 += 4;
            var T2 = new u();
            T2.x1 = w2, T2.y1 = b2, T2.x2 = M2, T2.y2 = _2, v2.clipPlanArray.push(T2);
          }
          var C2 = new p();
          C2.ver = 3, C2.mat = new r.Matrix4(), C2.mat.fromArray(f2), C2.blkRecId = c2, C2.blkOwnerId = s2, C2.layerId = l2, C2.color = d2, C2.clipPlans = v2, this.crateBlock(c2), this.addBlockRef(C2);
        }
        this._isGetAllBlocks = true, this._isCreate = true;
      }
    }, M.prototype.createBlocks_40 = function(t2, e2) {
      if (!this._isCreate) {
        this.crateBlock(0);
        for (var n2 = 1, i2 = t2.getInt32(12, true), a2 = 80, o2 = 0; o2 < i2; o2++) {
          var s2 = t2.getInt32(a2, true);
          a2 += 4;
          var l2 = t2.getInt32(a2, true);
          a2 += 4;
          var c2 = t2.getInt32(a2, true);
          a2 += 4;
          var u2 = t2.getInt32(a2, true);
          a2 += 4;
          for (var d2 = new Array(), f2 = 0; f2 < 16; f2++) {
            var m2 = t2.getFloat32(a2, true);
            a2 += 4, d2.push(m2);
          }
          var g2 = t2.getInt32(a2, true);
          a2 += 4;
          var y2 = new h();
          y2.id = n2, y2.ver = 4, n2++, y2.clipPoints = [];
          for (var v2 = 0; v2 < g2; v2++) {
            var x2 = new r.Vector2();
            x2.x = t2.getFloat32(a2, true), a2 += 4, x2.y = t2.getFloat32(a2, true), a2 += 4, y2.clipPoints.push(x2);
          }
          var w2 = new p();
          w2.ver = 4, w2.mat = new r.Matrix4(), w2.mat.fromArray(d2), w2.blkRecId = c2, w2.blkOwnerId = s2, w2.layerId = l2, w2.color = u2, w2.clipPlans = y2, this.crateBlock(c2), this.addBlockRef(w2);
        }
        this._isGetAllBlocks = true, this._isCreate = true;
      }
    }, M.prototype.createBlocks = function(t2, e2) {
      this._isCreate || (new s.MxNetData(t2).getVersion_MwBlobHead() <= 3 ? this.createBlocks_30(t2, e2) : this.createBlocks_40(t2, e2));
    }, M.prototype.updataClipMaterial = function(t2) {
      this._mapBlock.forEach(function(e2, n2, r2) {
        e2.updataClipMaterial(t2);
      });
    }, M.prototype.createAllInstance = function(t2) {
      var e2 = this.getBlock(0);
      if (null == e2) return false;
      if (null == this._rootBlockRef) return false;
      var n2 = new r.Matrix4(), i2 = /* @__PURE__ */ new Map(), a2 = new h();
      return this._iClipIdCount = 1, a2.id = this._iClipIdCount, this._iClipIdCount++, this.createAllInstanceCall(e2, this._rootBlockRef, n2, i2, 16777215, t2, void 0, a2), true;
    }, M.prototype.createThreejsObj = function(t2, e2, n2) {
      null == this._mapNeedCreateThreejsObj.get(t2.getId()) && this._mapNeedCreateThreejsObj.set(t2.getId(), t2), this._isCreateAllInstance || this._isGetAllBlocks && n2.isInitComplete() && (this._isCreateAllInstance = this.createAllInstance(n2)), this._isCreateAllInstance && (this._mapNeedCreateThreejsObj.forEach(function(t3, r2, i2) {
        t3.createThreejsObj(e2, n2);
      }), this._mapNeedCreateThreejsObj.clear());
    }, M.prototype.createAllInstanceCall = function(t2, e2, n2, i2, a2, o2, s2, l2) {
      if (1 != i2[t2.getId()]) {
        i2[t2.getId()] = true;
        var c2 = new d();
        if (c2.mat = new r.Matrix4(), c2.mat.copy(n2), c2.mat.multiply(e2.mat), e2.ver <= 3) if (0 == e2.clipPlans.clipPlanArray.length) c2.clipPlans = l2;
        else {
          c2.clipPlans = e2.clipPlans, c2.clipPlans.ver = 3;
          for (var u2, p2, f2, m2, g2 = c2.clipPlans.clipPlanArray.length, y2 = function() {
            u2 = new r.Vector3(c2.clipPlans.clipPlanArray[v2].x1, c2.clipPlans.clipPlanArray[v2].y1, 0), p2 = new r.Vector3(c2.clipPlans.clipPlanArray[v2].x2, c2.clipPlans.clipPlanArray[v2].y2, 0), f2 = new r.Vector3(c2.clipPlans.clipPlanArray[v2].x1, c2.clipPlans.clipPlanArray[v2].y2, 0), m2 = new r.Vector3(c2.clipPlans.clipPlanArray[v2].x2, c2.clipPlans.clipPlanArray[v2].y1, 0), u2.applyMatrix4(c2.mat), p2.applyMatrix4(c2.mat), f2.applyMatrix4(c2.mat), m2.applyMatrix4(c2.mat);
            var t3 = u2.x, e3 = u2.x, n3 = u2.y, i3 = u2.y, a3 = [];
            a3.push(p2), a3.push(f2), a3.push(m2), a3.forEach(function(r2) {
              t3 > r2.x && (t3 = r2.x), e3 < r2.x && (e3 = r2.x), n3 > r2.y && (n3 = r2.y), i3 < r2.y && (i3 = r2.y);
            }), c2.clipPlans.clipPlanArray[v2].x1 = t3, c2.clipPlans.clipPlanArray[v2].y1 = n3, c2.clipPlans.clipPlanArray[v2].x2 = e3, c2.clipPlans.clipPlanArray[v2].y2 = i3;
          }, v2 = 0; v2 < g2; v2++) y2();
        }
        else if (0 == e2.clipPlans.clipPoints.length) c2.clipPlans = l2;
        else {
          c2.clipPlans = new h(), c2.clipPlans.ver = 4, c2.clipPlans.id = this._iClipIdCount, this._iClipIdCount++, c2.clipPlans.instansClipePoints = l2.instansClipePoints.slice(0);
          var x2 = [], w2 = e2.clipPlans.clipPoints;
          for (g2 = w2.length, v2 = 0; v2 < g2; v2++) {
            var b2 = new r.Vector3(w2[v2].x, w2[v2].y, 0);
            b2.applyMatrix4(c2.mat), x2.push(new r.Vector2(b2.x, b2.y));
          }
          c2.clipPlans.instansClipePoints.push(x2);
        }
        null == s2 ? c2.topLayerColor.push(1, 1, 1) : c2.topLayerColor.push(s2[0], s2[1], s2[2]);
        var M2 = e2.color >> 24 & 255;
        if (2 == M2) c2.color.push((255 & a2) / 255, (a2 >> 8 & 255) / 255, (a2 >> 16 & 255) / 255);
        else if (1 == M2) {
          var _2 = o2.getColor(e2.layerId);
          c2.color.push((255 & _2) / 255, (_2 >> 8 & 255) / 255, (_2 >> 16 & 255) / 255), a2 = _2;
        } else c2.color.push((255 & e2.color) / 255, (e2.color >> 8 & 255) / 255, (e2.color >> 16 & 255) / 255), a2 = e2.color;
        t2.addInstance(c2);
        for (var T2 = t2.getBlkRef(), C2 = null == s2, S = 0; S < T2.length; S++) if (0 != T2[S].blkRecId) {
          var D = this.getBlock(T2[S].blkRecId);
          if (null == D) return;
          C2 && (s2 = [], _2 = o2.getColor(T2[S].layerId), s2.push((255 & _2) / 255, (_2 >> 8 & 255) / 255, (_2 >> 16 & 255) / 255)), this.createAllInstanceCall(D, T2[S], c2.mat, i2, a2, o2, s2, c2.clipPlans);
        }
        i2[t2.getId()] = false;
      }
    }, M.prototype.initRootBlockRef = function(t2) {
      null == t2 && ((t2 = new p()).mat = new r.Matrix4(), t2.blkRecId = 0, t2.blkOwnerId = -1, t2.layerId = -1, t2.color = 16777215), this._rootBlockRef = t2;
    }, M);
    function M() {
      this._mapBlock = /* @__PURE__ */ new Map(), this._mapNeedCreateThreejsObj = /* @__PURE__ */ new Map(), this._isCreate = false, this._isGetAllBlocks = false, this._isCreateAllInstance = false, this._rootBlockRef = void 0, this._iClipIdCount = 1;
    }
    n.Blocks = b;
    var _ = function() {
      this.blocks = new b(), this.layers = new a.MxBrowseLayerData();
    };
    n.ExternalReferenceDatabase = _;
    var T = (C.prototype.createTzDwgExternalReferences = function(t2) {
      this._mapId2ExternalDatabase.get(t2) || this.getBlocks(t2).initRootBlockRef();
    }, C.prototype.createExternalReferences = function(t2) {
      for (var e2 = t2.getInt32(12, true), n2 = 80, i2 = 0; i2 < e2; i2++) {
        for (var a2 = new Array(), o2 = 0; o2 < 16; o2++) {
          var s2 = t2.getFloat32(n2, true);
          n2 += 4, a2.push(s2);
        }
        var l2 = t2.getInt32(n2, true);
        n2 += 4;
        var c2 = t2.getInt32(n2, true);
        if (n2 += 4, t2.getInt32(n2, true), n2 += 4, 0 != l2) {
          var u2 = this.getBlocks(l2), h2 = new p();
          h2.mat = new r.Matrix4(), h2.mat.fromArray(a2), h2.blkRecId = 0, h2.blkOwnerId = -1, h2.layerId = -1, h2.color = c2, u2.initRootBlockRef(h2);
        } else console.log("mx error iDatabaseIndex");
      }
    }, C.prototype.getBlocks = function(t2) {
      if (0 != t2) {
        var e2 = this._mapId2ExternalDatabase.get(t2);
        return null == e2 && (e2 = new _(), this._mapId2ExternalDatabase.set(t2, e2)), e2.blocks;
      }
      console.log("mx error iDatabaseIndex");
    }, C.prototype.getLayers = function(t2) {
      if (0 != t2) {
        var e2 = this._mapId2ExternalDatabase.get(t2);
        return null == e2 && (e2 = new _(), this._mapId2ExternalDatabase.set(t2, e2)), e2.layers;
      }
      console.log("mx error iDatabaseIndex");
    }, C);
    function C() {
      this._mapId2ExternalDatabase = /* @__PURE__ */ new Map();
    }
    n.ExternalReferenceManager = T;
  }, { "../MxFun": 27, "../MxManager": 29, "../MxNetData": 31, "../MxShader": 32, "../MxStencilObject": 33, "./MxBrowseLayerData": 67, three: 19 }], 67: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxBrowseLayerData = void 0;
    var r = (i.prototype.add = function(t2, e2, n2) {
      this._layerColor[t2] = e2, this._nametoId[n2] = t2;
    }, i.prototype.setZeroLayerId = function(t2) {
      this._zeroLayerId = t2;
    }, i.prototype.getZeroLayerId = function() {
      return this._zeroLayerId;
    }, i.prototype.getLayerIdForName = function(t2) {
      return null == this._nametoId[t2] ? 0 : this._nametoId[t2];
    }, i.prototype.getColor = function(t2) {
      return null == this._layerColor[t2] ? 16777215 : this._layerColor[t2];
    }, i.prototype.initComplete = function() {
      this._isSetInstanceComplete = true;
    }, i.prototype.isInitComplete = function() {
      return this._isSetInstanceComplete;
    }, i);
    function i() {
      this._isSetInstanceComplete = false, this._layerColor = /* @__PURE__ */ new Map(), this._nametoId = /* @__PURE__ */ new Map(), this._zeroLayerId = 0;
    }
    n.MxBrowseLayerData = r;
  }, {}], 68: [function(t, e, n) {
    var r = this && this.__awaiter || function(t2, e2, n2, r2) {
      return new (n2 = n2 || Promise)(function(i2, a2) {
        function o2(t3) {
          try {
            l2(r2.next(t3));
          } catch (t4) {
            a2(t4);
          }
        }
        function s2(t3) {
          try {
            l2(r2.throw(t3));
          } catch (t4) {
            a2(t4);
          }
        }
        function l2(t3) {
          var e3;
          t3.done ? i2(t3.value) : ((e3 = t3.value) instanceof n2 ? e3 : new n2(function(t4) {
            t4(e3);
          })).then(o2, s2);
        }
        l2((r2 = r2.apply(t2, e2 || [])).next());
      });
    }, i = this && this.__generator || function(t2, e2) {
      var n2, r2, i2, a2 = { label: 0, sent: function() {
        if (1 & i2[0]) throw i2[1];
        return i2[1];
      }, trys: [], ops: [] }, o2 = Object.create(("function" == typeof Iterator ? Iterator : Object).prototype);
      return o2.next = s2(0), o2.throw = s2(1), o2.return = s2(2), "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
        return this;
      }), o2;
      function s2(s3) {
        return function(l2) {
          return function(s4) {
            if (n2) throw new TypeError("Generator is already executing.");
            for (; o2 && s4[o2 = 0] && (a2 = 0), a2; ) try {
              if (n2 = 1, r2 && (i2 = 2 & s4[0] ? r2.return : s4[0] ? r2.throw || ((i2 = r2.return) && i2.call(r2), 0) : r2.next) && !(i2 = i2.call(r2, s4[1])).done) return i2;
              switch (r2 = 0, i2 && (s4 = [2 & s4[0], i2.value]), s4[0]) {
                case 0:
                case 1:
                  i2 = s4;
                  break;
                case 4:
                  return a2.label++, { value: s4[1], done: false };
                case 5:
                  a2.label++, r2 = s4[1], s4 = [0];
                  continue;
                case 7:
                  s4 = a2.ops.pop(), a2.trys.pop();
                  continue;
                default:
                  if (!(i2 = 0 < (i2 = a2.trys).length && i2[i2.length - 1]) && (6 === s4[0] || 2 === s4[0])) {
                    a2 = 0;
                    continue;
                  }
                  if (3 === s4[0] && (!i2 || s4[1] > i2[0] && s4[1] < i2[3])) {
                    a2.label = s4[1];
                    break;
                  }
                  if (6 === s4[0] && a2.label < i2[1]) {
                    a2.label = i2[1], i2 = s4;
                    break;
                  }
                  if (i2 && a2.label < i2[2]) {
                    a2.label = i2[2], a2.ops.push(s4);
                    break;
                  }
                  i2[2] && a2.ops.pop(), a2.trys.pop();
                  continue;
              }
              s4 = e2.call(t2, a2);
            } catch (t3) {
              s4 = [6, t3], r2 = 0;
            } finally {
              n2 = i2 = 0;
            }
            if (5 & s4[0]) throw s4[1];
            return { value: s4[0] ? s4[1] : void 0, done: true };
          }([s3, l2]);
        };
      }
    };
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDbDatabase = void 0;
    var a = t("three"), o = t("../MxFun"), s = t("./MxDbEntity"), l = t("./MxDbEntityGrip"), c = t("./MxDbEntitySelect"), u = t("../MxManager"), h = t("../MxType"), p = t("./MxDbLayerTable"), d = t("./MxDbGroup"), f = t("../MxTools"), m = (g.prototype.getAllEntity = function() {
      return this.mapIdToEntity;
    }, g.prototype.getGroupDictionary = function() {
      return this.groupDictionary;
    }, g.prototype.regenAllMxDbEntity = function() {
      return this.mapIdToEntity.forEach(function(t2) {
        t2.upDisplay(), t2.setDirtyDisplay(false);
      }), true;
    }, g.prototype.upDirtyDisplay = function() {
      var t2 = false;
      return this.mapIdToEntity.forEach(function(e2) {
        e2.getDirtyDisplay() && (e2.upDisplay(), e2.setDirtyDisplay(false), t2 = true);
      }), t2;
    }, g.prototype.onViewChange = function() {
      var t2 = false;
      return this.mapIdToEntity.forEach(function(e2) {
        e2.onViewChange() && (t2 = true);
      }), t2;
    }, g.prototype.toJsonObject = function(t2) {
      var e2 = { ver: 1 }, n2 = new a.Vector3(0, 0, 0), r2 = new a.Vector3(this.mxObj.getViewWidth(), this.mxObj.getViewHeight(), 0), i2 = h.MxType.MxCloneType.kMxFileClone;
      t2 && (i2 = h.MxType.MxCloneType.kSaveDwgClone);
      var o2 = this.mxObj.screenCoord2Current(n2.x, n2.y, 0), s2 = this.mxObj.screenCoord2Current(r2.x, r2.y, 0);
      e2.view = { ptView1: o2, ptView2: s2 };
      var l2 = [];
      return this.mapNameToLayer.forEach(function(t3) {
        var e3 = { type: i2 };
        t3.dwgOut(e3), e3.TypeName = "MxDbLayerTableRecord", l2.push(e3);
      }), e2.layers = l2, this.groupDictionary.dwgOut(e2), e2;
    }, g.prototype.saveJson = function(t2) {
      var e2 = this, n2 = this.toJsonObject(t2), r2 = h.MxType.MxCloneType.kMxFileClone;
      t2 && (r2 = h.MxType.MxCloneType.kSaveDwgClone);
      var i2 = [];
      return this.mapIdToEntity.forEach(function(t3) {
        var n3 = t3.getUserObject(), a2 = { type: r2 };
        n3.dwgOut(a2), a2.TypeName = n3.getTypeName(), a2.group = e2.groupDictionary.getEntityInGroupName(t3.objectId()), i2.push(a2);
      }), n2.entitys = i2, n2;
    }, g.prototype.reInit = function() {
      this.eraseAllEntity(), this.groupDictionary = new d.MxDbGroupDictionary();
      var t2 = this.parentObject.matrix;
      this.init(this.mxObj), this.initObjectMatrix(t2);
    }, g.prototype.init = function(t2) {
      this.mxObj = t2, this.scene = t2.getScene(), o.MxFun.removeThreejsObject(this.parentObject, this.scene), o.MxFun.removeThreejsObject(this.parentObject_SmallCoord, this.scene), this.parentObject = new a.Object3D(), this.parentObject.renderOrder = u.MxData.iMxEntityRenderOrder, this.scene.add(this.parentObject), this.parentObject_SmallCoord = new a.Object3D(), this.parentObject_SmallCoord.renderOrder = u.MxData.iMxEntityRenderOrder, this.scene.add(this.parentObject_SmallCoord), this.initLayerTable();
    }, g.prototype.loadJson = function(t2) {
      return r(this, void 0, void 0, function() {
        var e2, n2, r2, o2, l2, c2, h2, p2, d2, f2, m2 = this;
        return i(this, function(g2) {
          switch (g2.label) {
            case 0:
              if (this.reInit(), (e2 = t2).view && (n2 = e2.view, this.mxObj.zoomW(new a.Vector3(n2.ptView1.x, n2.ptView1.y, 0), new a.Vector3(n2.ptView2.x, n2.ptView2.y, 0), false)), r2 = e2.layers) for (o2 = r2.length, f2 = 0; f2 < o2; f2++) l2 = r2[f2], this.addLayer(l2.name).dwgIn(l2);
              this.groupDictionary.dwgIn(e2), c2 = e2.entitys, h2 = c2.length, p2 = function(t3) {
                var e3, n3, r3, a2;
                return i(this, function(i2) {
                  switch (i2.label) {
                    case 0:
                      return e3 = c2[t3], [4, u.MxManager.getMxDbEntityClassHierarchy().createMxEntity(e3.TypeName)];
                    case 1:
                      return (n3 = i2.sent()) ? (n3.dwgIn(e3), (r3 = new s.MxDbEntity()).initUserObject(n3), d2.addEntityImp(r3), (a2 = e3.group) && 0 < a2.length && a2.forEach(function(t4) {
                        m2.groupDictionary.add(t4).append(r3.objectId());
                      }), [2]) : [2, "continue"];
                  }
                });
              }, d2 = this, f2 = 0, g2.label = 1;
            case 1:
              return f2 < h2 ? [5, p2(f2)] : [3, 4];
            case 2:
              g2.sent(), g2.label = 3;
            case 3:
              return f2++, [3, 1];
            case 4:
              return [2, new Promise(function(t3) {
                t3(true);
              })];
          }
        });
      });
    }, g.prototype.getMxObject = function() {
      return this.mxObj;
    }, g.prototype.getGripManager = function() {
      return this.gripManager;
    }, g.prototype.getSelectManager = function() {
      return this.selectManager;
    }, g.prototype.clearMxCurrentSelect = function() {
      var t2 = false;
      return this.gripManager.removeAllGrips() && (t2 = true), this.selectManager.removeAllEntity() && (t2 = true), t2;
    }, g.prototype.eraseAllEntity = function() {
      this.mapIdToEntity.forEach(function(t2) {
        t2.clearDisplayImp();
      }), this.mapIdToEntity = /* @__PURE__ */ new Map(), this.clearMxCurrentSelect();
    }, g.prototype.initObjectMatrix = function(t2) {
      this.parentObject.matrix = t2, this.parentObject.matrixAutoUpdate = false, this.parentObject_SmallCoord.matrix = new a.Matrix4(), this.parentObject_SmallCoord.matrixAutoUpdate = false;
    }, g.prototype.initLayerTable = function() {
      this.mapNameToLayer = /* @__PURE__ */ new Map(), this.curLayer = "0";
      var t2 = new p.MxDbLayerTableRecord();
      t2.init(this.curLayer, this.parentObject, this.parentObject_SmallCoord), this.mapNameToLayer.set(this.curLayer, t2);
    }, g.prototype.getEntity = function(t2) {
      return this.mapIdToEntity.get(t2);
    }, g.prototype.isValidId = function(t2) {
      return this.mapIdToEntity.has(t2);
    }, g.prototype.setRenderOrder = function(t2) {
      var e2 = this.parentObject.renderOrder;
      return this.parentObject.renderOrder = t2, this.parentObject_SmallCoord.renderOrder = t2, e2;
    }, g.prototype.eraseEntity = function(t2) {
      this.gripManager.deleteGripData(t2), this.selectManager.deleteSelect(t2), this.mapIdToEntity.delete(t2);
    }, g.prototype.showLayer = function(t2, e2) {
      var n2 = this.getLayer(t2);
      n2 && n2.setVisible(e2);
    }, g.prototype.setCurrentLayer = function(t2) {
      if (0 != t2.length) return this.curLayer = t2, this.addLayer(t2);
    }, g.prototype.addLayer = function(t2) {
      var e2 = this.mapNameToLayer.get(t2);
      return e2 || ((e2 = new p.MxDbLayerTableRecord()).init(t2, this.parentObject, this.parentObject_SmallCoord), this.mapNameToLayer.set(t2, e2), e2);
    }, g.prototype.getLayer = function(t2) {
      return this.mapNameToLayer.get(t2);
    }, g.prototype.addMxEntity = function(t2) {
      if (t2.getImp()) return t2.objectId();
      var e2 = new s.MxDbEntity();
      return e2.initUserObject(t2), t2.initGuid(f.MxTools.generateUUID()), this.addEntityImp(e2);
    }, g.prototype.addEntityImp = function(t2) {
      return this.mapIdToEntity.set(this.idCount, t2), t2.setMxDatabase(this), t2.setObjectId(this.idCount), 0 == t2.getLayer().length && t2.setLayer(this.curLayer), t2.upDisplay(), this.idCount++;
    }, g.prototype.getThreeJSParentObject = function() {
      return this.parentObject;
    }, g.prototype.getThreeJSParentObject_SmallCoord = function() {
      return this.parentObject_SmallCoord;
    }, g.prototype.getIntersectObjects = function(t2) {
      var e2 = this.getIntersectObjects_imp(t2), n2 = this.getIntersectObjects_SmallCoord_imp(t2);
      return e2.concat(n2);
    }, g.prototype.getIntersectObjects_imp = function(t2) {
      return this.mxObj.getMxDrawThreeJs().createRaycaster(t2).intersectObjects(this.parentObject.children, true);
    }, g.prototype.getIntersectObjects_SmallCoord_imp = function(t2) {
      return this.mxObj.getMxDrawThreeJs().createRaycaster(t2).intersectObjects(this.parentObject_SmallCoord.children, true);
    }, g);
    function g() {
      this.mapIdToEntity = /* @__PURE__ */ new Map(), this.mxObj = null, this.scene = null, this.idCount = 1, this.parentObject = null, this.parentObject_SmallCoord = null, this.mapNameToLayer = /* @__PURE__ */ new Map(), this.curLayer = "0", this.gripManager = new l.MxDbEntityGrip(this), this.selectManager = new c.MxDbEntitySelect(this), this.groupDictionary = new d.MxDbGroupDictionary();
    }
    n.MxDbDatabase = m;
  }, { "../MxFun": 27, "../MxManager": 29, "../MxTools": 38, "../MxType": 39, "./MxDbEntity": 69, "./MxDbEntityGrip": 70, "./MxDbEntitySelect": 71, "./MxDbGroup": 72, "./MxDbLayerTable": 73, three: 19 }], 69: [function(t, e, n) {
    var r = this && this.__awaiter || function(t2, e2, n2, r2) {
      return new (n2 = n2 || Promise)(function(i2, a2) {
        function o2(t3) {
          try {
            l2(r2.next(t3));
          } catch (t4) {
            a2(t4);
          }
        }
        function s2(t3) {
          try {
            l2(r2.throw(t3));
          } catch (t4) {
            a2(t4);
          }
        }
        function l2(t3) {
          var e3;
          t3.done ? i2(t3.value) : ((e3 = t3.value) instanceof n2 ? e3 : new n2(function(t4) {
            t4(e3);
          })).then(o2, s2);
        }
        l2((r2 = r2.apply(t2, e2 || [])).next());
      });
    }, i = this && this.__generator || function(t2, e2) {
      var n2, r2, i2, a2 = { label: 0, sent: function() {
        if (1 & i2[0]) throw i2[1];
        return i2[1];
      }, trys: [], ops: [] }, o2 = Object.create(("function" == typeof Iterator ? Iterator : Object).prototype);
      return o2.next = s2(0), o2.throw = s2(1), o2.return = s2(2), "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
        return this;
      }), o2;
      function s2(s3) {
        return function(l2) {
          return function(s4) {
            if (n2) throw new TypeError("Generator is already executing.");
            for (; o2 && s4[o2 = 0] && (a2 = 0), a2; ) try {
              if (n2 = 1, r2 && (i2 = 2 & s4[0] ? r2.return : s4[0] ? r2.throw || ((i2 = r2.return) && i2.call(r2), 0) : r2.next) && !(i2 = i2.call(r2, s4[1])).done) return i2;
              switch (r2 = 0, i2 && (s4 = [2 & s4[0], i2.value]), s4[0]) {
                case 0:
                case 1:
                  i2 = s4;
                  break;
                case 4:
                  return a2.label++, { value: s4[1], done: false };
                case 5:
                  a2.label++, r2 = s4[1], s4 = [0];
                  continue;
                case 7:
                  s4 = a2.ops.pop(), a2.trys.pop();
                  continue;
                default:
                  if (!(i2 = 0 < (i2 = a2.trys).length && i2[i2.length - 1]) && (6 === s4[0] || 2 === s4[0])) {
                    a2 = 0;
                    continue;
                  }
                  if (3 === s4[0] && (!i2 || s4[1] > i2[0] && s4[1] < i2[3])) {
                    a2.label = s4[1];
                    break;
                  }
                  if (6 === s4[0] && a2.label < i2[1]) {
                    a2.label = i2[1], i2 = s4;
                    break;
                  }
                  if (i2 && a2.label < i2[2]) {
                    a2.label = i2[2], a2.ops.push(s4);
                    break;
                  }
                  i2[2] && a2.ops.pop(), a2.trys.pop();
                  continue;
              }
              s4 = e2.call(t2, a2);
            } catch (t3) {
              s4 = [6, t3], r2 = 0;
            } finally {
              n2 = i2 = 0;
            }
            if (5 & s4[0]) throw s4[1];
            return { value: s4[0] ? s4[1] : void 0, done: true };
          }([s3, l2]);
        };
      }
    };
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDbEntity = n.MxDbEntityClassHierarchy = n.MxDbEntityUserObject = void 0;
    var a = t("three"), o = t("../Operate/McGiWorldDraw"), s = t("../MxManager"), l = t("../MxTools"), c = t("../MxType"), u = (h.prototype.getClosestPointTo = function(t2, e2) {
      return null;
    }, h.prototype.getTypeName = function() {
      return "";
    }, h.prototype.isUseSmallcoordDisplay = function() {
      return this.use_smallcoord_display;
    }, h.prototype.toSmallcoord = function(t2, e2) {
      return this.use_smallcoord_display ? t2.toSmallcoord(e2) : e2;
    }, h.prototype.initGuid = function(t2) {
      0 < this.sGuid.length ? console.log("mx: init guid error") : this.sGuid = t2;
    }, h.prototype.guid = function() {
      return this.sGuid;
    }, h.prototype.setGuid = function(t2) {
      this.sGuid = t2;
    }, h.prototype.setLayer = function(t2) {
      var e2 = this.getImp();
      e2 && e2.nodifySetLayer(), this.layer = t2;
    }, h.prototype.getLayer = function() {
      return this.layer;
    }, h.prototype.setDash = function(t2, e2) {
      this.dDashArray = t2, this.dDashRatio = e2, 0 == this.dLineWidth && (this.dLineWidth = 6, this.lineWidthByPixels = true);
    }, h.prototype.getDash = function() {
      return { dDashArray: this.dDashArray, dDashRatio: this.dDashRatio };
    }, h.prototype.setDashLineDisplay = function(t2) {
      t2 ? (this.dDashArray = 0.03, this.dDashRatio = 0.1, 0 == this.dLineWidth && (this.dLineWidth = 6, this.lineWidthByPixels = true)) : (this.dDashArray = 0, this.dDashRatio = 0);
    }, h.prototype.isDashLineDisplay = function() {
      return 0 < this.dDashArray && 0 < this.dDashRatio;
    }, h.prototype.setLineWidthByPixels = function(t2) {
      this.lineWidthByPixels = t2;
    }, h.prototype.getLineWidthByPixels = function() {
      return this.lineWidthByPixels;
    }, h.prototype.setLineWidth = function(t2) {
      this.dLineWidth = t2;
    }, h.prototype.getLineWidth = function() {
      return this.dLineWidth;
    }, h.prototype.getMxObject = function() {
      var t2 = this.getImp();
      return t2 ? t2.getMxObject() : null;
    }, h.prototype.onViewChange = function() {
      return false;
    }, h.prototype.getImp = function() {
      return this.MxDbEntityImp;
    }, h.prototype.upDisplay = function() {
      var t2 = this.getImp();
      return !!t2 && t2.upDisplay();
    }, h.prototype.erase = function() {
      var t2 = this.getImp();
      return !!t2 && t2.erase();
    }, h.prototype.setColor = function(t2) {
      this.iColor = t2;
    }, h.prototype.getColor = function() {
      return this.iColor;
    }, h.prototype.setRenderOrder = function(t2) {
      this.iRenderOrder = t2;
    }, h.prototype.getRenderOrder = function() {
      return this.iRenderOrder;
    }, h.prototype.onEndGripEidt = function() {
    }, h.prototype.onStartGripEidt = function() {
    }, h.prototype.dwgIn = function(t2) {
      return this.iColor = t2.iColor, this.iRenderOrder = t2.iRenderOrder, this.opacity = t2.opacity, this.visible = t2.visible, this.dLineWidth = t2.lineWidth, this.lineWidthByPixels = t2.lineWidthByPixels, this.dDashArray = t2.dashArray, this.dDashRatio = t2.dashRatio, this.layer = t2.layer, t2.guid && (this.sGuid = t2.guid), true;
    }, h.prototype.dwgOut = function(t2) {
      return t2.iColor = this.iColor, t2.iRenderOrder = this.iRenderOrder, t2.opacity = this.opacity, t2.visible = this.visible, t2.lineWidth = this.dLineWidth, t2.lineWidthByPixels = this.lineWidthByPixels, t2.dashArray = this.dDashArray, t2.dashRatio = this.dDashRatio, t2.layer = this.layer, t2.guid = this.sGuid, t2;
    }, h.prototype.clone = function(t2) {
      var e2 = this.create(), n2 = { type: t2 || c.MxType.MxCloneType.kClone };
      return this.dwgOut(n2), e2.dwgIn(n2), e2.sGuid = "", e2;
    }, h.prototype.init = function() {
      s.MxManager.getMxDbEntityClassHierarchy().init(this);
    }, h.prototype.transformBy = function(t2) {
    }, h.prototype.objectId = function() {
      var t2 = this.getImp();
      return t2 ? t2.objectId() : 0;
    }, h);
    function h() {
      this.iColor = 16777215, this.iRenderOrder = s.MxData.iMxEntityRenderOrder, this.opacity = 1, this.visible = true, this.dLineWidth = 0, this.lineWidthByPixels = true, this.dDashArray = 0, this.dDashRatio = 0, this.layer = "", this.sGuid = "", this.use_smallcoord_display = false;
    }
    n.MxDbEntityUserObject = u;
    var p = (d.prototype.init = function(t2) {
      var e2 = t2.getTypeName();
      this.mapType2Create.get(e2) && console.log("MxError:already has this class name " + e2), this.mapType2Create.set(e2, { type: 0, createfun: t2 });
    }, d.prototype.initDynamic = function(t2) {
      this.dynmaicCreate = t2;
    }, d.prototype.createMxEntity = function(t2) {
      return r(this, void 0, void 0, function() {
        var e2, n2;
        return i(this, function(r2) {
          switch (r2.label) {
            case 0:
              return (e2 = this.mapType2Create.get(t2)) ? [3, 3] : this.dynmaicCreate ? [4, this.dynmaicCreate(t2)] : [3, 2];
            case 1:
              return (n2 = r2.sent()) ? (this.mapType2Create.set(t2, { type: 1, createfun: n2 }), [2, new Promise(function(t3, e3) {
                t3(new n2());
              })]) : [2, new Promise(function(t3, e3) {
                t3(null);
              })];
            case 2:
              return [2, new Promise(function(t3, e3) {
                t3(null);
              })];
            case 3:
              return 0 == e2.type ? [2, new Promise(function(t3, n3) {
                t3(e2.createfun.create());
              })] : 1 == e2.type ? [2, new Promise(function(t3, n3) {
                t3(new e2.createfun());
              })] : [2, new Promise(function(t3, e3) {
                t3(null);
              })];
          }
        });
      });
    }, d);
    function d() {
      this.mapType2Create = /* @__PURE__ */ new Map(), this.dynmaicCreate = null;
    }
    n.MxDbEntityClassHierarchy = p;
    var f = (m.prototype.setObjectId = function(t2) {
      this.id = t2;
    }, m.prototype.nodifySetLayer = function() {
      this.layerObjectGroup && this.clearDisplayImp();
    }, m.prototype.setLayer = function(t2) {
      this.userObject.setLayer(t2);
    }, m.prototype.getLayer = function() {
      return this.userObject.getLayer();
    }, m.prototype.setDirtyDisplay = function(t2) {
      this.isDirtyDisplay = t2;
    }, m.prototype.getDirtyDisplay = function() {
      return this.isDirtyDisplay;
    }, m.prototype.setMxDatabase = function(t2) {
      this.mxDatabase = t2;
    }, m.prototype.objectId = function() {
      return this.id;
    }, m.prototype.initUserObject = function(t2) {
      (this.userObject = t2).MxDbEntityImp = this;
    }, m.prototype.upDisplay = function() {
      if (!this.mxDatabase) return console.log("mxassert(0) this.mxDatabase is null"), false;
      this.updateDisplayImp(this.mxDatabase.getMxObject());
    }, m.prototype.erase = function() {
      if (0 == this.id) return false;
      this.clearDisplayImp(), this.userObject = null, this.mxDatabase.eraseEntity(this.id), this.id = 0, this.mxDatabase = null;
    }, m.prototype.clearDisplayImp = function() {
      this.layerObjectGroup && (this.threeObjectGroup && (this.threeObjectGroup.traverse(function(t2) {
        "Mesh" === t2.type && (t2.geometry.dispose(), t2.material.dispose());
      }), this.layerObjectGroup.remove(this.threeObjectGroup)), this.threeObjectGroup = null, this.layerObjectGroup = null);
    }, m.prototype.updateDisplayImp = function(t2) {
      if (this.clearDisplayImp(), this.userObject) {
        if (this.userObject.visible) {
          var e2 = this.mxDatabase.addLayer(this.userObject.getLayer());
          if (!e2) return console.log("mxassert(0) this.layerRecord is null"), false;
          this.threeObjectGroup = new a.Object3D();
          var n2 = new o.McGiWorldDraw(t2, o.McGiWorldDrawType.kWorldDraw);
          n2.setupForEntity(this.userObject), this.worldDraw(n2);
          for (var r2 = n2.getEntitys(), i2 = r2.length, s2 = 0; s2 < i2; s2++) {
            var c2 = r2[s2];
            (c2.MxDbEntity = this).threeObjectGroup.add(c2);
          }
          this.userObject.isUseSmallcoordDisplay() ? this.layerObjectGroup = e2.getGroup_SmallCoord() : this.layerObjectGroup = e2.getGroup(), this.layerObjectGroup.add(this.threeObjectGroup);
        }
      } else l.MxTools.MxASSERT(false, "this.userObject == null");
    }, m.prototype.worldDraw = function(t2) {
      this.userObject.worldDraw(t2);
    }, m.prototype.getGripPoints = function() {
      return this.userObject.getGripPoints();
    }, m.prototype.getClosestPointTo = function(t2, e2) {
      return this.userObject.getClosestPointTo(t2, e2);
    }, m.prototype.getUserObject = function() {
      return this.userObject;
    }, m.prototype.clone = function(t2) {
      var e2 = new m();
      return e2.initUserObject(this.userObject.clone(t2)), e2;
    }, m.prototype.transformBy = function(t2) {
      this.userObject.transformBy(t2);
    }, m.prototype.setColor = function(t2) {
      this.userObject.setColor(t2);
    }, m.prototype.onEndGripEidt = function() {
      this.userObject.onEndGripEidt();
    }, m.prototype.onStartGripEidt = function() {
      return this.userObject.onStartGripEidt();
    }, m.prototype.getColor = function() {
      return this.userObject.getColor();
    }, m.prototype.getMxObject = function() {
      return this.mxDatabase ? this.mxDatabase.getMxObject() : null;
    }, m.prototype.onViewChange = function() {
      return !!this.userObject && this.userObject.onViewChange();
    }, m);
    function m() {
      this.threeObjectGroup = null, this.userObject = null, this.mxDatabase = null, this.isDirtyDisplay = false, this.layerObjectGroup = null, this.id = 0;
    }
    n.MxDbEntity = f;
  }, { "../MxManager": 29, "../MxTools": 38, "../MxType": 39, "../Operate/McGiWorldDraw": 44, three: 19 }], 70: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDbEntityGrip = n.MxDbEntityGripJig = n.MxDbEntityGripData = void 0, n.MxGetMxDbEntitForThreeJsObject = f, n.MxGetWordDrawxDataForThreeJsObject = function(t2) {
      for (var e2 = null; t2 && !(e2 = t2.MxWordDrawXData) && t2.parent; ) t2 = t2.parent;
      return e2;
    };
    var a = t("three"), o = t("../MxFun"), s = t("../MxDrawData"), l = t("../Operate/MxJig"), c = t("../Operate/MxJigCmdManager"), u = t("../Operate/McGiWorldDraw"), h = t("../MxManager"), p = t("../MxType"), d = function() {
      this.threeObject = null;
    };
    function f(t2) {
      for (var e2 = null; t2 && !(e2 = t2.MxDbEntity) && t2.parent; ) t2 = t2.parent;
      return e2;
    }
    n.MxDbEntityGripData = d;
    var m, g = (i(y, m = l.McEdJigCommand), y.prototype.sampler = function() {
      var t2 = c.MxJigCmdManager.InType.kGetBegan | c.MxJigCmdManager.InType.kGetEnd, e2 = this.acquirePoint(t2);
      return e2.status == c.MxJigCmdManager.DragStatus.kNormal && (this.currPt = e2.pt), e2.status;
    }, y.prototype.getTypeName = function() {
      return "MxGripEdit";
    }, y.prototype.onStartCommand = function() {
      this.iscallOnStartCommand = true, m.prototype.onStartCommand.call(this);
    }, y.prototype.done = function(t2) {
      if (t2 == c.MxJigCmdManager.DragStatus.kNormal) {
        var e2 = this.currPt.clone();
        e2.sub(this.dragBasePt);
        for (var n2 = this.getMxObject(), r2 = n2.getMxDatabase(), i2 = n2.getMxDatabase().getGripManager(), a2 = this.grips.length, o2 = /* @__PURE__ */ new Set(), s2 = [], l2 = 0; l2 < a2; l2++) {
          var u2 = this.grips[l2], h2 = this.ents[l2];
          i2.deleteGripData(h2.objectId()), h2.getUserObject().moveGripPointsAt(u2.iIndex, e2), i2.addGripFromEntity(h2), h2.upDisplay(), o2.add(h2.objectId());
          var p2 = { type: "mxdraw", id: h2.objectId(), index: u2.iIndex, curentPoint: this.currPt, point: u2.point, offset_x: e2.x, offset_y: e2.y };
          s2.push(p2);
        }
        n2.updateDisplay(), 0 < s2.length && n2.callEvent("objectGripEdit", s2), r2.getSelectManager().upSelectDilsplay(o2);
      }
      var d2 = this.ents.length;
      for (l2 = 0; l2 < d2; l2++) (h2 = this.ents[l2]).onEndGripEidt(), t2 != c.MxJigCmdManager.DragStatus.kNormal && h2.upDisplay();
      return c.MxJigCmdManager.DoneStatius.kExitCommand;
    }, y.prototype.upDisplay = function() {
      var t2 = this.currPt.clone();
      if (t2.sub(this.dragBasePt), !(t2.length() < 1e-3)) {
        if (this.iscallOnStartCommand) {
          for (var e2 = this.ents.length, n2 = 0; n2 < e2; n2++) {
            var r2 = this.ents[n2];
            this.aryParam.push(r2.onStartGripEidt());
          }
          this.iscallOnStartCommand = false;
        }
        var i2 = this.getMxObject(), a2 = this.grips.length;
        for (n2 = 0; n2 < a2; n2++) {
          var o2 = this.grips[n2], s2 = (r2 = this.ents[n2], this.aryParam[n2]), l2 = r2.clone(p.MxType.MxCloneType.kDragClone);
          l2.getUserObject().moveGripPointsAt(o2.iIndex, t2);
          var c2 = new u.McGiWorldDraw(i2, u.McGiWorldDrawType.kDynDragDraw);
          c2.setupForEntity(l2.getUserObject()), l2.worldDraw(c2);
          var h2 = c2.getEntitys(), d2 = h2.length, f2 = 31;
          s2 && s2.renderOrder && (f2 = s2.renderOrder);
          for (var m2 = 0; m2 < d2; m2++) this.drawEntity(h2[m2], f2, l2.getUserObject().isUseSmallcoordDisplay());
        }
      }
    }, y);
    function y(t2, e2, n2) {
      var r2 = m.call(this) || this;
      return r2.aryParam = [], r2.iscallOnStartCommand = true, r2.dragBasePt = t2, r2.grips = e2, r2.ents = n2, r2.currPt = t2, r2.iscallOnStartCommand = true, r2;
    }
    n.MxDbEntityGripJig = g;
    var v = (x.prototype.getAllSelect = function() {
      var t2 = [];
      return this.mapGrips.forEach(function(e2, n2) {
        t2.push(n2);
      }), t2;
    }, x.prototype.getParentGroup = function() {
      return this.drawGroup || (this.drawGroup = new a.Group(), this.drawGroup.renderOrder = h.MxData.iGripRenderOrder, this.database.getMxObject().getTheTempDrawContainer_SmallCoord_Draw().add(this.drawGroup)), this.drawGroup;
    }, x.prototype.reInit = function() {
      this.removeAllGrips(), this.drawGroup && o.MxFun.removeThreejsObject(this.drawGroup, this.database.getMxObject().getTheTempDrawContainer_SmallCoord_Draw()), this.drawGroup = null;
    }, x.prototype.removeAllGrips = function() {
      if (0 == this.mapGrips.size) return false;
      var t2 = this.getParentGroup();
      return this.mapGrips.forEach(function(e2, n2, r2) {
        for (var i2 = e2.length, a2 = 0; a2 < i2; a2++) {
          var s2 = e2[a2];
          o.MxFun.removeThreejsObject(s2.threeObject, t2);
        }
      }), this.mapGrips = /* @__PURE__ */ new Map(), true;
    }, x.prototype.deleteGripData = function(t2) {
      var e2 = this.getParentGroup(), n2 = this.mapGrips.get(t2);
      if (n2) for (var r2 = n2.length, i2 = 0; i2 < r2; i2++) {
        var a2 = n2[i2];
        o.MxFun.removeThreejsObject(a2.threeObject, e2);
      }
      this.mapGrips.delete(t2);
    }, x.prototype.createGripDisplayObject = function(t2) {
      var e2 = this.database.getMxObject(), n2 = this.getParentGroup();
      t2.geometry = new a.Geometry();
      var r2 = e2.toSmallcoord2(t2.point.x, t2.point.y, t2.point.z), i2 = e2.screenCoordLong2World(s.MxDrawData.m_dInputRectWidth / 2);
      t2.geometry.vertices.push(new a.Vector3(r2.x - i2, r2.y - i2, 0)), t2.geometry.vertices.push(new a.Vector3(r2.x - i2, r2.y + i2, 0)), t2.geometry.vertices.push(new a.Vector3(r2.x + i2, r2.y + i2, 0)), t2.geometry.vertices.push(new a.Vector3(r2.x + i2, r2.y - i2, 0)), t2.geometry.faces.push(new a.Face3(0, 1, 2)), t2.geometry.faces.push(new a.Face3(2, 3, 0)), t2.geometry.computeFaceNormals(), t2.geometry.computeVertexNormals();
      var o2 = new a.MeshBasicMaterial({ color: 255, transparent: true, depthTest: false, side: a.DoubleSide, opacity: 0.9 }), l2 = new a.Mesh(t2.geometry, o2);
      n2.add(l2), t2.threeObject = l2;
    }, x.prototype.addGripData = function(t2, e2, n2) {
      var r2 = this.mapGrips.get(t2);
      null == r2 && (r2 = new Array(), this.mapGrips.set(t2, r2));
      var i2 = new d();
      return i2.iIndex = e2, i2.point = new a.Vector3(n2.x, n2.y, 0), r2.push(i2), i2;
    }, x.prototype.hitTest = function(t2) {
      var e2 = this, n2 = { grips: new Array(), ents: new Array(), pt: t2 }, r2 = new a.Vector3(t2.x, t2.y, 0), i2 = this.database.getMxObject(), o2 = i2.viewCoordLong2Cad(s.MxDrawData.m_dInputRectWidth / 2);
      return this.mapGrips.forEach(function(t3, a2) {
        for (var s2 = t3.length, l2 = 0; l2 < s2; l2++) {
          var c2 = t3[l2];
          if (c2.point.distanceTo(r2) <= o2) {
            var u2 = e2.database.getEntity(a2), h2 = true;
            i2.hasEvent("whetherEditTheGripPoint") && (h2 = i2.callEvent("whetherEditTheGripPoint", { entity: u2.getUserObject(), index: c2.iIndex })), h2 && (n2.grips.push(c2), n2.ents.push(u2));
            break;
          }
        }
      }), n2;
    }, x.prototype.onMouseLBDown = function(t2) {
      if (1 != s.MxDrawData.m_isEnableGripEidt) return false;
      var e2 = this.hitTest(t2);
      return 0 != e2.grips.length && (o.MxFun.sendStringToExecute("Mx_FrontEndWebpageGripEdit", e2), true);
    }, x.prototype.gripEditImp = function(t2) {
      var e2 = t2.grips, n2 = t2.ents, r2 = t2.pt, i2 = new g(r2, e2, n2);
      i2.setDisableDynInput(true), i2.setDisableOsnap(true), c.MxJigCmdManager.runCmd(i2);
    }, x.prototype.doWindowsSelect = function(t2, e2, n2) {
    }, x.prototype.addGripFromEntity = function(t2) {
      if (0 != s.MxDrawData.m_isEnableGripEidt) {
        var e2 = t2.getGripPoints(), n2 = t2.objectId();
        this.deleteGripData(n2);
        for (var r2 = 0; r2 < e2.length; r2++) {
          var i2 = this.addGripData(n2, r2, e2[r2]);
          this.createGripDisplayObject(i2);
        }
      }
    }, x.prototype.addSelect = function(t2, e2, n2) {
      void 0 === n2 && (n2 = true);
      var r2 = this.database.getSelectManager(), i2 = false;
      if (this.getAllSelect().forEach(function(e3) {
        e3 == t2 && (i2 = true);
      }), i2) return false;
      var a2 = this.database.getMxObject().getMxEntity(t2);
      if (!a2) return false;
      var o2 = /* @__PURE__ */ new Set();
      return o2.add(t2), n2 && this.addGripFromEntity(a2), r2.upSelectDilsplay(o2), e2 && this.fireMxEntitySelectChange(), true;
    }, x.prototype.fireMxEntitySelectChange = function() {
      var t2 = this.database.getMxObject();
      this.isCallingMxEntitySelectChange || (this.isCallingMxEntitySelectChange = true, t2.callEvent("mxdrawSelectChange", this.getAllSelect()), this.isCallingMxEntitySelectChange = false);
    }, x.prototype.doPointSelect = function(t2, e2) {
      void 0 === e2 && (e2 = false);
      for (var n2 = false, r2 = this.database.getSelectManager(), i2 = this.database.getMxObject(), a2 = r2.isEmptySelect(), o2 = false, l2 = i2.viewCoordLong2Cad(0.5 * s.MxDrawData.m_dInputRectWidth), c2 = function() {
        i2.pointMultipleSelect() || (u2.removeAllGrips() && (o2 = true), r2.removeAllEntity() && (o2 = true), i2.getMcObject().isValid() && (o2 = i2.getMcObject().getGripManager().clearAll()), e2 = false);
        var a3 = u2.database.getIntersectObjects(t2);
        if (0 == a3.length) return i2.updateDisplay(), "break";
        var s2 = i2.screenCoord2Current(t2.x, t2.y, t2.z), c3 = u2, h2 = /* @__PURE__ */ new Set();
        if (a3.forEach(function(t3) {
          var n3 = f(t3.object);
          if (n3) {
            var r3 = n3.objectId();
            if (c3.database.isValidId(r3) && !h2.has(r3)) {
              var i3 = n3.getClosestPointTo(s2, 1), a4 = false;
              (!i3 || i3.distanceTo(s2) < l2) && (a4 = true), a4 && (h2.add(r3), e2 ? c3.deleteGripData(n3.objectId()) : c3.addGripFromEntity(n3));
            }
          }
        }), e2) h2.forEach(function(t3) {
          r2.deleteSelect(t3);
        });
        else {
          var p2 = /* @__PURE__ */ new Set(), d2 = u2.database.getGroupDictionary();
          h2.forEach(function(t3) {
            p2.add(t3), d2.getEntityInGroup(t3).forEach(function(t4) {
              t4.getAll().forEach(function(t5) {
                c3.database.isValidId(t5) && p2.add(t5);
              });
            });
          }), r2.upSelectDilsplay(p2);
        }
        return o2 = true, i2.updateDisplay(), n2 = true, "break";
      }, u2 = this; "break" !== c2(); ) ;
      return !o2 && a2 == r2.isEmptySelect() || this.fireMxEntitySelectChange(), n2;
    }, x);
    function x(t2) {
      this.database = null, this.mapGrips = /* @__PURE__ */ new Map(), this.isCallingMxEntitySelectChange = false, this.drawGroup = null, this.database = t2;
    }
    n.MxDbEntityGrip = v;
  }, { "../MxDrawData": 22, "../MxFun": 27, "../MxManager": 29, "../MxType": 39, "../Operate/McGiWorldDraw": 44, "../Operate/MxJig": 53, "../Operate/MxJigCmdManager": 54, three: 19 }], 71: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDbEntitySelect = void 0;
    var r = t("three"), i = t("../MxFun"), a = t("three.meshline"), o = t("../Operate/McGiWorldDraw"), s = t("../MxManager"), l = (c.prototype.setRenderOrder = function(t2) {
      this.iRenderOrder = t2;
    }, c.prototype.getRenderOrder = function() {
      return this.iRenderOrder;
    }, c.prototype.setCanvasSize = function(t2, e2) {
      this.canvasWidth == t2 && this.canvasHeight == e2 || (this.canvasWidth = t2, this.canvasHeight = e2, this.material.resolution = new r.Vector2(this.canvasWidth, this.canvasHeight), this.material.needsUpdate = true);
    }, c.prototype.removeAllEntity = function() {
      return 0 != this.mapIdToThreeObject.size && (this.mapIdToThreeObject.forEach(function(t2) {
        for (var e2 = t2.length, n2 = 0; n2 < e2; n2++) {
          var r2 = t2[n2];
          i.MxFun.removeThreejsObject(r2, r2.parentObject);
        }
      }), this.mapIdToThreeObject.clear(), true);
    }, c.prototype.isEmptySelect = function() {
      return 0 == this.mapIdToThreeObject.size;
    }, c.prototype.getParentObject = function(t2) {
      return t2 ? this.mxDatabase.getMxObject().getTheTempDrawContainer_SmallCoord_Draw() : this.mxDatabase.getMxObject().getTheTempDrawContainer();
    }, c.prototype.getAllSelect = function() {
      var t2 = [];
      return this.mapIdToThreeObject.forEach(function(e2, n2) {
        t2.push(n2);
      }), t2;
    }, c.prototype.setPrvCommandSelect = function(t2) {
      this.aryPrvCommandSelect = t2;
    }, c.prototype.getPrvCommandSelect = function() {
      return this.aryPrvCommandSelect;
    }, c.prototype.deleteSelect = function(t2) {
      var e2 = this.mapIdToThreeObject.get(t2);
      if (e2) {
        for (var n2 = e2.length, r2 = 0; r2 < n2; r2++) {
          var a2 = e2[r2];
          i.MxFun.removeThreejsObject(a2, a2.parentObject);
        }
        this.mapIdToThreeObject.delete(t2);
      }
    }, c.prototype.upSelectDilsplayFromId = function(t2) {
      var e2 = /* @__PURE__ */ new Set();
      e2.add(t2), this.upSelectDilsplay(e2);
    }, c.prototype.upSelectDilsplay = function(t2) {
      var e2 = this, n2 = new o.McGiWorldDrawSelect(this.mxDatabase.getMxObject(), this);
      t2.forEach(function(t3) {
        e2.deleteSelect(t3);
        var r2 = e2.mxDatabase.getEntity(t3);
        r2 && (n2.setSmallCoordDraw(r2.getUserObject().isUseSmallcoordDisplay()), n2.setCurEntityId(t3), r2.worldDraw(n2));
      });
    }, c.prototype.addCircleDisplay = function(t2, e2, n2, i2) {
      var o2 = new r.CircleGeometry(n2, 64, 3, 2 * Math.PI);
      if (o2.vertices.shift(), 0 != o2.vertices.length) {
        o2.vertices.push(o2.vertices[0]);
        var s2 = 3 * o2.vertices.length;
        if (0 != s2) {
          for (var l2 = this.getParentObject(i2), c2 = new Float32Array(s2), u = 0, h = 0; u + 2 < s2; u += 3, h++) c2[u] = o2.vertices[h].x + e2.x, c2[u + 1] = o2.vertices[h].y + e2.y, c2[u + 2] = e2.z;
          var p = new a.MeshLine();
          p.setGeometry(c2);
          var d = new r.Mesh(p.geometry, this.material);
          d.renderOrder = this.iRenderOrder, (d.parentObject = l2).add(d);
          var f = this.mapIdToThreeObject.get(t2);
          f || (f = new Array(), this.mapIdToThreeObject.set(t2, f)), f.push(d);
        }
      }
    }, c.prototype.addLineDisplay = function(t2, e2, n2, i2) {
      var o2 = this.getParentObject(i2), s2 = new Float32Array(6);
      s2[0] = e2.x, s2[1] = e2.y, s2[2] = 0, s2[3] = n2.x, s2[4] = n2.y, s2[5] = 0;
      var l2 = new a.MeshLine();
      l2.setGeometry(s2);
      var c2 = new r.Mesh(l2.geometry, this.material);
      c2.renderOrder = this.iRenderOrder, (c2.parentObject = o2).add(c2);
      var u = this.mapIdToThreeObject.get(t2);
      u || (u = new Array(), this.mapIdToThreeObject.set(t2, u)), u.push(c2);
    }, c);
    function c(t2) {
      this.mapIdToThreeObject = /* @__PURE__ */ new Map(), this.canvasWidth = 800, this.canvasHeight = 500, this.mxDatabase = null, this.material = new a.MeshLineMaterial({ useMap: false, color: new r.Color(2641557), opacity: 0.8, resolution: new r.Vector2(800, 500), sizeAttenuation: false, lineWidth: 10, transparent: true, depthTest: false }), this.iRenderOrder = s.MxData.iSelectRenderOrder, this.aryPrvCommandSelect = [], this.mxDatabase = t2;
    }
    n.MxDbEntitySelect = l;
  }, { "../MxFun": 27, "../MxManager": 29, "../Operate/McGiWorldDraw": 44, three: 19, "three.meshline": 18 }], 72: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDbGroupDictionary = n.MxDbGroup = void 0;
    var r = (i.prototype.name = function() {
      return this.sName;
    }, i.prototype.append = function(t2) {
      this.has(t2) || this.setId.add(t2);
    }, i.prototype.clear = function() {
      this.setId = /* @__PURE__ */ new Set();
    }, i.prototype.getAll = function() {
      var t2 = [];
      return this.setId.forEach(function(e2) {
        t2.push(e2);
      }), t2;
    }, i.prototype.has = function(t2) {
      return this.setId.has(t2);
    }, i.prototype.delete = function(t2) {
      return this.setId.delete(t2);
    }, i);
    function i(t2) {
      this.setId = /* @__PURE__ */ new Set(), this.sName = "", this.sName = t2;
    }
    n.MxDbGroup = r;
    var a = (o.prototype.getAt = function(t2) {
      return this.mapNameToGroup.get(t2);
    }, o.prototype.delete = function(t2) {
      return !!this.mapNameToGroup.has(t2) && this.mapNameToGroup.delete(t2);
    }, o.prototype.add = function(t2) {
      var e2 = this.mapNameToGroup.get(t2);
      return e2 || (e2 = new r(t2), this.mapNameToGroup.set(t2, e2), e2);
    }, o.prototype.dwgOut = function(t2) {
      var e2 = [];
      return this.mapNameToGroup.forEach(function(t3, n2) {
        e2.push(n2);
      }), t2.groups = e2, t2;
    }, o.prototype.dwgIn = function(t2) {
      var e2 = this;
      return t2.groups.forEach(function(t3) {
        var n2 = new r(t3);
        e2.mapNameToGroup.set(t3, n2);
      }), true;
    }, o.prototype.getEntityInGroup = function(t2) {
      var e2 = [];
      return this.mapNameToGroup.forEach(function(n2) {
        n2.has(t2) && e2.push(n2);
      }), e2;
    }, o.prototype.getEntityInGroupName = function(t2) {
      var e2 = [];
      return this.mapNameToGroup.forEach(function(n2, r2) {
        n2.has(t2) && e2.push(r2);
      }), e2;
    }, o);
    function o() {
      this.mapNameToGroup = /* @__PURE__ */ new Map();
    }
    n.MxDbGroupDictionary = a;
  }, {}], 73: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDbLayerTableRecord = void 0;
    var r = t("three"), i = (a.prototype.getGroup = function() {
      return this.group;
    }, a.prototype.getGroup_SmallCoord = function() {
      return this.group_SmallCoord;
    }, a.prototype.getName = function() {
      return this.name;
    }, a.prototype.setName = function(t2) {
      this.name = t2;
    }, a.prototype.setVisible = function(t2) {
      this.visible = t2, this.group.visible = t2, this.group_SmallCoord.visible = t2;
    }, a.prototype.getVisible = function() {
      return this.visible;
    }, a.prototype.init = function(t2, e2, n2) {
      return this.name = t2, e2.add(this.group), n2.add(this.group_SmallCoord), true;
    }, a.prototype.dwgIn = function(t2) {
      return this.visible = t2.visible, this.name = t2.name, this.group.visible = this.visible, this.group_SmallCoord.visible = this.visible, true;
    }, a.prototype.dwgOut = function(t2) {
      return t2.visible = this.visible, t2.name = this.name, t2;
    }, a);
    function a() {
      this.group = new r.Group(), this.group_SmallCoord = new r.Group(), this.name = "", this.visible = true;
    }
    n.MxDbLayerTableRecord = i;
  }, { three: 19 }], 74: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDbTextureManager = void 0;
    var r = t("three"), i = (a.prototype.loadImage = function(t2, e2) {
      var n2 = this.mapImageUrlToMaterialTexture.get(t2);
      if (n2) e2(n2);
      else {
        var i2 = this;
        new r.TextureLoader().load(t2, function(n3) {
          var a2 = new r.MeshLambertMaterial({ map: n3, transparent: true, side: r.DoubleSide });
          a2.map && (a2.map.needsUpdate = true), i2.mapImageUrlToMaterialTexture.set(t2, a2), e2 && e2(a2);
        }, void 0, function(t3) {
          console.log(t3), e2 && e2(null);
        });
      }
    }, a);
    function a() {
      this.mapImageUrlToMaterialTexture = /* @__PURE__ */ new Map();
    }
    n.MxDbTextureManager = i;
  }, { three: 19 }], 75: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.MxDrawObject3dThreeJS = n.MxDrawMapBoxThreeJS = n.MxDrawObject2dThreeJS = n.MxDrawThreeJS = n.MxThreeJSType = void 0;
    var a, o, s, l = t("three"), c = t("../Operate/MxJigCmdManager"), u = t("three-orbitcontrols"), h = t("../UI/MxUiVue"), p = (i(d, a = u.OrbitControls), d.prototype.update = function() {
    }, d);
    function d(t2, e2) {
      return a.call(this, t2, e2) || this;
    }
    (s = o || (n.MxThreeJSType = o = {}))[s.k2d = 0] = "k2d", s[s.k3d = 1] = "k3d", s[s.kMapBox = 2] = "kMapBox";
    var f = (m.prototype.screenCoord2World = function(t2, e2, n2) {
      return this.mxObject.screenCoord2World_mxdrawThreeJS_call(t2, e2, n2);
    }, m.prototype.worldCoord2Screen = function(t2, e2, n2) {
      return this.mxObject.worldCoord2Screen_mxdrawThreeJS_call(t2, e2, n2);
    }, m.prototype.getDomMousePos = function(t2) {
    }, m.prototype.createRaycaster = function(t2) {
      var e2 = new l.Raycaster();
      e2.linePrecision = this.mxObject.screenCoordLong2World(10);
      var n2 = this.mxObject.getCanvas(), r2 = n2.clientWidth, i2 = n2.clientHeight, a2 = new l.Vector2(t2.x / r2 * 2 - 1, -t2.y / i2 * 2 + 1);
      return e2.setFromCamera(a2, this.mxObject.getCamera()), e2;
    }, m.prototype.zoomW = function(t2, e2, n2, r2, i2) {
      return this.mxObject.zoomW_call(t2, e2, n2, i2);
    }, m.prototype.zoomCenter = function(t2, e2, n2) {
      return this.mxObject.zoomCenter_call(t2, e2);
    }, m.prototype.zoomScale = function(t2, e2) {
      return this.mxObject.zoomScale_call(t2);
    }, m.prototype.setViewAngle = function(t2) {
      return this.mxObject.setViewAngle_call(t2);
    }, m.prototype.startPanCommand = function() {
      return this.mxObject.startPanCommand_call();
    }, m.prototype.endPanCommand = function() {
      return this.mxObject.endPanCommand_call();
    }, m.prototype.isPaningCommand = function() {
      return this.mxObject.isPaningCommand_call();
    }, m);
    function m(t2) {
      this.mxObject = t2;
    }
    n.MxDrawThreeJS = f;
    var g, y = (i(v, g = f), v.prototype.onInitThreejs = function() {
      this.proxyObj.onInitThreejs();
    }, v.prototype.onInitScene = function() {
      this.proxyObj.onInitScene();
    }, v.prototype.getType = function() {
      return o.k2d;
    }, v.prototype.updateCameraDisplayRange = function(t2, e2, n2) {
      this.proxyObj.updateCameraDisplayRangeImp(t2, e2, n2);
    }, v.prototype.updateCameraForm3dViewData = function(t2) {
      this.proxyObj.updateCameraForm3dViewDataImp(t2);
    }, v.prototype.addControlsChangeEvent = function() {
      var t2 = this.mxObject;
      this.mxObject.getOrbitControls().addEventListener("change", function() {
        c.MxJigCmdManager.OnThreeControlsChage(), t2.callViewChange(), t2.getMxDatabase().onViewChange(), t2.getMcObject().isValid() && t2.getMcObject().getGripManager().onControlsChage(), t2.getTempMarkDraw().clear(true), t2.updateDisplay();
      });
    }, v.prototype.updateDisplay = function(t2) {
      void 0 === t2 && (t2 = false), this.mxObject.updateDisplayImplement(t2);
    }, v.prototype.getRegistEventObject = function() {
      return this.mxObject.getCanvas();
    }, v);
    function v(t2) {
      var e2 = g.call(this, t2) || this;
      return e2.proxyObj = t2, e2;
    }
    n.MxDrawObject2dThreeJS = y;
    var x, w = (i(b, x = f), b.prototype.startPanCommand = function() {
      this.mapBox.map && (this.isPaning = true, this.bakPan = this.mapBox.map.dragPan.useMouseMiddle(false), h.MxUiVue.setCursorType(h.MxUiVue.CursorType.kPan));
    }, b.prototype.endPanCommand = function() {
      this.mapBox.map && this.isPaning && (this.isPaning = false, this.mapBox.map.dragPan.useMouseMiddle(this.bakPan), h.MxUiVue.setCursorType(h.MxUiVue.CursorType.kNormal));
    }, b.prototype.isPaningCommand = function() {
      return this.mapBox.map, this.isPaning;
    }, b.prototype.mercatorCoord2CAD = function(t2, e2) {
      var n2 = new l.Vector3(t2, e2, 0);
      return n2.applyMatrix4(this.mapBox.matMapToCad), n2;
    }, b.prototype.cadToMercatorCoord = function(t2) {
      return t2.applyMatrix4(this.mapBox.matCadToMap), t2;
    }, b.prototype.setViewAngle = function(t2) {
      this.mapBox.map && this.mapBox.map.setBearing(180 * t2 / Math.PI);
    }, b.prototype.zoomCenter = function(t2, e2, n2) {
      if (this.mapBox.map) {
        var r2 = this.cadToMercatorCoord(new l.Vector3(t2, e2, 0)), i2 = this.mapBox.map.mercator_to_lnglat(r2.x, r2.y, 0), a2 = this.mapBox.map.getBounds(), o2 = 0.5 * (a2._ne.wrap().lng - a2._sw.wrap().lng), s2 = 0.5 * (a2._ne.wrap().lat - a2._sw.wrap().lat);
        this.mapBox.map.fitBounds([[i2.lng - o2, i2.lat - s2], [i2.lng + o2, i2.lat + s2]], { animate: !!n2 });
      }
    }, b.prototype.zoomScale = function(t2, e2) {
      if (this.mapBox.map) {
        var n2 = this.mapBox.map.getBounds(), r2 = 0.5 * (n2._ne.wrap().lng - n2._sw.wrap().lng), i2 = 0.5 * (n2._ne.wrap().lat - n2._sw.wrap().lat), a2 = n2._sw.wrap().lng + r2, o2 = n2._sw.wrap().lat + i2;
        r2 *= t2, i2 *= t2, this.mapBox.map.fitBounds([[a2 - r2, o2 - i2], [a2 + r2, o2 + i2]], { animate: !!e2 });
      }
    }, b.prototype.zoomW = function(t2, e2, n2, r2, i2) {
      if (this.mapBox.map) if (t2.distanceTo(e2) < 1e-7) console.log("Mx:ZoomW param invalid");
      else {
        void 0 !== n2 && n2 && (t2 = this.mxObject2d.docCoord2Cad(t2.x, t2.y, 0), e2 = this.mxObject2d.docCoord2Cad(e2.x, e2.y, 0));
        var a2 = this.cadToMercatorCoord(t2), o2 = this.cadToMercatorCoord(e2), s2 = this.mapBox.map.mercator_to_lnglat(a2.x, a2.y, 0), l2 = this.mapBox.map.mercator_to_lnglat(o2.x, o2.y, 0), c2 = Math.min(s2.lng, l2.lng), u2 = Math.max(s2.lng, l2.lng), h2 = Math.min(s2.lat, l2.lat), p2 = Math.max(s2.lat, l2.lat);
        this.mapBox.map.fitBounds([[c2, h2], [u2, p2]], { animate: !!r2 });
      }
    }, b.prototype.onInitScene = function() {
    }, b.prototype.addControlsChangeEvent = function() {
    }, b.prototype.updateDisplay = function(t2) {
      this.mapBox.map && (this.mapBox.map.repaint = true);
    }, b.prototype.createRaycaster = function(t2) {
      if (this.mapBox.map) {
        var e2 = t2.x / this.mapBox.map.transform.width * 2 - 1, n2 = -t2.y / this.mapBox.map.transform.height * 2 + 1, r2 = this.mxObject2d.getCamera(), i2 = new l.Raycaster();
        i2.linePrecision = this.mxObject2d.screenCoordLong2World(10);
        var a2 = new l.Matrix4().getInverse(r2.projectionMatrix), o2 = new l.Vector3().applyMatrix4(a2), s2 = new l.Vector3(e2, n2, 1).applyMatrix4(a2).clone().sub(o2).normalize();
        return i2.setFromCamera(new l.Vector2(e2, n2), r2), i2.set(o2, s2), i2;
      }
      return x.prototype.createRaycaster.call(this, t2);
    }, b.prototype.getRegistEventObject = function() {
      return this.mapBox.canvasContainer;
    }, b.prototype.getType = function() {
      return o.kMapBox;
    }, b.prototype.getDomMousePos = function(t2) {
      return this.mapBox.map ? this.mapBox.map.dom_mousePos(t2) : void 0;
    }, b.prototype.screenCoord2World = function(t2, e2, n2) {
      if (this.mapBox.map) {
        var r2 = this.mapBox.map.unproject({ x: t2, y: e2 }), i2 = this.mapBox.map.lnglat_to_mercator(r2.lng, r2.lat), a2 = new l.Vector3(i2.x, i2.y, 0);
        return a2.applyMatrix4(this.mapBox.matMapToCADDrawCoord), a2;
      }
      return x.prototype.screenCoord2World.call(this, t2, e2, n2);
    }, b.prototype.worldCoord2Screen = function(t2, e2, n2) {
      if (this.mapBox.map) {
        var r2 = new l.Vector3(t2, e2, n2);
        r2.applyMatrix4(this.mapBox.matCADDrawCoordToMap);
        var i2 = this.mapBox.map.mercator_to_lnglat(r2.x, r2.y, 0), a2 = this.mapBox.map.project([i2.lng, i2.lat]);
        return new l.Vector3(a2.x, a2.y, 0);
      }
      x.prototype.worldCoord2Screen.call(this, t2, e2, n2);
    }, b.prototype.onInitThreejs = function() {
      var t2 = this, e2 = this.mapBox.threebox;
      if (e2) {
        var n2 = e2.camera, r2 = e2.scene, i2 = this.mapBox.canvas, a2 = e2.renderer;
        this.canvas = i2, a2.autoClear = false;
        var o2 = new p(n2, i2);
        this.mxObject2d.mapBoxInitThreeJSObject(r2, n2, a2, o2);
      } else {
        this.mxObject2d.onInitViewScene(), r2 = new l.Scene();
        var s2 = (i2 = this.mapBox.canvas).clientHeight, c2 = i2.clientWidth;
        n2 = new l.OrthographicCamera(c2 / -2, c2 / 2, s2 / 2, s2 / -2, 0.1, 1e21), this.canvas = i2;
        var u2 = new l.DirectionalLight(16777215);
        u2.position.set(0, -70, 100).normalize(), r2.add(u2);
        var h2 = new l.DirectionalLight(16777215);
        h2.position.set(0, 70, 100).normalize(), r2.add(h2);
        var d2 = this.mxObject2d.getRendererParam();
        (d2 = d2 || {}).canvas = i2, d2.context = this.mapBox.gl, (a2 = new l.WebGLRenderer(d2)).autoClear = false, (o2 = new p(new l.Camera(), i2)).enabled = false, this.mxObject2d.mapBoxInitThreeJSObject(r2, n2, a2, o2);
      }
      this.mxObject2d.initRendererParam({ retver: "webgl2", webgl2: true });
      var f2 = this;
      this.mapBox.render = function(e3, n3) {
        var r3 = new l.Matrix4().fromArray(n3);
        r3.multiply(t2.matCADDrawCoordToMap);
        var i3 = new l.Vector3(0, 0, 0);
        if (i3.applyMatrix4(r3), 1 < i3.z) {
          var a3 = 1 - i3.z - 1e-5;
          r3 = new l.Matrix4().makeTranslation(0, 0, a3).multiply(r3);
        }
        f2.mxObject2d.mapBoxRender(e3, r3, !!f2.mapBox.threebox), f2.mxObject2d.isRenderLoop() && t2.mapBox.map && (t2.mapBox.map.repaint = true);
      }, this.mapBox.onResize = function() {
        f2.mxObject2d.mapBox_onResizeImp(f2.canvas.clientWidth, f2.canvas.clientHeight);
      };
    }, b.prototype.updateCameraForm3dViewData = function(t2) {
      console.log("assert(0) map does not support 3ddwg");
    }, b.prototype.updateCameraDisplayRange = function(t2, e2, n2) {
      if (this.mxObject2d.isCppMxCAD()) {
        (a2 = new l.Matrix4()).makeTranslation(-this.mapBox.cadOrigin.x, -this.mapBox.cadOrigin.y, -this.mapBox.cadOrigin.z), (o2 = new l.Matrix4()).makeTranslation(this.mapBox.mapOrigin.x, this.mapBox.mapOrigin.y, this.mapBox.elevation), (s2 = new l.Matrix4()).makeScale(this.mapBox.mapLenInCADUnits, -this.mapBox.mapLenInCADUnits, this.mapBox.mapLenInCADUnits);
        var r2 = o2.multiply(s2).multiply(a2), i2 = this.mxObject2d.getDoc2CADMatrix();
        this.matCADDrawCoordToMap = r2.clone().multiply(i2), this.mapBox.matcadtsmall = new l.Matrix4(), this.mapBox.matcadtsmall.getInverse(i2), this.mapBox.matCADDrawCoordToMap = this.matCADDrawCoordToMap, this.mapBox.matMapToCADDrawCoord = new l.Matrix4(), this.mapBox.matMapToCADDrawCoord.getInverse(this.matCADDrawCoordToMap), this.mapBox.matCadToMap = r2, this.mapBox.matMapToCad = new l.Matrix4(), this.mapBox.matMapToCad.getInverse(r2), 1e-5 < Math.abs(n2) && this.setViewAngle(n2), this.zoomW(t2, e2, true, false);
      } else {
        var a2, o2, s2;
        (a2 = new l.Matrix4()).makeTranslation(-this.mapBox.cadOrigin.x, -this.mapBox.cadOrigin.y, -this.mapBox.cadOrigin.z), (o2 = new l.Matrix4()).makeTranslation(this.mapBox.mapOrigin.x, this.mapBox.mapOrigin.y, this.mapBox.elevation), (s2 = new l.Matrix4()).makeScale(this.mapBox.mapLenInCADUnits, -this.mapBox.mapLenInCADUnits, this.mapBox.mapLenInCADUnits);
        var c2 = o2.multiply(s2).multiply(a2), u2 = this.mxObject2d.getWorldToDoc();
        this.matCADDrawCoordToMap = c2.clone().multiply(u2), this.mapBox.matcadtsmall = new l.Matrix4(), this.mapBox.matcadtsmall.getInverse(u2), this.mapBox.matCADDrawCoordToMap = this.matCADDrawCoordToMap, this.mapBox.matMapToCADDrawCoord = new l.Matrix4(), this.mapBox.matMapToCADDrawCoord.getInverse(this.matCADDrawCoordToMap), this.mapBox.matCadToMap = c2, this.mapBox.matMapToCad = new l.Matrix4(), this.mapBox.matMapToCad.getInverse(c2);
      }
    }, b);
    function b(t2, e2) {
      var n2 = x.call(this, e2) || this;
      return n2.matCADDrawCoordToMap = new l.Matrix4(), n2.isPaning = false, n2.bakPan = true, n2.mapBox = t2, n2.mxObject2d = e2, n2.mapBox.matMapToCad = n2.mapBox.matCadToMap = n2.mapBox.matCADDrawCoordToMap = n2.mapBox.matMapToCADDrawCoord = new l.Matrix4(), n2;
    }
    n.MxDrawMapBoxThreeJS = w;
    var M, _ = (i(T, M = f), T.prototype.onInitThreejs = function() {
      this.proxyObj.onInitThreejs();
    }, T.prototype.onInitScene = function() {
      this.proxyObj.onInitScene();
    }, T.prototype.getType = function() {
      return o.k3d;
    }, T.prototype.updateCameraDisplayRange = function(t2, e2, n2) {
    }, T.prototype.updateCameraForm3dViewData = function(t2) {
    }, T.prototype.addControlsChangeEvent = function() {
      var t2 = this.mxObject;
      this.mxObject.getOrbitControls().addEventListener("change", function() {
        c.MxJigCmdManager.OnThreeControlsChage(), t2.callViewChange(), t2.getMxDatabase().onViewChange(), t2.getMcObject().isValid() && t2.getMcObject().getGripManager().onControlsChage(), t2.getTempMarkDraw().clear(true), t2.updateDisplay();
      });
    }, T.prototype.updateDisplay = function(t2) {
      void 0 === t2 && (t2 = false), this.mxObject.updateDisplayImplement(t2);
    }, T.prototype.getRegistEventObject = function() {
      return this.mxObject.getCanvas();
    }, T);
    function T(t2) {
      var e2 = M.call(this, t2) || this;
      return e2.proxyObj = t2, e2;
    }
    n.MxDrawObject3dThreeJS = _;
  }, { "../Operate/MxJigCmdManager": 54, "../UI/MxUiVue": 65, three: 19, "three-orbitcontrols": 17 }], 76: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    function a() {
    }
    Object.defineProperty(n, "__esModule", { value: true }), n.McDraw2d = n.McDraw3d = n.McDraw3dViewData = n.McDraw3dBase = void 0;
    var o = t("three"), s = t("../MxDrawData");
    n.McDraw3dBase = a;
    var l = (c.prototype.updateCamera = function(t2, e2, n2, r2) {
      var i2 = this.width, a2 = this.height;
      i2 < 1e-5 && (i2 = 1e-5), a2 < 1e-5 && (a2 = 1e-5);
      var o2 = n2 / r2, s2 = o2 * a2;
      i2 < s2 ? i2 = s2 : a2 = i2 / o2, t2.left = 0.5 * -i2, t2.right = 0.5 * i2, t2.top = 0.5 * a2, t2.bottom = 0.5 * -a2, t2.far = this.frontClip, t2.near = this.backClip, t2.up = this.up, t2.zoom = 1;
      var l2 = this.target.clone().add(this.dir);
      t2.position.set(l2.x, l2.y, l2.z), t2.lookAt(this.target), t2.updateProjectionMatrix(), e2.target.x = this.target.x, e2.target.y = this.target.y, e2.target.z = this.target.z, e2.update();
    }, c);
    function c() {
    }
    n.McDraw3dViewData = l;
    var u, h = (i(p, u = a), p.prototype.is3DMode = function() {
      return true;
    }, p.prototype.onResize = function(t2, e2, n2, r2) {
      var i2 = t2.right - t2.left, a2 = t2.top - t2.bottom;
      i2 < 1e-5 && (i2 = 1e-5), a2 < 1e-5 && (a2 = 1e-5);
      var o2 = n2 / r2, s2 = o2 * a2;
      return i2 < s2 ? i2 = s2 : a2 = i2 / o2, t2.left = 0.5 * -i2, t2.right = 0.5 * i2, t2.top = 0.5 * a2, t2.bottom = 0.5 * -a2, t2.updateProjectionMatrix(), e2.update(), true;
    }, p.prototype.initDisplayRange = function(t2) {
      var e2 = this.mcObject.mxObject;
      e2.intiDoc2Wold(new o.Matrix4()), e2.initCAD2Doc(JSON.parse(t2.DToSMat)), e2.initializingObjectMatrix();
      var n2 = new l();
      n2.dir = new o.Vector3(t2.vecDirectionx, t2.vecDirectiony, t2.vecDirectionz), n2.up = new o.Vector3(t2.vecUpx, t2.vecUpy, t2.vecUpz), n2.target = new o.Vector3(t2.targetx, t2.targety, t2.targetz), n2.height = t2.height, n2.width = t2.width, n2.backClip = t2.backClip, n2.frontClip = t2.frontClip, e2.updateCameraForm3dViewData(n2);
    }, p);
    function p() {
      return null !== u && u.apply(this, arguments) || this;
    }
    n.McDraw3d = h;
    var d, f = (i(m, d = a), m.prototype.is3DMode = function() {
      return false;
    }, m.prototype.initDisplayRange = function(t2) {
      var e2 = this.mcObject.mxObject;
      e2.intiDoc2Wold(new o.Matrix4()), e2.initCAD2Doc(JSON.parse(t2.DToSMat)), e2.initializingObjectMatrix(), e2.updateCameraDisplayRange(new o.Vector3(t2.pt1x, t2.pt1y, 0), new o.Vector3(t2.pt2x, t2.pt2y, 0), s.MxDrawData.m_isEnableDrawingViewAngle ? t2.viewangle : 0);
    }, m.prototype.onResize = function(t2, e2, n2, r2) {
      return this.mcObject.mxObject.callOnResizeImp(n2, r2);
    }, m);
    function m() {
      return null !== d && d.apply(this, arguments) || this;
    }
    n.McDraw2d = f;
  }, { "../MxDrawData": 22, three: 19 }], 77: [function(t, e, n) {
    var r, i = this && this.__extends || (r = function(t2, e2) {
      return (r = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
        t3.__proto__ = e3;
      } || function(t3, e3) {
        for (var n2 in e3) Object.prototype.hasOwnProperty.call(e3, n2) && (t3[n2] = e3[n2]);
      })(t2, e2);
    }, function(t2, e2) {
      if ("function" != typeof e2 && null !== e2) throw new TypeError("Class extends value " + String(e2) + " is not a constructor or null");
      function n2() {
        this.constructor = t2;
      }
      r(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (n2.prototype = e2.prototype, new n2());
    });
    Object.defineProperty(n, "__esModule", { value: true }), n.McDrawGripJig = n.McDrawGrip = n.McDrawSlect = n.McDrawGripData = void 0;
    var a = t("three"), o = t("../MxFun"), s = t("../Operate/MxJig"), l = t("../Operate/MxJigCmdManager"), c = t("../MxManager"), u = t("../MxDrawData"), h = t("../MxTools"), p = function() {
      this.threeObject = null;
    };
    n.McDrawGripData = p;
    var d = (f.prototype.add = function(t2) {
      return !this.setId.has(t2) && (this.setId.add(t2), this.mcObj.HighlightEntity(t2, true), true);
    }, f.prototype.remove = function(t2) {
      this.setId.has(t2) && (this.setId.delete(t2), this.mcObj.HighlightEntity(t2, false));
    }, f.prototype.removeAll = function() {
      var t2 = this;
      this.setId.forEach(function(e2) {
        t2.mcObj.HighlightEntity(e2, false);
      }), this.setId.clear();
    }, f.prototype.getAllSelect = function() {
      var t2 = [];
      return this.setId.forEach(function(e2, n2) {
        t2.push(n2);
      }), t2;
    }, f.prototype.getSelectCount = function() {
      return this.setId.size;
    }, f.prototype.isEmpty = function() {
      return 0 == this.setId.size;
    }, f);
    function f(t2) {
      this.mcObj = null, this.setId = /* @__PURE__ */ new Set(), this.mcObj = t2;
    }
    n.McDrawSlect = d;
    var m = (g.prototype.fireSelectChange = function() {
      this.isCallingSelectChange || (this.isCallingSelectChange = true, this.mxObj.callEvent("selectChange", this.getAllSelect()), this.isCallingSelectChange = false);
    }, g.prototype.getParentGroup = function() {
      return this.drawGroup || (this.drawGroup = new a.Group(), this.drawGroup.renderOrder = c.MxData.iGripRenderOrder, this.mxObj.getTheTempDrawContainer_SmallCoord_Draw().add(this.drawGroup)), this.drawGroup;
    }, g.prototype.reInit = function() {
      this.clearAll(), this.drawGroup && o.MxFun.removeThreejsObject(this.drawGroup, this.mxObj.getTheTempDrawContainer_SmallCoord_Draw()), this.drawGroup = null, this.selectPoint1 = null, this.selectPoint2 = null;
    }, g.prototype.removeAllEntity = function() {
      var t2 = this.getParentGroup();
      this.mapGrips.forEach(function(e2, n2, r2) {
        for (var i2 = e2.length, a2 = 0; a2 < i2; a2++) {
          var s2 = e2[a2];
          o.MxFun.removeThreejsObject(s2.threeObject, t2);
        }
      }), this.mapGrips = /* @__PURE__ */ new Map();
    }, g.prototype.deleteGripData = function(t2) {
      var e2 = this.getParentGroup(), n2 = this.mapGrips.get(t2);
      if (n2) for (var r2 = n2.length, i2 = 0; i2 < r2; i2++) {
        var a2 = n2[i2];
        o.MxFun.removeThreejsObject(a2.threeObject, e2);
      }
      this.mapGrips.delete(t2);
    }, g.prototype.addGripData = function(t2, e2, n2, r2) {
      var i2 = this.mapGrips.get(t2);
      null == i2 && (i2 = new Array(), this.mapGrips.set(t2, i2));
      var o2 = new p();
      return o2.iIndex = e2, o2.point = new a.Vector3(n2, r2), i2.push(o2), o2;
    }, g.prototype.createGripDisplayObject = function(t2) {
      var e2 = this.getParentGroup();
      t2.geometry = new a.Geometry();
      var n2 = this.mxObj.toSmallcoord2(t2.point.x, t2.point.y, t2.point.z), r2 = this.mxObj.screenCoordLong2World(0.5 * u.MxDrawData.m_dInputRectWidth);
      t2.geometry.vertices.push(new a.Vector3(n2.x - r2, n2.y - r2, 0)), t2.geometry.vertices.push(new a.Vector3(n2.x - r2, n2.y + r2, 0)), t2.geometry.vertices.push(new a.Vector3(n2.x + r2, n2.y + r2, 0)), t2.geometry.vertices.push(new a.Vector3(n2.x + r2, n2.y - r2, 0)), t2.geometry.faces.push(new a.Face3(0, 1, 2)), t2.geometry.faces.push(new a.Face3(2, 3, 0)), t2.geometry.computeFaceNormals(), t2.geometry.computeVertexNormals();
      var i2 = h.MxTools.getColor(u.MxDrawData.m_gripPointColor), o2 = h.MxTools.getOpacity(u.MxDrawData.m_gripPointColor), s2 = new a.MeshBasicMaterial({ color: i2, transparent: true, depthTest: false, side: a.DoubleSide, opacity: o2 }), l2 = new a.Mesh(t2.geometry, s2);
      e2.add(l2), t2.threeObject = l2;
    }, g.prototype.setPrvCommandSelect = function(t2) {
      this.aryPrvCommandSelect = t2;
    }, g.prototype.getPrvCommandSelect = function() {
      return this.aryPrvCommandSelect;
    }, g.prototype.getAllSelect = function() {
      return this.mcSelect.getAllSelect();
    }, g.prototype.getSelectPoints = function() {
      var t2 = null !== this.selectPoint1;
      return t2 && 0 == this.mcSelect.getSelectCount() && 0 == this.aryPrvCommandSelect.length && (t2 = false), { point1: this.selectPoint1, point2: this.selectPoint2, isvalid: t2 };
    }, g.prototype.clearAll = function() {
      var t2 = this.mcSelect.isEmpty();
      return this.mcSelect.removeAll(), 0 == this.mapGrips.size ? !t2 : (this.removeAllEntity(), true);
    }, g.prototype.clearGripDisplay = function() {
      return 0 != this.mapGrips.size && (this.removeAllEntity(), true);
    }, g.prototype.onControlsChage = function() {
      var t2 = this;
      if (0 != this.mapGrips.size) {
        var e2 = this.mxObj.screenCoordLong2World(0.5 * u.MxDrawData.m_dInputRectWidth), n2 = false;
        this.mapGrips.forEach(function(r2, i2, a2) {
          for (var o2 = r2.length, s2 = 0; s2 < o2; s2++) {
            var l2 = r2[s2];
            if (4 == l2.geometry.vertices.length) {
              var c2 = t2.mxObj.cadCoord2Doc(l2.point.x, l2.point.y, l2.point.z);
              l2.geometry.vertices[0].x = c2.x - e2, l2.geometry.vertices[0].y = c2.y - e2, l2.geometry.vertices[1].x = c2.x - e2, l2.geometry.vertices[1].y = c2.y + e2, l2.geometry.vertices[2].x = c2.x + e2, l2.geometry.vertices[2].y = c2.y + e2, l2.geometry.vertices[3].x = c2.x + e2, l2.geometry.vertices[3].y = c2.y - e2, l2.geometry.computeFaceNormals(), l2.geometry.computeVertexNormals(), l2.geometry.verticesNeedUpdate = true, n2 = true;
            }
          }
        }), n2 && this.mxObj.resetRenderer();
      }
    }, g.prototype.getGripNum = function(t2) {
      for (var e2 = /* @__PURE__ */ new Set(), n2 = t2.length(), r2 = 0; r2 < n2; r2++) e2.add(t2.at(r2));
      var i2 = 0;
      return this.mapGrips.forEach(function(t3, n3) {
        e2.has(n3) || (i2 += t3.length);
      }), i2;
    }, g.prototype.hitTest = function(t2) {
      var e2 = { grips: new Array(), ids: new Array(), pt: t2 }, n2 = new a.Vector3(t2.x, t2.y, 0), r2 = this.mxObj.viewCoordLong2Cad(32);
      return this.mapGrips.forEach(function(t3, i2) {
        for (var a2 = t3.length, o2 = 0; o2 < a2; o2++) {
          var s2 = t3[o2];
          if (s2.point.distanceTo(n2) <= r2) {
            e2.grips.push(s2), e2.ids.push(i2), e2.pt = s2.point;
            break;
          }
        }
      }), e2;
    }, g.prototype.onMouseLBDown = function(t2) {
      if (1 == u.MxDrawData.m_isEnableCADEntityGripEidt) {
        if (1 != u.MxDrawData.m_isEnableGripEidt) return false;
      } else if (0 == u.MxDrawData.m_isEnableCADEntityGripEidt) return false;
      var e2 = this.hitTest(t2);
      return 0 != e2.grips.length && (o.MxFun.sendStringToExecute("McDraw_GripEdit", e2), true);
    }, g.prototype.gripEditImp = function(t2) {
      var e2 = t2.grips, n2 = t2.ids, r2 = t2.pt, i2 = new v(r2, e2, n2, this.mcObj);
      l.MxJigCmdManager.runCmd(i2);
    }, g.prototype.addGridDisplay = function(t2, e2) {
      var n2 = this;
      t2 && 0 != t2.length() && (this.deleteGripData(e2), t2.forEach(function(t3, r2) {
        var i2 = n2.addGripData(e2, r2, t3.x, t3.y);
        n2.createGripDisplayObject(i2);
      }));
    }, g.prototype.upEntityGridDisplay = function(t2) {
      if (0 == u.MxDrawData.m_isEnableGripEidt) return 0;
      if (0 == t2) return 0;
      var e2 = this.mcObj.ObjectIdToObject(t2);
      if (!e2) return 0;
      var n2 = e2.getGripPoints();
      return this.addGridDisplay(n2, t2), n2.length();
    }, g.prototype.doPointSelect = function(t2, e2) {
      if (void 0 === e2 && (e2 = false), !this.mcObj.mcObjectImp) return false;
      var n2 = this.mxObj.docCoordLong2Cad(this.mxObj.screenCoordLong2Doc(10)), r2 = this.mxObj.screenCoord2Doc(t2.x, t2.y, 0), i2 = this.mxObj.docCoord2Cad(r2.x, r2.y, r2.z), a2 = this.mcObj.mcObjectImp.IntelliSelect_PointSelect(i2.x, i2.y, n2), o2 = a2.length();
      if (0 == o2) return this.mcObj.mxappimp.DestroyMdGeLongArray(a2), false;
      if (this.mxObj.pointMultipleSelect() || (this.mxObj.getMxDatabase().clearMxCurrentSelect(), this.clearAll(), e2 = false), e2) for (var s2 = 0; s2 < o2; s2++) {
        var l2 = a2.at(s2);
        this.mcSelect.remove(l2), this.deleteGripData(l2);
      }
      else {
        var c2 = o2 + this.mcSelect.getSelectCount(), u2 = false;
        for (s2 = 0; s2 < o2; s2++) l2 = a2.at(s2), this.mcSelect.add(l2), c2 < 2e3 ? this.upEntityGridDisplay(l2) : u2 = true;
        u2 && this.clearGripDisplay();
      }
      return this.selectPoint1 = i2, this.selectPoint2 = i2, this.fireSelectChange(), this.mcObj.mxappimp.DestroyMdGeLongArray(a2), true;
    }, g.prototype.doRangeSelect = function(t2, e2, n2) {
      if (void 0 === n2 && (n2 = false), this.mcObj.mcObjectImp) {
        var r2, i2 = t2.clone(), a2 = e2.clone();
        r2 = e2.x < t2.x ? 0 : 1;
        var o2 = this.mcObj.mcObjectImp.IntelliSelect_RangeSelect(i2.x, i2.y, a2.x, a2.y, r2), s2 = o2.length();
        if (this.mxObj.pointMultipleSelect() || (n2 = false), n2) for (var l2 = 0; l2 < s2; l2++) {
          var c2 = o2.at(l2);
          this.mcSelect.remove(c2), this.deleteGripData(c2);
        }
        else {
          var u2 = s2 + this.mcSelect.getSelectCount(), h2 = this.getGripNum(o2), p2 = false;
          for (l2 = 0; l2 < s2; l2++) c2 = o2.at(l2), this.mcSelect.add(c2), u2 < 500 && h2 < 2e3 ? h2 += this.upEntityGridDisplay(c2) : p2 = true;
          p2 && this.clearGripDisplay();
        }
        0 < s2 && (this.selectPoint1 = i2, this.selectPoint2 = a2, this.fireSelectChange()), this.mcObj.mxappimp.DestroyMdGeLongArray(o2);
      }
    }, g.prototype.addSelect = function(t2, e2, n2) {
      if (void 0 === n2 && (n2 = true), 0 == t2) return false;
      var r2 = this.mcSelect.add(t2);
      return n2 && this.upEntityGridDisplay(t2), e2 && this.fireSelectChange(), r2;
    }, g);
    function g(t2, e2) {
      this.mxObj = null, this.mcObj = null, this.mcSelect = null, this.mapGrips = /* @__PURE__ */ new Map(), this.aryPrvCommandSelect = [], this.drawGroup = null, this.isCallingSelectChange = false, this.selectPoint1 = null, this.selectPoint2 = null, this.mxObj = t2, this.mcObj = e2, this.mcSelect = new d(e2);
    }
    n.McDrawGrip = m;
    var y, v = (i(x, y = s.McEdJigCommand), x.prototype.onExitCommand = function(t2) {
      this.tempEntity = null, this.tempEntityWordDraw = null, y.prototype.onExitCommand.call(this, t2);
    }, x.prototype.sampler = function() {
      var t2 = l.MxJigCmdManager.InType.kGetBegan | l.MxJigCmdManager.InType.kGetEnd, e2 = this.acquirePoint(t2);
      if (e2.status == l.MxJigCmdManager.DragStatus.kNormal && (this.currPt = e2.pt, this.tempEntity)) {
        var n2 = new a.Vector3(e2.pt.x, e2.pt.y, e2.pt.z), r2 = new a.Vector3(this.pt.x, this.pt.y, this.pt.z);
        this.tempEntityWordDraw = this.tempEntity.clone(), this.tempEntityWordDraw && this.tempEntityWordDraw.moveGripPointsAt(this.grips[0].iIndex, n2.x - r2.x, n2.y - r2.y, n2.z - r2.z);
      }
      return e2.status;
    }, x.prototype.getTypeName = function() {
      return "McDrawGripEdit";
    }, x.prototype.done = function(t2) {
      if (t2 == l.MxJigCmdManager.DragStatus.kNormal) {
        for (var e2 = new a.Vector3(this.pt.x, this.pt.y, this.pt.z), n2 = new a.Vector3(this.currPt.x, this.currPt.y, this.currPt.z), r2 = n2.x - e2.x, i2 = n2.y - e2.y, o2 = this.getMxObject().getMcObject().getGripManager(), s2 = this.grips.length, c2 = [], u2 = 0; u2 < s2; u2++) {
          var h2 = this.grips[u2], p2 = this.ids[u2], d2 = this.mcObj.ObjectIdToObject(p2);
          d2 && d2.moveGripPointsAt(h2.iIndex, r2, i2, 0), o2.upEntityGridDisplay(p2), c2.push({ type: "mxcad", id: p2, index: h2.iIndex, curentPoint: this.currPt, point: h2.point, offset_x: r2, offset_y: i2 });
        }
        0 < c2.length && this._mxObject.callEvent("objectGripEdit", c2);
      }
      return l.MxJigCmdManager.DoneStatius.kExitCommand;
    }, x.prototype.upDisplay = function() {
      this.tempEntityWordDraw && (this.mcObj.onReadyJigUpdateDispla(1, this.currPt, this.grips[0].iIndex), this.tempEntityWordDraw.tempRelationObject(), this.mcObj.onJigDrawEntityDisplay(this.tempEntityWordDraw.getImp()), this.tempEntityWordDraw.freeTempRelationObject());
    }, x);
    function x(t2, e2, n2, r2) {
      var i2 = y.call(this) || this;
      return i2.pt = t2, i2.grips = e2, i2.ids = n2, i2.currPt = t2, i2.mcObj = r2, i2.ids.length && (i2.tempEntity = r2.ObjectIdToObject(i2.ids[0])), i2;
    }
    n.McDrawGripJig = v;
  }, { "../MxDrawData": 22, "../MxFun": 27, "../MxManager": 29, "../MxTools": 38, "../Operate/MxJig": 53, "../Operate/MxJigCmdManager": 54, three: 19 }], 78: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.McDrawObject = void 0;
    var r = t("../MxManager"), i = t("three"), a = t("../MxFun"), o = t("./McDrawGrip"), s = t("./McTextureManager"), l = t("./McDraw3D"), c = window;
    c.McDrawObjectEvent_openFileComplete = function(t2, e2, n2) {
      var i2 = r.MxManager.getMxObject(e2);
      i2 && i2.getMcObject().openFileComplete(t2, n2);
    }, c.McDrawObjectEvent_objectModified = function(t2, e2) {
      var n2 = r.MxManager.getMxObject(t2);
      if (n2) {
        var i2 = n2.getMcObject(), a2 = new i2.mxcppImp.McDrawResbuf();
        a2.Connect(e2, false);
        for (var o2 = a2.AtString(0, false), s2 = a2.GetCount(), l2 = [], c2 = 1; c2 + 1 < s2; c2 += 2) {
          var u2 = a2.AtObjectId(c2), h2 = 1 == a2.Atlong(c2 + 1), p = i2.mxapp.newMcObjectId(u2, 0);
          l2.push({ id: p, erase: h2, status: a2.Atlong(c2 + 1) });
        }
        n2.callEvent("objectModified", { cmd: o2, entitys: l2 });
      }
    }, c.McDrawObjectEvent_call = function(t2, e2, n2) {
      if ("mxpost" == e2) try {
        var i2 = JSON.parse(n2);
        if (i2 && i2.url && i2.data) {
          var a2 = new XMLHttpRequest();
          a2.open("POST", i2.url, true), a2.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), a2.onreadystatechange = function() {
            4 === a2.readyState && a2.status;
          }, a2.send(i2.data);
        }
      } catch (t3) {
      }
      else if ("regen_complete" == e2) {
        if (!(o2 = r.MxManager.getMxObject(t2))) return;
        o2.regenAllMxDbEntity();
      } else {
        var o2;
        if (!(o2 = r.MxManager.getMxObject(t2))) return;
        o2.callEvent(e2, n2);
      }
    }, c.McDrawObjectEvent_synchronizeuUdateDisplayRange = function(t2, e2) {
      var n2 = r.MxManager.getMxObject(t2);
      n2 && n2.getMcObject().updateDisplayRange(1 == e2);
    }, c.McDrawObjectEvent_osnapComplete = function(t2, e2) {
      var n2 = r.MxManager.getMxObject(t2);
      n2 && n2.getMcObject().callOsnapComplete(e2);
    }, c.McDrawObjectEvent_mcutPrintf = function(t2) {
      a.MxFun.acutPrintf(t2);
    }, c.McDrawObjectEvent_updateDisplay = function(t2) {
      var e2 = r.MxManager.getMxObject(t2);
      e2 && e2.updateDisplay();
    }, c.McDrawObjectEvent_loadImages = function(t2, e2, n2, i2) {
      var a2 = r.MxManager.getMxObject(t2);
      if (a2) {
        a2.getMcObject().getTextureManager().clear();
        var o2 = 0, s2 = [];
        "blob:" == i2.substring(0, 5) && (i2 = i2.substring(5)), e2.forEach(function(t3) {
          var l2 = r.MxManager.getMxCpp().decodeFromGb2312(t3), c2 = l2;
          -1 == l2.lastIndexOf("/") ? (n2 && 0 < n2.length && (c2 = n2 + "/" + c2), i2 && 0 < i2.length && (c2 = i2 + "/" + c2)) : l2 = l2.substring(l2.lastIndexOf("/") + 1).toLowerCase(), s2.push(c2), a2.getMcObject().getTextureManager().loadImage(c2, l2, function() {
            ++o2 == e2.length && (s2.forEach(function(t4) {
              a2.getMcObject().getTextureManager().createOpenGLTexture(t4);
            }), a2.updateDisplay(false));
          });
        });
      }
    }, c.McDrawObjectEvent_loadImagesBase64 = function(t2, e2) {
      var n2 = r.MxManager.getMxObject(t2);
      if (n2) {
        var i2 = e2.indexOf("data:image/png;base64");
        if (-1 != i2) {
          var a2 = e2.substring(0, i2);
          e2 = e2.substring(i2), n2.getMcObject().getTextureManager().loadImageBase64(a2, e2, function() {
            n2.getMcObject().getTextureManager().createOpenGLTexture(a2), n2.updateDisplay(false);
          });
        }
      }
    }, c.McDrawObjectEvent_viewCoord2Cad = function(t2, e2, n2, i2, a2) {
      var o2 = r.MxManager.getMxObject(t2);
      if (o2) {
        var s2 = new (o2.getMcObject()).mxcppImp.McDrawResbuf();
        s2.Connect(a2, false);
        var l2 = o2.viewCoord2Cad(e2, n2, i2);
        s2.AddDouble(l2.x, -10), s2.AddDouble(l2.y, -10), s2.AddDouble(l2.z, -10);
      }
    }, c.McDrawObjectEvent_cadCoord2View = function(t2, e2, n2, i2, a2) {
      var o2 = r.MxManager.getMxObject(t2);
      if (o2) {
        var s2 = new (o2.getMcObject()).mxcppImp.McDrawResbuf();
        s2.Connect(a2, false);
        var l2 = o2.cadCoord2View(e2, n2, i2);
        s2.AddDouble(l2.x, -10), s2.AddDouble(l2.y, -10), s2.AddDouble(l2.z, -10);
      }
    };
    var u = (h.prototype.getTextureManager = function() {
      return this.textureManager;
    }, h.prototype.isValid = function() {
      return null !== this.mcObjectImp;
    }, h.prototype.isPaperSpaceDisplay = function() {
      return !!this.mcObjectImp && this.mcObjectImp.isPaperSpaceDisplay();
    }, h.prototype.getLayoutBkColor = function() {
      return this.mcObjectImp ? this.mcObjectImp.getLayoutBkColor() : 16777215;
    }, h.prototype.fireStartRunCommand = function(t2, e2) {
      this.mcObjectImp && this.mcObjectImp.fireStartRunCommand(t2, e2);
    }, h.prototype.fireEndRunCommand = function(t2, e2) {
      this.mcObjectImp && this.mcObjectImp.fireEndRunCommand(t2, e2);
    }, h.prototype.undo = function() {
      this.mcObjectImp && this.mcObjectImp.undo();
    }, h.prototype.redo = function() {
      this.mcObjectImp && this.mcObjectImp.redo();
    }, h.prototype.initCAD2Doc = function(t2, e2) {
      this.matCad2doc = t2, this.matDoc2cad = e2;
    }, h.prototype.getSysVarLong = function(t2) {
      return this.mcObjectImp.GetSysVarLong(t2);
    }, h.prototype.getSysVarDouble = function(t2) {
      return this.mcObjectImp.GetSysVarDouble(t2);
    }, h.prototype.getSysVarPoint = function(t2) {
      var e2 = this.mcObjectImp.GetSysVarPoint(t2);
      return new i.Vector3(e2.x, e2.y, e2.z);
    }, h.prototype.ObjectIdToMdObjectImp = function(t2) {
      return this.mcObjectImp ? this.mxcpp.App.getImp().ObjectIdToMdObject(t2) : null;
    }, h.prototype.DestroyObject = function(t2) {
      if (!this.mcObjectImp) return null;
      this.mcObject.destroyObject(t2);
    }, h.prototype.onJigCommandEnd = function() {
      this.mcObjectImp && this.mcObjectImp.EntityTempWordDraw_onJigCommandEnd();
    }, h.prototype.callOsnapComplete = function(t2) {
      if (this.m_retCall && t2) try {
        var e2 = t2;
        if ("string" == typeof t2 && (e2 = JSON.parse(t2)), e2.callId != this.m_lOsnapCallCount) return;
        this.m_retCall(e2);
      } catch (t3) {
      }
    }, h.prototype.doc2cad1 = function(t2) {
      return t2;
    }, h.prototype.doc2cad2 = function(t2, e2) {
      return new i.Vector3(t2, e2, 0);
    }, h.prototype.cad2doc1 = function(t2) {
      return t2;
    }, h.prototype.cad2doc2 = function(t2, e2) {
      return new i.Vector3(t2, e2, 0);
    }, h.prototype.onNotifyOsnap = function(t2, e2) {
      if (this.mcObjectImp) {
        this.m_lOsnapCallCount++, this.m_retCall = e2, 1e5 < this.m_lOsnapCallCount && (this.m_lOsnapCallCount = 1);
        var n2, r2 = this.doc2cad2(t2.ptx, t2.pty);
        t2.isValidPrvInputPoint && (n2 = this.doc2cad2(t2.prvPtx, t2.prvPty)), this.mcObjectImp.Osnap_NotifyOsnap(r2.x, r2.y, t2.isValidPrvInputPoint, t2.isValidPrvInputPoint ? n2.x : 0, t2.isValidPrvInputPoint ? n2.y : 0, t2.osmode, t2.SearchRnge, this.m_lOsnapCallCount);
      }
    }, h.prototype.DrawEntity = function(t2, e2, n2) {
      t2 && this.mcObjectImp && (e2 && t2.SetTrueColor(this.THREEColor2MdCmColor(e2)), this.mcObjectImp.DrawEntity(t2, n2));
    }, h.prototype.onJigDrawEntityDisplay = function(t2, e2, n2) {
      t2 && this.mcObjectImp && (e2 && t2.SetTrueColor(this.THREEColor2MdCmColor(e2)), this.mcObjectImp.EntityTempWordDraw_onJigDrawEntityDisplay(t2, true === n2));
    }, h.prototype.THREEColor2MdCmColor = function(t2) {
      var e2 = new i.Color(t2), n2 = new this.mxcppImp.MdCmColor();
      return n2.setRGB(255 * e2.r, 255 * e2.g, 255 * e2.b), n2;
    }, h.prototype.onJigDrawEntityDisplay_line = function(t2, e2, n2, r2, i2, a2, o2) {
      if (this.mcObjectImp) {
        var s2 = new this.mxcppImp.MdDbLine(), l2 = new this.mxcppImp.MdGePoint3d();
        l2.x = t2, l2.y = e2, l2.z = n2, s2.setStartPoint(l2);
        var c2 = new this.mxcppImp.MdGePoint3d();
        c2.x = r2, c2.y = i2, c2.z = a2, s2.setEndPoint(c2), s2.SetTrueColor(this.THREEColor2MdCmColor(o2)), this.mcObjectImp.EntityTempWordDraw_onJigDrawEntityDisplay(s2, false);
      }
    }, h.prototype.DrawLine = function(t2, e2, n2, r2, i2, a2, o2) {
      if (this.mcObjectImp) {
        var s2 = new this.mxcppImp.MdDbLine(), l2 = new this.mxcppImp.MdGePoint3d();
        l2.x = t2, l2.y = e2, l2.z = n2, s2.setStartPoint(l2);
        var c2 = new this.mxcppImp.MdGePoint3d();
        c2.x = r2, c2.y = i2, c2.z = a2, s2.setEndPoint(c2), s2.SetTrueColor(this.THREEColor2MdCmColor(o2)), this.mcObjectImp.DrawEntity(s2, false);
      }
    }, h.prototype.HighlightEntity = function(t2, e2) {
      if (!this.mcDrawUtility) return false;
      this.mcDrawUtility.highlightEntity(t2, e2);
    }, h.prototype.onReadyJigUpdateDispla = function(t2, e2, n2) {
      void 0 === t2 && (t2 = 0), void 0 === e2 && (e2 = void 0), void 0 === n2 && (n2 = -1), this.mcObjectImp && this.mcObjectImp.EntityTempWordDraw_onReadyJigUpdateDispla(t2, e2 ? e2.x : 0, e2 ? e2.y : 0, n2);
    }, h.prototype.onJigClearDisplay = function() {
      this.mcObjectImp && this.mcObjectImp.EntityTempWordDraw_onJigClearDisplay();
    }, h.prototype.ObjectIdToObject = function(t2) {
      return this.mcObject ? this.mxcpp.App.objectIdToObject(t2) : null;
    }, h.prototype.initMxObject = function(t2) {
      this.mxObject = t2;
    }, h.prototype.init = function(t2, e2) {
      e2.initMxObject(t2), this.mxObject = t2, this.mcObject = e2, this.mcObjectImp = e2.getImp(), this.mxcpp = e2.getMxCpp(), this.mxcppImp = this.mxcpp.mxcadassemblyimp, this.mxapp = this.mxcpp.App, this.mxappimp = this.mxapp.getImp(), this.grip = new o.McDrawGrip(t2, this), this.mcDrawUtility = new this.mxcppImp.McDrawUtility(), this.textureManager = new s.McTextureManager(this, t2.getRenderer().getContext());
      var n2 = this;
      this.mxObject.addEvent("dragWillEnd", function() {
        n2.mcObjectImp.fireEventDragWillEnd();
      });
    }, h.prototype.setSize = function(t2, e2) {
      if (!this.mcObjectImp) return false;
      this.mcObjectImp.fireEventWindowSize(t2, e2);
    }, h.prototype.getGripManager = function() {
      return this.grip;
    }, h.prototype.updateDisplayRange = function(t2) {
      if (void 0 === t2 && (t2 = false), this.mcObjectImp) {
        var e2 = this.mcObjectImp.getViewDataJsonParam(t2);
        e2 = e2.replace(/\\/g, "\\\\");
        try {
          var n2 = JSON.parse(e2), r2 = this.mxObject;
          if (null != n2) {
            n2.is3d ? this.mxdraw3d.is3DMode() || (this.mxdraw3d = new l.McDraw3d(), this.mxdraw3d.mcObject = this) : this.mxdraw3d.is3DMode() && (this.mxdraw3d = new l.McDraw2d(), this.mxdraw3d.mcObject = this), this.mxdraw3d.initDisplayRange(n2), r2.initAllLayoutName(JSON.parse(n2.layout)), r2.updateDisplay(true);
            var i2 = a.MxFun.getUiObj();
            null != i2 && (i2.SetLayoutData(n2.layout), i2.UpDisplayLayout());
          }
        } catch (t3) {
          console.log("getViewDataJsonParam exception");
        }
      }
    }, h.prototype.openFileComplete = function(t2, e2) {
      this.updateDisplayRange(), this.mxObject.callOpenFileComplete(t2, e2);
    }, h.prototype.updateDisplayMapBox = function(t2) {
      return !!this.mcObjectImp && (null !== this.mxObject.getScene().background && console.log("mxerror: background must be empty"), this.mcObjectImp_updateDisplay(new i.Matrix4().elements, t2.elements));
    }, h.prototype.mcObjectImp_updateDisplay = function(t2, e2) {
      if (this.m_isCallingUpDisplay) return true;
      var n2 = !(this.m_isCallingUpDisplay = true);
      try {
        n2 = this.mcObjectImp.updateDisplay(t2, e2), this.m_isCallingUpDisplay = false;
      } catch (t3) {
        this.m_isCallingUpDisplay = false, console.log(t3);
      }
      return n2;
    }, h.prototype.updateDisplay = function() {
      if (!this.mcObjectImp) return false;
      var t2 = this.mxObject.getCamera();
      null !== this.mxObject.getScene().background && console.log("mxerror: background must be empty");
      var e2 = new i.Matrix4();
      e2.multiplyMatrices(t2.matrixWorldInverse, this.mxObject.getDoc2World());
      var n2 = t2.projectionMatrix;
      return this.mcObjectImp_updateDisplay(e2.elements, n2.elements);
    }, h.prototype.updateDisplayMatrixData = function(t2) {
      if (this.mcObjectImp) {
        var e2 = this.mxObject.getCamera(), n2 = new i.Matrix4();
        n2.multiplyMatrices(e2.matrixWorldInverse, this.mxObject.getDoc2World());
        var r2 = e2.projectionMatrix;
        return this.mcObjectImp.updateDisplayMatrixData(n2.elements, r2.elements, !!t2);
      }
    }, h.prototype.setViewAngle = function(t2) {
      this.mcObjectImp && this.mcObjectImp.fireViewAngleChange(t2);
    }, h.prototype.createTexture = function() {
      return this.mcObjectImp.createTexture();
    }, h.prototype.deleteTexture = function(t2) {
      return this.mcObjectImp.deleteTexture(t2);
    }, h.prototype.bindTexture = function(t2, e2) {
      return this.mcObjectImp.bindTexture(t2, e2);
    }, h.prototype.allocTextureHandle = function(t2) {
      return this.mcObjectImp.allocTextureHandle(t2);
    }, h.prototype.registTexture = function(t2, e2) {
      return this.mcObjectImp.registTexture(t2, e2);
    }, h.prototype.makeCurrent = function() {
      this.mcObjectImp && this.mcObjectImp.makeCurrent();
    }, h);
    function h() {
      this.grip = null, this.mcObjectImp = null, this.mxcppImp = null, this.mxcpp = null, this.mcObject = null, this.mxapp = null, this.mxappimp = null, this.mcDrawUtility = null, this.m_lOsnapCallCount = 1, this.m_retCall = null, this.matCad2doc = new i.Matrix4(), this.matDoc2cad = new i.Matrix4(), this.m_isCallingUpDisplay = false, this.mxdraw3d = new l.McDraw2d(), this.mxdraw3d.mcObject = this;
    }
    n.McDrawObject = u;
  }, { "../MxFun": 27, "../MxManager": 29, "./McDraw3D": 76, "./McDrawGrip": 77, "./McTextureManager": 79, three: 19 }], 79: [function(t, e, n) {
    Object.defineProperty(n, "__esModule", { value: true }), n.McTextureManager = void 0;
    var r = t("three"), i = t("../MxManager"), a = (o.prototype.get = function(t2) {
      if (void 0 !== this.extensions[t2]) return this.extensions[t2];
      var e2;
      switch (t2) {
        case "WEBGL_depth_texture":
          e2 = this.gl.getExtension("WEBGL_depth_texture") || this.gl.getExtension("MOZ_WEBGL_depth_texture") || this.gl.getExtension("WEBKIT_WEBGL_depth_texture");
          break;
        case "EXT_texture_filter_anisotropic":
          e2 = this.gl.getExtension("EXT_texture_filter_anisotropic") || this.gl.getExtension("MOZ_EXT_texture_filter_anisotropic") || this.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
          break;
        case "WEBGL_compressed_texture_s3tc":
          e2 = this.gl.getExtension("WEBGL_compressed_texture_s3tc") || this.gl.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || this.gl.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
          break;
        case "WEBGL_compressed_texture_pvrtc":
          e2 = this.gl.getExtension("WEBGL_compressed_texture_pvrtc") || this.gl.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
          break;
        default:
          e2 = this.gl.getExtension(t2);
      }
      return null === e2 && console.warn("THREE.WebGLRenderer: " + t2 + " extension not supported."), this.extensions[t2] = e2;
    }, o);
    function o(t2) {
      this.extensions = {}, this.gl = t2;
    }
    var s = (l.prototype.allocHandle = function(t2) {
      return this.mcObject.allocTextureHandle(i.MxManager.getMxCpp().encodeToGb2312(t2));
    }, l.prototype.convert = function(t2) {
      var e2;
      if (t2 === r.UnsignedByteType) return 5121;
      if (t2 === r.UnsignedShort4444Type) return 32819;
      if (t2 === r.UnsignedShort5551Type) return 32820;
      if (t2 === r.UnsignedShort565Type) return 33635;
      if (t2 === r.ByteType) return 5120;
      if (t2 === r.ShortType) return 5122;
      if (t2 === r.UnsignedShortType) return 5123;
      if (t2 === r.IntType) return 5124;
      if (t2 === r.UnsignedIntType) return 5125;
      if (t2 === r.FloatType) return 5126;
      if (t2 === r.HalfFloatType) return this.isWebGL2 ? 5131 : null !== (e2 = this.extensions.get("OES_texture_half_float")) ? e2.HALF_FLOAT_OES : null;
      if (t2 === r.AlphaFormat) return 6406;
      if (t2 === r.RGBFormat) return 6407;
      if (t2 === r.RGBAFormat) return 6408;
      if (t2 === r.LuminanceFormat) return 6409;
      if (t2 === r.LuminanceAlphaFormat) return 6410;
      if (t2 === r.DepthFormat) return 6402;
      if (t2 === r.DepthStencilFormat) return 34041;
      if (t2 === r.RedFormat) return 6403;
      if (t2 === r.RedIntegerFormat) return 36244;
      if (t2 === r.RGFormat) return 33319;
      if (t2 === r.RGIntegerFormat) return 33320;
      if (t2 === r.RGBIntegerFormat) return 36248;
      if (t2 === r.RGBAIntegerFormat) return 36249;
      if (t2 === r.RGB_S3TC_DXT1_Format || t2 === r.RGBA_S3TC_DXT1_Format || t2 === r.RGBA_S3TC_DXT3_Format || t2 === r.RGBA_S3TC_DXT5_Format) {
        if (null === (e2 = this.extensions.get("WEBGL_compressed_texture_s3tc"))) return null;
        if (t2 === r.RGB_S3TC_DXT1_Format) return e2.COMPRESSED_RGB_S3TC_DXT1_EXT;
        if (t2 === r.RGBA_S3TC_DXT1_Format) return e2.COMPRESSED_RGBA_S3TC_DXT1_EXT;
        if (t2 === r.RGBA_S3TC_DXT3_Format) return e2.COMPRESSED_RGBA_S3TC_DXT3_EXT;
        if (t2 === r.RGBA_S3TC_DXT5_Format) return e2.COMPRESSED_RGBA_S3TC_DXT5_EXT;
      }
      if (t2 === r.RGB_PVRTC_4BPPV1_Format || t2 === r.RGB_PVRTC_2BPPV1_Format || t2 === r.RGBA_PVRTC_4BPPV1_Format || t2 === r.RGBA_PVRTC_2BPPV1_Format) {
        if (null === (e2 = this.extensions.get("WEBGL_compressed_texture_pvrtc"))) return null;
        if (t2 === r.RGB_PVRTC_4BPPV1_Format) return e2.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
        if (t2 === r.RGB_PVRTC_2BPPV1_Format) return e2.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
        if (t2 === r.RGBA_PVRTC_4BPPV1_Format) return e2.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
        if (t2 === r.RGBA_PVRTC_2BPPV1_Format) return e2.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
      }
      return t2 === r.RGB_ETC1_Format ? null !== (e2 = this.extensions.get("WEBGL_compressed_texture_etc1")) ? e2.COMPRESSED_RGB_ETC1_WEBGL : null : t2 === r.RGBA_ASTC_4x4_Format || t2 === r.RGBA_ASTC_5x4_Format || t2 === r.RGBA_ASTC_5x5_Format || t2 === r.RGBA_ASTC_6x5_Format || t2 === r.RGBA_ASTC_6x6_Format || t2 === r.RGBA_ASTC_8x5_Format || t2 === r.RGBA_ASTC_8x6_Format || t2 === r.RGBA_ASTC_8x8_Format || t2 === r.RGBA_ASTC_10x5_Format || t2 === r.RGBA_ASTC_10x6_Format || t2 === r.RGBA_ASTC_10x8_Format || t2 === r.RGBA_ASTC_10x10_Format || t2 === r.RGBA_ASTC_12x10_Format || t2 === r.RGBA_ASTC_12x12_Format ? null !== (e2 = this.extensions.get("WEBGL_compressed_texture_astc")) ? t2 : null : t2 === r.UnsignedInt248Type ? this.isWebGL2 ? 34042 : null !== (e2 = this.extensions.get("WEBGL_depth_texture")) ? e2.UNSIGNED_INT_24_8_WEBGL : null : void 0;
    }, l.prototype.textureNeedsPowerOfTwo = function(t2) {
      return 1001 !== t2.wrapS || 1001 !== t2.wrapT || 1003 !== t2.minFilter && 1006 !== t2.minFilter;
    }, l.prototype.createCanvas = function(t2, e2) {
      return document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
    }, l.prototype.floorPowerOfTwo = function(t2) {
      return Math.pow(2, Math.floor(Math.log(t2) / Math.LN2));
    }, l.prototype.resizeImage = function(t2, e2, n2, r2) {
      var i2 = 1;
      if ((t2.width > r2 || t2.height > r2) && (i2 = r2 / Math.max(t2.width, t2.height)), i2 < 1 || true === e2) {
        if ("undefined" != typeof HTMLImageElement && t2 instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && t2 instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && t2 instanceof ImageBitmap) {
          var a2 = e2 ? this.floorPowerOfTwo : Math.floor, o2 = a2(i2 * t2.width), s2 = a2(i2 * t2.height);
          void 0 === this._canvas && (this._canvas = this.createCanvas(o2, s2));
          var l2 = n2 ? this.createCanvas(o2, s2) : this._canvas;
          return l2.width = o2, l2.height = s2, l2.getContext("2d").drawImage(t2, 0, 0, o2, s2), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + t2.width + "x" + t2.height + ") to (" + o2 + "x" + s2 + ")."), l2;
        }
        return "data" in t2 && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + t2.width + "x" + t2.height + ")."), t2;
      }
      return t2;
    }, l.prototype.mathIsPowerOfTwo = function(t2) {
      return 0 == (t2 & t2 - 1) && 0 !== t2;
    }, l.prototype.isPowerOfTwo = function(t2) {
      return this.mathIsPowerOfTwo(t2.width) && this.mathIsPowerOfTwo(t2.height);
    }, l.prototype.getInternalFormat = function(t2, e2, n2) {
      if (false === this.isWebGL2) return e2;
      if (null !== t2) {
        if (void 0 !== this._gl[t2]) return this._gl[t2];
        console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + t2 + "'");
      }
      var r2 = e2;
      return 6403 === e2 && (5126 === n2 && (r2 = 33326), 5131 === n2 && (r2 = 33325), 5121 === n2 && (r2 = 33321)), 6407 === e2 && (5126 === n2 && (r2 = 34837), 5131 === n2 && (r2 = 34843), 5121 === n2 && (r2 = 32849)), 6408 === e2 && (5126 === n2 && (r2 = 34836), 5131 === n2 && (r2 = 34842), 5121 === n2 && (r2 = 32856)), 33325 === r2 || 33326 === r2 || 34842 === r2 || 34836 === r2 ? this.extensions.get("EXT_color_buffer_float") : 34843 !== r2 && 34837 !== r2 || console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."), r2;
    }, l.prototype.filterFallback = function(t2) {
      return t2 === r.NearestFilter || t2 === r.NearestMipmapNearestFilter || t2 === r.NearestMipmapLinearFilter ? 9728 : 9729;
    }, l.prototype.setTextureParameters = function(t2, e2, n2) {
      var i2 = {};
      i2[r.RepeatWrapping] = 10497, i2[r.ClampToEdgeWrapping] = 33071, i2[r.MirroredRepeatWrapping] = 33648;
      var a2 = {};
      a2[r.NearestFilter] = 9728, a2[r.NearestMipmapNearestFilter] = 9984, a2[r.NearestMipmapLinearFilter] = 9986, a2[r.LinearFilter] = 9729, a2[r.LinearMipmapNearestFilter] = 9985, a2[r.LinearMipmapLinearFilter] = 9987, n2 ? (this._gl.texParameteri(t2, 10242, i2[e2.wrapS]), this._gl.texParameteri(t2, 10243, i2[e2.wrapT]), 32879 !== t2 && 35866 !== t2 || this._gl.texParameteri(t2, 32882, i2[e2.wrapR]), this._gl.texParameteri(t2, 10240, a2[e2.magFilter]), this._gl.texParameteri(t2, 10241, a2[e2.minFilter])) : (this._gl.texParameteri(t2, 10242, 33071), this._gl.texParameteri(t2, 10243, 33071), 32879 !== t2 && 35866 !== t2 || this._gl.texParameteri(t2, 32882, 33071), e2.wrapS === r.ClampToEdgeWrapping && e2.wrapT === r.ClampToEdgeWrapping || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), this._gl.texParameteri(t2, 10240, this.filterFallback(e2.magFilter)), this._gl.texParameteri(t2, 10241, this.filterFallback(e2.minFilter)), e2.minFilter !== r.NearestFilter && e2.minFilter !== r.LinearFilter && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));
    }, l.prototype.textureNeedsGenerateMipmaps = function(t2, e2) {
      return t2.generateMipmaps && e2 && t2.minFilter !== r.NearestFilter && t2.minFilter !== r.LinearFilter;
    }, l.prototype.generateMipmap = function(t2, e2, n2, r2, i2) {
      this._gl.generateMipmap(e2);
    }, l.prototype.clear = function() {
      var t2 = this;
      Object.keys(this.mapImagePathToTexture).forEach(function(e2) {
        var n2 = t2.mapImagePathToTexture[e2];
        n2 && n2.webglTexture && t2.mcObject.deleteTexture(n2.webglTexture);
      }), this.mapImagePathToTexture = {};
    }, l.prototype.loadImage = function(t2, e2, n2) {
      if (this.mapImagePathToTexture[t2]) {
        var a2 = this.mapImagePathToTexture[t2];
        return a2 && a2.isload && a2.texture ? n2(true, a2.texture.image) : n2(false, void 0), 0;
      }
      var o2 = { isload: false, texture: null, handle: this.allocHandle(e2), webglTexture: void 0 };
      this.mapImagePathToTexture[t2] = o2;
      var s2 = i.MxManager.getLoadImageFuction();
      return s2 && 0 != s2(t2, function(t3) {
        o2.isload = true, o2.texture = t3, n2(true, t3.image);
      }, function(t3) {
        o2.isload = false, n2(false, void 0);
      }) || new r.TextureLoader().load(t2, function(t3) {
        o2.isload = true, o2.texture = t3, n2(true, t3.image);
      }, void 0, function(t3) {
        o2.isload = false, n2(false, void 0);
      }), o2.handle;
    }, l.prototype.loadImageBase64 = function(t2, e2, n2) {
      if (this.mapImagePathToTexture[t2]) {
        var i2 = this.mapImagePathToTexture[t2];
        return i2 && i2.isload && i2.texture ? n2(true, i2.texture.image) : n2(false, void 0), 0;
      }
      var a2 = { isload: false, texture: null, handle: this.allocHandle(t2), webglTexture: void 0 };
      return this.mapImagePathToTexture[t2] = a2, new r.TextureLoader().load(e2, function(t3) {
        a2.isload = true, a2.texture = t3, n2(true, t3.image);
      }, void 0, function(t3) {
        a2.isload = false, n2(false, void 0);
      }), a2.handle;
    }, l.prototype.createOpenGLTexture = function(t2) {
      var e2 = this.mapImagePathToTexture[t2];
      if (!e2 || !e2.isload || e2.webglTexture) return false;
      var n2 = e2.texture;
      e2.webglTexture = this.mcObject.createTexture(), this._gl.activeTexture(33984), this.mcObject.bindTexture(3553, e2.webglTexture), this._gl.pixelStorei(37440, n2.flipY), this._gl.pixelStorei(37441, n2.premultiplyAlpha), this._gl.pixelStorei(3317, n2.unpackAlignment);
      var r2 = this._gl.getParameter(3379), i2 = this.textureNeedsPowerOfTwo(n2) && false === this.isPowerOfTwo(n2.image), a2 = this.resizeImage(n2.image, i2, false, r2), o2 = this.isPowerOfTwo(a2) || this.isWebGL2, s2 = this.convert(n2.format), l2 = this.convert(n2.type), c = this.getInternalFormat(n2.internalFormat, s2, l2);
      this.setTextureParameters(3553, n2, o2);
      var u, h = n2.mipmaps;
      if (n2.isDataTexture) {
        var p = true;
        if (this._gl.texStorage2D || (p = false), 0 < h.length && o2) {
          for (var d = 0, f = h.length; d < f; d++) u = h[d], this._gl.texImage2D(3553, d, c, u.width, u.height, 0, s2, l2, u.data);
          n2.generateMipmaps = false;
        } else p ? (this._gl.texStorage2D(3553, 1, c, a2.width, a2.height), this._gl.texSubImage2D(3553, 0, 0, 0, a2.width, a2.height, s2, l2, a2.data)) : this._gl.texImage2D(3553, 0, c, a2.width, a2.height, 0, s2, l2, a2.data);
      } else if (0 < h.length && o2) {
        for (d = 0, f = h.length; d < f; d++) u = h[d], this._gl.texImage2D(3553, d, c, s2, l2, u);
        n2.generateMipmaps = false;
      } else this._gl.texImage2D(3553, 0, c, s2, l2, a2);
      this.textureNeedsGenerateMipmaps(n2, o2) && this.generateMipmap(e2, 3553, n2, a2.width, a2.height), this.mcObject.registTexture(e2.handle, e2.webglTexture);
    }, l);
    function l(t2, e2) {
      this.mapImagePathToTexture = {}, this.mcObject = t2, this._gl = e2, this.extensions = new a(e2), this.isWebGL2 = "undefined" != typeof WebGL2RenderingContext && e2 instanceof WebGL2RenderingContext;
    }
    n.McTextureManager = s;
  }, { "../MxManager": 29, three: 19 }] }, {}, [58]);
}
function registerMxDbEntity() {
  store.events.emit("MxDbEntityRegister");
}
var registerList = [];
function addRegisterMxDbEntity(t) {
  t.isRegister = false;
  const e = () => {
    !t.isRegister && t.register && t.register(), store.events.off("stateChange", e);
  };
  registerList.push(e);
}
var callRegisterMxDbEntityLists = () => {
  registerList.forEach((t) => {
    t && t();
  }), registerList = [];
};
store.events.on("MxDbEntityRegister", callRegisterMxDbEntityLists);
var commonjsGlobal = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
function unwrapExports(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
function createCommonjsModule(t, e) {
  return t(e = { exports: {} }, e.exports), e.exports;
}
var jquery = createCommonjsModule(function(t) {
  var e, n;
  e = "undefined" != typeof window ? window : commonjsGlobal, n = function(t2, e2) {
    var n2 = [], r = Object.getPrototypeOf, i = n2.slice, a = n2.flat ? function(t3) {
      return n2.flat.call(t3);
    } : function(t3) {
      return n2.concat.apply([], t3);
    }, o = n2.push, s = n2.indexOf, l = {}, c = l.toString, u = l.hasOwnProperty, h = u.toString, p = h.call(Object), d = {}, f = function(t3) {
      return "function" == typeof t3 && "number" != typeof t3.nodeType && "function" != typeof t3.item;
    }, m = function(t3) {
      return null != t3 && t3 === t3.window;
    }, g = t2.document, y = { type: true, src: true, nonce: true, noModule: true };
    function v(t3, e3, n3) {
      var r2, i2, a2 = (n3 = n3 || g).createElement("script");
      if (a2.text = t3, e3) for (r2 in y) (i2 = e3[r2] || e3.getAttribute && e3.getAttribute(r2)) && a2.setAttribute(r2, i2);
      n3.head.appendChild(a2).parentNode.removeChild(a2);
    }
    function x(t3) {
      return null == t3 ? t3 + "" : "object" == typeof t3 || "function" == typeof t3 ? l[c.call(t3)] || "object" : typeof t3;
    }
    var w = "3.7.0", b = /HTML$/i, M = function(t3, e3) {
      return new M.fn.init(t3, e3);
    };
    function _(t3) {
      var e3 = !!t3 && "length" in t3 && t3.length, n3 = x(t3);
      return !f(t3) && !m(t3) && ("array" === n3 || 0 === e3 || "number" == typeof e3 && e3 > 0 && e3 - 1 in t3);
    }
    function T(t3, e3) {
      return t3.nodeName && t3.nodeName.toLowerCase() === e3.toLowerCase();
    }
    M.fn = M.prototype = { jquery: w, constructor: M, length: 0, toArray: function() {
      return i.call(this);
    }, get: function(t3) {
      return null == t3 ? i.call(this) : t3 < 0 ? this[t3 + this.length] : this[t3];
    }, pushStack: function(t3) {
      var e3 = M.merge(this.constructor(), t3);
      return e3.prevObject = this, e3;
    }, each: function(t3) {
      return M.each(this, t3);
    }, map: function(t3) {
      return this.pushStack(M.map(this, function(e3, n3) {
        return t3.call(e3, n3, e3);
      }));
    }, slice: function() {
      return this.pushStack(i.apply(this, arguments));
    }, first: function() {
      return this.eq(0);
    }, last: function() {
      return this.eq(-1);
    }, even: function() {
      return this.pushStack(M.grep(this, function(t3, e3) {
        return (e3 + 1) % 2;
      }));
    }, odd: function() {
      return this.pushStack(M.grep(this, function(t3, e3) {
        return e3 % 2;
      }));
    }, eq: function(t3) {
      var e3 = this.length, n3 = +t3 + (t3 < 0 ? e3 : 0);
      return this.pushStack(n3 >= 0 && n3 < e3 ? [this[n3]] : []);
    }, end: function() {
      return this.prevObject || this.constructor();
    }, push: o, sort: n2.sort, splice: n2.splice }, M.extend = M.fn.extend = function() {
      var t3, e3, n3, r2, i2, a2, o2 = arguments[0] || {}, s2 = 1, l2 = arguments.length, c2 = false;
      for ("boolean" == typeof o2 && (c2 = o2, o2 = arguments[s2] || {}, s2++), "object" == typeof o2 || f(o2) || (o2 = {}), s2 === l2 && (o2 = this, s2--); s2 < l2; s2++) if (null != (t3 = arguments[s2])) for (e3 in t3) r2 = t3[e3], "__proto__" !== e3 && o2 !== r2 && (c2 && r2 && (M.isPlainObject(r2) || (i2 = Array.isArray(r2))) ? (n3 = o2[e3], a2 = i2 && !Array.isArray(n3) ? [] : i2 || M.isPlainObject(n3) ? n3 : {}, i2 = false, o2[e3] = M.extend(c2, a2, r2)) : void 0 !== r2 && (o2[e3] = r2));
      return o2;
    }, M.extend({ expando: "jQuery" + (w + Math.random()).replace(/\D/g, ""), isReady: true, error: function(t3) {
      throw new Error(t3);
    }, noop: function() {
    }, isPlainObject: function(t3) {
      var e3, n3;
      return !(!t3 || "[object Object]" !== c.call(t3) || (e3 = r(t3)) && ("function" != typeof (n3 = u.call(e3, "constructor") && e3.constructor) || h.call(n3) !== p));
    }, isEmptyObject: function(t3) {
      var e3;
      for (e3 in t3) return false;
      return true;
    }, globalEval: function(t3, e3, n3) {
      v(t3, { nonce: e3 && e3.nonce }, n3);
    }, each: function(t3, e3) {
      var n3, r2 = 0;
      if (_(t3)) for (n3 = t3.length; r2 < n3 && false !== e3.call(t3[r2], r2, t3[r2]); r2++) ;
      else for (r2 in t3) if (false === e3.call(t3[r2], r2, t3[r2])) break;
      return t3;
    }, text: function(t3) {
      var e3, n3 = "", r2 = 0, i2 = t3.nodeType;
      if (i2) {
        if (1 === i2 || 9 === i2 || 11 === i2) return t3.textContent;
        if (3 === i2 || 4 === i2) return t3.nodeValue;
      } else for (; e3 = t3[r2++]; ) n3 += M.text(e3);
      return n3;
    }, makeArray: function(t3, e3) {
      var n3 = e3 || [];
      return null != t3 && (_(Object(t3)) ? M.merge(n3, "string" == typeof t3 ? [t3] : t3) : o.call(n3, t3)), n3;
    }, inArray: function(t3, e3, n3) {
      return null == e3 ? -1 : s.call(e3, t3, n3);
    }, isXMLDoc: function(t3) {
      var e3 = t3 && t3.namespaceURI, n3 = t3 && (t3.ownerDocument || t3).documentElement;
      return !b.test(e3 || n3 && n3.nodeName || "HTML");
    }, merge: function(t3, e3) {
      for (var n3 = +e3.length, r2 = 0, i2 = t3.length; r2 < n3; r2++) t3[i2++] = e3[r2];
      return t3.length = i2, t3;
    }, grep: function(t3, e3, n3) {
      for (var r2 = [], i2 = 0, a2 = t3.length, o2 = !n3; i2 < a2; i2++) !e3(t3[i2], i2) !== o2 && r2.push(t3[i2]);
      return r2;
    }, map: function(t3, e3, n3) {
      var r2, i2, o2 = 0, s2 = [];
      if (_(t3)) for (r2 = t3.length; o2 < r2; o2++) null != (i2 = e3(t3[o2], o2, n3)) && s2.push(i2);
      else for (o2 in t3) null != (i2 = e3(t3[o2], o2, n3)) && s2.push(i2);
      return a(s2);
    }, guid: 1, support: d }), "function" == typeof Symbol && (M.fn[Symbol.iterator] = n2[Symbol.iterator]), M.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(t3, e3) {
      l["[object " + e3 + "]"] = e3.toLowerCase();
    });
    var C = n2.pop, S = n2.sort, D = n2.splice, E = "[\\x20\\t\\r\\n\\f]", O = new RegExp("^" + E + "+|((?:^|[^\\\\])(?:\\\\.)*)" + E + "+$", "g");
    M.contains = function(t3, e3) {
      var n3 = e3 && e3.parentNode;
      return t3 === n3 || !(!n3 || 1 !== n3.nodeType || !(t3.contains ? t3.contains(n3) : t3.compareDocumentPosition && 16 & t3.compareDocumentPosition(n3)));
    };
    var A = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function P(t3, e3) {
      return e3 ? "\0" === t3 ? "�" : t3.slice(0, -1) + "\\" + t3.charCodeAt(t3.length - 1).toString(16) + " " : "\\" + t3;
    }
    M.escapeSelector = function(t3) {
      return (t3 + "").replace(A, P);
    };
    var R = g, L = o;
    !function() {
      var e3, r2, a2, o2, l2, c2, h2, p2, f2, m2, g2 = L, y2 = M.expando, v2 = 0, x2 = 0, w2 = tt2(), b2 = tt2(), _2 = tt2(), A2 = tt2(), P2 = function(t3, e4) {
        return t3 === e4 && (l2 = true), 0;
      }, I2 = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", k2 = "(?:\\\\[\\da-fA-F]{1,6}" + E + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", j2 = "\\[" + E + "*(" + k2 + ")(?:" + E + "*([*^$|!~]?=)" + E + `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + k2 + "))|)" + E + "*\\]", N2 = ":(" + k2 + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + j2 + ")*)|.*)\\)|)", V2 = new RegExp(E + "+", "g"), F2 = new RegExp("^" + E + "*," + E + "*"), B2 = new RegExp("^" + E + "*([>+~]|" + E + ")" + E + "*"), G2 = new RegExp(E + "|>"), z2 = new RegExp(N2), U2 = new RegExp("^" + k2 + "$"), H2 = { ID: new RegExp("^#(" + k2 + ")"), CLASS: new RegExp("^\\.(" + k2 + ")"), TAG: new RegExp("^(" + k2 + "|[*])"), ATTR: new RegExp("^" + j2), PSEUDO: new RegExp("^" + N2), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + E + "*(even|odd|(([+-]|)(\\d*)n|)" + E + "*(?:([+-]|)" + E + "*(\\d+)|))" + E + "*\\)|)", "i"), bool: new RegExp("^(?:" + I2 + ")$", "i"), needsContext: new RegExp("^" + E + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + E + "*((?:-\\d)?\\d*)" + E + "*\\)|)(?=[^-]|$)", "i") }, W2 = /^(?:input|select|textarea|button)$/i, J2 = /^h\d$/i, q2 = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, X2 = /[+~]/, Y2 = new RegExp("\\\\[\\da-fA-F]{1,6}" + E + "?|\\\\([^\\r\\n\\f])", "g"), Z2 = function(t3, e4) {
        var n3 = "0x" + t3.slice(1) - 65536;
        return e4 || (n3 < 0 ? String.fromCharCode(n3 + 65536) : String.fromCharCode(n3 >> 10 | 55296, 1023 & n3 | 56320));
      }, K2 = function() {
        lt2();
      }, $3 = pt2(function(t3) {
        return true === t3.disabled && T(t3, "fieldset");
      }, { dir: "parentNode", next: "legend" });
      try {
        g2.apply(n2 = i.call(R.childNodes), R.childNodes), n2[R.childNodes.length].nodeType;
      } catch (t3) {
        g2 = { apply: function(t4, e4) {
          L.apply(t4, i.call(e4));
        }, call: function(t4) {
          L.apply(t4, i.call(arguments, 1));
        } };
      }
      function Q2(t3, e4, n3, r3) {
        var i2, a3, o3, s2, l3, u2, h3, m3 = e4 && e4.ownerDocument, v3 = e4 ? e4.nodeType : 9;
        if (n3 = n3 || [], "string" != typeof t3 || !t3 || 1 !== v3 && 9 !== v3 && 11 !== v3) return n3;
        if (!r3 && (lt2(e4), e4 = e4 || c2, p2)) {
          if (11 !== v3 && (l3 = q2.exec(t3))) if (i2 = l3[1]) {
            if (9 === v3) {
              if (!(o3 = e4.getElementById(i2))) return n3;
              if (o3.id === i2) return g2.call(n3, o3), n3;
            } else if (m3 && (o3 = m3.getElementById(i2)) && Q2.contains(e4, o3) && o3.id === i2) return g2.call(n3, o3), n3;
          } else {
            if (l3[2]) return g2.apply(n3, e4.getElementsByTagName(t3)), n3;
            if ((i2 = l3[3]) && e4.getElementsByClassName) return g2.apply(n3, e4.getElementsByClassName(i2)), n3;
          }
          if (!(A2[t3 + " "] || f2 && f2.test(t3))) {
            if (h3 = t3, m3 = e4, 1 === v3 && (G2.test(t3) || B2.test(t3))) {
              for ((m3 = X2.test(t3) && st2(e4.parentNode) || e4) == e4 && d.scope || ((s2 = e4.getAttribute("id")) ? s2 = M.escapeSelector(s2) : e4.setAttribute("id", s2 = y2)), a3 = (u2 = ut2(t3)).length; a3--; ) u2[a3] = (s2 ? "#" + s2 : ":scope") + " " + ht2(u2[a3]);
              h3 = u2.join(",");
            }
            try {
              return g2.apply(n3, m3.querySelectorAll(h3)), n3;
            } catch (e5) {
              A2(t3, true);
            } finally {
              s2 === y2 && e4.removeAttribute("id");
            }
          }
        }
        return vt2(t3.replace(O, "$1"), e4, n3, r3);
      }
      function tt2() {
        var t3 = [];
        return function e4(n3, i2) {
          return t3.push(n3 + " ") > r2.cacheLength && delete e4[t3.shift()], e4[n3 + " "] = i2;
        };
      }
      function et2(t3) {
        return t3[y2] = true, t3;
      }
      function nt2(t3) {
        var e4 = c2.createElement("fieldset");
        try {
          return !!t3(e4);
        } catch (t4) {
          return false;
        } finally {
          e4.parentNode && e4.parentNode.removeChild(e4), e4 = null;
        }
      }
      function rt2(t3) {
        return function(e4) {
          return T(e4, "input") && e4.type === t3;
        };
      }
      function it2(t3) {
        return function(e4) {
          return (T(e4, "input") || T(e4, "button")) && e4.type === t3;
        };
      }
      function at2(t3) {
        return function(e4) {
          return "form" in e4 ? e4.parentNode && false === e4.disabled ? "label" in e4 ? "label" in e4.parentNode ? e4.parentNode.disabled === t3 : e4.disabled === t3 : e4.isDisabled === t3 || e4.isDisabled !== !t3 && $3(e4) === t3 : e4.disabled === t3 : "label" in e4 && e4.disabled === t3;
        };
      }
      function ot2(t3) {
        return et2(function(e4) {
          return e4 = +e4, et2(function(n3, r3) {
            for (var i2, a3 = t3([], n3.length, e4), o3 = a3.length; o3--; ) n3[i2 = a3[o3]] && (n3[i2] = !(r3[i2] = n3[i2]));
          });
        });
      }
      function st2(t3) {
        return t3 && void 0 !== t3.getElementsByTagName && t3;
      }
      function lt2(t3) {
        var e4, n3 = t3 ? t3.ownerDocument || t3 : R;
        return n3 != c2 && 9 === n3.nodeType && n3.documentElement ? (h2 = (c2 = n3).documentElement, p2 = !M.isXMLDoc(c2), m2 = h2.matches || h2.webkitMatchesSelector || h2.msMatchesSelector, R != c2 && (e4 = c2.defaultView) && e4.top !== e4 && e4.addEventListener("unload", K2), d.getById = nt2(function(t4) {
          return h2.appendChild(t4).id = M.expando, !c2.getElementsByName || !c2.getElementsByName(M.expando).length;
        }), d.disconnectedMatch = nt2(function(t4) {
          return m2.call(t4, "*");
        }), d.scope = nt2(function() {
          return c2.querySelectorAll(":scope");
        }), d.cssHas = nt2(function() {
          try {
            return c2.querySelector(":has(*,:jqfake)"), false;
          } catch (t4) {
            return true;
          }
        }), d.getById ? (r2.filter.ID = function(t4) {
          var e5 = t4.replace(Y2, Z2);
          return function(t5) {
            return t5.getAttribute("id") === e5;
          };
        }, r2.find.ID = function(t4, e5) {
          if (void 0 !== e5.getElementById && p2) {
            var n4 = e5.getElementById(t4);
            return n4 ? [n4] : [];
          }
        }) : (r2.filter.ID = function(t4) {
          var e5 = t4.replace(Y2, Z2);
          return function(t5) {
            var n4 = void 0 !== t5.getAttributeNode && t5.getAttributeNode("id");
            return n4 && n4.value === e5;
          };
        }, r2.find.ID = function(t4, e5) {
          if (void 0 !== e5.getElementById && p2) {
            var n4, r3, i2, a3 = e5.getElementById(t4);
            if (a3) {
              if ((n4 = a3.getAttributeNode("id")) && n4.value === t4) return [a3];
              for (i2 = e5.getElementsByName(t4), r3 = 0; a3 = i2[r3++]; ) if ((n4 = a3.getAttributeNode("id")) && n4.value === t4) return [a3];
            }
            return [];
          }
        }), r2.find.TAG = function(t4, e5) {
          return void 0 !== e5.getElementsByTagName ? e5.getElementsByTagName(t4) : e5.querySelectorAll(t4);
        }, r2.find.CLASS = function(t4, e5) {
          if (void 0 !== e5.getElementsByClassName && p2) return e5.getElementsByClassName(t4);
        }, f2 = [], nt2(function(t4) {
          var e5;
          h2.appendChild(t4).innerHTML = "<a id='" + y2 + "' href='' disabled='disabled'></a><select id='" + y2 + "-\r\\' disabled='disabled'><option selected=''></option></select>", t4.querySelectorAll("[selected]").length || f2.push("\\[" + E + "*(?:value|" + I2 + ")"), t4.querySelectorAll("[id~=" + y2 + "-]").length || f2.push("~="), t4.querySelectorAll("a#" + y2 + "+*").length || f2.push(".#.+[+~]"), t4.querySelectorAll(":checked").length || f2.push(":checked"), (e5 = c2.createElement("input")).setAttribute("type", "hidden"), t4.appendChild(e5).setAttribute("name", "D"), h2.appendChild(t4).disabled = true, 2 !== t4.querySelectorAll(":disabled").length && f2.push(":enabled", ":disabled"), (e5 = c2.createElement("input")).setAttribute("name", ""), t4.appendChild(e5), t4.querySelectorAll("[name='']").length || f2.push("\\[" + E + "*name" + E + "*=" + E + `*(?:''|"")`);
        }), d.cssHas || f2.push(":has"), f2 = f2.length && new RegExp(f2.join("|")), P2 = function(t4, e5) {
          if (t4 === e5) return l2 = true, 0;
          var n4 = !t4.compareDocumentPosition - !e5.compareDocumentPosition;
          return n4 || (1 & (n4 = (t4.ownerDocument || t4) == (e5.ownerDocument || e5) ? t4.compareDocumentPosition(e5) : 1) || !d.sortDetached && e5.compareDocumentPosition(t4) === n4 ? t4 === c2 || t4.ownerDocument == R && Q2.contains(R, t4) ? -1 : e5 === c2 || e5.ownerDocument == R && Q2.contains(R, e5) ? 1 : o2 ? s.call(o2, t4) - s.call(o2, e5) : 0 : 4 & n4 ? -1 : 1);
        }, c2) : c2;
      }
      for (e3 in Q2.matches = function(t3, e4) {
        return Q2(t3, null, null, e4);
      }, Q2.matchesSelector = function(t3, e4) {
        if (lt2(t3), p2 && !A2[e4 + " "] && (!f2 || !f2.test(e4))) try {
          var n3 = m2.call(t3, e4);
          if (n3 || d.disconnectedMatch || t3.document && 11 !== t3.document.nodeType) return n3;
        } catch (t4) {
          A2(e4, true);
        }
        return Q2(e4, c2, null, [t3]).length > 0;
      }, Q2.contains = function(t3, e4) {
        return (t3.ownerDocument || t3) != c2 && lt2(t3), M.contains(t3, e4);
      }, Q2.attr = function(t3, e4) {
        (t3.ownerDocument || t3) != c2 && lt2(t3);
        var n3 = r2.attrHandle[e4.toLowerCase()], i2 = n3 && u.call(r2.attrHandle, e4.toLowerCase()) ? n3(t3, e4, !p2) : void 0;
        return void 0 !== i2 ? i2 : t3.getAttribute(e4);
      }, Q2.error = function(t3) {
        throw new Error("Syntax error, unrecognized expression: " + t3);
      }, M.uniqueSort = function(t3) {
        var e4, n3 = [], r3 = 0, a3 = 0;
        if (l2 = !d.sortStable, o2 = !d.sortStable && i.call(t3, 0), S.call(t3, P2), l2) {
          for (; e4 = t3[a3++]; ) e4 === t3[a3] && (r3 = n3.push(a3));
          for (; r3--; ) D.call(t3, n3[r3], 1);
        }
        return o2 = null, t3;
      }, M.fn.uniqueSort = function() {
        return this.pushStack(M.uniqueSort(i.apply(this)));
      }, (r2 = M.expr = { cacheLength: 50, createPseudo: et2, match: H2, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: true }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: true }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function(t3) {
        return t3[1] = t3[1].replace(Y2, Z2), t3[3] = (t3[3] || t3[4] || t3[5] || "").replace(Y2, Z2), "~=" === t3[2] && (t3[3] = " " + t3[3] + " "), t3.slice(0, 4);
      }, CHILD: function(t3) {
        return t3[1] = t3[1].toLowerCase(), "nth" === t3[1].slice(0, 3) ? (t3[3] || Q2.error(t3[0]), t3[4] = +(t3[4] ? t3[5] + (t3[6] || 1) : 2 * ("even" === t3[3] || "odd" === t3[3])), t3[5] = +(t3[7] + t3[8] || "odd" === t3[3])) : t3[3] && Q2.error(t3[0]), t3;
      }, PSEUDO: function(t3) {
        var e4, n3 = !t3[6] && t3[2];
        return H2.CHILD.test(t3[0]) ? null : (t3[3] ? t3[2] = t3[4] || t3[5] || "" : n3 && z2.test(n3) && (e4 = ut2(n3, true)) && (e4 = n3.indexOf(")", n3.length - e4) - n3.length) && (t3[0] = t3[0].slice(0, e4), t3[2] = n3.slice(0, e4)), t3.slice(0, 3));
      } }, filter: { TAG: function(t3) {
        var e4 = t3.replace(Y2, Z2).toLowerCase();
        return "*" === t3 ? function() {
          return true;
        } : function(t4) {
          return T(t4, e4);
        };
      }, CLASS: function(t3) {
        var e4 = w2[t3 + " "];
        return e4 || (e4 = new RegExp("(^|" + E + ")" + t3 + "(" + E + "|$)")) && w2(t3, function(t4) {
          return e4.test("string" == typeof t4.className && t4.className || void 0 !== t4.getAttribute && t4.getAttribute("class") || "");
        });
      }, ATTR: function(t3, e4, n3) {
        return function(r3) {
          var i2 = Q2.attr(r3, t3);
          return null == i2 ? "!=" === e4 : !e4 || (i2 += "", "=" === e4 ? i2 === n3 : "!=" === e4 ? i2 !== n3 : "^=" === e4 ? n3 && 0 === i2.indexOf(n3) : "*=" === e4 ? n3 && i2.indexOf(n3) > -1 : "$=" === e4 ? n3 && i2.slice(-n3.length) === n3 : "~=" === e4 ? (" " + i2.replace(V2, " ") + " ").indexOf(n3) > -1 : "|=" === e4 && (i2 === n3 || i2.slice(0, n3.length + 1) === n3 + "-"));
        };
      }, CHILD: function(t3, e4, n3, r3, i2) {
        var a3 = "nth" !== t3.slice(0, 3), o3 = "last" !== t3.slice(-4), s2 = "of-type" === e4;
        return 1 === r3 && 0 === i2 ? function(t4) {
          return !!t4.parentNode;
        } : function(e5, n4, l3) {
          var c3, u2, h3, p3, d2, f3 = a3 !== o3 ? "nextSibling" : "previousSibling", m3 = e5.parentNode, g3 = s2 && e5.nodeName.toLowerCase(), x3 = !l3 && !s2, w3 = false;
          if (m3) {
            if (a3) {
              for (; f3; ) {
                for (h3 = e5; h3 = h3[f3]; ) if (s2 ? T(h3, g3) : 1 === h3.nodeType) return false;
                d2 = f3 = "only" === t3 && !d2 && "nextSibling";
              }
              return true;
            }
            if (d2 = [o3 ? m3.firstChild : m3.lastChild], o3 && x3) {
              for (w3 = (p3 = (c3 = (u2 = m3[y2] || (m3[y2] = {}))[t3] || [])[0] === v2 && c3[1]) && c3[2], h3 = p3 && m3.childNodes[p3]; h3 = ++p3 && h3 && h3[f3] || (w3 = p3 = 0) || d2.pop(); ) if (1 === h3.nodeType && ++w3 && h3 === e5) {
                u2[t3] = [v2, p3, w3];
                break;
              }
            } else if (x3 && (w3 = p3 = (c3 = (u2 = e5[y2] || (e5[y2] = {}))[t3] || [])[0] === v2 && c3[1]), false === w3) for (; (h3 = ++p3 && h3 && h3[f3] || (w3 = p3 = 0) || d2.pop()) && (!(s2 ? T(h3, g3) : 1 === h3.nodeType) || !++w3 || (x3 && ((u2 = h3[y2] || (h3[y2] = {}))[t3] = [v2, w3]), h3 !== e5)); ) ;
            return (w3 -= i2) === r3 || w3 % r3 == 0 && w3 / r3 >= 0;
          }
        };
      }, PSEUDO: function(t3, e4) {
        var n3, i2 = r2.pseudos[t3] || r2.setFilters[t3.toLowerCase()] || Q2.error("unsupported pseudo: " + t3);
        return i2[y2] ? i2(e4) : i2.length > 1 ? (n3 = [t3, t3, "", e4], r2.setFilters.hasOwnProperty(t3.toLowerCase()) ? et2(function(t4, n4) {
          for (var r3, a3 = i2(t4, e4), o3 = a3.length; o3--; ) t4[r3 = s.call(t4, a3[o3])] = !(n4[r3] = a3[o3]);
        }) : function(t4) {
          return i2(t4, 0, n3);
        }) : i2;
      } }, pseudos: { not: et2(function(t3) {
        var e4 = [], n3 = [], r3 = yt2(t3.replace(O, "$1"));
        return r3[y2] ? et2(function(t4, e5, n4, i2) {
          for (var a3, o3 = r3(t4, null, i2, []), s2 = t4.length; s2--; ) (a3 = o3[s2]) && (t4[s2] = !(e5[s2] = a3));
        }) : function(t4, i2, a3) {
          return e4[0] = t4, r3(e4, null, a3, n3), e4[0] = null, !n3.pop();
        };
      }), has: et2(function(t3) {
        return function(e4) {
          return Q2(t3, e4).length > 0;
        };
      }), contains: et2(function(t3) {
        return t3 = t3.replace(Y2, Z2), function(e4) {
          return (e4.textContent || M.text(e4)).indexOf(t3) > -1;
        };
      }), lang: et2(function(t3) {
        return U2.test(t3 || "") || Q2.error("unsupported lang: " + t3), t3 = t3.replace(Y2, Z2).toLowerCase(), function(e4) {
          var n3;
          do {
            if (n3 = p2 ? e4.lang : e4.getAttribute("xml:lang") || e4.getAttribute("lang")) return (n3 = n3.toLowerCase()) === t3 || 0 === n3.indexOf(t3 + "-");
          } while ((e4 = e4.parentNode) && 1 === e4.nodeType);
          return false;
        };
      }), target: function(e4) {
        var n3 = t2.location && t2.location.hash;
        return n3 && n3.slice(1) === e4.id;
      }, root: function(t3) {
        return t3 === h2;
      }, focus: function(t3) {
        return t3 === function() {
          try {
            return c2.activeElement;
          } catch (t4) {
          }
        }() && c2.hasFocus() && !!(t3.type || t3.href || ~t3.tabIndex);
      }, enabled: at2(false), disabled: at2(true), checked: function(t3) {
        return T(t3, "input") && !!t3.checked || T(t3, "option") && !!t3.selected;
      }, selected: function(t3) {
        return t3.parentNode && t3.parentNode.selectedIndex, true === t3.selected;
      }, empty: function(t3) {
        for (t3 = t3.firstChild; t3; t3 = t3.nextSibling) if (t3.nodeType < 6) return false;
        return true;
      }, parent: function(t3) {
        return !r2.pseudos.empty(t3);
      }, header: function(t3) {
        return J2.test(t3.nodeName);
      }, input: function(t3) {
        return W2.test(t3.nodeName);
      }, button: function(t3) {
        return T(t3, "input") && "button" === t3.type || T(t3, "button");
      }, text: function(t3) {
        var e4;
        return T(t3, "input") && "text" === t3.type && (null == (e4 = t3.getAttribute("type")) || "text" === e4.toLowerCase());
      }, first: ot2(function() {
        return [0];
      }), last: ot2(function(t3, e4) {
        return [e4 - 1];
      }), eq: ot2(function(t3, e4, n3) {
        return [n3 < 0 ? n3 + e4 : n3];
      }), even: ot2(function(t3, e4) {
        for (var n3 = 0; n3 < e4; n3 += 2) t3.push(n3);
        return t3;
      }), odd: ot2(function(t3, e4) {
        for (var n3 = 1; n3 < e4; n3 += 2) t3.push(n3);
        return t3;
      }), lt: ot2(function(t3, e4, n3) {
        var r3;
        for (r3 = n3 < 0 ? n3 + e4 : n3 > e4 ? e4 : n3; --r3 >= 0; ) t3.push(r3);
        return t3;
      }), gt: ot2(function(t3, e4, n3) {
        for (var r3 = n3 < 0 ? n3 + e4 : n3; ++r3 < e4; ) t3.push(r3);
        return t3;
      }) } }).pseudos.nth = r2.pseudos.eq, { radio: true, checkbox: true, file: true, password: true, image: true }) r2.pseudos[e3] = rt2(e3);
      for (e3 in { submit: true, reset: true }) r2.pseudos[e3] = it2(e3);
      function ct2() {
      }
      function ut2(t3, e4) {
        var n3, i2, a3, o3, s2, l3, c3, u2 = b2[t3 + " "];
        if (u2) return e4 ? 0 : u2.slice(0);
        for (s2 = t3, l3 = [], c3 = r2.preFilter; s2; ) {
          for (o3 in n3 && !(i2 = F2.exec(s2)) || (i2 && (s2 = s2.slice(i2[0].length) || s2), l3.push(a3 = [])), n3 = false, (i2 = B2.exec(s2)) && (n3 = i2.shift(), a3.push({ value: n3, type: i2[0].replace(O, " ") }), s2 = s2.slice(n3.length)), r2.filter) !(i2 = H2[o3].exec(s2)) || c3[o3] && !(i2 = c3[o3](i2)) || (n3 = i2.shift(), a3.push({ value: n3, type: o3, matches: i2 }), s2 = s2.slice(n3.length));
          if (!n3) break;
        }
        return e4 ? s2.length : s2 ? Q2.error(t3) : b2(t3, l3).slice(0);
      }
      function ht2(t3) {
        for (var e4 = 0, n3 = t3.length, r3 = ""; e4 < n3; e4++) r3 += t3[e4].value;
        return r3;
      }
      function pt2(t3, e4, n3) {
        var r3 = e4.dir, i2 = e4.next, a3 = i2 || r3, o3 = n3 && "parentNode" === a3, s2 = x2++;
        return e4.first ? function(e5, n4, i3) {
          for (; e5 = e5[r3]; ) if (1 === e5.nodeType || o3) return t3(e5, n4, i3);
          return false;
        } : function(e5, n4, l3) {
          var c3, u2, h3 = [v2, s2];
          if (l3) {
            for (; e5 = e5[r3]; ) if ((1 === e5.nodeType || o3) && t3(e5, n4, l3)) return true;
          } else for (; e5 = e5[r3]; ) if (1 === e5.nodeType || o3) if (u2 = e5[y2] || (e5[y2] = {}), i2 && T(e5, i2)) e5 = e5[r3] || e5;
          else {
            if ((c3 = u2[a3]) && c3[0] === v2 && c3[1] === s2) return h3[2] = c3[2];
            if (u2[a3] = h3, h3[2] = t3(e5, n4, l3)) return true;
          }
          return false;
        };
      }
      function dt2(t3) {
        return t3.length > 1 ? function(e4, n3, r3) {
          for (var i2 = t3.length; i2--; ) if (!t3[i2](e4, n3, r3)) return false;
          return true;
        } : t3[0];
      }
      function ft2(t3, e4, n3, r3, i2) {
        for (var a3, o3 = [], s2 = 0, l3 = t3.length, c3 = null != e4; s2 < l3; s2++) (a3 = t3[s2]) && (n3 && !n3(a3, r3, i2) || (o3.push(a3), c3 && e4.push(s2)));
        return o3;
      }
      function mt2(t3, e4, n3, r3, i2, a3) {
        return r3 && !r3[y2] && (r3 = mt2(r3)), i2 && !i2[y2] && (i2 = mt2(i2, a3)), et2(function(a4, o3, l3, c3) {
          var u2, h3, p3, d2, f3 = [], m3 = [], y3 = o3.length, v3 = a4 || function(t4, e5, n4) {
            for (var r4 = 0, i3 = e5.length; r4 < i3; r4++) Q2(t4, e5[r4], n4);
            return n4;
          }(e4 || "*", l3.nodeType ? [l3] : l3, []), x3 = !t3 || !a4 && e4 ? v3 : ft2(v3, f3, t3, l3, c3);
          if (n3 ? n3(x3, d2 = i2 || (a4 ? t3 : y3 || r3) ? [] : o3, l3, c3) : d2 = x3, r3) for (u2 = ft2(d2, m3), r3(u2, [], l3, c3), h3 = u2.length; h3--; ) (p3 = u2[h3]) && (d2[m3[h3]] = !(x3[m3[h3]] = p3));
          if (a4) {
            if (i2 || t3) {
              if (i2) {
                for (u2 = [], h3 = d2.length; h3--; ) (p3 = d2[h3]) && u2.push(x3[h3] = p3);
                i2(null, d2 = [], u2, c3);
              }
              for (h3 = d2.length; h3--; ) (p3 = d2[h3]) && (u2 = i2 ? s.call(a4, p3) : f3[h3]) > -1 && (a4[u2] = !(o3[u2] = p3));
            }
          } else d2 = ft2(d2 === o3 ? d2.splice(y3, d2.length) : d2), i2 ? i2(null, o3, d2, c3) : g2.apply(o3, d2);
        });
      }
      function gt2(t3) {
        for (var e4, n3, i2, o3 = t3.length, l3 = r2.relative[t3[0].type], c3 = l3 || r2.relative[" "], u2 = l3 ? 1 : 0, h3 = pt2(function(t4) {
          return t4 === e4;
        }, c3, true), p3 = pt2(function(t4) {
          return s.call(e4, t4) > -1;
        }, c3, true), d2 = [function(t4, n4, r3) {
          var i3 = !l3 && (r3 || n4 != a2) || ((e4 = n4).nodeType ? h3(t4, n4, r3) : p3(t4, n4, r3));
          return e4 = null, i3;
        }]; u2 < o3; u2++) if (n3 = r2.relative[t3[u2].type]) d2 = [pt2(dt2(d2), n3)];
        else {
          if ((n3 = r2.filter[t3[u2].type].apply(null, t3[u2].matches))[y2]) {
            for (i2 = ++u2; i2 < o3 && !r2.relative[t3[i2].type]; i2++) ;
            return mt2(u2 > 1 && dt2(d2), u2 > 1 && ht2(t3.slice(0, u2 - 1).concat({ value: " " === t3[u2 - 2].type ? "*" : "" })).replace(O, "$1"), n3, u2 < i2 && gt2(t3.slice(u2, i2)), i2 < o3 && gt2(t3 = t3.slice(i2)), i2 < o3 && ht2(t3));
          }
          d2.push(n3);
        }
        return dt2(d2);
      }
      function yt2(t3, e4) {
        var n3, i2 = [], o3 = [], s2 = _2[t3 + " "];
        if (!s2) {
          for (e4 || (e4 = ut2(t3)), n3 = e4.length; n3--; ) (s2 = gt2(e4[n3]))[y2] ? i2.push(s2) : o3.push(s2);
          (s2 = _2(t3, function(t4, e5) {
            var n4 = e5.length > 0, i3 = t4.length > 0, o4 = function(o5, s3, l3, u2, h3) {
              var d2, f3, m3, y3 = 0, x3 = "0", w3 = o5 && [], b3 = [], _3 = a2, T2 = o5 || i3 && r2.find.TAG("*", h3), S2 = v2 += null == _3 ? 1 : Math.random() || 0.1, D2 = T2.length;
              for (h3 && (a2 = s3 == c2 || s3 || h3); x3 !== D2 && null != (d2 = T2[x3]); x3++) {
                if (i3 && d2) {
                  for (f3 = 0, s3 || d2.ownerDocument == c2 || (lt2(d2), l3 = !p2); m3 = t4[f3++]; ) if (m3(d2, s3 || c2, l3)) {
                    g2.call(u2, d2);
                    break;
                  }
                  h3 && (v2 = S2);
                }
                n4 && ((d2 = !m3 && d2) && y3--, o5 && w3.push(d2));
              }
              if (y3 += x3, n4 && x3 !== y3) {
                for (f3 = 0; m3 = e5[f3++]; ) m3(w3, b3, s3, l3);
                if (o5) {
                  if (y3 > 0) for (; x3--; ) w3[x3] || b3[x3] || (b3[x3] = C.call(u2));
                  b3 = ft2(b3);
                }
                g2.apply(u2, b3), h3 && !o5 && b3.length > 0 && y3 + e5.length > 1 && M.uniqueSort(u2);
              }
              return h3 && (v2 = S2, a2 = _3), w3;
            };
            return n4 ? et2(o4) : o4;
          }(o3, i2))).selector = t3;
        }
        return s2;
      }
      function vt2(t3, e4, n3, i2) {
        var a3, o3, s2, l3, c3, u2 = "function" == typeof t3 && t3, h3 = !i2 && ut2(t3 = u2.selector || t3);
        if (n3 = n3 || [], 1 === h3.length) {
          if ((o3 = h3[0] = h3[0].slice(0)).length > 2 && "ID" === (s2 = o3[0]).type && 9 === e4.nodeType && p2 && r2.relative[o3[1].type]) {
            if (!(e4 = (r2.find.ID(s2.matches[0].replace(Y2, Z2), e4) || [])[0])) return n3;
            u2 && (e4 = e4.parentNode), t3 = t3.slice(o3.shift().value.length);
          }
          for (a3 = H2.needsContext.test(t3) ? 0 : o3.length; a3-- && (s2 = o3[a3], !r2.relative[l3 = s2.type]); ) if ((c3 = r2.find[l3]) && (i2 = c3(s2.matches[0].replace(Y2, Z2), X2.test(o3[0].type) && st2(e4.parentNode) || e4))) {
            if (o3.splice(a3, 1), !(t3 = i2.length && ht2(o3))) return g2.apply(n3, i2), n3;
            break;
          }
        }
        return (u2 || yt2(t3, h3))(i2, e4, !p2, n3, !e4 || X2.test(t3) && st2(e4.parentNode) || e4), n3;
      }
      ct2.prototype = r2.filters = r2.pseudos, r2.setFilters = new ct2(), d.sortStable = y2.split("").sort(P2).join("") === y2, lt2(), d.sortDetached = nt2(function(t3) {
        return 1 & t3.compareDocumentPosition(c2.createElement("fieldset"));
      }), M.find = Q2, M.expr[":"] = M.expr.pseudos, M.unique = M.uniqueSort, Q2.compile = yt2, Q2.select = vt2, Q2.setDocument = lt2, Q2.escape = M.escapeSelector, Q2.getText = M.text, Q2.isXML = M.isXMLDoc, Q2.selectors = M.expr, Q2.support = M.support, Q2.uniqueSort = M.uniqueSort;
    }();
    var I = function(t3, e3, n3) {
      for (var r2 = [], i2 = void 0 !== n3; (t3 = t3[e3]) && 9 !== t3.nodeType; ) if (1 === t3.nodeType) {
        if (i2 && M(t3).is(n3)) break;
        r2.push(t3);
      }
      return r2;
    }, k = function(t3, e3) {
      for (var n3 = []; t3; t3 = t3.nextSibling) 1 === t3.nodeType && t3 !== e3 && n3.push(t3);
      return n3;
    }, j = M.expr.match.needsContext, N = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function V(t3, e3, n3) {
      return f(e3) ? M.grep(t3, function(t4, r2) {
        return !!e3.call(t4, r2, t4) !== n3;
      }) : e3.nodeType ? M.grep(t3, function(t4) {
        return t4 === e3 !== n3;
      }) : "string" != typeof e3 ? M.grep(t3, function(t4) {
        return s.call(e3, t4) > -1 !== n3;
      }) : M.filter(e3, t3, n3);
    }
    M.filter = function(t3, e3, n3) {
      var r2 = e3[0];
      return n3 && (t3 = ":not(" + t3 + ")"), 1 === e3.length && 1 === r2.nodeType ? M.find.matchesSelector(r2, t3) ? [r2] : [] : M.find.matches(t3, M.grep(e3, function(t4) {
        return 1 === t4.nodeType;
      }));
    }, M.fn.extend({ find: function(t3) {
      var e3, n3, r2 = this.length, i2 = this;
      if ("string" != typeof t3) return this.pushStack(M(t3).filter(function() {
        for (e3 = 0; e3 < r2; e3++) if (M.contains(i2[e3], this)) return true;
      }));
      for (n3 = this.pushStack([]), e3 = 0; e3 < r2; e3++) M.find(t3, i2[e3], n3);
      return r2 > 1 ? M.uniqueSort(n3) : n3;
    }, filter: function(t3) {
      return this.pushStack(V(this, t3 || [], false));
    }, not: function(t3) {
      return this.pushStack(V(this, t3 || [], true));
    }, is: function(t3) {
      return !!V(this, "string" == typeof t3 && j.test(t3) ? M(t3) : t3 || [], false).length;
    } });
    var F, B = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    (M.fn.init = function(t3, e3, n3) {
      var r2, i2;
      if (!t3) return this;
      if (n3 = n3 || F, "string" == typeof t3) {
        if (!(r2 = "<" === t3[0] && ">" === t3[t3.length - 1] && t3.length >= 3 ? [null, t3, null] : B.exec(t3)) || !r2[1] && e3) return !e3 || e3.jquery ? (e3 || n3).find(t3) : this.constructor(e3).find(t3);
        if (r2[1]) {
          if (e3 = e3 instanceof M ? e3[0] : e3, M.merge(this, M.parseHTML(r2[1], e3 && e3.nodeType ? e3.ownerDocument || e3 : g, true)), N.test(r2[1]) && M.isPlainObject(e3)) for (r2 in e3) f(this[r2]) ? this[r2](e3[r2]) : this.attr(r2, e3[r2]);
          return this;
        }
        return (i2 = g.getElementById(r2[2])) && (this[0] = i2, this.length = 1), this;
      }
      return t3.nodeType ? (this[0] = t3, this.length = 1, this) : f(t3) ? void 0 !== n3.ready ? n3.ready(t3) : t3(M) : M.makeArray(t3, this);
    }).prototype = M.fn, F = M(g);
    var G = /^(?:parents|prev(?:Until|All))/, z = { children: true, contents: true, next: true, prev: true };
    function U(t3, e3) {
      for (; (t3 = t3[e3]) && 1 !== t3.nodeType; ) ;
      return t3;
    }
    M.fn.extend({ has: function(t3) {
      var e3 = M(t3, this), n3 = e3.length;
      return this.filter(function() {
        for (var t4 = 0; t4 < n3; t4++) if (M.contains(this, e3[t4])) return true;
      });
    }, closest: function(t3, e3) {
      var n3, r2 = 0, i2 = this.length, a2 = [], o2 = "string" != typeof t3 && M(t3);
      if (!j.test(t3)) {
        for (; r2 < i2; r2++) for (n3 = this[r2]; n3 && n3 !== e3; n3 = n3.parentNode) if (n3.nodeType < 11 && (o2 ? o2.index(n3) > -1 : 1 === n3.nodeType && M.find.matchesSelector(n3, t3))) {
          a2.push(n3);
          break;
        }
      }
      return this.pushStack(a2.length > 1 ? M.uniqueSort(a2) : a2);
    }, index: function(t3) {
      return t3 ? "string" == typeof t3 ? s.call(M(t3), this[0]) : s.call(this, t3.jquery ? t3[0] : t3) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
    }, add: function(t3, e3) {
      return this.pushStack(M.uniqueSort(M.merge(this.get(), M(t3, e3))));
    }, addBack: function(t3) {
      return this.add(null == t3 ? this.prevObject : this.prevObject.filter(t3));
    } }), M.each({ parent: function(t3) {
      var e3 = t3.parentNode;
      return e3 && 11 !== e3.nodeType ? e3 : null;
    }, parents: function(t3) {
      return I(t3, "parentNode");
    }, parentsUntil: function(t3, e3, n3) {
      return I(t3, "parentNode", n3);
    }, next: function(t3) {
      return U(t3, "nextSibling");
    }, prev: function(t3) {
      return U(t3, "previousSibling");
    }, nextAll: function(t3) {
      return I(t3, "nextSibling");
    }, prevAll: function(t3) {
      return I(t3, "previousSibling");
    }, nextUntil: function(t3, e3, n3) {
      return I(t3, "nextSibling", n3);
    }, prevUntil: function(t3, e3, n3) {
      return I(t3, "previousSibling", n3);
    }, siblings: function(t3) {
      return k((t3.parentNode || {}).firstChild, t3);
    }, children: function(t3) {
      return k(t3.firstChild);
    }, contents: function(t3) {
      return null != t3.contentDocument && r(t3.contentDocument) ? t3.contentDocument : (T(t3, "template") && (t3 = t3.content || t3), M.merge([], t3.childNodes));
    } }, function(t3, e3) {
      M.fn[t3] = function(n3, r2) {
        var i2 = M.map(this, e3, n3);
        return "Until" !== t3.slice(-5) && (r2 = n3), r2 && "string" == typeof r2 && (i2 = M.filter(r2, i2)), this.length > 1 && (z[t3] || M.uniqueSort(i2), G.test(t3) && i2.reverse()), this.pushStack(i2);
      };
    });
    var H = /[^\x20\t\r\n\f]+/g;
    function W(t3) {
      return t3;
    }
    function J(t3) {
      throw t3;
    }
    function q(t3, e3, n3, r2) {
      var i2;
      try {
        t3 && f(i2 = t3.promise) ? i2.call(t3).done(e3).fail(n3) : t3 && f(i2 = t3.then) ? i2.call(t3, e3, n3) : e3.apply(void 0, [t3].slice(r2));
      } catch (t4) {
        n3.apply(void 0, [t4]);
      }
    }
    M.Callbacks = function(t3) {
      t3 = "string" == typeof t3 ? function(t4) {
        var e4 = {};
        return M.each(t4.match(H) || [], function(t5, n4) {
          e4[n4] = true;
        }), e4;
      }(t3) : M.extend({}, t3);
      var e3, n3, r2, i2, a2 = [], o2 = [], s2 = -1, l2 = function() {
        for (i2 = i2 || t3.once, r2 = e3 = true; o2.length; s2 = -1) for (n3 = o2.shift(); ++s2 < a2.length; ) false === a2[s2].apply(n3[0], n3[1]) && t3.stopOnFalse && (s2 = a2.length, n3 = false);
        t3.memory || (n3 = false), e3 = false, i2 && (a2 = n3 ? [] : "");
      }, c2 = { add: function() {
        return a2 && (n3 && !e3 && (s2 = a2.length - 1, o2.push(n3)), function e4(n4) {
          M.each(n4, function(n5, r3) {
            f(r3) ? t3.unique && c2.has(r3) || a2.push(r3) : r3 && r3.length && "string" !== x(r3) && e4(r3);
          });
        }(arguments), n3 && !e3 && l2()), this;
      }, remove: function() {
        return M.each(arguments, function(t4, e4) {
          for (var n4; (n4 = M.inArray(e4, a2, n4)) > -1; ) a2.splice(n4, 1), n4 <= s2 && s2--;
        }), this;
      }, has: function(t4) {
        return t4 ? M.inArray(t4, a2) > -1 : a2.length > 0;
      }, empty: function() {
        return a2 && (a2 = []), this;
      }, disable: function() {
        return i2 = o2 = [], a2 = n3 = "", this;
      }, disabled: function() {
        return !a2;
      }, lock: function() {
        return i2 = o2 = [], n3 || e3 || (a2 = n3 = ""), this;
      }, locked: function() {
        return !!i2;
      }, fireWith: function(t4, n4) {
        return i2 || (n4 = [t4, (n4 = n4 || []).slice ? n4.slice() : n4], o2.push(n4), e3 || l2()), this;
      }, fire: function() {
        return c2.fireWith(this, arguments), this;
      }, fired: function() {
        return !!r2;
      } };
      return c2;
    }, M.extend({ Deferred: function(e3) {
      var n3 = [["notify", "progress", M.Callbacks("memory"), M.Callbacks("memory"), 2], ["resolve", "done", M.Callbacks("once memory"), M.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", M.Callbacks("once memory"), M.Callbacks("once memory"), 1, "rejected"]], r2 = "pending", i2 = { state: function() {
        return r2;
      }, always: function() {
        return a2.done(arguments).fail(arguments), this;
      }, catch: function(t3) {
        return i2.then(null, t3);
      }, pipe: function() {
        var t3 = arguments;
        return M.Deferred(function(e4) {
          M.each(n3, function(n4, r3) {
            var i3 = f(t3[r3[4]]) && t3[r3[4]];
            a2[r3[1]](function() {
              var t4 = i3 && i3.apply(this, arguments);
              t4 && f(t4.promise) ? t4.promise().progress(e4.notify).done(e4.resolve).fail(e4.reject) : e4[r3[0] + "With"](this, i3 ? [t4] : arguments);
            });
          }), t3 = null;
        }).promise();
      }, then: function(e4, r3, i3) {
        var a3 = 0;
        function o2(e5, n4, r4, i4) {
          return function() {
            var s2 = this, l2 = arguments, c2 = function() {
              var t3, c3;
              if (!(e5 < a3)) {
                if ((t3 = r4.apply(s2, l2)) === n4.promise()) throw new TypeError("Thenable self-resolution");
                c3 = t3 && ("object" == typeof t3 || "function" == typeof t3) && t3.then, f(c3) ? i4 ? c3.call(t3, o2(a3, n4, W, i4), o2(a3, n4, J, i4)) : (a3++, c3.call(t3, o2(a3, n4, W, i4), o2(a3, n4, J, i4), o2(a3, n4, W, n4.notifyWith))) : (r4 !== W && (s2 = void 0, l2 = [t3]), (i4 || n4.resolveWith)(s2, l2));
              }
            }, u2 = i4 ? c2 : function() {
              try {
                c2();
              } catch (t3) {
                M.Deferred.exceptionHook && M.Deferred.exceptionHook(t3, u2.error), e5 + 1 >= a3 && (r4 !== J && (s2 = void 0, l2 = [t3]), n4.rejectWith(s2, l2));
              }
            };
            e5 ? u2() : (M.Deferred.getErrorHook ? u2.error = M.Deferred.getErrorHook() : M.Deferred.getStackHook && (u2.error = M.Deferred.getStackHook()), t2.setTimeout(u2));
          };
        }
        return M.Deferred(function(t3) {
          n3[0][3].add(o2(0, t3, f(i3) ? i3 : W, t3.notifyWith)), n3[1][3].add(o2(0, t3, f(e4) ? e4 : W)), n3[2][3].add(o2(0, t3, f(r3) ? r3 : J));
        }).promise();
      }, promise: function(t3) {
        return null != t3 ? M.extend(t3, i2) : i2;
      } }, a2 = {};
      return M.each(n3, function(t3, e4) {
        var o2 = e4[2], s2 = e4[5];
        i2[e4[1]] = o2.add, s2 && o2.add(function() {
          r2 = s2;
        }, n3[3 - t3][2].disable, n3[3 - t3][3].disable, n3[0][2].lock, n3[0][3].lock), o2.add(e4[3].fire), a2[e4[0]] = function() {
          return a2[e4[0] + "With"](this === a2 ? void 0 : this, arguments), this;
        }, a2[e4[0] + "With"] = o2.fireWith;
      }), i2.promise(a2), e3 && e3.call(a2, a2), a2;
    }, when: function(t3) {
      var e3 = arguments.length, n3 = e3, r2 = Array(n3), a2 = i.call(arguments), o2 = M.Deferred(), s2 = function(t4) {
        return function(n4) {
          r2[t4] = this, a2[t4] = arguments.length > 1 ? i.call(arguments) : n4, --e3 || o2.resolveWith(r2, a2);
        };
      };
      if (e3 <= 1 && (q(t3, o2.done(s2(n3)).resolve, o2.reject, !e3), "pending" === o2.state() || f(a2[n3] && a2[n3].then))) return o2.then();
      for (; n3--; ) q(a2[n3], s2(n3), o2.reject);
      return o2.promise();
    } });
    var X = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    M.Deferred.exceptionHook = function(e3, n3) {
      t2.console && t2.console.warn && e3 && X.test(e3.name) && t2.console.warn("jQuery.Deferred exception: " + e3.message, e3.stack, n3);
    }, M.readyException = function(e3) {
      t2.setTimeout(function() {
        throw e3;
      });
    };
    var Y = M.Deferred();
    function Z() {
      g.removeEventListener("DOMContentLoaded", Z), t2.removeEventListener("load", Z), M.ready();
    }
    M.fn.ready = function(t3) {
      return Y.then(t3).catch(function(t4) {
        M.readyException(t4);
      }), this;
    }, M.extend({ isReady: false, readyWait: 1, ready: function(t3) {
      (true === t3 ? --M.readyWait : M.isReady) || (M.isReady = true, true !== t3 && --M.readyWait > 0 || Y.resolveWith(g, [M]));
    } }), M.ready.then = Y.then, "complete" === g.readyState || "loading" !== g.readyState && !g.documentElement.doScroll ? t2.setTimeout(M.ready) : (g.addEventListener("DOMContentLoaded", Z), t2.addEventListener("load", Z));
    var K = function(t3, e3, n3, r2, i2, a2, o2) {
      var s2 = 0, l2 = t3.length, c2 = null == n3;
      if ("object" === x(n3)) for (s2 in i2 = true, n3) K(t3, e3, s2, n3[s2], true, a2, o2);
      else if (void 0 !== r2 && (i2 = true, f(r2) || (o2 = true), c2 && (o2 ? (e3.call(t3, r2), e3 = null) : (c2 = e3, e3 = function(t4, e4, n4) {
        return c2.call(M(t4), n4);
      })), e3)) for (; s2 < l2; s2++) e3(t3[s2], n3, o2 ? r2 : r2.call(t3[s2], s2, e3(t3[s2], n3)));
      return i2 ? t3 : c2 ? e3.call(t3) : l2 ? e3(t3[0], n3) : a2;
    }, $2 = /^-ms-/, Q = /-([a-z])/g;
    function tt(t3, e3) {
      return e3.toUpperCase();
    }
    function et(t3) {
      return t3.replace($2, "ms-").replace(Q, tt);
    }
    var nt = function(t3) {
      return 1 === t3.nodeType || 9 === t3.nodeType || !+t3.nodeType;
    };
    function rt() {
      this.expando = M.expando + rt.uid++;
    }
    rt.uid = 1, rt.prototype = { cache: function(t3) {
      var e3 = t3[this.expando];
      return e3 || (e3 = {}, nt(t3) && (t3.nodeType ? t3[this.expando] = e3 : Object.defineProperty(t3, this.expando, { value: e3, configurable: true }))), e3;
    }, set: function(t3, e3, n3) {
      var r2, i2 = this.cache(t3);
      if ("string" == typeof e3) i2[et(e3)] = n3;
      else for (r2 in e3) i2[et(r2)] = e3[r2];
      return i2;
    }, get: function(t3, e3) {
      return void 0 === e3 ? this.cache(t3) : t3[this.expando] && t3[this.expando][et(e3)];
    }, access: function(t3, e3, n3) {
      return void 0 === e3 || e3 && "string" == typeof e3 && void 0 === n3 ? this.get(t3, e3) : (this.set(t3, e3, n3), void 0 !== n3 ? n3 : e3);
    }, remove: function(t3, e3) {
      var n3, r2 = t3[this.expando];
      if (void 0 !== r2) {
        if (void 0 !== e3) {
          n3 = (e3 = Array.isArray(e3) ? e3.map(et) : (e3 = et(e3)) in r2 ? [e3] : e3.match(H) || []).length;
          for (; n3--; ) delete r2[e3[n3]];
        }
        (void 0 === e3 || M.isEmptyObject(r2)) && (t3.nodeType ? t3[this.expando] = void 0 : delete t3[this.expando]);
      }
    }, hasData: function(t3) {
      var e3 = t3[this.expando];
      return void 0 !== e3 && !M.isEmptyObject(e3);
    } };
    var it = new rt(), at = new rt(), ot = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, st = /[A-Z]/g;
    function lt(t3, e3, n3) {
      var r2;
      if (void 0 === n3 && 1 === t3.nodeType) if (r2 = "data-" + e3.replace(st, "-$&").toLowerCase(), "string" == typeof (n3 = t3.getAttribute(r2))) {
        try {
          n3 = function(t4) {
            return "true" === t4 || "false" !== t4 && ("null" === t4 ? null : t4 === +t4 + "" ? +t4 : ot.test(t4) ? JSON.parse(t4) : t4);
          }(n3);
        } catch (t4) {
        }
        at.set(t3, e3, n3);
      } else n3 = void 0;
      return n3;
    }
    M.extend({ hasData: function(t3) {
      return at.hasData(t3) || it.hasData(t3);
    }, data: function(t3, e3, n3) {
      return at.access(t3, e3, n3);
    }, removeData: function(t3, e3) {
      at.remove(t3, e3);
    }, _data: function(t3, e3, n3) {
      return it.access(t3, e3, n3);
    }, _removeData: function(t3, e3) {
      it.remove(t3, e3);
    } }), M.fn.extend({ data: function(t3, e3) {
      var n3, r2, i2, a2 = this[0], o2 = a2 && a2.attributes;
      if (void 0 === t3) {
        if (this.length && (i2 = at.get(a2), 1 === a2.nodeType && !it.get(a2, "hasDataAttrs"))) {
          for (n3 = o2.length; n3--; ) o2[n3] && 0 === (r2 = o2[n3].name).indexOf("data-") && (r2 = et(r2.slice(5)), lt(a2, r2, i2[r2]));
          it.set(a2, "hasDataAttrs", true);
        }
        return i2;
      }
      return "object" == typeof t3 ? this.each(function() {
        at.set(this, t3);
      }) : K(this, function(e4) {
        var n4;
        if (a2 && void 0 === e4) return void 0 !== (n4 = at.get(a2, t3)) || void 0 !== (n4 = lt(a2, t3)) ? n4 : void 0;
        this.each(function() {
          at.set(this, t3, e4);
        });
      }, null, e3, arguments.length > 1, null, true);
    }, removeData: function(t3) {
      return this.each(function() {
        at.remove(this, t3);
      });
    } }), M.extend({ queue: function(t3, e3, n3) {
      var r2;
      if (t3) return e3 = (e3 || "fx") + "queue", r2 = it.get(t3, e3), n3 && (!r2 || Array.isArray(n3) ? r2 = it.access(t3, e3, M.makeArray(n3)) : r2.push(n3)), r2 || [];
    }, dequeue: function(t3, e3) {
      e3 = e3 || "fx";
      var n3 = M.queue(t3, e3), r2 = n3.length, i2 = n3.shift(), a2 = M._queueHooks(t3, e3);
      "inprogress" === i2 && (i2 = n3.shift(), r2--), i2 && ("fx" === e3 && n3.unshift("inprogress"), delete a2.stop, i2.call(t3, function() {
        M.dequeue(t3, e3);
      }, a2)), !r2 && a2 && a2.empty.fire();
    }, _queueHooks: function(t3, e3) {
      var n3 = e3 + "queueHooks";
      return it.get(t3, n3) || it.access(t3, n3, { empty: M.Callbacks("once memory").add(function() {
        it.remove(t3, [e3 + "queue", n3]);
      }) });
    } }), M.fn.extend({ queue: function(t3, e3) {
      var n3 = 2;
      return "string" != typeof t3 && (e3 = t3, t3 = "fx", n3--), arguments.length < n3 ? M.queue(this[0], t3) : void 0 === e3 ? this : this.each(function() {
        var n4 = M.queue(this, t3, e3);
        M._queueHooks(this, t3), "fx" === t3 && "inprogress" !== n4[0] && M.dequeue(this, t3);
      });
    }, dequeue: function(t3) {
      return this.each(function() {
        M.dequeue(this, t3);
      });
    }, clearQueue: function(t3) {
      return this.queue(t3 || "fx", []);
    }, promise: function(t3, e3) {
      var n3, r2 = 1, i2 = M.Deferred(), a2 = this, o2 = this.length, s2 = function() {
        --r2 || i2.resolveWith(a2, [a2]);
      };
      for ("string" != typeof t3 && (e3 = t3, t3 = void 0), t3 = t3 || "fx"; o2--; ) (n3 = it.get(a2[o2], t3 + "queueHooks")) && n3.empty && (r2++, n3.empty.add(s2));
      return s2(), i2.promise(e3);
    } });
    var ct = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, ut = new RegExp("^(?:([+-])=|)(" + ct + ")([a-z%]*)$", "i"), ht = ["Top", "Right", "Bottom", "Left"], pt = g.documentElement, dt = function(t3) {
      return M.contains(t3.ownerDocument, t3);
    }, ft = { composed: true };
    pt.getRootNode && (dt = function(t3) {
      return M.contains(t3.ownerDocument, t3) || t3.getRootNode(ft) === t3.ownerDocument;
    });
    var mt = function(t3, e3) {
      return "none" === (t3 = e3 || t3).style.display || "" === t3.style.display && dt(t3) && "none" === M.css(t3, "display");
    };
    function gt(t3, e3, n3, r2) {
      var i2, a2, o2 = 20, s2 = r2 ? function() {
        return r2.cur();
      } : function() {
        return M.css(t3, e3, "");
      }, l2 = s2(), c2 = n3 && n3[3] || (M.cssNumber[e3] ? "" : "px"), u2 = t3.nodeType && (M.cssNumber[e3] || "px" !== c2 && +l2) && ut.exec(M.css(t3, e3));
      if (u2 && u2[3] !== c2) {
        for (l2 /= 2, c2 = c2 || u2[3], u2 = +l2 || 1; o2--; ) M.style(t3, e3, u2 + c2), (1 - a2) * (1 - (a2 = s2() / l2 || 0.5)) <= 0 && (o2 = 0), u2 /= a2;
        u2 *= 2, M.style(t3, e3, u2 + c2), n3 = n3 || [];
      }
      return n3 && (u2 = +u2 || +l2 || 0, i2 = n3[1] ? u2 + (n3[1] + 1) * n3[2] : +n3[2], r2 && (r2.unit = c2, r2.start = u2, r2.end = i2)), i2;
    }
    var yt = {};
    function vt(t3) {
      var e3, n3 = t3.ownerDocument, r2 = t3.nodeName, i2 = yt[r2];
      return i2 || (e3 = n3.body.appendChild(n3.createElement(r2)), i2 = M.css(e3, "display"), e3.parentNode.removeChild(e3), "none" === i2 && (i2 = "block"), yt[r2] = i2, i2);
    }
    function xt(t3, e3) {
      for (var n3, r2, i2 = [], a2 = 0, o2 = t3.length; a2 < o2; a2++) (r2 = t3[a2]).style && (n3 = r2.style.display, e3 ? ("none" === n3 && (i2[a2] = it.get(r2, "display") || null, i2[a2] || (r2.style.display = "")), "" === r2.style.display && mt(r2) && (i2[a2] = vt(r2))) : "none" !== n3 && (i2[a2] = "none", it.set(r2, "display", n3)));
      for (a2 = 0; a2 < o2; a2++) null != i2[a2] && (t3[a2].style.display = i2[a2]);
      return t3;
    }
    M.fn.extend({ show: function() {
      return xt(this, true);
    }, hide: function() {
      return xt(this);
    }, toggle: function(t3) {
      return "boolean" == typeof t3 ? t3 ? this.show() : this.hide() : this.each(function() {
        mt(this) ? M(this).show() : M(this).hide();
      });
    } });
    var wt, bt, Mt = /^(?:checkbox|radio)$/i, _t = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, Tt = /^$|^module$|\/(?:java|ecma)script/i;
    wt = g.createDocumentFragment().appendChild(g.createElement("div")), (bt = g.createElement("input")).setAttribute("type", "radio"), bt.setAttribute("checked", "checked"), bt.setAttribute("name", "t"), wt.appendChild(bt), d.checkClone = wt.cloneNode(true).cloneNode(true).lastChild.checked, wt.innerHTML = "<textarea>x</textarea>", d.noCloneChecked = !!wt.cloneNode(true).lastChild.defaultValue, wt.innerHTML = "<option></option>", d.option = !!wt.lastChild;
    var Ct = { thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] };
    function St(t3, e3) {
      var n3;
      return n3 = void 0 !== t3.getElementsByTagName ? t3.getElementsByTagName(e3 || "*") : void 0 !== t3.querySelectorAll ? t3.querySelectorAll(e3 || "*") : [], void 0 === e3 || e3 && T(t3, e3) ? M.merge([t3], n3) : n3;
    }
    function Dt(t3, e3) {
      for (var n3 = 0, r2 = t3.length; n3 < r2; n3++) it.set(t3[n3], "globalEval", !e3 || it.get(e3[n3], "globalEval"));
    }
    Ct.tbody = Ct.tfoot = Ct.colgroup = Ct.caption = Ct.thead, Ct.th = Ct.td, d.option || (Ct.optgroup = Ct.option = [1, "<select multiple='multiple'>", "</select>"]);
    var Et = /<|&#?\w+;/;
    function Ot(t3, e3, n3, r2, i2) {
      for (var a2, o2, s2, l2, c2, u2, h2 = e3.createDocumentFragment(), p2 = [], d2 = 0, f2 = t3.length; d2 < f2; d2++) if ((a2 = t3[d2]) || 0 === a2) if ("object" === x(a2)) M.merge(p2, a2.nodeType ? [a2] : a2);
      else if (Et.test(a2)) {
        for (o2 = o2 || h2.appendChild(e3.createElement("div")), s2 = (_t.exec(a2) || ["", ""])[1].toLowerCase(), l2 = Ct[s2] || Ct._default, o2.innerHTML = l2[1] + M.htmlPrefilter(a2) + l2[2], u2 = l2[0]; u2--; ) o2 = o2.lastChild;
        M.merge(p2, o2.childNodes), (o2 = h2.firstChild).textContent = "";
      } else p2.push(e3.createTextNode(a2));
      for (h2.textContent = "", d2 = 0; a2 = p2[d2++]; ) if (r2 && M.inArray(a2, r2) > -1) i2 && i2.push(a2);
      else if (c2 = dt(a2), o2 = St(h2.appendChild(a2), "script"), c2 && Dt(o2), n3) for (u2 = 0; a2 = o2[u2++]; ) Tt.test(a2.type || "") && n3.push(a2);
      return h2;
    }
    var At = /^([^.]*)(?:\.(.+)|)/;
    function Pt() {
      return true;
    }
    function Rt() {
      return false;
    }
    function Lt(t3, e3, n3, r2, i2, a2) {
      var o2, s2;
      if ("object" == typeof e3) {
        for (s2 in "string" != typeof n3 && (r2 = r2 || n3, n3 = void 0), e3) Lt(t3, s2, n3, r2, e3[s2], a2);
        return t3;
      }
      if (null == r2 && null == i2 ? (i2 = n3, r2 = n3 = void 0) : null == i2 && ("string" == typeof n3 ? (i2 = r2, r2 = void 0) : (i2 = r2, r2 = n3, n3 = void 0)), false === i2) i2 = Rt;
      else if (!i2) return t3;
      return 1 === a2 && (o2 = i2, (i2 = function(t4) {
        return M().off(t4), o2.apply(this, arguments);
      }).guid = o2.guid || (o2.guid = M.guid++)), t3.each(function() {
        M.event.add(this, e3, i2, r2, n3);
      });
    }
    function It(t3, e3, n3) {
      n3 ? (it.set(t3, e3, false), M.event.add(t3, e3, { namespace: false, handler: function(t4) {
        var n4, r2 = it.get(this, e3);
        if (1 & t4.isTrigger && this[e3]) {
          if (r2) (M.event.special[e3] || {}).delegateType && t4.stopPropagation();
          else if (r2 = i.call(arguments), it.set(this, e3, r2), this[e3](), n4 = it.get(this, e3), it.set(this, e3, false), r2 !== n4) return t4.stopImmediatePropagation(), t4.preventDefault(), n4;
        } else r2 && (it.set(this, e3, M.event.trigger(r2[0], r2.slice(1), this)), t4.stopPropagation(), t4.isImmediatePropagationStopped = Pt);
      } })) : void 0 === it.get(t3, e3) && M.event.add(t3, e3, Pt);
    }
    M.event = { global: {}, add: function(t3, e3, n3, r2, i2) {
      var a2, o2, s2, l2, c2, u2, h2, p2, d2, f2, m2, g2 = it.get(t3);
      if (nt(t3)) for (n3.handler && (n3 = (a2 = n3).handler, i2 = a2.selector), i2 && M.find.matchesSelector(pt, i2), n3.guid || (n3.guid = M.guid++), (l2 = g2.events) || (l2 = g2.events = /* @__PURE__ */ Object.create(null)), (o2 = g2.handle) || (o2 = g2.handle = function(e4) {
        return void 0 !== M && M.event.triggered !== e4.type ? M.event.dispatch.apply(t3, arguments) : void 0;
      }), c2 = (e3 = (e3 || "").match(H) || [""]).length; c2--; ) d2 = m2 = (s2 = At.exec(e3[c2]) || [])[1], f2 = (s2[2] || "").split(".").sort(), d2 && (h2 = M.event.special[d2] || {}, d2 = (i2 ? h2.delegateType : h2.bindType) || d2, h2 = M.event.special[d2] || {}, u2 = M.extend({ type: d2, origType: m2, data: r2, handler: n3, guid: n3.guid, selector: i2, needsContext: i2 && M.expr.match.needsContext.test(i2), namespace: f2.join(".") }, a2), (p2 = l2[d2]) || ((p2 = l2[d2] = []).delegateCount = 0, h2.setup && false !== h2.setup.call(t3, r2, f2, o2) || t3.addEventListener && t3.addEventListener(d2, o2)), h2.add && (h2.add.call(t3, u2), u2.handler.guid || (u2.handler.guid = n3.guid)), i2 ? p2.splice(p2.delegateCount++, 0, u2) : p2.push(u2), M.event.global[d2] = true);
    }, remove: function(t3, e3, n3, r2, i2) {
      var a2, o2, s2, l2, c2, u2, h2, p2, d2, f2, m2, g2 = it.hasData(t3) && it.get(t3);
      if (g2 && (l2 = g2.events)) {
        for (c2 = (e3 = (e3 || "").match(H) || [""]).length; c2--; ) if (d2 = m2 = (s2 = At.exec(e3[c2]) || [])[1], f2 = (s2[2] || "").split(".").sort(), d2) {
          for (h2 = M.event.special[d2] || {}, p2 = l2[d2 = (r2 ? h2.delegateType : h2.bindType) || d2] || [], s2 = s2[2] && new RegExp("(^|\\.)" + f2.join("\\.(?:.*\\.|)") + "(\\.|$)"), o2 = a2 = p2.length; a2--; ) u2 = p2[a2], !i2 && m2 !== u2.origType || n3 && n3.guid !== u2.guid || s2 && !s2.test(u2.namespace) || r2 && r2 !== u2.selector && ("**" !== r2 || !u2.selector) || (p2.splice(a2, 1), u2.selector && p2.delegateCount--, h2.remove && h2.remove.call(t3, u2));
          o2 && !p2.length && (h2.teardown && false !== h2.teardown.call(t3, f2, g2.handle) || M.removeEvent(t3, d2, g2.handle), delete l2[d2]);
        } else for (d2 in l2) M.event.remove(t3, d2 + e3[c2], n3, r2, true);
        M.isEmptyObject(l2) && it.remove(t3, "handle events");
      }
    }, dispatch: function(t3) {
      var e3, n3, r2, i2, a2, o2, s2 = new Array(arguments.length), l2 = M.event.fix(t3), c2 = (it.get(this, "events") || /* @__PURE__ */ Object.create(null))[l2.type] || [], u2 = M.event.special[l2.type] || {};
      for (s2[0] = l2, e3 = 1; e3 < arguments.length; e3++) s2[e3] = arguments[e3];
      if (l2.delegateTarget = this, !u2.preDispatch || false !== u2.preDispatch.call(this, l2)) {
        for (o2 = M.event.handlers.call(this, l2, c2), e3 = 0; (i2 = o2[e3++]) && !l2.isPropagationStopped(); ) for (l2.currentTarget = i2.elem, n3 = 0; (a2 = i2.handlers[n3++]) && !l2.isImmediatePropagationStopped(); ) l2.rnamespace && false !== a2.namespace && !l2.rnamespace.test(a2.namespace) || (l2.handleObj = a2, l2.data = a2.data, void 0 !== (r2 = ((M.event.special[a2.origType] || {}).handle || a2.handler).apply(i2.elem, s2)) && false === (l2.result = r2) && (l2.preventDefault(), l2.stopPropagation()));
        return u2.postDispatch && u2.postDispatch.call(this, l2), l2.result;
      }
    }, handlers: function(t3, e3) {
      var n3, r2, i2, a2, o2, s2 = [], l2 = e3.delegateCount, c2 = t3.target;
      if (l2 && c2.nodeType && !("click" === t3.type && t3.button >= 1)) {
        for (; c2 !== this; c2 = c2.parentNode || this) if (1 === c2.nodeType && ("click" !== t3.type || true !== c2.disabled)) {
          for (a2 = [], o2 = {}, n3 = 0; n3 < l2; n3++) void 0 === o2[i2 = (r2 = e3[n3]).selector + " "] && (o2[i2] = r2.needsContext ? M(i2, this).index(c2) > -1 : M.find(i2, this, null, [c2]).length), o2[i2] && a2.push(r2);
          a2.length && s2.push({ elem: c2, handlers: a2 });
        }
      }
      return c2 = this, l2 < e3.length && s2.push({ elem: c2, handlers: e3.slice(l2) }), s2;
    }, addProp: function(t3, e3) {
      Object.defineProperty(M.Event.prototype, t3, { enumerable: true, configurable: true, get: f(e3) ? function() {
        if (this.originalEvent) return e3(this.originalEvent);
      } : function() {
        if (this.originalEvent) return this.originalEvent[t3];
      }, set: function(e4) {
        Object.defineProperty(this, t3, { enumerable: true, configurable: true, writable: true, value: e4 });
      } });
    }, fix: function(t3) {
      return t3[M.expando] ? t3 : new M.Event(t3);
    }, special: { load: { noBubble: true }, click: { setup: function(t3) {
      var e3 = this || t3;
      return Mt.test(e3.type) && e3.click && T(e3, "input") && It(e3, "click", true), false;
    }, trigger: function(t3) {
      var e3 = this || t3;
      return Mt.test(e3.type) && e3.click && T(e3, "input") && It(e3, "click"), true;
    }, _default: function(t3) {
      var e3 = t3.target;
      return Mt.test(e3.type) && e3.click && T(e3, "input") && it.get(e3, "click") || T(e3, "a");
    } }, beforeunload: { postDispatch: function(t3) {
      void 0 !== t3.result && t3.originalEvent && (t3.originalEvent.returnValue = t3.result);
    } } } }, M.removeEvent = function(t3, e3, n3) {
      t3.removeEventListener && t3.removeEventListener(e3, n3);
    }, M.Event = function(t3, e3) {
      if (!(this instanceof M.Event)) return new M.Event(t3, e3);
      t3 && t3.type ? (this.originalEvent = t3, this.type = t3.type, this.isDefaultPrevented = t3.defaultPrevented || void 0 === t3.defaultPrevented && false === t3.returnValue ? Pt : Rt, this.target = t3.target && 3 === t3.target.nodeType ? t3.target.parentNode : t3.target, this.currentTarget = t3.currentTarget, this.relatedTarget = t3.relatedTarget) : this.type = t3, e3 && M.extend(this, e3), this.timeStamp = t3 && t3.timeStamp || Date.now(), this[M.expando] = true;
    }, M.Event.prototype = { constructor: M.Event, isDefaultPrevented: Rt, isPropagationStopped: Rt, isImmediatePropagationStopped: Rt, isSimulated: false, preventDefault: function() {
      var t3 = this.originalEvent;
      this.isDefaultPrevented = Pt, t3 && !this.isSimulated && t3.preventDefault();
    }, stopPropagation: function() {
      var t3 = this.originalEvent;
      this.isPropagationStopped = Pt, t3 && !this.isSimulated && t3.stopPropagation();
    }, stopImmediatePropagation: function() {
      var t3 = this.originalEvent;
      this.isImmediatePropagationStopped = Pt, t3 && !this.isSimulated && t3.stopImmediatePropagation(), this.stopPropagation();
    } }, M.each({ altKey: true, bubbles: true, cancelable: true, changedTouches: true, ctrlKey: true, detail: true, eventPhase: true, metaKey: true, pageX: true, pageY: true, shiftKey: true, view: true, char: true, code: true, charCode: true, key: true, keyCode: true, button: true, buttons: true, clientX: true, clientY: true, offsetX: true, offsetY: true, pointerId: true, pointerType: true, screenX: true, screenY: true, targetTouches: true, toElement: true, touches: true, which: true }, M.event.addProp), M.each({ focus: "focusin", blur: "focusout" }, function(t3, e3) {
      function n3(t4) {
        if (g.documentMode) {
          var n4 = it.get(this, "handle"), r2 = M.event.fix(t4);
          r2.type = "focusin" === t4.type ? "focus" : "blur", r2.isSimulated = true, n4(t4), r2.target === r2.currentTarget && n4(r2);
        } else M.event.simulate(e3, t4.target, M.event.fix(t4));
      }
      M.event.special[t3] = { setup: function() {
        var r2;
        if (It(this, t3, true), !g.documentMode) return false;
        (r2 = it.get(this, e3)) || this.addEventListener(e3, n3), it.set(this, e3, (r2 || 0) + 1);
      }, trigger: function() {
        return It(this, t3), true;
      }, teardown: function() {
        var t4;
        if (!g.documentMode) return false;
        (t4 = it.get(this, e3) - 1) ? it.set(this, e3, t4) : (this.removeEventListener(e3, n3), it.remove(this, e3));
      }, _default: function(e4) {
        return it.get(e4.target, t3);
      }, delegateType: e3 }, M.event.special[e3] = { setup: function() {
        var r2 = this.ownerDocument || this.document || this, i2 = g.documentMode ? this : r2, a2 = it.get(i2, e3);
        a2 || (g.documentMode ? this.addEventListener(e3, n3) : r2.addEventListener(t3, n3, true)), it.set(i2, e3, (a2 || 0) + 1);
      }, teardown: function() {
        var r2 = this.ownerDocument || this.document || this, i2 = g.documentMode ? this : r2, a2 = it.get(i2, e3) - 1;
        a2 ? it.set(i2, e3, a2) : (g.documentMode ? this.removeEventListener(e3, n3) : r2.removeEventListener(t3, n3, true), it.remove(i2, e3));
      } };
    }), M.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function(t3, e3) {
      M.event.special[t3] = { delegateType: e3, bindType: e3, handle: function(t4) {
        var n3, r2 = t4.relatedTarget, i2 = t4.handleObj;
        return r2 && (r2 === this || M.contains(this, r2)) || (t4.type = i2.origType, n3 = i2.handler.apply(this, arguments), t4.type = e3), n3;
      } };
    }), M.fn.extend({ on: function(t3, e3, n3, r2) {
      return Lt(this, t3, e3, n3, r2);
    }, one: function(t3, e3, n3, r2) {
      return Lt(this, t3, e3, n3, r2, 1);
    }, off: function(t3, e3, n3) {
      var r2, i2;
      if (t3 && t3.preventDefault && t3.handleObj) return r2 = t3.handleObj, M(t3.delegateTarget).off(r2.namespace ? r2.origType + "." + r2.namespace : r2.origType, r2.selector, r2.handler), this;
      if ("object" == typeof t3) {
        for (i2 in t3) this.off(i2, e3, t3[i2]);
        return this;
      }
      return false !== e3 && "function" != typeof e3 || (n3 = e3, e3 = void 0), false === n3 && (n3 = Rt), this.each(function() {
        M.event.remove(this, t3, n3, e3);
      });
    } });
    var kt = /<script|<style|<link/i, jt = /checked\s*(?:[^=]|=\s*.checked.)/i, Nt = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function Vt(t3, e3) {
      return T(t3, "table") && T(11 !== e3.nodeType ? e3 : e3.firstChild, "tr") && M(t3).children("tbody")[0] || t3;
    }
    function Ft(t3) {
      return t3.type = (null !== t3.getAttribute("type")) + "/" + t3.type, t3;
    }
    function Bt(t3) {
      return "true/" === (t3.type || "").slice(0, 5) ? t3.type = t3.type.slice(5) : t3.removeAttribute("type"), t3;
    }
    function Gt(t3, e3) {
      var n3, r2, i2, a2, o2, s2;
      if (1 === e3.nodeType) {
        if (it.hasData(t3) && (s2 = it.get(t3).events)) for (i2 in it.remove(e3, "handle events"), s2) for (n3 = 0, r2 = s2[i2].length; n3 < r2; n3++) M.event.add(e3, i2, s2[i2][n3]);
        at.hasData(t3) && (a2 = at.access(t3), o2 = M.extend({}, a2), at.set(e3, o2));
      }
    }
    function zt(t3, e3) {
      var n3 = e3.nodeName.toLowerCase();
      "input" === n3 && Mt.test(t3.type) ? e3.checked = t3.checked : "input" !== n3 && "textarea" !== n3 || (e3.defaultValue = t3.defaultValue);
    }
    function Ut(t3, e3, n3, r2) {
      e3 = a(e3);
      var i2, o2, s2, l2, c2, u2, h2 = 0, p2 = t3.length, m2 = p2 - 1, g2 = e3[0], y2 = f(g2);
      if (y2 || p2 > 1 && "string" == typeof g2 && !d.checkClone && jt.test(g2)) return t3.each(function(i3) {
        var a2 = t3.eq(i3);
        y2 && (e3[0] = g2.call(this, i3, a2.html())), Ut(a2, e3, n3, r2);
      });
      if (p2 && (o2 = (i2 = Ot(e3, t3[0].ownerDocument, false, t3, r2)).firstChild, 1 === i2.childNodes.length && (i2 = o2), o2 || r2)) {
        for (l2 = (s2 = M.map(St(i2, "script"), Ft)).length; h2 < p2; h2++) c2 = i2, h2 !== m2 && (c2 = M.clone(c2, true, true), l2 && M.merge(s2, St(c2, "script"))), n3.call(t3[h2], c2, h2);
        if (l2) for (u2 = s2[s2.length - 1].ownerDocument, M.map(s2, Bt), h2 = 0; h2 < l2; h2++) c2 = s2[h2], Tt.test(c2.type || "") && !it.access(c2, "globalEval") && M.contains(u2, c2) && (c2.src && "module" !== (c2.type || "").toLowerCase() ? M._evalUrl && !c2.noModule && M._evalUrl(c2.src, { nonce: c2.nonce || c2.getAttribute("nonce") }, u2) : v(c2.textContent.replace(Nt, ""), c2, u2));
      }
      return t3;
    }
    function Ht(t3, e3, n3) {
      for (var r2, i2 = e3 ? M.filter(e3, t3) : t3, a2 = 0; null != (r2 = i2[a2]); a2++) n3 || 1 !== r2.nodeType || M.cleanData(St(r2)), r2.parentNode && (n3 && dt(r2) && Dt(St(r2, "script")), r2.parentNode.removeChild(r2));
      return t3;
    }
    M.extend({ htmlPrefilter: function(t3) {
      return t3;
    }, clone: function(t3, e3, n3) {
      var r2, i2, a2, o2, s2 = t3.cloneNode(true), l2 = dt(t3);
      if (!(d.noCloneChecked || 1 !== t3.nodeType && 11 !== t3.nodeType || M.isXMLDoc(t3))) for (o2 = St(s2), r2 = 0, i2 = (a2 = St(t3)).length; r2 < i2; r2++) zt(a2[r2], o2[r2]);
      if (e3) if (n3) for (a2 = a2 || St(t3), o2 = o2 || St(s2), r2 = 0, i2 = a2.length; r2 < i2; r2++) Gt(a2[r2], o2[r2]);
      else Gt(t3, s2);
      return (o2 = St(s2, "script")).length > 0 && Dt(o2, !l2 && St(t3, "script")), s2;
    }, cleanData: function(t3) {
      for (var e3, n3, r2, i2 = M.event.special, a2 = 0; void 0 !== (n3 = t3[a2]); a2++) if (nt(n3)) {
        if (e3 = n3[it.expando]) {
          if (e3.events) for (r2 in e3.events) i2[r2] ? M.event.remove(n3, r2) : M.removeEvent(n3, r2, e3.handle);
          n3[it.expando] = void 0;
        }
        n3[at.expando] && (n3[at.expando] = void 0);
      }
    } }), M.fn.extend({ detach: function(t3) {
      return Ht(this, t3, true);
    }, remove: function(t3) {
      return Ht(this, t3);
    }, text: function(t3) {
      return K(this, function(t4) {
        return void 0 === t4 ? M.text(this) : this.empty().each(function() {
          1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = t4);
        });
      }, null, t3, arguments.length);
    }, append: function() {
      return Ut(this, arguments, function(t3) {
        1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || Vt(this, t3).appendChild(t3);
      });
    }, prepend: function() {
      return Ut(this, arguments, function(t3) {
        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
          var e3 = Vt(this, t3);
          e3.insertBefore(t3, e3.firstChild);
        }
      });
    }, before: function() {
      return Ut(this, arguments, function(t3) {
        this.parentNode && this.parentNode.insertBefore(t3, this);
      });
    }, after: function() {
      return Ut(this, arguments, function(t3) {
        this.parentNode && this.parentNode.insertBefore(t3, this.nextSibling);
      });
    }, empty: function() {
      for (var t3, e3 = 0; null != (t3 = this[e3]); e3++) 1 === t3.nodeType && (M.cleanData(St(t3, false)), t3.textContent = "");
      return this;
    }, clone: function(t3, e3) {
      return t3 = null != t3 && t3, e3 = null == e3 ? t3 : e3, this.map(function() {
        return M.clone(this, t3, e3);
      });
    }, html: function(t3) {
      return K(this, function(t4) {
        var e3 = this[0] || {}, n3 = 0, r2 = this.length;
        if (void 0 === t4 && 1 === e3.nodeType) return e3.innerHTML;
        if ("string" == typeof t4 && !kt.test(t4) && !Ct[(_t.exec(t4) || ["", ""])[1].toLowerCase()]) {
          t4 = M.htmlPrefilter(t4);
          try {
            for (; n3 < r2; n3++) 1 === (e3 = this[n3] || {}).nodeType && (M.cleanData(St(e3, false)), e3.innerHTML = t4);
            e3 = 0;
          } catch (t5) {
          }
        }
        e3 && this.empty().append(t4);
      }, null, t3, arguments.length);
    }, replaceWith: function() {
      var t3 = [];
      return Ut(this, arguments, function(e3) {
        var n3 = this.parentNode;
        M.inArray(this, t3) < 0 && (M.cleanData(St(this)), n3 && n3.replaceChild(e3, this));
      }, t3);
    } }), M.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function(t3, e3) {
      M.fn[t3] = function(t4) {
        for (var n3, r2 = [], i2 = M(t4), a2 = i2.length - 1, s2 = 0; s2 <= a2; s2++) n3 = s2 === a2 ? this : this.clone(true), M(i2[s2])[e3](n3), o.apply(r2, n3.get());
        return this.pushStack(r2);
      };
    });
    var Wt = new RegExp("^(" + ct + ")(?!px)[a-z%]+$", "i"), Jt = /^--/, qt = function(e3) {
      var n3 = e3.ownerDocument.defaultView;
      return n3 && n3.opener || (n3 = t2), n3.getComputedStyle(e3);
    }, Xt = function(t3, e3, n3) {
      var r2, i2, a2 = {};
      for (i2 in e3) a2[i2] = t3.style[i2], t3.style[i2] = e3[i2];
      for (i2 in r2 = n3.call(t3), e3) t3.style[i2] = a2[i2];
      return r2;
    }, Yt = new RegExp(ht.join("|"), "i");
    function Zt(t3, e3, n3) {
      var r2, i2, a2, o2, s2 = Jt.test(e3), l2 = t3.style;
      return (n3 = n3 || qt(t3)) && (o2 = n3.getPropertyValue(e3) || n3[e3], s2 && o2 && (o2 = o2.replace(O, "$1") || void 0), "" !== o2 || dt(t3) || (o2 = M.style(t3, e3)), !d.pixelBoxStyles() && Wt.test(o2) && Yt.test(e3) && (r2 = l2.width, i2 = l2.minWidth, a2 = l2.maxWidth, l2.minWidth = l2.maxWidth = l2.width = o2, o2 = n3.width, l2.width = r2, l2.minWidth = i2, l2.maxWidth = a2)), void 0 !== o2 ? o2 + "" : o2;
    }
    function Kt(t3, e3) {
      return { get: function() {
        if (!t3()) return (this.get = e3).apply(this, arguments);
        delete this.get;
      } };
    }
    !function() {
      function e3() {
        if (u2) {
          c2.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", u2.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", pt.appendChild(c2).appendChild(u2);
          var e4 = t2.getComputedStyle(u2);
          r2 = "1%" !== e4.top, l2 = 12 === n3(e4.marginLeft), u2.style.right = "60%", o2 = 36 === n3(e4.right), i2 = 36 === n3(e4.width), u2.style.position = "absolute", a2 = 12 === n3(u2.offsetWidth / 3), pt.removeChild(c2), u2 = null;
        }
      }
      function n3(t3) {
        return Math.round(parseFloat(t3));
      }
      var r2, i2, a2, o2, s2, l2, c2 = g.createElement("div"), u2 = g.createElement("div");
      u2.style && (u2.style.backgroundClip = "content-box", u2.cloneNode(true).style.backgroundClip = "", d.clearCloneStyle = "content-box" === u2.style.backgroundClip, M.extend(d, { boxSizingReliable: function() {
        return e3(), i2;
      }, pixelBoxStyles: function() {
        return e3(), o2;
      }, pixelPosition: function() {
        return e3(), r2;
      }, reliableMarginLeft: function() {
        return e3(), l2;
      }, scrollboxSize: function() {
        return e3(), a2;
      }, reliableTrDimensions: function() {
        var e4, n4, r3, i3;
        return null == s2 && (e4 = g.createElement("table"), n4 = g.createElement("tr"), r3 = g.createElement("div"), e4.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", n4.style.cssText = "border:1px solid", n4.style.height = "1px", r3.style.height = "9px", r3.style.display = "block", pt.appendChild(e4).appendChild(n4).appendChild(r3), i3 = t2.getComputedStyle(n4), s2 = parseInt(i3.height, 10) + parseInt(i3.borderTopWidth, 10) + parseInt(i3.borderBottomWidth, 10) === n4.offsetHeight, pt.removeChild(e4)), s2;
      } }));
    }();
    var $t = ["Webkit", "Moz", "ms"], Qt = g.createElement("div").style, te = {};
    function ee(t3) {
      return M.cssProps[t3] || te[t3] || (t3 in Qt ? t3 : te[t3] = function(t4) {
        for (var e3 = t4[0].toUpperCase() + t4.slice(1), n3 = $t.length; n3--; ) if ((t4 = $t[n3] + e3) in Qt) return t4;
      }(t3) || t3);
    }
    var ne = /^(none|table(?!-c[ea]).+)/, re = { position: "absolute", visibility: "hidden", display: "block" }, ie = { letterSpacing: "0", fontWeight: "400" };
    function ae(t3, e3, n3) {
      var r2 = ut.exec(e3);
      return r2 ? Math.max(0, r2[2] - (n3 || 0)) + (r2[3] || "px") : e3;
    }
    function oe(t3, e3, n3, r2, i2, a2) {
      var o2 = "width" === e3 ? 1 : 0, s2 = 0, l2 = 0, c2 = 0;
      if (n3 === (r2 ? "border" : "content")) return 0;
      for (; o2 < 4; o2 += 2) "margin" === n3 && (c2 += M.css(t3, n3 + ht[o2], true, i2)), r2 ? ("content" === n3 && (l2 -= M.css(t3, "padding" + ht[o2], true, i2)), "margin" !== n3 && (l2 -= M.css(t3, "border" + ht[o2] + "Width", true, i2))) : (l2 += M.css(t3, "padding" + ht[o2], true, i2), "padding" !== n3 ? l2 += M.css(t3, "border" + ht[o2] + "Width", true, i2) : s2 += M.css(t3, "border" + ht[o2] + "Width", true, i2));
      return !r2 && a2 >= 0 && (l2 += Math.max(0, Math.ceil(t3["offset" + e3[0].toUpperCase() + e3.slice(1)] - a2 - l2 - s2 - 0.5)) || 0), l2 + c2;
    }
    function se(t3, e3, n3) {
      var r2 = qt(t3), i2 = (!d.boxSizingReliable() || n3) && "border-box" === M.css(t3, "boxSizing", false, r2), a2 = i2, o2 = Zt(t3, e3, r2), s2 = "offset" + e3[0].toUpperCase() + e3.slice(1);
      if (Wt.test(o2)) {
        if (!n3) return o2;
        o2 = "auto";
      }
      return (!d.boxSizingReliable() && i2 || !d.reliableTrDimensions() && T(t3, "tr") || "auto" === o2 || !parseFloat(o2) && "inline" === M.css(t3, "display", false, r2)) && t3.getClientRects().length && (i2 = "border-box" === M.css(t3, "boxSizing", false, r2), (a2 = s2 in t3) && (o2 = t3[s2])), (o2 = parseFloat(o2) || 0) + oe(t3, e3, n3 || (i2 ? "border" : "content"), a2, r2, o2) + "px";
    }
    function le(t3, e3, n3, r2, i2) {
      return new le.prototype.init(t3, e3, n3, r2, i2);
    }
    M.extend({ cssHooks: { opacity: { get: function(t3, e3) {
      if (e3) {
        var n3 = Zt(t3, "opacity");
        return "" === n3 ? "1" : n3;
      }
    } } }, cssNumber: { animationIterationCount: true, aspectRatio: true, borderImageSlice: true, columnCount: true, flexGrow: true, flexShrink: true, fontWeight: true, gridArea: true, gridColumn: true, gridColumnEnd: true, gridColumnStart: true, gridRow: true, gridRowEnd: true, gridRowStart: true, lineHeight: true, opacity: true, order: true, orphans: true, scale: true, widows: true, zIndex: true, zoom: true, fillOpacity: true, floodOpacity: true, stopOpacity: true, strokeMiterlimit: true, strokeOpacity: true }, cssProps: {}, style: function(t3, e3, n3, r2) {
      if (t3 && 3 !== t3.nodeType && 8 !== t3.nodeType && t3.style) {
        var i2, a2, o2, s2 = et(e3), l2 = Jt.test(e3), c2 = t3.style;
        if (l2 || (e3 = ee(s2)), o2 = M.cssHooks[e3] || M.cssHooks[s2], void 0 === n3) return o2 && "get" in o2 && void 0 !== (i2 = o2.get(t3, false, r2)) ? i2 : c2[e3];
        "string" == (a2 = typeof n3) && (i2 = ut.exec(n3)) && i2[1] && (n3 = gt(t3, e3, i2), a2 = "number"), null != n3 && n3 == n3 && ("number" !== a2 || l2 || (n3 += i2 && i2[3] || (M.cssNumber[s2] ? "" : "px")), d.clearCloneStyle || "" !== n3 || 0 !== e3.indexOf("background") || (c2[e3] = "inherit"), o2 && "set" in o2 && void 0 === (n3 = o2.set(t3, n3, r2)) || (l2 ? c2.setProperty(e3, n3) : c2[e3] = n3));
      }
    }, css: function(t3, e3, n3, r2) {
      var i2, a2, o2, s2 = et(e3);
      return Jt.test(e3) || (e3 = ee(s2)), (o2 = M.cssHooks[e3] || M.cssHooks[s2]) && "get" in o2 && (i2 = o2.get(t3, true, n3)), void 0 === i2 && (i2 = Zt(t3, e3, r2)), "normal" === i2 && e3 in ie && (i2 = ie[e3]), "" === n3 || n3 ? (a2 = parseFloat(i2), true === n3 || isFinite(a2) ? a2 || 0 : i2) : i2;
    } }), M.each(["height", "width"], function(t3, e3) {
      M.cssHooks[e3] = { get: function(t4, n3, r2) {
        if (n3) return !ne.test(M.css(t4, "display")) || t4.getClientRects().length && t4.getBoundingClientRect().width ? se(t4, e3, r2) : Xt(t4, re, function() {
          return se(t4, e3, r2);
        });
      }, set: function(t4, n3, r2) {
        var i2, a2 = qt(t4), o2 = !d.scrollboxSize() && "absolute" === a2.position, s2 = (o2 || r2) && "border-box" === M.css(t4, "boxSizing", false, a2), l2 = r2 ? oe(t4, e3, r2, s2, a2) : 0;
        return s2 && o2 && (l2 -= Math.ceil(t4["offset" + e3[0].toUpperCase() + e3.slice(1)] - parseFloat(a2[e3]) - oe(t4, e3, "border", false, a2) - 0.5)), l2 && (i2 = ut.exec(n3)) && "px" !== (i2[3] || "px") && (t4.style[e3] = n3, n3 = M.css(t4, e3)), ae(0, n3, l2);
      } };
    }), M.cssHooks.marginLeft = Kt(d.reliableMarginLeft, function(t3, e3) {
      if (e3) return (parseFloat(Zt(t3, "marginLeft")) || t3.getBoundingClientRect().left - Xt(t3, { marginLeft: 0 }, function() {
        return t3.getBoundingClientRect().left;
      })) + "px";
    }), M.each({ margin: "", padding: "", border: "Width" }, function(t3, e3) {
      M.cssHooks[t3 + e3] = { expand: function(n3) {
        for (var r2 = 0, i2 = {}, a2 = "string" == typeof n3 ? n3.split(" ") : [n3]; r2 < 4; r2++) i2[t3 + ht[r2] + e3] = a2[r2] || a2[r2 - 2] || a2[0];
        return i2;
      } }, "margin" !== t3 && (M.cssHooks[t3 + e3].set = ae);
    }), M.fn.extend({ css: function(t3, e3) {
      return K(this, function(t4, e4, n3) {
        var r2, i2, a2 = {}, o2 = 0;
        if (Array.isArray(e4)) {
          for (r2 = qt(t4), i2 = e4.length; o2 < i2; o2++) a2[e4[o2]] = M.css(t4, e4[o2], false, r2);
          return a2;
        }
        return void 0 !== n3 ? M.style(t4, e4, n3) : M.css(t4, e4);
      }, t3, e3, arguments.length > 1);
    } }), M.Tween = le, le.prototype = { constructor: le, init: function(t3, e3, n3, r2, i2, a2) {
      this.elem = t3, this.prop = n3, this.easing = i2 || M.easing._default, this.options = e3, this.start = this.now = this.cur(), this.end = r2, this.unit = a2 || (M.cssNumber[n3] ? "" : "px");
    }, cur: function() {
      var t3 = le.propHooks[this.prop];
      return t3 && t3.get ? t3.get(this) : le.propHooks._default.get(this);
    }, run: function(t3) {
      var e3, n3 = le.propHooks[this.prop];
      return this.options.duration ? this.pos = e3 = M.easing[this.easing](t3, this.options.duration * t3, 0, 1, this.options.duration) : this.pos = e3 = t3, this.now = (this.end - this.start) * e3 + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n3 && n3.set ? n3.set(this) : le.propHooks._default.set(this), this;
    } }, le.prototype.init.prototype = le.prototype, le.propHooks = { _default: { get: function(t3) {
      var e3;
      return 1 !== t3.elem.nodeType || null != t3.elem[t3.prop] && null == t3.elem.style[t3.prop] ? t3.elem[t3.prop] : (e3 = M.css(t3.elem, t3.prop, "")) && "auto" !== e3 ? e3 : 0;
    }, set: function(t3) {
      M.fx.step[t3.prop] ? M.fx.step[t3.prop](t3) : 1 !== t3.elem.nodeType || !M.cssHooks[t3.prop] && null == t3.elem.style[ee(t3.prop)] ? t3.elem[t3.prop] = t3.now : M.style(t3.elem, t3.prop, t3.now + t3.unit);
    } } }, le.propHooks.scrollTop = le.propHooks.scrollLeft = { set: function(t3) {
      t3.elem.nodeType && t3.elem.parentNode && (t3.elem[t3.prop] = t3.now);
    } }, M.easing = { linear: function(t3) {
      return t3;
    }, swing: function(t3) {
      return 0.5 - Math.cos(t3 * Math.PI) / 2;
    }, _default: "swing" }, M.fx = le.prototype.init, M.fx.step = {};
    var ce, ue, he = /^(?:toggle|show|hide)$/, pe = /queueHooks$/;
    function de() {
      ue && (false === g.hidden && t2.requestAnimationFrame ? t2.requestAnimationFrame(de) : t2.setTimeout(de, M.fx.interval), M.fx.tick());
    }
    function fe() {
      return t2.setTimeout(function() {
        ce = void 0;
      }), ce = Date.now();
    }
    function me(t3, e3) {
      var n3, r2 = 0, i2 = { height: t3 };
      for (e3 = e3 ? 1 : 0; r2 < 4; r2 += 2 - e3) i2["margin" + (n3 = ht[r2])] = i2["padding" + n3] = t3;
      return e3 && (i2.opacity = i2.width = t3), i2;
    }
    function ge(t3, e3, n3) {
      for (var r2, i2 = (ye.tweeners[e3] || []).concat(ye.tweeners["*"]), a2 = 0, o2 = i2.length; a2 < o2; a2++) if (r2 = i2[a2].call(n3, e3, t3)) return r2;
    }
    function ye(t3, e3, n3) {
      var r2, i2, a2 = 0, o2 = ye.prefilters.length, s2 = M.Deferred().always(function() {
        delete l2.elem;
      }), l2 = function() {
        if (i2) return false;
        for (var e4 = ce || fe(), n4 = Math.max(0, c2.startTime + c2.duration - e4), r3 = 1 - (n4 / c2.duration || 0), a3 = 0, o3 = c2.tweens.length; a3 < o3; a3++) c2.tweens[a3].run(r3);
        return s2.notifyWith(t3, [c2, r3, n4]), r3 < 1 && o3 ? n4 : (o3 || s2.notifyWith(t3, [c2, 1, 0]), s2.resolveWith(t3, [c2]), false);
      }, c2 = s2.promise({ elem: t3, props: M.extend({}, e3), opts: M.extend(true, { specialEasing: {}, easing: M.easing._default }, n3), originalProperties: e3, originalOptions: n3, startTime: ce || fe(), duration: n3.duration, tweens: [], createTween: function(e4, n4) {
        var r3 = M.Tween(t3, c2.opts, e4, n4, c2.opts.specialEasing[e4] || c2.opts.easing);
        return c2.tweens.push(r3), r3;
      }, stop: function(e4) {
        var n4 = 0, r3 = e4 ? c2.tweens.length : 0;
        if (i2) return this;
        for (i2 = true; n4 < r3; n4++) c2.tweens[n4].run(1);
        return e4 ? (s2.notifyWith(t3, [c2, 1, 0]), s2.resolveWith(t3, [c2, e4])) : s2.rejectWith(t3, [c2, e4]), this;
      } }), u2 = c2.props;
      for (function(t4, e4) {
        var n4, r3, i3, a3, o3;
        for (n4 in t4) if (i3 = e4[r3 = et(n4)], a3 = t4[n4], Array.isArray(a3) && (i3 = a3[1], a3 = t4[n4] = a3[0]), n4 !== r3 && (t4[r3] = a3, delete t4[n4]), (o3 = M.cssHooks[r3]) && "expand" in o3) for (n4 in a3 = o3.expand(a3), delete t4[r3], a3) n4 in t4 || (t4[n4] = a3[n4], e4[n4] = i3);
        else e4[r3] = i3;
      }(u2, c2.opts.specialEasing); a2 < o2; a2++) if (r2 = ye.prefilters[a2].call(c2, t3, u2, c2.opts)) return f(r2.stop) && (M._queueHooks(c2.elem, c2.opts.queue).stop = r2.stop.bind(r2)), r2;
      return M.map(u2, ge, c2), f(c2.opts.start) && c2.opts.start.call(t3, c2), c2.progress(c2.opts.progress).done(c2.opts.done, c2.opts.complete).fail(c2.opts.fail).always(c2.opts.always), M.fx.timer(M.extend(l2, { elem: t3, anim: c2, queue: c2.opts.queue })), c2;
    }
    M.Animation = M.extend(ye, { tweeners: { "*": [function(t3, e3) {
      var n3 = this.createTween(t3, e3);
      return gt(n3.elem, t3, ut.exec(e3), n3), n3;
    }] }, tweener: function(t3, e3) {
      f(t3) ? (e3 = t3, t3 = ["*"]) : t3 = t3.match(H);
      for (var n3, r2 = 0, i2 = t3.length; r2 < i2; r2++) n3 = t3[r2], ye.tweeners[n3] = ye.tweeners[n3] || [], ye.tweeners[n3].unshift(e3);
    }, prefilters: [function(t3, e3, n3) {
      var r2, i2, a2, o2, s2, l2, c2, u2, h2 = "width" in e3 || "height" in e3, p2 = this, d2 = {}, f2 = t3.style, m2 = t3.nodeType && mt(t3), g2 = it.get(t3, "fxshow");
      for (r2 in n3.queue || (null == (o2 = M._queueHooks(t3, "fx")).unqueued && (o2.unqueued = 0, s2 = o2.empty.fire, o2.empty.fire = function() {
        o2.unqueued || s2();
      }), o2.unqueued++, p2.always(function() {
        p2.always(function() {
          o2.unqueued--, M.queue(t3, "fx").length || o2.empty.fire();
        });
      })), e3) if (i2 = e3[r2], he.test(i2)) {
        if (delete e3[r2], a2 = a2 || "toggle" === i2, i2 === (m2 ? "hide" : "show")) {
          if ("show" !== i2 || !g2 || void 0 === g2[r2]) continue;
          m2 = true;
        }
        d2[r2] = g2 && g2[r2] || M.style(t3, r2);
      }
      if ((l2 = !M.isEmptyObject(e3)) || !M.isEmptyObject(d2)) for (r2 in h2 && 1 === t3.nodeType && (n3.overflow = [f2.overflow, f2.overflowX, f2.overflowY], null == (c2 = g2 && g2.display) && (c2 = it.get(t3, "display")), "none" === (u2 = M.css(t3, "display")) && (c2 ? u2 = c2 : (xt([t3], true), c2 = t3.style.display || c2, u2 = M.css(t3, "display"), xt([t3]))), ("inline" === u2 || "inline-block" === u2 && null != c2) && "none" === M.css(t3, "float") && (l2 || (p2.done(function() {
        f2.display = c2;
      }), null == c2 && (u2 = f2.display, c2 = "none" === u2 ? "" : u2)), f2.display = "inline-block")), n3.overflow && (f2.overflow = "hidden", p2.always(function() {
        f2.overflow = n3.overflow[0], f2.overflowX = n3.overflow[1], f2.overflowY = n3.overflow[2];
      })), l2 = false, d2) l2 || (g2 ? "hidden" in g2 && (m2 = g2.hidden) : g2 = it.access(t3, "fxshow", { display: c2 }), a2 && (g2.hidden = !m2), m2 && xt([t3], true), p2.done(function() {
        for (r2 in m2 || xt([t3]), it.remove(t3, "fxshow"), d2) M.style(t3, r2, d2[r2]);
      })), l2 = ge(m2 ? g2[r2] : 0, r2, p2), r2 in g2 || (g2[r2] = l2.start, m2 && (l2.end = l2.start, l2.start = 0));
    }], prefilter: function(t3, e3) {
      e3 ? ye.prefilters.unshift(t3) : ye.prefilters.push(t3);
    } }), M.speed = function(t3, e3, n3) {
      var r2 = t3 && "object" == typeof t3 ? M.extend({}, t3) : { complete: n3 || !n3 && e3 || f(t3) && t3, duration: t3, easing: n3 && e3 || e3 && !f(e3) && e3 };
      return M.fx.off ? r2.duration = 0 : "number" != typeof r2.duration && (r2.duration in M.fx.speeds ? r2.duration = M.fx.speeds[r2.duration] : r2.duration = M.fx.speeds._default), null != r2.queue && true !== r2.queue || (r2.queue = "fx"), r2.old = r2.complete, r2.complete = function() {
        f(r2.old) && r2.old.call(this), r2.queue && M.dequeue(this, r2.queue);
      }, r2;
    }, M.fn.extend({ fadeTo: function(t3, e3, n3, r2) {
      return this.filter(mt).css("opacity", 0).show().end().animate({ opacity: e3 }, t3, n3, r2);
    }, animate: function(t3, e3, n3, r2) {
      var i2 = M.isEmptyObject(t3), a2 = M.speed(e3, n3, r2), o2 = function() {
        var e4 = ye(this, M.extend({}, t3), a2);
        (i2 || it.get(this, "finish")) && e4.stop(true);
      };
      return o2.finish = o2, i2 || false === a2.queue ? this.each(o2) : this.queue(a2.queue, o2);
    }, stop: function(t3, e3, n3) {
      var r2 = function(t4) {
        var e4 = t4.stop;
        delete t4.stop, e4(n3);
      };
      return "string" != typeof t3 && (n3 = e3, e3 = t3, t3 = void 0), e3 && this.queue(t3 || "fx", []), this.each(function() {
        var e4 = true, i2 = null != t3 && t3 + "queueHooks", a2 = M.timers, o2 = it.get(this);
        if (i2) o2[i2] && o2[i2].stop && r2(o2[i2]);
        else for (i2 in o2) o2[i2] && o2[i2].stop && pe.test(i2) && r2(o2[i2]);
        for (i2 = a2.length; i2--; ) a2[i2].elem !== this || null != t3 && a2[i2].queue !== t3 || (a2[i2].anim.stop(n3), e4 = false, a2.splice(i2, 1));
        !e4 && n3 || M.dequeue(this, t3);
      });
    }, finish: function(t3) {
      return false !== t3 && (t3 = t3 || "fx"), this.each(function() {
        var e3, n3 = it.get(this), r2 = n3[t3 + "queue"], i2 = n3[t3 + "queueHooks"], a2 = M.timers, o2 = r2 ? r2.length : 0;
        for (n3.finish = true, M.queue(this, t3, []), i2 && i2.stop && i2.stop.call(this, true), e3 = a2.length; e3--; ) a2[e3].elem === this && a2[e3].queue === t3 && (a2[e3].anim.stop(true), a2.splice(e3, 1));
        for (e3 = 0; e3 < o2; e3++) r2[e3] && r2[e3].finish && r2[e3].finish.call(this);
        delete n3.finish;
      });
    } }), M.each(["toggle", "show", "hide"], function(t3, e3) {
      var n3 = M.fn[e3];
      M.fn[e3] = function(t4, r2, i2) {
        return null == t4 || "boolean" == typeof t4 ? n3.apply(this, arguments) : this.animate(me(e3, true), t4, r2, i2);
      };
    }), M.each({ slideDown: me("show"), slideUp: me("hide"), slideToggle: me("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function(t3, e3) {
      M.fn[t3] = function(t4, n3, r2) {
        return this.animate(e3, t4, n3, r2);
      };
    }), M.timers = [], M.fx.tick = function() {
      var t3, e3 = 0, n3 = M.timers;
      for (ce = Date.now(); e3 < n3.length; e3++) (t3 = n3[e3])() || n3[e3] !== t3 || n3.splice(e3--, 1);
      n3.length || M.fx.stop(), ce = void 0;
    }, M.fx.timer = function(t3) {
      M.timers.push(t3), M.fx.start();
    }, M.fx.interval = 13, M.fx.start = function() {
      ue || (ue = true, de());
    }, M.fx.stop = function() {
      ue = null;
    }, M.fx.speeds = { slow: 600, fast: 200, _default: 400 }, M.fn.delay = function(e3, n3) {
      return e3 = M.fx && M.fx.speeds[e3] || e3, n3 = n3 || "fx", this.queue(n3, function(n4, r2) {
        var i2 = t2.setTimeout(n4, e3);
        r2.stop = function() {
          t2.clearTimeout(i2);
        };
      });
    }, function() {
      var t3 = g.createElement("input"), e3 = g.createElement("select").appendChild(g.createElement("option"));
      t3.type = "checkbox", d.checkOn = "" !== t3.value, d.optSelected = e3.selected, (t3 = g.createElement("input")).value = "t", t3.type = "radio", d.radioValue = "t" === t3.value;
    }();
    var ve, xe = M.expr.attrHandle;
    M.fn.extend({ attr: function(t3, e3) {
      return K(this, M.attr, t3, e3, arguments.length > 1);
    }, removeAttr: function(t3) {
      return this.each(function() {
        M.removeAttr(this, t3);
      });
    } }), M.extend({ attr: function(t3, e3, n3) {
      var r2, i2, a2 = t3.nodeType;
      if (3 !== a2 && 8 !== a2 && 2 !== a2) return void 0 === t3.getAttribute ? M.prop(t3, e3, n3) : (1 === a2 && M.isXMLDoc(t3) || (i2 = M.attrHooks[e3.toLowerCase()] || (M.expr.match.bool.test(e3) ? ve : void 0)), void 0 !== n3 ? null === n3 ? void M.removeAttr(t3, e3) : i2 && "set" in i2 && void 0 !== (r2 = i2.set(t3, n3, e3)) ? r2 : (t3.setAttribute(e3, n3 + ""), n3) : i2 && "get" in i2 && null !== (r2 = i2.get(t3, e3)) ? r2 : null == (r2 = M.find.attr(t3, e3)) ? void 0 : r2);
    }, attrHooks: { type: { set: function(t3, e3) {
      if (!d.radioValue && "radio" === e3 && T(t3, "input")) {
        var n3 = t3.value;
        return t3.setAttribute("type", e3), n3 && (t3.value = n3), e3;
      }
    } } }, removeAttr: function(t3, e3) {
      var n3, r2 = 0, i2 = e3 && e3.match(H);
      if (i2 && 1 === t3.nodeType) for (; n3 = i2[r2++]; ) t3.removeAttribute(n3);
    } }), ve = { set: function(t3, e3, n3) {
      return false === e3 ? M.removeAttr(t3, n3) : t3.setAttribute(n3, n3), n3;
    } }, M.each(M.expr.match.bool.source.match(/\w+/g), function(t3, e3) {
      var n3 = xe[e3] || M.find.attr;
      xe[e3] = function(t4, e4, r2) {
        var i2, a2, o2 = e4.toLowerCase();
        return r2 || (a2 = xe[o2], xe[o2] = i2, i2 = null != n3(t4, e4, r2) ? o2 : null, xe[o2] = a2), i2;
      };
    });
    var we = /^(?:input|select|textarea|button)$/i, be = /^(?:a|area)$/i;
    function Me(t3) {
      return (t3.match(H) || []).join(" ");
    }
    function _e(t3) {
      return t3.getAttribute && t3.getAttribute("class") || "";
    }
    function Te(t3) {
      return Array.isArray(t3) ? t3 : "string" == typeof t3 && t3.match(H) || [];
    }
    M.fn.extend({ prop: function(t3, e3) {
      return K(this, M.prop, t3, e3, arguments.length > 1);
    }, removeProp: function(t3) {
      return this.each(function() {
        delete this[M.propFix[t3] || t3];
      });
    } }), M.extend({ prop: function(t3, e3, n3) {
      var r2, i2, a2 = t3.nodeType;
      if (3 !== a2 && 8 !== a2 && 2 !== a2) return 1 === a2 && M.isXMLDoc(t3) || (e3 = M.propFix[e3] || e3, i2 = M.propHooks[e3]), void 0 !== n3 ? i2 && "set" in i2 && void 0 !== (r2 = i2.set(t3, n3, e3)) ? r2 : t3[e3] = n3 : i2 && "get" in i2 && null !== (r2 = i2.get(t3, e3)) ? r2 : t3[e3];
    }, propHooks: { tabIndex: { get: function(t3) {
      var e3 = M.find.attr(t3, "tabindex");
      return e3 ? parseInt(e3, 10) : we.test(t3.nodeName) || be.test(t3.nodeName) && t3.href ? 0 : -1;
    } } }, propFix: { for: "htmlFor", class: "className" } }), d.optSelected || (M.propHooks.selected = { get: function(t3) {
      var e3 = t3.parentNode;
      return e3 && e3.parentNode && e3.parentNode.selectedIndex, null;
    }, set: function(t3) {
      var e3 = t3.parentNode;
      e3 && (e3.selectedIndex, e3.parentNode && e3.parentNode.selectedIndex);
    } }), M.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
      M.propFix[this.toLowerCase()] = this;
    }), M.fn.extend({ addClass: function(t3) {
      var e3, n3, r2, i2, a2, o2;
      return f(t3) ? this.each(function(e4) {
        M(this).addClass(t3.call(this, e4, _e(this)));
      }) : (e3 = Te(t3)).length ? this.each(function() {
        if (r2 = _e(this), n3 = 1 === this.nodeType && " " + Me(r2) + " ") {
          for (a2 = 0; a2 < e3.length; a2++) i2 = e3[a2], n3.indexOf(" " + i2 + " ") < 0 && (n3 += i2 + " ");
          o2 = Me(n3), r2 !== o2 && this.setAttribute("class", o2);
        }
      }) : this;
    }, removeClass: function(t3) {
      var e3, n3, r2, i2, a2, o2;
      return f(t3) ? this.each(function(e4) {
        M(this).removeClass(t3.call(this, e4, _e(this)));
      }) : arguments.length ? (e3 = Te(t3)).length ? this.each(function() {
        if (r2 = _e(this), n3 = 1 === this.nodeType && " " + Me(r2) + " ") {
          for (a2 = 0; a2 < e3.length; a2++) for (i2 = e3[a2]; n3.indexOf(" " + i2 + " ") > -1; ) n3 = n3.replace(" " + i2 + " ", " ");
          o2 = Me(n3), r2 !== o2 && this.setAttribute("class", o2);
        }
      }) : this : this.attr("class", "");
    }, toggleClass: function(t3, e3) {
      var n3, r2, i2, a2, o2 = typeof t3, s2 = "string" === o2 || Array.isArray(t3);
      return f(t3) ? this.each(function(n4) {
        M(this).toggleClass(t3.call(this, n4, _e(this), e3), e3);
      }) : "boolean" == typeof e3 && s2 ? e3 ? this.addClass(t3) : this.removeClass(t3) : (n3 = Te(t3), this.each(function() {
        if (s2) for (a2 = M(this), i2 = 0; i2 < n3.length; i2++) r2 = n3[i2], a2.hasClass(r2) ? a2.removeClass(r2) : a2.addClass(r2);
        else void 0 !== t3 && "boolean" !== o2 || ((r2 = _e(this)) && it.set(this, "__className__", r2), this.setAttribute && this.setAttribute("class", r2 || false === t3 ? "" : it.get(this, "__className__") || ""));
      }));
    }, hasClass: function(t3) {
      var e3, n3, r2 = 0;
      for (e3 = " " + t3 + " "; n3 = this[r2++]; ) if (1 === n3.nodeType && (" " + Me(_e(n3)) + " ").indexOf(e3) > -1) return true;
      return false;
    } });
    var Ce = /\r/g;
    M.fn.extend({ val: function(t3) {
      var e3, n3, r2, i2 = this[0];
      return arguments.length ? (r2 = f(t3), this.each(function(n4) {
        var i3;
        1 === this.nodeType && (null == (i3 = r2 ? t3.call(this, n4, M(this).val()) : t3) ? i3 = "" : "number" == typeof i3 ? i3 += "" : Array.isArray(i3) && (i3 = M.map(i3, function(t4) {
          return null == t4 ? "" : t4 + "";
        })), (e3 = M.valHooks[this.type] || M.valHooks[this.nodeName.toLowerCase()]) && "set" in e3 && void 0 !== e3.set(this, i3, "value") || (this.value = i3));
      })) : i2 ? (e3 = M.valHooks[i2.type] || M.valHooks[i2.nodeName.toLowerCase()]) && "get" in e3 && void 0 !== (n3 = e3.get(i2, "value")) ? n3 : "string" == typeof (n3 = i2.value) ? n3.replace(Ce, "") : null == n3 ? "" : n3 : void 0;
    } }), M.extend({ valHooks: { option: { get: function(t3) {
      var e3 = M.find.attr(t3, "value");
      return null != e3 ? e3 : Me(M.text(t3));
    } }, select: { get: function(t3) {
      var e3, n3, r2, i2 = t3.options, a2 = t3.selectedIndex, o2 = "select-one" === t3.type, s2 = o2 ? null : [], l2 = o2 ? a2 + 1 : i2.length;
      for (r2 = a2 < 0 ? l2 : o2 ? a2 : 0; r2 < l2; r2++) if (((n3 = i2[r2]).selected || r2 === a2) && !n3.disabled && (!n3.parentNode.disabled || !T(n3.parentNode, "optgroup"))) {
        if (e3 = M(n3).val(), o2) return e3;
        s2.push(e3);
      }
      return s2;
    }, set: function(t3, e3) {
      for (var n3, r2, i2 = t3.options, a2 = M.makeArray(e3), o2 = i2.length; o2--; ) ((r2 = i2[o2]).selected = M.inArray(M.valHooks.option.get(r2), a2) > -1) && (n3 = true);
      return n3 || (t3.selectedIndex = -1), a2;
    } } } }), M.each(["radio", "checkbox"], function() {
      M.valHooks[this] = { set: function(t3, e3) {
        if (Array.isArray(e3)) return t3.checked = M.inArray(M(t3).val(), e3) > -1;
      } }, d.checkOn || (M.valHooks[this].get = function(t3) {
        return null === t3.getAttribute("value") ? "on" : t3.value;
      });
    });
    var Se = t2.location, De = { guid: Date.now() }, Ee = /\?/;
    M.parseXML = function(e3) {
      var n3, r2;
      if (!e3 || "string" != typeof e3) return null;
      try {
        n3 = new t2.DOMParser().parseFromString(e3, "text/xml");
      } catch (t3) {
      }
      return r2 = n3 && n3.getElementsByTagName("parsererror")[0], n3 && !r2 || M.error("Invalid XML: " + (r2 ? M.map(r2.childNodes, function(t3) {
        return t3.textContent;
      }).join("\n") : e3)), n3;
    };
    var Oe = /^(?:focusinfocus|focusoutblur)$/, Ae = function(t3) {
      t3.stopPropagation();
    };
    M.extend(M.event, { trigger: function(e3, n3, r2, i2) {
      var a2, o2, s2, l2, c2, h2, p2, d2, y2 = [r2 || g], v2 = u.call(e3, "type") ? e3.type : e3, x2 = u.call(e3, "namespace") ? e3.namespace.split(".") : [];
      if (o2 = d2 = s2 = r2 = r2 || g, 3 !== r2.nodeType && 8 !== r2.nodeType && !Oe.test(v2 + M.event.triggered) && (v2.indexOf(".") > -1 && (v2 = (x2 = v2.split(".")).shift(), x2.sort()), c2 = v2.indexOf(":") < 0 && "on" + v2, (e3 = e3[M.expando] ? e3 : new M.Event(v2, "object" == typeof e3 && e3)).isTrigger = i2 ? 2 : 3, e3.namespace = x2.join("."), e3.rnamespace = e3.namespace ? new RegExp("(^|\\.)" + x2.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e3.result = void 0, e3.target || (e3.target = r2), n3 = null == n3 ? [e3] : M.makeArray(n3, [e3]), p2 = M.event.special[v2] || {}, i2 || !p2.trigger || false !== p2.trigger.apply(r2, n3))) {
        if (!i2 && !p2.noBubble && !m(r2)) {
          for (l2 = p2.delegateType || v2, Oe.test(l2 + v2) || (o2 = o2.parentNode); o2; o2 = o2.parentNode) y2.push(o2), s2 = o2;
          s2 === (r2.ownerDocument || g) && y2.push(s2.defaultView || s2.parentWindow || t2);
        }
        for (a2 = 0; (o2 = y2[a2++]) && !e3.isPropagationStopped(); ) d2 = o2, e3.type = a2 > 1 ? l2 : p2.bindType || v2, (h2 = (it.get(o2, "events") || /* @__PURE__ */ Object.create(null))[e3.type] && it.get(o2, "handle")) && h2.apply(o2, n3), (h2 = c2 && o2[c2]) && h2.apply && nt(o2) && (e3.result = h2.apply(o2, n3), false === e3.result && e3.preventDefault());
        return e3.type = v2, i2 || e3.isDefaultPrevented() || p2._default && false !== p2._default.apply(y2.pop(), n3) || !nt(r2) || c2 && f(r2[v2]) && !m(r2) && ((s2 = r2[c2]) && (r2[c2] = null), M.event.triggered = v2, e3.isPropagationStopped() && d2.addEventListener(v2, Ae), r2[v2](), e3.isPropagationStopped() && d2.removeEventListener(v2, Ae), M.event.triggered = void 0, s2 && (r2[c2] = s2)), e3.result;
      }
    }, simulate: function(t3, e3, n3) {
      var r2 = M.extend(new M.Event(), n3, { type: t3, isSimulated: true });
      M.event.trigger(r2, null, e3);
    } }), M.fn.extend({ trigger: function(t3, e3) {
      return this.each(function() {
        M.event.trigger(t3, e3, this);
      });
    }, triggerHandler: function(t3, e3) {
      var n3 = this[0];
      if (n3) return M.event.trigger(t3, e3, n3, true);
    } });
    var Pe = /\[\]$/, Re = /\r?\n/g, Le = /^(?:submit|button|image|reset|file)$/i, Ie = /^(?:input|select|textarea|keygen)/i;
    function ke(t3, e3, n3, r2) {
      var i2;
      if (Array.isArray(e3)) M.each(e3, function(e4, i3) {
        n3 || Pe.test(t3) ? r2(t3, i3) : ke(t3 + "[" + ("object" == typeof i3 && null != i3 ? e4 : "") + "]", i3, n3, r2);
      });
      else if (n3 || "object" !== x(e3)) r2(t3, e3);
      else for (i2 in e3) ke(t3 + "[" + i2 + "]", e3[i2], n3, r2);
    }
    M.param = function(t3, e3) {
      var n3, r2 = [], i2 = function(t4, e4) {
        var n4 = f(e4) ? e4() : e4;
        r2[r2.length] = encodeURIComponent(t4) + "=" + encodeURIComponent(null == n4 ? "" : n4);
      };
      if (null == t3) return "";
      if (Array.isArray(t3) || t3.jquery && !M.isPlainObject(t3)) M.each(t3, function() {
        i2(this.name, this.value);
      });
      else for (n3 in t3) ke(n3, t3[n3], e3, i2);
      return r2.join("&");
    }, M.fn.extend({ serialize: function() {
      return M.param(this.serializeArray());
    }, serializeArray: function() {
      return this.map(function() {
        var t3 = M.prop(this, "elements");
        return t3 ? M.makeArray(t3) : this;
      }).filter(function() {
        var t3 = this.type;
        return this.name && !M(this).is(":disabled") && Ie.test(this.nodeName) && !Le.test(t3) && (this.checked || !Mt.test(t3));
      }).map(function(t3, e3) {
        var n3 = M(this).val();
        return null == n3 ? null : Array.isArray(n3) ? M.map(n3, function(t4) {
          return { name: e3.name, value: t4.replace(Re, "\r\n") };
        }) : { name: e3.name, value: n3.replace(Re, "\r\n") };
      }).get();
    } });
    var je = /%20/g, Ne = /#.*$/, Ve = /([?&])_=[^&]*/, Fe = /^(.*?):[ \t]*([^\r\n]*)$/gm, Be = /^(?:GET|HEAD)$/, Ge = /^\/\//, ze = {}, Ue = {}, He = "*/".concat("*"), We = g.createElement("a");
    function Je(t3) {
      return function(e3, n3) {
        "string" != typeof e3 && (n3 = e3, e3 = "*");
        var r2, i2 = 0, a2 = e3.toLowerCase().match(H) || [];
        if (f(n3)) for (; r2 = a2[i2++]; ) "+" === r2[0] ? (r2 = r2.slice(1) || "*", (t3[r2] = t3[r2] || []).unshift(n3)) : (t3[r2] = t3[r2] || []).push(n3);
      };
    }
    function qe(t3, e3, n3, r2) {
      var i2 = {}, a2 = t3 === Ue;
      function o2(s2) {
        var l2;
        return i2[s2] = true, M.each(t3[s2] || [], function(t4, s3) {
          var c2 = s3(e3, n3, r2);
          return "string" != typeof c2 || a2 || i2[c2] ? a2 ? !(l2 = c2) : void 0 : (e3.dataTypes.unshift(c2), o2(c2), false);
        }), l2;
      }
      return o2(e3.dataTypes[0]) || !i2["*"] && o2("*");
    }
    function Xe(t3, e3) {
      var n3, r2, i2 = M.ajaxSettings.flatOptions || {};
      for (n3 in e3) void 0 !== e3[n3] && ((i2[n3] ? t3 : r2 || (r2 = {}))[n3] = e3[n3]);
      return r2 && M.extend(true, t3, r2), t3;
    }
    We.href = Se.href, M.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: Se.href, type: "GET", isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Se.protocol), global: true, processData: true, async: true, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": He, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": true, "text json": JSON.parse, "text xml": M.parseXML }, flatOptions: { url: true, context: true } }, ajaxSetup: function(t3, e3) {
      return e3 ? Xe(Xe(t3, M.ajaxSettings), e3) : Xe(M.ajaxSettings, t3);
    }, ajaxPrefilter: Je(ze), ajaxTransport: Je(Ue), ajax: function(e3, n3) {
      "object" == typeof e3 && (n3 = e3, e3 = void 0), n3 = n3 || {};
      var r2, i2, a2, o2, s2, l2, c2, u2, h2, p2, d2 = M.ajaxSetup({}, n3), f2 = d2.context || d2, m2 = d2.context && (f2.nodeType || f2.jquery) ? M(f2) : M.event, y2 = M.Deferred(), v2 = M.Callbacks("once memory"), x2 = d2.statusCode || {}, w2 = {}, b2 = {}, _2 = "canceled", T2 = { readyState: 0, getResponseHeader: function(t3) {
        var e4;
        if (c2) {
          if (!o2) for (o2 = {}; e4 = Fe.exec(a2); ) o2[e4[1].toLowerCase() + " "] = (o2[e4[1].toLowerCase() + " "] || []).concat(e4[2]);
          e4 = o2[t3.toLowerCase() + " "];
        }
        return null == e4 ? null : e4.join(", ");
      }, getAllResponseHeaders: function() {
        return c2 ? a2 : null;
      }, setRequestHeader: function(t3, e4) {
        return null == c2 && (t3 = b2[t3.toLowerCase()] = b2[t3.toLowerCase()] || t3, w2[t3] = e4), this;
      }, overrideMimeType: function(t3) {
        return null == c2 && (d2.mimeType = t3), this;
      }, statusCode: function(t3) {
        var e4;
        if (t3) if (c2) T2.always(t3[T2.status]);
        else for (e4 in t3) x2[e4] = [x2[e4], t3[e4]];
        return this;
      }, abort: function(t3) {
        var e4 = t3 || _2;
        return r2 && r2.abort(e4), C2(0, e4), this;
      } };
      if (y2.promise(T2), d2.url = ((e3 || d2.url || Se.href) + "").replace(Ge, Se.protocol + "//"), d2.type = n3.method || n3.type || d2.method || d2.type, d2.dataTypes = (d2.dataType || "*").toLowerCase().match(H) || [""], null == d2.crossDomain) {
        l2 = g.createElement("a");
        try {
          l2.href = d2.url, l2.href = l2.href, d2.crossDomain = We.protocol + "//" + We.host != l2.protocol + "//" + l2.host;
        } catch (t3) {
          d2.crossDomain = true;
        }
      }
      if (d2.data && d2.processData && "string" != typeof d2.data && (d2.data = M.param(d2.data, d2.traditional)), qe(ze, d2, n3, T2), c2) return T2;
      for (h2 in (u2 = M.event && d2.global) && 0 == M.active++ && M.event.trigger("ajaxStart"), d2.type = d2.type.toUpperCase(), d2.hasContent = !Be.test(d2.type), i2 = d2.url.replace(Ne, ""), d2.hasContent ? d2.data && d2.processData && 0 === (d2.contentType || "").indexOf("application/x-www-form-urlencoded") && (d2.data = d2.data.replace(je, "+")) : (p2 = d2.url.slice(i2.length), d2.data && (d2.processData || "string" == typeof d2.data) && (i2 += (Ee.test(i2) ? "&" : "?") + d2.data, delete d2.data), false === d2.cache && (i2 = i2.replace(Ve, "$1"), p2 = (Ee.test(i2) ? "&" : "?") + "_=" + De.guid++ + p2), d2.url = i2 + p2), d2.ifModified && (M.lastModified[i2] && T2.setRequestHeader("If-Modified-Since", M.lastModified[i2]), M.etag[i2] && T2.setRequestHeader("If-None-Match", M.etag[i2])), (d2.data && d2.hasContent && false !== d2.contentType || n3.contentType) && T2.setRequestHeader("Content-Type", d2.contentType), T2.setRequestHeader("Accept", d2.dataTypes[0] && d2.accepts[d2.dataTypes[0]] ? d2.accepts[d2.dataTypes[0]] + ("*" !== d2.dataTypes[0] ? ", " + He + "; q=0.01" : "") : d2.accepts["*"]), d2.headers) T2.setRequestHeader(h2, d2.headers[h2]);
      if (d2.beforeSend && (false === d2.beforeSend.call(f2, T2, d2) || c2)) return T2.abort();
      if (_2 = "abort", v2.add(d2.complete), T2.done(d2.success), T2.fail(d2.error), r2 = qe(Ue, d2, n3, T2)) {
        if (T2.readyState = 1, u2 && m2.trigger("ajaxSend", [T2, d2]), c2) return T2;
        d2.async && d2.timeout > 0 && (s2 = t2.setTimeout(function() {
          T2.abort("timeout");
        }, d2.timeout));
        try {
          c2 = false, r2.send(w2, C2);
        } catch (t3) {
          if (c2) throw t3;
          C2(-1, t3);
        }
      } else C2(-1, "No Transport");
      function C2(e4, n4, o3, l3) {
        var h3, p3, g2, w3, b3, _3 = n4;
        c2 || (c2 = true, s2 && t2.clearTimeout(s2), r2 = void 0, a2 = l3 || "", T2.readyState = e4 > 0 ? 4 : 0, h3 = e4 >= 200 && e4 < 300 || 304 === e4, o3 && (w3 = function(t3, e5, n5) {
          for (var r3, i3, a3, o4, s3 = t3.contents, l4 = t3.dataTypes; "*" === l4[0]; ) l4.shift(), void 0 === r3 && (r3 = t3.mimeType || e5.getResponseHeader("Content-Type"));
          if (r3) {
            for (i3 in s3) if (s3[i3] && s3[i3].test(r3)) {
              l4.unshift(i3);
              break;
            }
          }
          if (l4[0] in n5) a3 = l4[0];
          else {
            for (i3 in n5) {
              if (!l4[0] || t3.converters[i3 + " " + l4[0]]) {
                a3 = i3;
                break;
              }
              o4 || (o4 = i3);
            }
            a3 = a3 || o4;
          }
          if (a3) return a3 !== l4[0] && l4.unshift(a3), n5[a3];
        }(d2, T2, o3)), !h3 && M.inArray("script", d2.dataTypes) > -1 && M.inArray("json", d2.dataTypes) < 0 && (d2.converters["text script"] = function() {
        }), w3 = function(t3, e5, n5, r3) {
          var i3, a3, o4, s3, l4, c3 = {}, u3 = t3.dataTypes.slice();
          if (u3[1]) for (o4 in t3.converters) c3[o4.toLowerCase()] = t3.converters[o4];
          for (a3 = u3.shift(); a3; ) if (t3.responseFields[a3] && (n5[t3.responseFields[a3]] = e5), !l4 && r3 && t3.dataFilter && (e5 = t3.dataFilter(e5, t3.dataType)), l4 = a3, a3 = u3.shift()) {
            if ("*" === a3) a3 = l4;
            else if ("*" !== l4 && l4 !== a3) {
              if (!(o4 = c3[l4 + " " + a3] || c3["* " + a3])) {
                for (i3 in c3) if ((s3 = i3.split(" "))[1] === a3 && (o4 = c3[l4 + " " + s3[0]] || c3["* " + s3[0]])) {
                  true === o4 ? o4 = c3[i3] : true !== c3[i3] && (a3 = s3[0], u3.unshift(s3[1]));
                  break;
                }
              }
              if (true !== o4) if (o4 && t3.throws) e5 = o4(e5);
              else try {
                e5 = o4(e5);
              } catch (t4) {
                return { state: "parsererror", error: o4 ? t4 : "No conversion from " + l4 + " to " + a3 };
              }
            }
          }
          return { state: "success", data: e5 };
        }(d2, w3, T2, h3), h3 ? (d2.ifModified && ((b3 = T2.getResponseHeader("Last-Modified")) && (M.lastModified[i2] = b3), (b3 = T2.getResponseHeader("etag")) && (M.etag[i2] = b3)), 204 === e4 || "HEAD" === d2.type ? _3 = "nocontent" : 304 === e4 ? _3 = "notmodified" : (_3 = w3.state, p3 = w3.data, h3 = !(g2 = w3.error))) : (g2 = _3, !e4 && _3 || (_3 = "error", e4 < 0 && (e4 = 0))), T2.status = e4, T2.statusText = (n4 || _3) + "", h3 ? y2.resolveWith(f2, [p3, _3, T2]) : y2.rejectWith(f2, [T2, _3, g2]), T2.statusCode(x2), x2 = void 0, u2 && m2.trigger(h3 ? "ajaxSuccess" : "ajaxError", [T2, d2, h3 ? p3 : g2]), v2.fireWith(f2, [T2, _3]), u2 && (m2.trigger("ajaxComplete", [T2, d2]), --M.active || M.event.trigger("ajaxStop")));
      }
      return T2;
    }, getJSON: function(t3, e3, n3) {
      return M.get(t3, e3, n3, "json");
    }, getScript: function(t3, e3) {
      return M.get(t3, void 0, e3, "script");
    } }), M.each(["get", "post"], function(t3, e3) {
      M[e3] = function(t4, n3, r2, i2) {
        return f(n3) && (i2 = i2 || r2, r2 = n3, n3 = void 0), M.ajax(M.extend({ url: t4, type: e3, dataType: i2, data: n3, success: r2 }, M.isPlainObject(t4) && t4));
      };
    }), M.ajaxPrefilter(function(t3) {
      var e3;
      for (e3 in t3.headers) "content-type" === e3.toLowerCase() && (t3.contentType = t3.headers[e3] || "");
    }), M._evalUrl = function(t3, e3, n3) {
      return M.ajax({ url: t3, type: "GET", dataType: "script", cache: true, async: false, global: false, converters: { "text script": function() {
      } }, dataFilter: function(t4) {
        M.globalEval(t4, e3, n3);
      } });
    }, M.fn.extend({ wrapAll: function(t3) {
      var e3;
      return this[0] && (f(t3) && (t3 = t3.call(this[0])), e3 = M(t3, this[0].ownerDocument).eq(0).clone(true), this[0].parentNode && e3.insertBefore(this[0]), e3.map(function() {
        for (var t4 = this; t4.firstElementChild; ) t4 = t4.firstElementChild;
        return t4;
      }).append(this)), this;
    }, wrapInner: function(t3) {
      return f(t3) ? this.each(function(e3) {
        M(this).wrapInner(t3.call(this, e3));
      }) : this.each(function() {
        var e3 = M(this), n3 = e3.contents();
        n3.length ? n3.wrapAll(t3) : e3.append(t3);
      });
    }, wrap: function(t3) {
      var e3 = f(t3);
      return this.each(function(n3) {
        M(this).wrapAll(e3 ? t3.call(this, n3) : t3);
      });
    }, unwrap: function(t3) {
      return this.parent(t3).not("body").each(function() {
        M(this).replaceWith(this.childNodes);
      }), this;
    } }), M.expr.pseudos.hidden = function(t3) {
      return !M.expr.pseudos.visible(t3);
    }, M.expr.pseudos.visible = function(t3) {
      return !!(t3.offsetWidth || t3.offsetHeight || t3.getClientRects().length);
    }, M.ajaxSettings.xhr = function() {
      try {
        return new t2.XMLHttpRequest();
      } catch (t3) {
      }
    };
    var Ye = { 0: 200, 1223: 204 }, Ze = M.ajaxSettings.xhr();
    d.cors = !!Ze && "withCredentials" in Ze, d.ajax = Ze = !!Ze, M.ajaxTransport(function(e3) {
      var n3, r2;
      if (d.cors || Ze && !e3.crossDomain) return { send: function(i2, a2) {
        var o2, s2 = e3.xhr();
        if (s2.open(e3.type, e3.url, e3.async, e3.username, e3.password), e3.xhrFields) for (o2 in e3.xhrFields) s2[o2] = e3.xhrFields[o2];
        for (o2 in e3.mimeType && s2.overrideMimeType && s2.overrideMimeType(e3.mimeType), e3.crossDomain || i2["X-Requested-With"] || (i2["X-Requested-With"] = "XMLHttpRequest"), i2) s2.setRequestHeader(o2, i2[o2]);
        n3 = function(t3) {
          return function() {
            n3 && (n3 = r2 = s2.onload = s2.onerror = s2.onabort = s2.ontimeout = s2.onreadystatechange = null, "abort" === t3 ? s2.abort() : "error" === t3 ? "number" != typeof s2.status ? a2(0, "error") : a2(s2.status, s2.statusText) : a2(Ye[s2.status] || s2.status, s2.statusText, "text" !== (s2.responseType || "text") || "string" != typeof s2.responseText ? { binary: s2.response } : { text: s2.responseText }, s2.getAllResponseHeaders()));
          };
        }, s2.onload = n3(), r2 = s2.onerror = s2.ontimeout = n3("error"), void 0 !== s2.onabort ? s2.onabort = r2 : s2.onreadystatechange = function() {
          4 === s2.readyState && t2.setTimeout(function() {
            n3 && r2();
          });
        }, n3 = n3("abort");
        try {
          s2.send(e3.hasContent && e3.data || null);
        } catch (t3) {
          if (n3) throw t3;
        }
      }, abort: function() {
        n3 && n3();
      } };
    }), M.ajaxPrefilter(function(t3) {
      t3.crossDomain && (t3.contents.script = false);
    }), M.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { "text script": function(t3) {
      return M.globalEval(t3), t3;
    } } }), M.ajaxPrefilter("script", function(t3) {
      void 0 === t3.cache && (t3.cache = false), t3.crossDomain && (t3.type = "GET");
    }), M.ajaxTransport("script", function(t3) {
      var e3, n3;
      if (t3.crossDomain || t3.scriptAttrs) return { send: function(r2, i2) {
        e3 = M("<script>").attr(t3.scriptAttrs || {}).prop({ charset: t3.scriptCharset, src: t3.url }).on("load error", n3 = function(t4) {
          e3.remove(), n3 = null, t4 && i2("error" === t4.type ? 404 : 200, t4.type);
        }), g.head.appendChild(e3[0]);
      }, abort: function() {
        n3 && n3();
      } };
    });
    var Ke, $e = [], Qe = /(=)\?(?=&|$)|\?\?/;
    M.ajaxSetup({ jsonp: "callback", jsonpCallback: function() {
      var t3 = $e.pop() || M.expando + "_" + De.guid++;
      return this[t3] = true, t3;
    } }), M.ajaxPrefilter("json jsonp", function(e3, n3, r2) {
      var i2, a2, o2, s2 = false !== e3.jsonp && (Qe.test(e3.url) ? "url" : "string" == typeof e3.data && 0 === (e3.contentType || "").indexOf("application/x-www-form-urlencoded") && Qe.test(e3.data) && "data");
      if (s2 || "jsonp" === e3.dataTypes[0]) return i2 = e3.jsonpCallback = f(e3.jsonpCallback) ? e3.jsonpCallback() : e3.jsonpCallback, s2 ? e3[s2] = e3[s2].replace(Qe, "$1" + i2) : false !== e3.jsonp && (e3.url += (Ee.test(e3.url) ? "&" : "?") + e3.jsonp + "=" + i2), e3.converters["script json"] = function() {
        return o2 || M.error(i2 + " was not called"), o2[0];
      }, e3.dataTypes[0] = "json", a2 = t2[i2], t2[i2] = function() {
        o2 = arguments;
      }, r2.always(function() {
        void 0 === a2 ? M(t2).removeProp(i2) : t2[i2] = a2, e3[i2] && (e3.jsonpCallback = n3.jsonpCallback, $e.push(i2)), o2 && f(a2) && a2(o2[0]), o2 = a2 = void 0;
      }), "script";
    }), d.createHTMLDocument = ((Ke = g.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", 2 === Ke.childNodes.length), M.parseHTML = function(t3, e3, n3) {
      return "string" != typeof t3 ? [] : ("boolean" == typeof e3 && (n3 = e3, e3 = false), e3 || (d.createHTMLDocument ? ((r2 = (e3 = g.implementation.createHTMLDocument("")).createElement("base")).href = g.location.href, e3.head.appendChild(r2)) : e3 = g), a2 = !n3 && [], (i2 = N.exec(t3)) ? [e3.createElement(i2[1])] : (i2 = Ot([t3], e3, a2), a2 && a2.length && M(a2).remove(), M.merge([], i2.childNodes)));
      var r2, i2, a2;
    }, M.fn.load = function(t3, e3, n3) {
      var r2, i2, a2, o2 = this, s2 = t3.indexOf(" ");
      return s2 > -1 && (r2 = Me(t3.slice(s2)), t3 = t3.slice(0, s2)), f(e3) ? (n3 = e3, e3 = void 0) : e3 && "object" == typeof e3 && (i2 = "POST"), o2.length > 0 && M.ajax({ url: t3, type: i2 || "GET", dataType: "html", data: e3 }).done(function(t4) {
        a2 = arguments, o2.html(r2 ? M("<div>").append(M.parseHTML(t4)).find(r2) : t4);
      }).always(n3 && function(t4, e4) {
        o2.each(function() {
          n3.apply(this, a2 || [t4.responseText, e4, t4]);
        });
      }), this;
    }, M.expr.pseudos.animated = function(t3) {
      return M.grep(M.timers, function(e3) {
        return t3 === e3.elem;
      }).length;
    }, M.offset = { setOffset: function(t3, e3, n3) {
      var r2, i2, a2, o2, s2, l2, c2 = M.css(t3, "position"), u2 = M(t3), h2 = {};
      "static" === c2 && (t3.style.position = "relative"), s2 = u2.offset(), a2 = M.css(t3, "top"), l2 = M.css(t3, "left"), ("absolute" === c2 || "fixed" === c2) && (a2 + l2).indexOf("auto") > -1 ? (o2 = (r2 = u2.position()).top, i2 = r2.left) : (o2 = parseFloat(a2) || 0, i2 = parseFloat(l2) || 0), f(e3) && (e3 = e3.call(t3, n3, M.extend({}, s2))), null != e3.top && (h2.top = e3.top - s2.top + o2), null != e3.left && (h2.left = e3.left - s2.left + i2), "using" in e3 ? e3.using.call(t3, h2) : u2.css(h2);
    } }, M.fn.extend({ offset: function(t3) {
      if (arguments.length) return void 0 === t3 ? this : this.each(function(e4) {
        M.offset.setOffset(this, t3, e4);
      });
      var e3, n3, r2 = this[0];
      return r2 ? r2.getClientRects().length ? (e3 = r2.getBoundingClientRect(), n3 = r2.ownerDocument.defaultView, { top: e3.top + n3.pageYOffset, left: e3.left + n3.pageXOffset }) : { top: 0, left: 0 } : void 0;
    }, position: function() {
      if (this[0]) {
        var t3, e3, n3, r2 = this[0], i2 = { top: 0, left: 0 };
        if ("fixed" === M.css(r2, "position")) e3 = r2.getBoundingClientRect();
        else {
          for (e3 = this.offset(), n3 = r2.ownerDocument, t3 = r2.offsetParent || n3.documentElement; t3 && (t3 === n3.body || t3 === n3.documentElement) && "static" === M.css(t3, "position"); ) t3 = t3.parentNode;
          t3 && t3 !== r2 && 1 === t3.nodeType && ((i2 = M(t3).offset()).top += M.css(t3, "borderTopWidth", true), i2.left += M.css(t3, "borderLeftWidth", true));
        }
        return { top: e3.top - i2.top - M.css(r2, "marginTop", true), left: e3.left - i2.left - M.css(r2, "marginLeft", true) };
      }
    }, offsetParent: function() {
      return this.map(function() {
        for (var t3 = this.offsetParent; t3 && "static" === M.css(t3, "position"); ) t3 = t3.offsetParent;
        return t3 || pt;
      });
    } }), M.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function(t3, e3) {
      var n3 = "pageYOffset" === e3;
      M.fn[t3] = function(r2) {
        return K(this, function(t4, r3, i2) {
          var a2;
          if (m(t4) ? a2 = t4 : 9 === t4.nodeType && (a2 = t4.defaultView), void 0 === i2) return a2 ? a2[e3] : t4[r3];
          a2 ? a2.scrollTo(n3 ? a2.pageXOffset : i2, n3 ? i2 : a2.pageYOffset) : t4[r3] = i2;
        }, t3, r2, arguments.length);
      };
    }), M.each(["top", "left"], function(t3, e3) {
      M.cssHooks[e3] = Kt(d.pixelPosition, function(t4, n3) {
        if (n3) return n3 = Zt(t4, e3), Wt.test(n3) ? M(t4).position()[e3] + "px" : n3;
      });
    }), M.each({ Height: "height", Width: "width" }, function(t3, e3) {
      M.each({ padding: "inner" + t3, content: e3, "": "outer" + t3 }, function(n3, r2) {
        M.fn[r2] = function(i2, a2) {
          var o2 = arguments.length && (n3 || "boolean" != typeof i2), s2 = n3 || (true === i2 || true === a2 ? "margin" : "border");
          return K(this, function(e4, n4, i3) {
            var a3;
            return m(e4) ? 0 === r2.indexOf("outer") ? e4["inner" + t3] : e4.document.documentElement["client" + t3] : 9 === e4.nodeType ? (a3 = e4.documentElement, Math.max(e4.body["scroll" + t3], a3["scroll" + t3], e4.body["offset" + t3], a3["offset" + t3], a3["client" + t3])) : void 0 === i3 ? M.css(e4, n4, s2) : M.style(e4, n4, i3, s2);
          }, e3, o2 ? i2 : void 0, o2);
        };
      });
    }), M.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(t3, e3) {
      M.fn[e3] = function(t4) {
        return this.on(e3, t4);
      };
    }), M.fn.extend({ bind: function(t3, e3, n3) {
      return this.on(t3, null, e3, n3);
    }, unbind: function(t3, e3) {
      return this.off(t3, null, e3);
    }, delegate: function(t3, e3, n3, r2) {
      return this.on(e3, t3, n3, r2);
    }, undelegate: function(t3, e3, n3) {
      return 1 === arguments.length ? this.off(t3, "**") : this.off(e3, t3 || "**", n3);
    }, hover: function(t3, e3) {
      return this.mouseenter(t3).mouseleave(e3 || t3);
    } }), M.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(t3, e3) {
      M.fn[e3] = function(t4, n3) {
        return arguments.length > 0 ? this.on(e3, null, t4, n3) : this.trigger(e3);
      };
    });
    var tn = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    M.proxy = function(t3, e3) {
      var n3, r2, a2;
      if ("string" == typeof e3 && (n3 = t3[e3], e3 = t3, t3 = n3), f(t3)) return r2 = i.call(arguments, 2), (a2 = function() {
        return t3.apply(e3 || this, r2.concat(i.call(arguments)));
      }).guid = t3.guid = t3.guid || M.guid++, a2;
    }, M.holdReady = function(t3) {
      t3 ? M.readyWait++ : M.ready(true);
    }, M.isArray = Array.isArray, M.parseJSON = JSON.parse, M.nodeName = T, M.isFunction = f, M.isWindow = m, M.camelCase = et, M.type = x, M.now = Date.now, M.isNumeric = function(t3) {
      var e3 = M.type(t3);
      return ("number" === e3 || "string" === e3) && !isNaN(t3 - parseFloat(t3));
    }, M.trim = function(t3) {
      return null == t3 ? "" : (t3 + "").replace(tn, "$1");
    };
    var en = t2.jQuery, nn = t2.$;
    return M.noConflict = function(e3) {
      return t2.$ === M && (t2.$ = nn), e3 && t2.jQuery === M && (t2.jQuery = en), M;
    }, void 0 === e2 && (t2.jQuery = t2.$ = M), M;
  }, t.exports = e.document ? n(e, true) : function(t2) {
    if (!t2.document) throw new Error("jQuery requires a window with a document");
    return n(t2);
  };
});
var jquery$1 = Object.freeze({ __proto__: null, default: jquery, __moduleExports: jquery });
function mxcadassemblyinit() {
  var t, e = (t = "undefined" != typeof document && document.currentScript ? document.currentScript.src : void 0, "undefined" != typeof __filename && (t = t || __filename), function(e2) {
    var n, r, i;
    e2 = e2 || {}, n || (n = void 0 !== e2 ? e2 : {}), n.ready = new Promise(function(t2, e3) {
      r = t2, i = e3;
    });
    var a, o, s, l, c, u, h = Object.assign({}, n), p = "object" == typeof window, d = "function" == typeof importScripts, f = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, m = "";
    f ? (m = d ? xxxxx("path").dirname(m) + "/" : __dirname + "/", u = () => {
      c || (l = xxxxx("fs"), c = xxxxx("path"));
    }, a = function(t2, e3) {
      var n2 = H(t2);
      return n2 ? e3 ? n2 : n2.toString() : (u(), t2 = c.normalize(t2), l.readFileSync(t2, e3 ? void 0 : "utf8"));
    }, s = (t2) => ((t2 = a(t2, true)).buffer || (t2 = new Uint8Array(t2)), t2), o = (t2, e3, n2) => {
      var r2 = H(t2);
      r2 && e3(r2), u(), t2 = c.normalize(t2), l.readFile(t2, function(t3, r3) {
        t3 ? n2(t3) : e3(r3.buffer);
      });
    }, 1 < process.argv.length && process.argv[1].replace(/\\/g, "/"), process.argv.slice(2), process.on("uncaughtException", function(t2) {
      throw t2;
    }), process.on("unhandledRejection", function(t2) {
      throw t2;
    }), n.inspect = function() {
      return "[Emscripten Module object]";
    }) : (p || d) && (d ? m = self.location.href : "undefined" != typeof document && document.currentScript && (m = document.currentScript.src), t && (m = t), m = 0 !== m.indexOf("blob:") ? m.substr(0, m.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", a = (t2) => {
      try {
        var e3 = new XMLHttpRequest();
        return e3.open("GET", t2, false), e3.send(null), e3.responseText;
      } catch (i2) {
        if (t2 = H(t2)) {
          e3 = [];
          for (var n2 = 0; n2 < t2.length; n2++) {
            var r2 = t2[n2];
            255 < r2 && (r2 &= 255), e3.push(String.fromCharCode(r2));
          }
          return e3.join("");
        }
        throw i2;
      }
    }, d && (s = (t2) => {
      try {
        var e3 = new XMLHttpRequest();
        return e3.open("GET", t2, false), e3.responseType = "arraybuffer", e3.send(null), new Uint8Array(e3.response);
      } catch (e4) {
        if (t2 = H(t2)) return t2;
        throw e4;
      }
    }), o = (t2, e3, n2) => {
      var r2 = new XMLHttpRequest();
      r2.open("GET", t2, true), r2.responseType = "arraybuffer", r2.onload = () => {
        if (200 == r2.status || 0 == r2.status && r2.response) e3(r2.response);
        else {
          var i2 = H(t2);
          i2 ? e3(i2.buffer) : n2();
        }
      }, r2.onerror = n2, r2.send(null);
    }), n.print || console.log.bind(console);
    var g, y = n.printErr || console.warn.bind(console);
    Object.assign(n, h), h = null, n.wasmBinary && (g = n.wasmBinary), n.noExitRuntime;
    var v = Error, x = {};
    g = [], "object" != typeof x && k("no native wasm support detected");
    var w, b, M, _, T, C = false, S = n.INITIAL_MEMORY || 16777216;
    (w = n.wasmMemory ? n.wasmMemory : new function() {
      this.buffer = new ArrayBuffer(S / 65536 * 65536);
    }()) && (b = w.buffer), S = b.byteLength;
    var D = b;
    b = D, n.HEAP8 = M = new Int8Array(D), n.HEAP16 = new Int16Array(D), n.HEAP32 = T = new Int32Array(D), n.HEAPU8 = _ = new Uint8Array(D), n.HEAPU16 = new Uint16Array(D), n.HEAPU32 = new Uint32Array(D), n.HEAPF32 = new Float32Array(D), n.HEAPF64 = new Float64Array(D);
    var E, O = [], A = [], P = [];
    function R() {
      var t2 = n.preRun.shift();
      O.unshift(t2);
    }
    var L = 0, I = null;
    function k(t2) {
      throw n.onAbort && n.onAbort(t2), y(t2 = "Aborted(" + t2 + ")"), C = true, t2 = new v(t2 + ". Build with -s ASSERTIONS=1 for more info."), i(t2), t2;
    }
    n.preloadedImages = {}, n.preloadedAudios = {};
    var j, N = "data:application/octet-stream;base64,";
    if (!(j = "mxcadassembly_min.wasm").startsWith(N)) {
      var V = j;
      j = n.locateFile ? n.locateFile(V, m) : m + V;
    }
    function F() {
      var t2 = j;
      try {
        if (t2 == j && g) return new Uint8Array(g);
        var e3 = H(t2);
        if (e3) return e3;
        if (s) return s(t2);
        throw "both async and sync fetching of the wasm failed";
      } catch (t3) {
        k(t3);
      }
    }
    function B(t2) {
      for (; 0 < t2.length; ) {
        var e3 = t2.shift();
        if ("function" == typeof e3) e3(n);
        else {
          var r2 = e3.U;
          "number" == typeof r2 ? void 0 === e3.G ? z(r2)() : z(r2)(e3.G) : r2(void 0 === e3.G ? null : e3.G);
        }
      }
    }
    var G = [];
    function z(t2) {
      var e3 = G[t2];
      return e3 || (t2 >= G.length && (G.length = t2 + 1), G[t2] = e3 = E.get(t2)), e3;
    }
    var U = "function" == typeof atob ? atob : function(t2) {
      var e3 = "", n2 = 0;
      t2 = t2.replace(/[^A-Za-z0-9\+\/=]/g, "");
      do {
        var r2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(t2.charAt(n2++)), i2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(t2.charAt(n2++)), a2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(t2.charAt(n2++)), o2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(t2.charAt(n2++));
        r2 = r2 << 2 | i2 >> 4, i2 = (15 & i2) << 4 | a2 >> 2;
        var s2 = (3 & a2) << 6 | o2;
        e3 += String.fromCharCode(r2), 64 !== a2 && (e3 += String.fromCharCode(i2)), 64 !== o2 && (e3 += String.fromCharCode(s2));
      } while (n2 < t2.length);
      return e3;
    };
    function H(t2) {
      if (t2.startsWith(N)) {
        if (t2 = t2.slice(N.length), "boolean" == typeof f && f) {
          var e3 = Buffer.from(t2, "base64");
          e3 = new Uint8Array(e3.buffer, e3.byteOffset, e3.byteLength);
        } else try {
          var n2 = U(t2), r2 = new Uint8Array(n2.length);
          for (t2 = 0; t2 < n2.length; ++t2) r2[t2] = n2.charCodeAt(t2);
          e3 = r2;
        } catch (t3) {
          throw Error("Converting base64 string to bytes failed.");
        }
        return e3;
      }
    }
    var W = { f: function(t2) {
      return pt(t2 + 16) + 16;
    }, e: function(t2, e3, n2) {
      throw new function(t3) {
        this.C = t3 - 16, this.P = function(t4) {
          T[this.C + 4 >> 2] = t4;
        }, this.M = function(t4) {
          T[this.C + 8 >> 2] = t4;
        }, this.N = function() {
          T[this.C >> 2] = 0;
        }, this.L = function() {
          M[this.C + 12 >> 0] = 0;
        }, this.O = function() {
          M[this.C + 13 >> 0] = 0;
        }, this.K = function(t4, e4) {
          this.P(t4), this.M(e4), this.N(), this.L(), this.O();
        };
      }(t2).K(e3, n2), t2;
    }, c: function() {
      k("");
    }, d: function(t2, e3, n2) {
      _.copyWithin(t2, e3, e3 + n2);
    }, b: function() {
      k("OOM");
    }, a: w };
    !function() {
      function t2(t3) {
        n.asm = t3.exports, E = n.asm.A, A.unshift(n.asm.g), L--, n.monitorRunDependencies && n.monitorRunDependencies(L), 0 == L && I && (t3 = I, I = null, t3());
      }
      function e3(e4) {
        t2(e4.instance);
      }
      function r2(t3) {
        return function() {
          if (!g && (p || d)) {
            if ("function" == typeof fetch && !j.startsWith("file://")) return fetch(j, { credentials: "same-origin" }).then(function(t4) {
              if (!t4.ok) throw "failed to load wasm binary file at '" + j + "'";
              return t4.arrayBuffer();
            }).catch(function() {
              return F();
            });
            if (o) return new Promise(function(t4, e4) {
              o(j, function(e5) {
                t4(new Uint8Array(e5));
              }, e4);
            });
          }
          return Promise.resolve().then(function() {
            return F();
          });
        }().then(function() {
          return { then: function(t4) {
            t4({ instance: new function() {
              this.exports = function(t5) {
                for (var e4, n2 = new Uint8Array(123), r3 = 25; r3 >= 0; --r3) n2[48 + r3] = 52 + r3, n2[65 + r3] = r3, n2[97 + r3] = 26 + r3;
                function i2(t6, e5, r4) {
                  for (var i3, a3, o2 = 0, s2 = e5, l2 = r4.length, c2 = e5 + (3 * l2 >> 2) - ("=" == r4[l2 - 2]) - ("=" == r4[l2 - 1]); o2 < l2; o2 += 4) i3 = n2[r4.charCodeAt(o2 + 1)], a3 = n2[r4.charCodeAt(o2 + 2)], t6[s2++] = n2[r4.charCodeAt(o2)] << 2 | i3 >> 4, s2 < c2 && (t6[s2++] = i3 << 4 | a3 >> 2), s2 < c2 && (t6[s2++] = a3 << 6 | n2[r4.charCodeAt(o2 + 3)]);
                }
                return n2[43] = 62, n2[47] = 63, function(t6) {
                  var n3 = t6.a.buffer, r4 = new Int8Array(n3), a3 = new Int16Array(n3), o2 = new Int32Array(n3), s2 = new Uint8Array(n3), l2 = new Uint32Array(n3), c2 = new Float64Array(n3), u2 = Math.imul, h2 = t6.abort, p2 = t6.b, d2 = t6.c, f2 = t6.d, m2 = t6.e, g2 = t6.f, y2 = 5245008;
                  function v2(t7) {
                    var e5, n4 = 0, r5 = 0, i3 = 0, a4 = 0, c3 = 0, u3 = 0, h3 = 0, p3 = 0, d3 = 0, f3 = 0;
                    y2 = e5 = y2 - 16 | 0;
                    t: {
                      e: {
                        n: {
                          r: {
                            i: {
                              a: {
                                o: {
                                  s: {
                                    l: {
                                      c: {
                                        u: {
                                          if ((t7 |= 0) >>> 0 <= 244) {
                                            if (3 & (n4 = (a4 = o2[404]) >>> (r5 = (u3 = t7 >>> 0 < 11 ? 16 : t7 + 11 & -8) >>> 3 | 0) | 0)) {
                                              t7 = (c3 = o2[1664 + (n4 = (i3 = r5 + (1 & (-1 ^ n4)) | 0) << 3) >> 2]) + 8 | 0, (0 | (r5 = o2[c3 + 8 >> 2])) != (0 | (n4 = n4 + 1656 | 0)) ? (o2[r5 + 12 >> 2] = n4, o2[n4 + 8 >> 2] = r5) : o2[404] = O2(i3) & a4, n4 = i3 << 3, o2[c3 + 4 >> 2] = 3 | n4, o2[4 + (n4 = n4 + c3 | 0) >> 2] = 1 | o2[n4 + 4 >> 2];
                                              break t;
                                            }
                                            if ((f3 = o2[406]) >>> 0 >= u3 >>> 0) break u;
                                            if (n4) {
                                              r5 = t7 = (n4 = (0 - (t7 = (0 - (t7 = 2 << r5) | t7) & n4 << r5) & t7) - 1 | 0) >>> 12 & 16, r5 |= t7 = (n4 = n4 >>> t7 | 0) >>> 5 & 8, r5 |= t7 = (n4 = n4 >>> t7 | 0) >>> 2 & 4, d3 = o2[1664 + (t7 = (r5 = ((r5 |= t7 = (n4 = n4 >>> t7 | 0) >>> 1 & 2) | (t7 = (n4 = n4 >>> t7 | 0) >>> 1 & 1)) + (n4 >>> t7 | 0) | 0) << 3) >> 2], (0 | (n4 = o2[d3 + 8 >> 2])) != (0 | (t7 = t7 + 1656 | 0)) ? (o2[n4 + 12 >> 2] = t7, o2[t7 + 8 >> 2] = n4) : (a4 = O2(r5) & a4, o2[404] = a4), t7 = d3 + 8 | 0, o2[d3 + 4 >> 2] = 3 | u3, c3 = (n4 = r5 << 3) - u3 | 0, o2[4 + (i3 = u3 + d3 | 0) >> 2] = 1 | c3, o2[n4 + d3 >> 2] = c3, f3 && (r5 = 1656 + ((n4 = f3 >>> 3 | 0) << 3) | 0, d3 = o2[409], (n4 = 1 << n4) & a4 ? n4 = o2[r5 + 8 >> 2] : (o2[404] = n4 | a4, n4 = r5), o2[r5 + 8 >> 2] = d3, o2[n4 + 12 >> 2] = d3, o2[d3 + 12 >> 2] = r5, o2[d3 + 8 >> 2] = n4), o2[409] = i3, o2[406] = c3;
                                              break t;
                                            }
                                            if (!(h3 = o2[405])) break u;
                                            for (r5 = t7 = (n4 = (0 - h3 & h3) - 1 | 0) >>> 12 & 16, r5 |= t7 = (n4 = n4 >>> t7 | 0) >>> 5 & 8, r5 |= t7 = (n4 = n4 >>> t7 | 0) >>> 2 & 4, n4 = o2[1920 + (((r5 |= t7 = (n4 = n4 >>> t7 | 0) >>> 1 & 2) | (t7 = (n4 = n4 >>> t7 | 0) >>> 1 & 1)) + (n4 >>> t7 | 0) << 2) >> 2], i3 = (-8 & o2[n4 + 4 >> 2]) - u3 | 0, r5 = n4; (t7 = o2[r5 + 16 >> 2]) || (t7 = o2[r5 + 20 >> 2]); ) i3 = (c3 = (r5 = (-8 & o2[t7 + 4 >> 2]) - u3 | 0) >>> 0 < i3 >>> 0) ? r5 : i3, n4 = c3 ? t7 : n4, r5 = t7;
                                            if (p3 = o2[n4 + 24 >> 2], (0 | (c3 = o2[n4 + 12 >> 2])) != (0 | n4)) {
                                              t7 = o2[n4 + 8 >> 2], o2[t7 + 12 >> 2] = c3, o2[c3 + 8 >> 2] = t7;
                                              break e;
                                            }
                                            if (!(t7 = o2[(r5 = n4 + 20 | 0) >> 2])) {
                                              if (!(t7 = o2[n4 + 16 >> 2])) break c;
                                              r5 = n4 + 16 | 0;
                                            }
                                            for (; d3 = r5, c3 = t7, (t7 = o2[(r5 = t7 + 20 | 0) >> 2]) || (r5 = c3 + 16 | 0, t7 = o2[c3 + 16 >> 2]); ) ;
                                            o2[d3 >> 2] = 0;
                                            break e;
                                          }
                                          if (u3 = -1, !(t7 >>> 0 > 4294967231) && (u3 = -8 & (t7 = t7 + 11 | 0), p3 = o2[405])) {
                                            i3 = 0 - u3 | 0, a4 = 0, u3 >>> 0 < 256 || (a4 = 31, u3 >>> 0 > 16777215 || (t7 = t7 >>> 8 | 0, t7 <<= d3 = t7 + 1048320 >>> 16 & 8, a4 = 28 + ((t7 = ((t7 <<= r5 = t7 + 520192 >>> 16 & 4) << (n4 = t7 + 245760 >>> 16 & 2) >>> 15 | 0) - (n4 | r5 | d3) | 0) << 1 | u3 >>> t7 + 21 & 1) | 0));
                                            h: {
                                              p: {
                                                if (r5 = o2[1920 + (a4 << 2) >> 2]) for (t7 = 0, n4 = u3 << (31 == (0 | a4) ? 0 : 25 - (a4 >>> 1 | 0) | 0); ; ) {
                                                  if (!((d3 = (h3 = -8 & o2[r5 + 4 >> 2]) - u3 | 0) >>> 0 >= i3 >>> 0) && (i3 = d3, c3 = r5, (0 | u3) == (0 | h3))) {
                                                    i3 = 0, t7 = r5;
                                                    break p;
                                                  }
                                                  if (d3 = o2[r5 + 20 >> 2], r5 = o2[16 + ((n4 >>> 29 & 4) + r5 | 0) >> 2], t7 = d3 ? (0 | d3) == (0 | r5) ? t7 : d3 : t7, n4 <<= 1, !r5) break;
                                                }
                                                else t7 = 0;
                                                if (!(t7 | c3)) {
                                                  if (c3 = 0, !(t7 = (0 - (t7 = 2 << a4) | t7) & p3)) break u;
                                                  r5 = t7 = (n4 = (t7 & 0 - t7) - 1 | 0) >>> 12 & 16, r5 |= t7 = (n4 = n4 >>> t7 | 0) >>> 5 & 8, r5 |= t7 = (n4 = n4 >>> t7 | 0) >>> 2 & 4, t7 = o2[1920 + (((r5 |= t7 = (n4 = n4 >>> t7 | 0) >>> 1 & 2) | (t7 = (n4 = n4 >>> t7 | 0) >>> 1 & 1)) + (n4 >>> t7 | 0) << 2) >> 2];
                                                }
                                                if (!t7) break h;
                                              }
                                              for (; i3 = (r5 = (n4 = (-8 & o2[t7 + 4 >> 2]) - u3 | 0) >>> 0 < i3 >>> 0) ? n4 : i3, c3 = r5 ? t7 : c3, t7 = (n4 = o2[t7 + 16 >> 2]) || o2[t7 + 20 >> 2]; ) ;
                                            }
                                            if (!(!c3 | o2[406] - u3 >>> 0 <= i3 >>> 0)) {
                                              if (a4 = o2[c3 + 24 >> 2], (0 | c3) != (0 | (n4 = o2[c3 + 12 >> 2]))) {
                                                t7 = o2[c3 + 8 >> 2], o2[t7 + 12 >> 2] = n4, o2[n4 + 8 >> 2] = t7;
                                                break n;
                                              }
                                              if (!(t7 = o2[(r5 = c3 + 20 | 0) >> 2])) {
                                                if (!(t7 = o2[c3 + 16 >> 2])) break l;
                                                r5 = c3 + 16 | 0;
                                              }
                                              for (; d3 = r5, n4 = t7, (t7 = o2[(r5 = t7 + 20 | 0) >> 2]) || (r5 = n4 + 16 | 0, t7 = o2[n4 + 16 >> 2]); ) ;
                                              o2[d3 >> 2] = 0;
                                              break n;
                                            }
                                          }
                                        }
                                        if ((r5 = o2[406]) >>> 0 >= u3 >>> 0) {
                                          i3 = o2[409], (n4 = r5 - u3 | 0) >>> 0 >= 16 ? (o2[406] = n4, t7 = i3 + u3 | 0, o2[409] = t7, o2[t7 + 4 >> 2] = 1 | n4, o2[r5 + i3 >> 2] = n4, o2[i3 + 4 >> 2] = 3 | u3) : (o2[409] = 0, o2[406] = 0, o2[i3 + 4 >> 2] = 3 | r5, o2[4 + (t7 = r5 + i3 | 0) >> 2] = 1 | o2[t7 + 4 >> 2]), t7 = i3 + 8 | 0;
                                          break t;
                                        }
                                        if ((p3 = o2[407]) >>> 0 > u3 >>> 0) {
                                          n4 = p3 - u3 | 0, o2[407] = n4, t7 = (r5 = o2[410]) + u3 | 0, o2[410] = t7, o2[t7 + 4 >> 2] = 1 | n4, o2[r5 + 4 >> 2] = 3 | u3, t7 = r5 + 8 | 0;
                                          break t;
                                        }
                                        if (t7 = 0, h3 = u3 + 47 | 0, o2[522] ? r5 = o2[524] : (o2[525] = -1, o2[526] = -1, o2[523] = 4096, o2[524] = 4096, o2[522] = e5 + 12 & -16 ^ 1431655768, o2[527] = 0, o2[515] = 0, r5 = 4096), (r5 = (d3 = h3 + r5 | 0) & (c3 = 0 - r5 | 0)) >>> 0 <= u3 >>> 0) break t;
                                        if ((i3 = o2[514]) && (a4 = (n4 = o2[512]) + r5 | 0) >>> 0 > i3 >>> 0 | n4 >>> 0 >= a4 >>> 0) break t;
                                        if (4 & s2[2060]) break a;
                                        u: {
                                          h: {
                                            if (i3 = o2[410]) for (t7 = 2064; ; ) {
                                              if ((n4 = o2[t7 >> 2]) >>> 0 <= i3 >>> 0 & i3 >>> 0 < n4 + o2[t7 + 4 >> 2] >>> 0) break h;
                                              if (!(t7 = o2[t7 + 8 >> 2])) break;
                                            }
                                            if (-1 == (0 | (n4 = S2(0)))) break o;
                                            if (a4 = r5, (t7 = (i3 = o2[523]) - 1 | 0) & n4 && (a4 = (r5 - n4 | 0) + (t7 + n4 & 0 - i3) | 0), a4 >>> 0 <= u3 >>> 0 | a4 >>> 0 > 2147483646) break o;
                                            if ((i3 = o2[514]) && i3 >>> 0 < (c3 = (t7 = o2[512]) + a4 | 0) >>> 0 | t7 >>> 0 >= c3 >>> 0) break o;
                                            if ((0 | n4) != (0 | (t7 = S2(a4)))) break u;
                                            break i;
                                          }
                                          if ((a4 = c3 & d3 - p3) >>> 0 > 2147483646) break o;
                                          if ((0 | (n4 = S2(a4))) == (o2[t7 >> 2] + o2[t7 + 4 >> 2] | 0)) break s;
                                          t7 = n4;
                                        }
                                        if (!(-1 == (0 | t7) | u3 + 48 >>> 0 <= a4 >>> 0)) {
                                          if ((n4 = (n4 = o2[524]) + (h3 - a4 | 0) & 0 - n4) >>> 0 > 2147483646) {
                                            n4 = t7;
                                            break i;
                                          }
                                          if (-1 != (0 | S2(n4))) {
                                            a4 = n4 + a4 | 0, n4 = t7;
                                            break i;
                                          }
                                          S2(0 - a4 | 0);
                                          break o;
                                        }
                                        if (n4 = t7, -1 != (0 | t7)) break i;
                                        break o;
                                      }
                                      c3 = 0;
                                      break e;
                                    }
                                    n4 = 0;
                                    break n;
                                  }
                                  if (-1 != (0 | n4)) break i;
                                }
                                o2[515] = 4 | o2[515];
                              }
                              if (r5 >>> 0 > 2147483646) break r;
                              if (-1 == (0 | (n4 = S2(r5))) | -1 == (0 | (t7 = S2(0))) | t7 >>> 0 <= n4 >>> 0) break r;
                              if ((a4 = t7 - n4 | 0) >>> 0 <= u3 + 40 >>> 0) break r;
                            }
                            t7 = o2[512] + a4 | 0, o2[512] = t7, t7 >>> 0 > l2[513] && (o2[513] = t7);
                            i: {
                              a: {
                                o: {
                                  if (h3 = o2[410]) {
                                    for (t7 = 2064; ; ) {
                                      if (((i3 = o2[t7 >> 2]) + (r5 = o2[t7 + 4 >> 2]) | 0) == (0 | n4)) break o;
                                      if (!(t7 = o2[t7 + 8 >> 2])) break;
                                    }
                                    break a;
                                  }
                                  for ((t7 = o2[408]) >>> 0 <= n4 >>> 0 && t7 || (o2[408] = n4), t7 = 0, o2[517] = a4, o2[516] = n4, o2[412] = -1, o2[413] = o2[522], o2[519] = 0; r5 = 1656 + (i3 = t7 << 3) | 0, o2[i3 + 1664 >> 2] = r5, o2[i3 + 1668 >> 2] = r5, 32 != (0 | (t7 = t7 + 1 | 0)); ) ;
                                  r5 = (i3 = a4 - 40 | 0) - (t7 = n4 + 8 & 7 ? -8 - n4 & 7 : 0) | 0, o2[407] = r5, t7 = t7 + n4 | 0, o2[410] = t7, o2[t7 + 4 >> 2] = 1 | r5, o2[4 + (n4 + i3 | 0) >> 2] = 40, o2[411] = o2[526];
                                  break i;
                                }
                                if (!(8 & s2[t7 + 12 | 0] | i3 >>> 0 > h3 >>> 0 | n4 >>> 0 <= h3 >>> 0)) {
                                  o2[t7 + 4 >> 2] = r5 + a4, r5 = (t7 = h3 + 8 & 7 ? -8 - h3 & 7 : 0) + h3 | 0, o2[410] = r5, t7 = (n4 = o2[407] + a4 | 0) - t7 | 0, o2[407] = t7, o2[r5 + 4 >> 2] = 1 | t7, o2[4 + (n4 + h3 | 0) >> 2] = 40, o2[411] = o2[526];
                                  break i;
                                }
                              }
                              l2[408] > n4 >>> 0 && (o2[408] = n4), r5 = n4 + a4 | 0, t7 = 2064;
                              a: {
                                o: {
                                  s: {
                                    l: {
                                      c: {
                                        u: {
                                          for (; ; ) {
                                            if ((0 | r5) != o2[t7 >> 2]) {
                                              if (t7 = o2[t7 + 8 >> 2]) continue;
                                              break u;
                                            }
                                            break;
                                          }
                                          if (!(8 & s2[t7 + 12 | 0])) break c;
                                        }
                                        for (t7 = 2064; ; ) {
                                          if ((r5 = o2[t7 >> 2]) >>> 0 <= h3 >>> 0 && (c3 = r5 + o2[t7 + 4 >> 2] | 0) >>> 0 > h3 >>> 0) break l;
                                          t7 = o2[t7 + 8 >> 2];
                                        }
                                      }
                                      if (o2[t7 >> 2] = n4, o2[t7 + 4 >> 2] = o2[t7 + 4 >> 2] + a4, o2[4 + (d3 = (n4 + 8 & 7 ? -8 - n4 & 7 : 0) + n4 | 0) >> 2] = 3 | u3, u3 = (a4 = r5 + (r5 + 8 & 7 ? -8 - r5 & 7 : 0) | 0) - (p3 = u3 + d3 | 0) | 0, (0 | a4) == (0 | h3)) {
                                        o2[410] = p3, t7 = o2[407] + u3 | 0, o2[407] = t7, o2[p3 + 4 >> 2] = 1 | t7;
                                        break o;
                                      }
                                      if (o2[409] == (0 | a4)) {
                                        o2[409] = p3, t7 = o2[406] + u3 | 0, o2[406] = t7, o2[p3 + 4 >> 2] = 1 | t7, o2[t7 + p3 >> 2] = t7;
                                        break o;
                                      }
                                      if (1 == (3 & (t7 = o2[a4 + 4 >> 2]))) {
                                        c3 = -8 & t7;
                                        c: if (t7 >>> 0 <= 255) {
                                          if (r5 = o2[a4 + 8 >> 2], t7 = t7 >>> 3 | 0, (0 | (n4 = o2[a4 + 12 >> 2])) == (0 | r5)) {
                                            o2[404] = o2[404] & O2(t7);
                                            break c;
                                          }
                                          o2[r5 + 12 >> 2] = n4, o2[n4 + 8 >> 2] = r5;
                                        } else {
                                          if (h3 = o2[a4 + 24 >> 2], (0 | a4) == (0 | (n4 = o2[a4 + 12 >> 2]))) if ((i3 = o2[(t7 = a4 + 20 | 0) >> 2]) || (i3 = o2[(t7 = a4 + 16 | 0) >> 2])) {
                                            for (; r5 = t7, (i3 = o2[(t7 = (n4 = i3) + 20 | 0) >> 2]) || (t7 = n4 + 16 | 0, i3 = o2[n4 + 16 >> 2]); ) ;
                                            o2[r5 >> 2] = 0;
                                          } else n4 = 0;
                                          else t7 = o2[a4 + 8 >> 2], o2[t7 + 12 >> 2] = n4, o2[n4 + 8 >> 2] = t7;
                                          if (h3) {
                                            r5 = o2[a4 + 28 >> 2];
                                            u: {
                                              if (o2[(t7 = 1920 + (r5 << 2) | 0) >> 2] == (0 | a4)) {
                                                if (o2[t7 >> 2] = n4, n4) break u;
                                                o2[405] = o2[405] & O2(r5);
                                                break c;
                                              }
                                              if (o2[h3 + (o2[h3 + 16 >> 2] == (0 | a4) ? 16 : 20) >> 2] = n4, !n4) break c;
                                            }
                                            o2[n4 + 24 >> 2] = h3, (t7 = o2[a4 + 16 >> 2]) && (o2[n4 + 16 >> 2] = t7, o2[t7 + 24 >> 2] = n4), (t7 = o2[a4 + 20 >> 2]) && (o2[n4 + 20 >> 2] = t7, o2[t7 + 24 >> 2] = n4);
                                          }
                                        }
                                        u3 = c3 + u3 | 0, a4 = a4 + c3 | 0;
                                      }
                                      if (o2[a4 + 4 >> 2] = -2 & o2[a4 + 4 >> 2], o2[p3 + 4 >> 2] = 1 | u3, o2[u3 + p3 >> 2] = u3, u3 >>> 0 <= 255) {
                                        n4 = 1656 + ((t7 = u3 >>> 3 | 0) << 3) | 0, (r5 = o2[404]) & (t7 = 1 << t7) ? t7 = o2[n4 + 8 >> 2] : (o2[404] = t7 | r5, t7 = n4), o2[n4 + 8 >> 2] = p3, o2[t7 + 12 >> 2] = p3, o2[p3 + 12 >> 2] = n4, o2[p3 + 8 >> 2] = t7;
                                        break o;
                                      }
                                      if (t7 = 31, u3 >>> 0 <= 16777215 && (t7 = u3 >>> 8 | 0, t7 <<= i3 = t7 + 1048320 >>> 16 & 8, t7 = 28 + ((t7 = ((t7 <<= r5 = t7 + 520192 >>> 16 & 4) << (n4 = t7 + 245760 >>> 16 & 2) >>> 15 | 0) - (n4 | r5 | i3) | 0) << 1 | u3 >>> t7 + 21 & 1) | 0), o2[p3 + 28 >> 2] = t7, o2[p3 + 16 >> 2] = 0, o2[p3 + 20 >> 2] = 0, i3 = 1920 + (t7 << 2) | 0, (r5 = o2[405]) & (n4 = 1 << t7)) {
                                        for (t7 = u3 << (31 == (0 | t7) ? 0 : 25 - (t7 >>> 1 | 0) | 0), n4 = o2[i3 >> 2]; ; ) {
                                          if (r5 = n4, (-8 & o2[n4 + 4 >> 2]) == (0 | u3)) break s;
                                          if (n4 = t7 >>> 29 | 0, t7 <<= 1, !(n4 = o2[16 + (i3 = r5 + (4 & n4) | 0) >> 2])) break;
                                        }
                                        o2[i3 + 16 >> 2] = p3, o2[p3 + 24 >> 2] = r5;
                                      } else o2[405] = n4 | r5, o2[i3 >> 2] = p3, o2[p3 + 24 >> 2] = i3;
                                      o2[p3 + 12 >> 2] = p3, o2[p3 + 8 >> 2] = p3;
                                      break o;
                                    }
                                    for (r5 = (i3 = a4 - 40 | 0) - (t7 = n4 + 8 & 7 ? -8 - n4 & 7 : 0) | 0, o2[407] = r5, t7 = t7 + n4 | 0, o2[410] = t7, o2[t7 + 4 >> 2] = 1 | r5, o2[4 + (n4 + i3 | 0) >> 2] = 40, o2[411] = o2[526], o2[(r5 = (t7 = (c3 + (c3 - 39 & 7 ? 39 - c3 & 7 : 0) | 0) - 47 | 0) >>> 0 < h3 + 16 >>> 0 ? h3 : t7) + 4 >> 2] = 27, t7 = o2[519], o2[r5 + 16 >> 2] = o2[518], o2[r5 + 20 >> 2] = t7, t7 = o2[517], o2[r5 + 8 >> 2] = o2[516], o2[r5 + 12 >> 2] = t7, o2[518] = r5 + 8, o2[517] = a4, o2[516] = n4, o2[519] = 0, t7 = r5 + 24 | 0; o2[t7 + 4 >> 2] = 7, n4 = t7 + 8 | 0, t7 = t7 + 4 | 0, n4 >>> 0 < c3 >>> 0; ) ;
                                    if ((0 | r5) == (0 | h3)) break i;
                                    if (o2[r5 + 4 >> 2] = -2 & o2[r5 + 4 >> 2], c3 = r5 - h3 | 0, o2[h3 + 4 >> 2] = 1 | c3, o2[r5 >> 2] = c3, c3 >>> 0 <= 255) {
                                      n4 = 1656 + ((t7 = c3 >>> 3 | 0) << 3) | 0, (r5 = o2[404]) & (t7 = 1 << t7) ? t7 = o2[n4 + 8 >> 2] : (o2[404] = t7 | r5, t7 = n4), o2[n4 + 8 >> 2] = h3, o2[t7 + 12 >> 2] = h3, o2[h3 + 12 >> 2] = n4, o2[h3 + 8 >> 2] = t7;
                                      break i;
                                    }
                                    if (t7 = 31, o2[h3 + 16 >> 2] = 0, o2[h3 + 20 >> 2] = 0, c3 >>> 0 <= 16777215 && (t7 = c3 >>> 8 | 0, t7 <<= i3 = t7 + 1048320 >>> 16 & 8, t7 = 28 + ((t7 = ((t7 <<= r5 = t7 + 520192 >>> 16 & 4) << (n4 = t7 + 245760 >>> 16 & 2) >>> 15 | 0) - (n4 | r5 | i3) | 0) << 1 | c3 >>> t7 + 21 & 1) | 0), o2[h3 + 28 >> 2] = t7, i3 = 1920 + (t7 << 2) | 0, (r5 = o2[405]) & (n4 = 1 << t7)) {
                                      for (t7 = c3 << (31 == (0 | t7) ? 0 : 25 - (t7 >>> 1 | 0) | 0), n4 = o2[i3 >> 2]; ; ) {
                                        if (r5 = n4, (0 | c3) == (-8 & o2[n4 + 4 >> 2])) break a;
                                        if (n4 = t7 >>> 29 | 0, t7 <<= 1, !(n4 = o2[16 + (i3 = r5 + (4 & n4) | 0) >> 2])) break;
                                      }
                                      o2[i3 + 16 >> 2] = h3, o2[h3 + 24 >> 2] = r5;
                                    } else o2[405] = n4 | r5, o2[i3 >> 2] = h3, o2[h3 + 24 >> 2] = i3;
                                    o2[h3 + 12 >> 2] = h3, o2[h3 + 8 >> 2] = h3;
                                    break i;
                                  }
                                  t7 = o2[r5 + 8 >> 2], o2[t7 + 12 >> 2] = p3, o2[r5 + 8 >> 2] = p3, o2[p3 + 24 >> 2] = 0, o2[p3 + 12 >> 2] = r5, o2[p3 + 8 >> 2] = t7;
                                }
                                t7 = d3 + 8 | 0;
                                break t;
                              }
                              t7 = o2[r5 + 8 >> 2], o2[t7 + 12 >> 2] = h3, o2[r5 + 8 >> 2] = h3, o2[h3 + 24 >> 2] = 0, o2[h3 + 12 >> 2] = r5, o2[h3 + 8 >> 2] = t7;
                            }
                            if (!((t7 = o2[407]) >>> 0 <= u3 >>> 0)) {
                              n4 = t7 - u3 | 0, o2[407] = n4, t7 = (r5 = o2[410]) + u3 | 0, o2[410] = t7, o2[t7 + 4 >> 2] = 1 | n4, o2[r5 + 4 >> 2] = 3 | u3, t7 = r5 + 8 | 0;
                              break t;
                            }
                          }
                          o2[403] = 48, t7 = 0;
                          break t;
                        }
                        n: if (a4) {
                          r5 = o2[c3 + 28 >> 2];
                          r: {
                            if (o2[(t7 = 1920 + (r5 << 2) | 0) >> 2] == (0 | c3)) {
                              if (o2[t7 >> 2] = n4, n4) break r;
                              p3 = O2(r5) & p3, o2[405] = p3;
                              break n;
                            }
                            if (o2[a4 + (o2[a4 + 16 >> 2] == (0 | c3) ? 16 : 20) >> 2] = n4, !n4) break n;
                          }
                          o2[n4 + 24 >> 2] = a4, (t7 = o2[c3 + 16 >> 2]) && (o2[n4 + 16 >> 2] = t7, o2[t7 + 24 >> 2] = n4), (t7 = o2[c3 + 20 >> 2]) && (o2[n4 + 20 >> 2] = t7, o2[t7 + 24 >> 2] = n4);
                        }
                        n: if (i3 >>> 0 <= 15) t7 = i3 + u3 | 0, o2[c3 + 4 >> 2] = 3 | t7, o2[4 + (t7 = t7 + c3 | 0) >> 2] = 1 | o2[t7 + 4 >> 2];
                        else if (o2[c3 + 4 >> 2] = 3 | u3, o2[4 + (a4 = c3 + u3 | 0) >> 2] = 1 | i3, o2[a4 + i3 >> 2] = i3, i3 >>> 0 <= 255) n4 = 1656 + ((t7 = i3 >>> 3 | 0) << 3) | 0, (r5 = o2[404]) & (t7 = 1 << t7) ? t7 = o2[n4 + 8 >> 2] : (o2[404] = t7 | r5, t7 = n4), o2[n4 + 8 >> 2] = a4, o2[t7 + 12 >> 2] = a4, o2[a4 + 12 >> 2] = n4, o2[a4 + 8 >> 2] = t7;
                        else {
                          t7 = 31, i3 >>> 0 <= 16777215 && (t7 = i3 >>> 8 | 0, t7 <<= d3 = t7 + 1048320 >>> 16 & 8, t7 = 28 + ((t7 = ((t7 <<= r5 = t7 + 520192 >>> 16 & 4) << (n4 = t7 + 245760 >>> 16 & 2) >>> 15 | 0) - (n4 | r5 | d3) | 0) << 1 | i3 >>> t7 + 21 & 1) | 0), o2[a4 + 28 >> 2] = t7, o2[a4 + 16 >> 2] = 0, o2[a4 + 20 >> 2] = 0, n4 = 1920 + (t7 << 2) | 0;
                          r: {
                            if ((r5 = 1 << t7) & p3) {
                              for (t7 = i3 << (31 == (0 | t7) ? 0 : 25 - (t7 >>> 1 | 0) | 0), r5 = o2[n4 >> 2]; ; ) {
                                if ((-8 & o2[(n4 = r5) + 4 >> 2]) == (0 | i3)) break r;
                                if (r5 = t7 >>> 29 | 0, t7 <<= 1, !(r5 = o2[16 + (d3 = (4 & r5) + n4 | 0) >> 2])) break;
                              }
                              o2[d3 + 16 >> 2] = a4;
                            } else o2[405] = r5 | p3, o2[n4 >> 2] = a4;
                            o2[a4 + 24 >> 2] = n4, o2[a4 + 12 >> 2] = a4, o2[a4 + 8 >> 2] = a4;
                            break n;
                          }
                          t7 = o2[n4 + 8 >> 2], o2[t7 + 12 >> 2] = a4, o2[n4 + 8 >> 2] = a4, o2[a4 + 24 >> 2] = 0, o2[a4 + 12 >> 2] = n4, o2[a4 + 8 >> 2] = t7;
                        }
                        t7 = c3 + 8 | 0;
                        break t;
                      }
                      e: if (p3) {
                        r5 = o2[n4 + 28 >> 2];
                        n: {
                          if (o2[(t7 = 1920 + (r5 << 2) | 0) >> 2] == (0 | n4)) {
                            if (o2[t7 >> 2] = c3, c3) break n;
                            o2[405] = O2(r5) & h3;
                            break e;
                          }
                          if (o2[p3 + (o2[p3 + 16 >> 2] == (0 | n4) ? 16 : 20) >> 2] = c3, !c3) break e;
                        }
                        o2[c3 + 24 >> 2] = p3, (t7 = o2[n4 + 16 >> 2]) && (o2[c3 + 16 >> 2] = t7, o2[t7 + 24 >> 2] = c3), (t7 = o2[n4 + 20 >> 2]) && (o2[c3 + 20 >> 2] = t7, o2[t7 + 24 >> 2] = c3);
                      }
                      i3 >>> 0 <= 15 ? (t7 = i3 + u3 | 0, o2[n4 + 4 >> 2] = 3 | t7, o2[4 + (t7 = t7 + n4 | 0) >> 2] = 1 | o2[t7 + 4 >> 2]) : (o2[n4 + 4 >> 2] = 3 | u3, o2[4 + (c3 = n4 + u3 | 0) >> 2] = 1 | i3, o2[i3 + c3 >> 2] = i3, f3 && (r5 = 1656 + ((t7 = f3 >>> 3 | 0) << 3) | 0, d3 = o2[409], (t7 = 1 << t7) & a4 ? t7 = o2[r5 + 8 >> 2] : (o2[404] = t7 | a4, t7 = r5), o2[r5 + 8 >> 2] = d3, o2[t7 + 12 >> 2] = d3, o2[d3 + 12 >> 2] = r5, o2[d3 + 8 >> 2] = t7), o2[409] = c3, o2[406] = i3), t7 = n4 + 8 | 0;
                    }
                    return y2 = e5 + 16 | 0, 0 | t7;
                  }
                  function x2(t7) {
                    var e5 = 0, n4 = 0, r5 = 0, i3 = 0, a4 = 0, s3 = 0, c3 = 0;
                    t: if (t7) {
                      a4 = (r5 = t7 - 8 | 0) + (t7 = -8 & (e5 = o2[t7 - 4 >> 2])) | 0;
                      e: if (!(1 & e5)) {
                        if (!(3 & e5)) break t;
                        if ((r5 = r5 - (e5 = o2[r5 >> 2]) | 0) >>> 0 < l2[408]) break t;
                        if (t7 = t7 + e5 | 0, o2[409] == (0 | r5)) {
                          if (3 == (3 & (e5 = o2[a4 + 4 >> 2]))) return o2[406] = t7, o2[a4 + 4 >> 2] = -2 & e5, o2[r5 + 4 >> 2] = 1 | t7, void (o2[t7 + r5 >> 2] = t7);
                        } else {
                          if (e5 >>> 0 <= 255) {
                            if (i3 = o2[r5 + 8 >> 2], e5 = e5 >>> 3 | 0, (0 | (n4 = o2[r5 + 12 >> 2])) == (0 | i3)) {
                              o2[404] = o2[404] & O2(e5);
                              break e;
                            }
                            o2[i3 + 12 >> 2] = n4, o2[n4 + 8 >> 2] = i3;
                            break e;
                          }
                          if (c3 = o2[r5 + 24 >> 2], (0 | r5) == (0 | (e5 = o2[r5 + 12 >> 2]))) if ((n4 = o2[(i3 = r5 + 20 | 0) >> 2]) || (n4 = o2[(i3 = r5 + 16 | 0) >> 2])) {
                            for (; s3 = i3, (n4 = o2[(i3 = (e5 = n4) + 20 | 0) >> 2]) || (i3 = e5 + 16 | 0, n4 = o2[e5 + 16 >> 2]); ) ;
                            o2[s3 >> 2] = 0;
                          } else e5 = 0;
                          else n4 = o2[r5 + 8 >> 2], o2[n4 + 12 >> 2] = e5, o2[e5 + 8 >> 2] = n4;
                          if (!c3) break e;
                          i3 = o2[r5 + 28 >> 2];
                          n: {
                            if (o2[(n4 = 1920 + (i3 << 2) | 0) >> 2] == (0 | r5)) {
                              if (o2[n4 >> 2] = e5, e5) break n;
                              o2[405] = o2[405] & O2(i3);
                              break e;
                            }
                            if (o2[c3 + (o2[c3 + 16 >> 2] == (0 | r5) ? 16 : 20) >> 2] = e5, !e5) break e;
                          }
                          if (o2[e5 + 24 >> 2] = c3, (n4 = o2[r5 + 16 >> 2]) && (o2[e5 + 16 >> 2] = n4, o2[n4 + 24 >> 2] = e5), !(n4 = o2[r5 + 20 >> 2])) break e;
                          o2[e5 + 20 >> 2] = n4, o2[n4 + 24 >> 2] = e5;
                        }
                      }
                      if (!(r5 >>> 0 >= a4 >>> 0) && 1 & (e5 = o2[a4 + 4 >> 2])) {
                        e: {
                          if (!(2 & e5)) {
                            if (o2[410] == (0 | a4)) {
                              if (o2[410] = r5, t7 = o2[407] + t7 | 0, o2[407] = t7, o2[r5 + 4 >> 2] = 1 | t7, o2[409] != (0 | r5)) break t;
                              return o2[406] = 0, void (o2[409] = 0);
                            }
                            if (o2[409] == (0 | a4)) return o2[409] = r5, t7 = o2[406] + t7 | 0, o2[406] = t7, o2[r5 + 4 >> 2] = 1 | t7, void (o2[t7 + r5 >> 2] = t7);
                            t7 = (-8 & e5) + t7 | 0;
                            n: if (e5 >>> 0 <= 255) {
                              if (i3 = o2[a4 + 8 >> 2], e5 = e5 >>> 3 | 0, (0 | (n4 = o2[a4 + 12 >> 2])) == (0 | i3)) {
                                o2[404] = o2[404] & O2(e5);
                                break n;
                              }
                              o2[i3 + 12 >> 2] = n4, o2[n4 + 8 >> 2] = i3;
                            } else {
                              if (c3 = o2[a4 + 24 >> 2], (0 | a4) == (0 | (e5 = o2[a4 + 12 >> 2]))) if ((n4 = o2[(i3 = a4 + 20 | 0) >> 2]) || (n4 = o2[(i3 = a4 + 16 | 0) >> 2])) {
                                for (; s3 = i3, (n4 = o2[(i3 = (e5 = n4) + 20 | 0) >> 2]) || (i3 = e5 + 16 | 0, n4 = o2[e5 + 16 >> 2]); ) ;
                                o2[s3 >> 2] = 0;
                              } else e5 = 0;
                              else n4 = o2[a4 + 8 >> 2], o2[n4 + 12 >> 2] = e5, o2[e5 + 8 >> 2] = n4;
                              if (c3) {
                                i3 = o2[a4 + 28 >> 2];
                                r: {
                                  if (o2[(n4 = 1920 + (i3 << 2) | 0) >> 2] == (0 | a4)) {
                                    if (o2[n4 >> 2] = e5, e5) break r;
                                    o2[405] = o2[405] & O2(i3);
                                    break n;
                                  }
                                  if (o2[c3 + (o2[c3 + 16 >> 2] == (0 | a4) ? 16 : 20) >> 2] = e5, !e5) break n;
                                }
                                o2[e5 + 24 >> 2] = c3, (n4 = o2[a4 + 16 >> 2]) && (o2[e5 + 16 >> 2] = n4, o2[n4 + 24 >> 2] = e5), (n4 = o2[a4 + 20 >> 2]) && (o2[e5 + 20 >> 2] = n4, o2[n4 + 24 >> 2] = e5);
                              }
                            }
                            if (o2[r5 + 4 >> 2] = 1 | t7, o2[t7 + r5 >> 2] = t7, o2[409] != (0 | r5)) break e;
                            return void (o2[406] = t7);
                          }
                          o2[a4 + 4 >> 2] = -2 & e5, o2[r5 + 4 >> 2] = 1 | t7, o2[t7 + r5 >> 2] = t7;
                        }
                        if (t7 >>> 0 <= 255) return e5 = 1656 + ((t7 = t7 >>> 3 | 0) << 3) | 0, (n4 = o2[404]) & (t7 = 1 << t7) ? t7 = o2[e5 + 8 >> 2] : (o2[404] = t7 | n4, t7 = e5), o2[e5 + 8 >> 2] = r5, o2[t7 + 12 >> 2] = r5, o2[r5 + 12 >> 2] = e5, void (o2[r5 + 8 >> 2] = t7);
                        i3 = 31, o2[r5 + 16 >> 2] = 0, o2[r5 + 20 >> 2] = 0, t7 >>> 0 <= 16777215 && (e5 = t7 >>> 8 | 0, e5 <<= s3 = e5 + 1048320 >>> 16 & 8, i3 = 28 + ((e5 = ((e5 <<= i3 = e5 + 520192 >>> 16 & 4) << (n4 = e5 + 245760 >>> 16 & 2) >>> 15 | 0) - (n4 | i3 | s3) | 0) << 1 | t7 >>> e5 + 21 & 1) | 0), o2[r5 + 28 >> 2] = i3, s3 = 1920 + (i3 << 2) | 0;
                        e: {
                          n: {
                            if ((n4 = o2[405]) & (e5 = 1 << i3)) {
                              for (i3 = t7 << (31 == (0 | i3) ? 0 : 25 - (i3 >>> 1 | 0) | 0), e5 = o2[s3 >> 2]; ; ) {
                                if (n4 = e5, (-8 & o2[e5 + 4 >> 2]) == (0 | t7)) break n;
                                if (e5 = i3 >>> 29 | 0, i3 <<= 1, !(e5 = o2[16 + (s3 = n4 + (4 & e5) | 0) >> 2])) break;
                              }
                              o2[s3 + 16 >> 2] = r5, o2[r5 + 24 >> 2] = n4;
                            } else o2[405] = e5 | n4, o2[s3 >> 2] = r5, o2[r5 + 24 >> 2] = s3;
                            o2[r5 + 12 >> 2] = r5, o2[r5 + 8 >> 2] = r5;
                            break e;
                          }
                          t7 = o2[n4 + 8 >> 2], o2[t7 + 12 >> 2] = r5, o2[n4 + 8 >> 2] = r5, o2[r5 + 24 >> 2] = 0, o2[r5 + 12 >> 2] = n4, o2[r5 + 8 >> 2] = t7;
                        }
                        t7 = o2[412] - 1 | 0, o2[412] = t7 || -1;
                      }
                    }
                  }
                  function w2(t7, e5, n4) {
                    var i3, a4 = 0, l3 = 0;
                    if (n4 >>> 0 >= 512) return f2(0 | t7, 0 | e5, 0 | n4), t7;
                    i3 = t7 + n4 | 0;
                    t: if (3 & (t7 ^ e5)) if (i3 >>> 0 < 4) n4 = t7;
                    else if ((a4 = i3 - 4 | 0) >>> 0 < t7 >>> 0) n4 = t7;
                    else for (n4 = t7; r4[0 | n4] = s2[0 | e5], r4[n4 + 1 | 0] = s2[e5 + 1 | 0], r4[n4 + 2 | 0] = s2[e5 + 2 | 0], r4[n4 + 3 | 0] = s2[e5 + 3 | 0], e5 = e5 + 4 | 0, a4 >>> 0 >= (n4 = n4 + 4 | 0) >>> 0; ) ;
                    else {
                      e: if (3 & t7) if (n4) for (n4 = t7; ; ) {
                        if (r4[0 | n4] = s2[0 | e5], e5 = e5 + 1 | 0, !(3 & (n4 = n4 + 1 | 0))) break e;
                        if (!(n4 >>> 0 < i3 >>> 0)) break;
                      }
                      else n4 = t7;
                      else n4 = t7;
                      if (!((a4 = -4 & i3) >>> 0 < 64 || (l3 = a4 + -64 | 0) >>> 0 < n4 >>> 0)) for (; o2[n4 >> 2] = o2[e5 >> 2], o2[n4 + 4 >> 2] = o2[e5 + 4 >> 2], o2[n4 + 8 >> 2] = o2[e5 + 8 >> 2], o2[n4 + 12 >> 2] = o2[e5 + 12 >> 2], o2[n4 + 16 >> 2] = o2[e5 + 16 >> 2], o2[n4 + 20 >> 2] = o2[e5 + 20 >> 2], o2[n4 + 24 >> 2] = o2[e5 + 24 >> 2], o2[n4 + 28 >> 2] = o2[e5 + 28 >> 2], o2[n4 + 32 >> 2] = o2[e5 + 32 >> 2], o2[n4 + 36 >> 2] = o2[e5 + 36 >> 2], o2[n4 + 40 >> 2] = o2[e5 + 40 >> 2], o2[n4 + 44 >> 2] = o2[e5 + 44 >> 2], o2[n4 + 48 >> 2] = o2[e5 + 48 >> 2], o2[n4 + 52 >> 2] = o2[e5 + 52 >> 2], o2[n4 + 56 >> 2] = o2[e5 + 56 >> 2], o2[n4 + 60 >> 2] = o2[e5 + 60 >> 2], e5 = e5 - -64 | 0, l3 >>> 0 >= (n4 = n4 - -64 | 0) >>> 0; ) ;
                      if (n4 >>> 0 >= a4 >>> 0) break t;
                      for (; o2[n4 >> 2] = o2[e5 >> 2], e5 = e5 + 4 | 0, a4 >>> 0 > (n4 = n4 + 4 | 0) >>> 0; ) ;
                    }
                    if (n4 >>> 0 < i3 >>> 0) for (; r4[0 | n4] = s2[0 | e5], e5 = e5 + 1 | 0, (0 | i3) != (0 | (n4 = n4 + 1 | 0)); ) ;
                    return t7;
                  }
                  function b2(t7, e5) {
                    var n4 = 0;
                    if (e5 && (r4[0 | t7] = 0, r4[(n4 = t7 + e5 | 0) - 1 | 0] = 0, !(e5 >>> 0 < 3 || (r4[t7 + 2 | 0] = 0, r4[t7 + 1 | 0] = 0, r4[n4 - 3 | 0] = 0, r4[n4 - 2 | 0] = 0, e5 >>> 0 < 7 || (r4[t7 + 3 | 0] = 0, r4[n4 - 4 | 0] = 0, e5 >>> 0 < 9 || (o2[(t7 = (n4 = 0 - t7 & 3) + t7 | 0) >> 2] = 0, o2[(e5 = (n4 = e5 - n4 & -4) + t7 | 0) - 4 >> 2] = 0, n4 >>> 0 < 9 || (o2[t7 + 8 >> 2] = 0, o2[t7 + 4 >> 2] = 0, o2[e5 - 8 >> 2] = 0, o2[e5 - 12 >> 2] = 0, n4 >>> 0 < 25 || (o2[t7 + 24 >> 2] = 0, o2[t7 + 20 >> 2] = 0, o2[t7 + 16 >> 2] = 0, o2[t7 + 12 >> 2] = 0, o2[e5 - 16 >> 2] = 0, o2[e5 - 20 >> 2] = 0, o2[e5 - 24 >> 2] = 0, o2[e5 - 28 >> 2] = 0, (e5 = (e5 = n4) - (n4 = 4 & t7 | 24) | 0) >>> 0 < 32)))))))) for (t7 = t7 + n4 | 0; o2[t7 + 24 >> 2] = 0, o2[t7 + 28 >> 2] = 0, o2[t7 + 16 >> 2] = 0, o2[t7 + 20 >> 2] = 0, o2[t7 + 8 >> 2] = 0, o2[t7 + 12 >> 2] = 0, o2[t7 >> 2] = 0, o2[t7 + 4 >> 2] = 0, t7 = t7 + 32 | 0, (e5 = e5 - 32 | 0) >>> 0 > 31; ) ;
                  }
                  function M2(t7) {
                    var e5, n4 = 0, r5 = 0, i3 = 0;
                    e5 = 0 | g2(8), o2[e5 >> 2] = 1348, o2[e5 >> 2] = 1392;
                    t: {
                      e: {
                        if (3 & (n4 = t7)) for (; ; ) {
                          if (!s2[0 | n4]) break e;
                          if (!(3 & (n4 = n4 + 1 | 0))) break;
                        }
                        for (; r5 = n4, n4 = n4 + 4 | 0, !((-1 ^ (i3 = o2[r5 >> 2])) & i3 - 16843009 & -2139062144); ) ;
                        if (n4 = r5 - t7 | 0, !(255 & i3)) break t;
                        for (; i3 = s2[r5 + 1 | 0], r5 = n4 = r5 + 1 | 0, i3; ) ;
                      }
                      n4 = n4 - t7 | 0;
                    }
                    r5 = D2(n4 + 13 | 0), o2[r5 + 8 >> 2] = 0, o2[r5 + 4 >> 2] = n4, o2[r5 >> 2] = n4, o2[e5 + 4 >> 2] = w2(r5 + 12 | 0, t7, n4 + 1 | 0), o2[e5 >> 2] = 1440, m2(0 | e5, 1472, 1), h2();
                  }
                  function _2(t7, e5, n4, i3) {
                    r4[t7 + 53 | 0] = 1;
                    t: if (o2[t7 + 4 >> 2] == (0 | n4)) {
                      r4[t7 + 52 | 0] = 1;
                      e: {
                        if (!(n4 = o2[t7 + 16 >> 2])) {
                          if (o2[t7 + 36 >> 2] = 1, o2[t7 + 24 >> 2] = i3, o2[t7 + 16 >> 2] = e5, 1 != (0 | i3)) break t;
                          if (1 == o2[t7 + 48 >> 2]) break e;
                          break t;
                        }
                        if ((0 | e5) == (0 | n4)) {
                          if (2 == (0 | (n4 = o2[t7 + 24 >> 2])) && (o2[t7 + 24 >> 2] = i3, n4 = i3), 1 != o2[t7 + 48 >> 2]) break t;
                          if (1 == (0 | n4)) break e;
                          break t;
                        }
                        o2[t7 + 36 >> 2] = o2[t7 + 36 >> 2] + 1;
                      }
                      r4[t7 + 54 | 0] = 1;
                    }
                  }
                  function T2(t7, e5, n4) {
                    var r5 = 0;
                    if (!n4) return o2[t7 + 4 >> 2] == o2[e5 + 4 >> 2];
                    if ((0 | t7) == (0 | e5)) return 1;
                    r5 = o2[t7 + 4 >> 2], t7 = s2[0 | r5], n4 = o2[e5 + 4 >> 2];
                    t: if (!(!t7 | (0 | (e5 = s2[0 | n4])) != (0 | t7))) for (; ; ) {
                      if (e5 = s2[n4 + 1 | 0], !(t7 = s2[r5 + 1 | 0])) break t;
                      if (n4 = n4 + 1 | 0, r5 = r5 + 1 | 0, (0 | t7) != (0 | e5)) break;
                    }
                    return (0 | t7) == (0 | e5);
                  }
                  function C2(t7, e5, n4) {
                    var i3;
                    if (!(i3 = o2[t7 + 16 >> 2])) return o2[t7 + 36 >> 2] = 1, o2[t7 + 24 >> 2] = n4, void (o2[t7 + 16 >> 2] = e5);
                    t: {
                      if ((0 | e5) == (0 | i3)) {
                        if (2 != o2[t7 + 24 >> 2]) break t;
                        return void (o2[t7 + 24 >> 2] = n4);
                      }
                      r4[t7 + 54 | 0] = 1, o2[t7 + 24 >> 2] = 2, o2[t7 + 36 >> 2] = o2[t7 + 36 >> 2] + 1;
                    }
                  }
                  function S2(t7) {
                    var e5, r5;
                    return (t7 = (e5 = o2[377]) + (r5 = t7 + 3 & -4) | 0) >>> 0 <= e5 >>> 0 && r5 || t7 >>> 0 > (n3.byteLength / 65536 | 0) << 16 >>> 0 && !(0 | p2(0 | t7)) ? (o2[403] = 48, -1) : (o2[377] = t7, e5);
                  }
                  function D2(t7) {
                    var e5 = 0;
                    t7 = t7 || 1;
                    t: {
                      for (; ; ) {
                        if (e5 = v2(t7)) break t;
                        if (!(e5 = o2[528])) break;
                        k2[0 | e5]();
                      }
                      d2(), h2();
                    }
                    return e5;
                  }
                  function E2(t7) {
                    var e5, n4;
                    return o2[(t7 |= 0) >> 2] = 1392, e5 = o2[t7 + 4 >> 2] - 12 | 0, n4 = o2[e5 + 8 >> 2] - 1 | 0, o2[e5 + 8 >> 2] = n4, (0 | n4) < 0 && x2(e5), 0 | t7;
                  }
                  function O2(t7) {
                    var e5;
                    return (-1 >>> (e5 = 31 & t7) & -2) << e5 | (-1 << (t7 = 0 - t7 & 31) & -2) >>> t7;
                  }
                  function A2(t7) {
                    (t7 |= 0) && x2(t7);
                  }
                  function P2(t7) {
                    E2(t7 |= 0), x2(t7);
                  }
                  function R2(t7) {
                    return 0 | t7;
                  }
                  function L2(t7) {
                    x2(t7 |= 0);
                  }
                  function I2(t7) {
                  }
                  i2(e4 = s2, 1024, "dmVjdG9yAHN0ZDo6ZXhjZXB0aW9uAGFsbG9jYXRvcjxUPjo6YWxsb2NhdGUoc2l6ZV90IG4pICduJyBleGNlZWRzIG1heGltdW0gc3VwcG9ydGVkIHNpemUATjEwX19jeHhhYml2MTE2X19zaGltX3R5cGVfaW5mb0UAAOgEAABaBAAA3AUAAE4xMF9fY3h4YWJpdjExN19fY2xhc3NfdHlwZV9pbmZvRQAAAOgEAACIBAAAfAQAAAAAAACsBAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAAAAAAMAUAAAIAAAAKAAAABAAAAAUAAAAGAAAACwAAAAwAAAANAAAATjEwX19jeHhhYml2MTIwX19zaV9jbGFzc190eXBlX2luZm9FAAAAAOgEAAAIBQAArAQAAAAAAABgBQAADgAAAA8AAAAQAAAAU3Q5ZXhjZXB0aW9uAAAAAMAEAABQBQAAAAAAAIwFAAABAAAAEQAAABIAAABTdDExbG9naWNfZXJyb3IA6AQAAHwFAABgBQAAAAAAAMAFAAABAAAAEwAAABIAAABTdDEybGVuZ3RoX2Vycm9yAAAAAOgEAACsBQAAjAUAAFN0OXR5cGVfaW5mbwAAAADABAAAzAU="), i2(e4, 1508, "UAhQ");
                  var k2 = function(t7) {
                    return t7.grow = function(t8) {
                      var e5 = this.length;
                      return this.length = this.length + t8, e5;
                    }, t7.set = function(t8, e5) {
                      this[t8] = e5;
                    }, t7.get = function(t8) {
                      return this[t8];
                    }, t7;
                  }([null, E2, R2, L2, I2, I2, function(t7, e5, n4) {
                    n4 |= 0;
                    var r5, i3 = 0, a4 = 0, s3 = 0, l3 = 0;
                    if (y2 = r5 = y2 + -64 | 0, i3 = 1, !T2(t7 |= 0, e5 |= 0, 0) && (i3 = 0, e5)) {
                      y2 = i3 = y2 + -64 | 0, a4 = o2[e5 >> 2], s3 = o2[a4 - 4 >> 2], l3 = o2[a4 - 8 >> 2], o2[i3 + 20 >> 2] = 0, o2[i3 + 16 >> 2] = 1148, o2[i3 + 12 >> 2] = e5, o2[i3 + 8 >> 2] = 1196, a4 = 0, b2(i3 + 24 | 0, 39), e5 = e5 + l3 | 0;
                      t: if (T2(s3, 1196, 0)) o2[i3 + 56 >> 2] = 1, k2[o2[o2[s3 >> 2] + 20 >> 2]](s3, i3 + 8 | 0, e5, e5, 1, 0), a4 = 1 == o2[i3 + 32 >> 2] ? e5 : 0;
                      else {
                        k2[o2[o2[s3 >> 2] + 24 >> 2]](s3, i3 + 8 | 0, e5, 1, 0);
                        e: switch (o2[i3 + 44 >> 2]) {
                          case 0:
                            a4 = 1 == o2[i3 + 48 >> 2] && 1 == o2[i3 + 36 >> 2] && 1 == o2[i3 + 40 >> 2] ? o2[i3 + 28 >> 2] : 0;
                            break t;
                          case 1:
                            break e;
                          default:
                            break t;
                        }
                        1 != o2[i3 + 32 >> 2] && o2[i3 + 48 >> 2] | 1 != o2[i3 + 36 >> 2] | 1 != o2[i3 + 40 >> 2] || (a4 = o2[i3 + 24 >> 2]);
                      }
                      y2 = i3 - -64 | 0, i3 = 0, a4 && (b2(4 | (e5 = r5 + 8 | 0), 52), o2[r5 + 56 >> 2] = 1, o2[r5 + 20 >> 2] = -1, o2[r5 + 16 >> 2] = t7, o2[r5 + 8 >> 2] = a4, k2[o2[o2[a4 >> 2] + 28 >> 2]](a4, e5, o2[n4 >> 2], 1), 1 == (0 | (t7 = o2[r5 + 32 >> 2])) && (o2[n4 >> 2] = o2[r5 + 24 >> 2]), i3 = 1 == (0 | t7));
                    }
                    return y2 = r5 - -64 | 0, 0 | i3;
                  }, function(t7, e5, n4, r5, i3, a4) {
                    n4 |= 0, r5 |= 0, i3 |= 0, a4 |= 0, T2(t7 |= 0, o2[8 + (e5 |= 0) >> 2], a4) && _2(e5, n4, r5, i3);
                  }, function(t7, e5, n4, i3, a4) {
                    if (n4 |= 0, i3 |= 0, a4 |= 0, T2(t7 |= 0, o2[8 + (e5 |= 0) >> 2], a4)) 1 == o2[e5 + 28 >> 2] | o2[e5 + 4 >> 2] != (0 | n4) || (o2[e5 + 28 >> 2] = i3);
                    else t: if (T2(t7, o2[e5 >> 2], a4)) {
                      if (!(o2[e5 + 16 >> 2] != (0 | n4) & o2[e5 + 20 >> 2] != (0 | n4))) {
                        if (1 != (0 | i3)) break t;
                        return void (o2[e5 + 32 >> 2] = 1);
                      }
                      o2[e5 + 20 >> 2] = n4, o2[e5 + 32 >> 2] = i3, o2[e5 + 40 >> 2] = o2[e5 + 40 >> 2] + 1, 1 != o2[e5 + 36 >> 2] | 2 != o2[e5 + 24 >> 2] || (r4[e5 + 54 | 0] = 1), o2[e5 + 44 >> 2] = 4;
                    }
                  }, function(t7, e5, n4, r5) {
                    n4 |= 0, r5 |= 0, T2(t7 |= 0, o2[8 + (e5 |= 0) >> 2], 0) && C2(e5, n4, r5);
                  }, L2, function(t7, e5, n4, r5, i3, a4) {
                    n4 |= 0, r5 |= 0, i3 |= 0, a4 |= 0, T2(t7 |= 0, o2[8 + (e5 |= 0) >> 2], a4) ? _2(e5, n4, r5, i3) : (t7 = o2[t7 + 8 >> 2], k2[o2[o2[t7 >> 2] + 20 >> 2]](t7, e5, n4, r5, i3, a4));
                  }, function(t7, e5, n4, i3, l3) {
                    if (n4 |= 0, i3 |= 0, l3 |= 0, T2(t7 |= 0, o2[8 + (e5 |= 0) >> 2], l3)) 1 == o2[e5 + 28 >> 2] | o2[e5 + 4 >> 2] != (0 | n4) || (o2[e5 + 28 >> 2] = i3);
                    else t: {
                      if (T2(t7, o2[e5 >> 2], l3)) {
                        if (!(o2[e5 + 16 >> 2] != (0 | n4) & o2[e5 + 20 >> 2] != (0 | n4))) {
                          if (1 != (0 | i3)) break t;
                          return void (o2[e5 + 32 >> 2] = 1);
                        }
                        o2[e5 + 32 >> 2] = i3;
                        e: if (4 != o2[e5 + 44 >> 2]) {
                          if (a3[e5 + 52 >> 1] = 0, t7 = o2[t7 + 8 >> 2], k2[o2[o2[t7 >> 2] + 20 >> 2]](t7, e5, n4, n4, 1, l3), s2[e5 + 53 | 0]) {
                            if (o2[e5 + 44 >> 2] = 3, !s2[e5 + 52 | 0]) break e;
                            break t;
                          }
                          o2[e5 + 44 >> 2] = 4;
                        }
                        if (o2[e5 + 20 >> 2] = n4, o2[e5 + 40 >> 2] = o2[e5 + 40 >> 2] + 1, 1 != o2[e5 + 36 >> 2] | 2 != o2[e5 + 24 >> 2]) break t;
                        return void (r4[e5 + 54 | 0] = 1);
                      }
                      t7 = o2[t7 + 8 >> 2], k2[o2[o2[t7 >> 2] + 24 >> 2]](t7, e5, n4, i3, l3);
                    }
                  }, function(t7, e5, n4, r5) {
                    n4 |= 0, r5 |= 0, T2(t7 |= 0, o2[8 + (e5 |= 0) >> 2], 0) ? C2(e5, n4, r5) : (t7 = o2[t7 + 8 >> 2], k2[o2[o2[t7 >> 2] + 28 >> 2]](t7, e5, n4, r5));
                  }, R2, L2, function(t7) {
                    return 1031;
                  }, P2, function(t7) {
                    return o2[4 + (t7 |= 0) >> 2];
                  }, P2]);
                  return { g: function() {
                  }, h: A2, i: function() {
                    var t7;
                    return t7 = D2(24), o2[t7 >> 2] = 0, o2[t7 + 4 >> 2] = 0, o2[t7 + 16 >> 2] = 0, o2[t7 + 20 >> 2] = 0, o2[t7 + 8 >> 2] = 0, o2[t7 + 12 >> 2] = 0, 0 | t7;
                  }, j: function(t7, e5, n4) {
                    var r5;
                    return t7 = +t7, e5 = +e5, n4 = +n4, r5 = D2(24), c2[r5 + 16 >> 3] = n4, c2[r5 + 8 >> 3] = e5, c2[r5 >> 3] = t7, 0 | r5;
                  }, k: function(t7, e5) {
                    e5 |= 0, c2[(t7 |= 0) >> 3] = c2[t7 >> 3] + c2[e5 >> 3], c2[t7 + 8 >> 3] = c2[t7 + 8 >> 3] + c2[e5 + 8 >> 3], c2[t7 + 16 >> 3] = c2[t7 + 16 >> 3] + c2[e5 + 16 >> 3];
                  }, l: function(t7, e5) {
                    e5 |= 0, c2[(t7 |= 0) >> 3] = c2[t7 >> 3] - c2[e5 >> 3], c2[t7 + 8 >> 3] = c2[t7 + 8 >> 3] - c2[e5 + 8 >> 3], c2[t7 + 16 >> 3] = c2[t7 + 16 >> 3] - c2[e5 + 16 >> 3];
                  }, m: function(t7) {
                    return +c2[(t7 |= 0) >> 3];
                  }, n: function(t7, e5) {
                    e5 = +e5, c2[(t7 |= 0) >> 3] = e5;
                  }, o: function(t7) {
                    return +c2[8 + (t7 |= 0) >> 3];
                  }, p: function(t7, e5) {
                    e5 = +e5, c2[8 + (t7 |= 0) >> 3] = e5;
                  }, q: function(t7) {
                    return +c2[16 + (t7 |= 0) >> 3];
                  }, r: function(t7, e5) {
                    e5 = +e5, c2[16 + (t7 |= 0) >> 3] = e5;
                  }, s: A2, t: function() {
                    var t7;
                    return t7 = D2(12), o2[t7 + 8 >> 2] = 0, o2[t7 >> 2] = 0, o2[t7 + 4 >> 2] = 0, 0 | t7;
                  }, u: function(t7, e5) {
                    e5 |= 0;
                    var n4 = 0, r5 = 0, i3 = 0, a4 = 0, s3 = 0, l3 = 0;
                    t: if ((0 | (n4 = o2[4 + (t7 |= 0) >> 2])) == o2[t7 + 8 >> 2]) {
                      e: {
                        if ((i3 = 1 + (n4 = (0 | (l3 = n4 - (r5 = o2[t7 >> 2]) | 0)) / 24 | 0) | 0) >>> 0 < 178956971) {
                          if (a4 = n4 << 1, i3 = n4 >>> 0 < 89478485 ? i3 >>> 0 < a4 >>> 0 ? a4 : i3 : 178956970) {
                            if (i3 >>> 0 >= 178956971) break e;
                            a4 = D2(u2(i3, 24));
                          } else a4 = 0;
                          n4 = a4 + u2(n4, 24) | 0, s3 = o2[e5 + 4 >> 2], o2[n4 >> 2] = o2[e5 >> 2], o2[n4 + 4 >> 2] = s3, s3 = o2[e5 + 20 >> 2], o2[n4 + 16 >> 2] = o2[e5 + 16 >> 2], o2[n4 + 20 >> 2] = s3, s3 = o2[e5 + 12 >> 2], o2[n4 + 8 >> 2] = o2[e5 + 8 >> 2], o2[n4 + 12 >> 2] = s3, e5 = n4 + u2((0 | l3) / -24 | 0, 24) | 0, (0 | l3) > 0 && w2(e5, r5, l3), o2[t7 + 8 >> 2] = a4 + u2(i3, 24), o2[t7 + 4 >> 2] = n4 + 24, o2[t7 >> 2] = e5, r5 && x2(r5);
                          break t;
                        }
                        M2(1024), h2();
                      }
                      M2(1046), h2();
                    } else r5 = o2[e5 + 4 >> 2], o2[n4 >> 2] = o2[e5 >> 2], o2[n4 + 4 >> 2] = r5, r5 = o2[e5 + 20 >> 2], o2[n4 + 16 >> 2] = o2[e5 + 16 >> 2], o2[n4 + 20 >> 2] = r5, r5 = o2[e5 + 12 >> 2], o2[n4 + 8 >> 2] = o2[e5 + 8 >> 2], o2[n4 + 12 >> 2] = r5, o2[t7 + 4 >> 2] = n4 + 24;
                  }, v: function(t7) {
                    var e5 = 0;
                    (t7 |= 0) && ((e5 = o2[t7 >> 2]) && (o2[t7 + 4 >> 2] = e5, x2(e5)), x2(t7));
                  }, w: function() {
                    return 0 | D2(1);
                  }, x: function(t7, e5) {
                    t7 |= 0;
                    var n4 = 0, r5 = 0, i3 = 0, a4 = 0, s3 = 0, l3 = 0, h3 = 0, p3 = 0, d3 = 0, f3 = 0, m3 = 0, g3 = 0;
                    if (t7 = o2[(e5 |= 0) >> 2], (r5 = (0 | (i3 = o2[e5 + 4 >> 2] - t7 | 0)) / 24 | 0) >>> 0 >= 2) {
                      if (!(i3 - 24 >>> 0 < 24)) {
                        if (n4 = c2[t7 + 8 >> 3], e5 = 1, m3 = 1 & (r5 = r5 - 1 | 0), s3 = c2[t7 >> 3], i3 - 48 >>> 0 < 24) l3 = n4;
                        else for (g3 = -2 & r5, r5 = 0, h3 = s3, p3 = n4; i3 = t7 + u2(e5, 24) | 0, a4 = 0.5 * ((s3 = c2[i3 + 24 >> 3]) - (d3 = c2[i3 >> 3])) * ((f3 = c2[i3 + 8 >> 3] - n4) + ((l3 = c2[i3 + 32 >> 3]) - n4)) + (0.5 * (d3 - h3) * (p3 - n4 + f3) + a4), e5 = e5 + 2 | 0, h3 = s3, p3 = l3, (0 | g3) != (0 | (r5 = r5 + 2 | 0)); ) ;
                        m3 && (t7 = t7 + u2(e5, 24) | 0, a4 = 0.5 * (c2[t7 >> 3] - s3) * (l3 - n4 + (c2[t7 + 8 >> 3] - n4)) + a4);
                      }
                      n4 = a4 < 0 ? -a4 : a4;
                    } else n4 = 0;
                    return +n4;
                  }, y: function(t7, e5, n4) {
                    t7 |= 0, e5 |= 0;
                    var r5, i3 = 0, a4 = 0, s3 = 0, l3 = 0, h3 = 0, p3 = 0, d3 = 0;
                    if ((r5 = ((t7 = o2[4 + (n4 |= 0) >> 2]) - (n4 = o2[n4 >> 2]) | 0) / 24 | 0) >>> 0 >= 3) for (t7 = r5 - 1 | 0, i3 = c2[e5 + 8 >> 3], d3 = c2[e5 >> 3], e5 = 0; l3 = n4 + u2(t7, 24) | 0, s3 = c2[l3 + 8 >> 3], t7 = e5, e5 = n4 + u2(e5, 24) | 0, !(i3 < s3 & (a4 = c2[e5 + 8 >> 3]) <= i3) & (!(i3 >= s3) | !(i3 < a4)) || d3 - (h3 = c2[e5 >> 3]) < (i3 - a4) * (c2[l3 >> 3] - h3) / (s3 - a4) && (p3 ^= 1), (0 | r5) != (0 | (e5 = t7 + 1 | 0)); ) ;
                    return 1 & p3;
                  }, z: A2, A: k2, B: v2 };
                }(t5);
              }(W);
            }() });
          } };
        }).then(function(t4) {
          return t4;
        }).then(t3, function(t4) {
          y("failed to asynchronously prepare wasm: " + t4), k(t4);
        });
      }
      var a2 = { a: W };
      if (L++, n.monitorRunDependencies && n.monitorRunDependencies(L), n.instantiateWasm) try {
        return n.instantiateWasm(a2, t2);
      } catch (t3) {
        return y("Module.instantiateWasm callback failed with error: " + t3), false;
      }
      (g || "function" != typeof x.instantiateStreaming || j.startsWith(N) || j.startsWith("file://") || "function" != typeof fetch ? r2(e3) : fetch(j, { credentials: "same-origin" }).then(function(t3) {
        return x.instantiateStreaming(t3, a2).then(e3, function(t4) {
          return y("wasm streaming compile failed: " + t4), y("falling back to ArrayBuffer instantiation"), r2(e3);
        });
      })).catch(i);
    }(), n.___wasm_call_ctors = function() {
      return (n.___wasm_call_ctors = n.asm.g).apply(null, arguments);
    };
    var J, q = n._emscripten_bind_VoidPtr___destroy___0 = function() {
      return (q = n._emscripten_bind_VoidPtr___destroy___0 = n.asm.h).apply(null, arguments);
    }, X = n._emscripten_bind_McGePoint3d_McGePoint3d_0 = function() {
      return (X = n._emscripten_bind_McGePoint3d_McGePoint3d_0 = n.asm.i).apply(null, arguments);
    }, Y = n._emscripten_bind_McGePoint3d_McGePoint3d_3 = function() {
      return (Y = n._emscripten_bind_McGePoint3d_McGePoint3d_3 = n.asm.j).apply(null, arguments);
    }, Z = n._emscripten_bind_McGePoint3d_op_add_1 = function() {
      return (Z = n._emscripten_bind_McGePoint3d_op_add_1 = n.asm.k).apply(null, arguments);
    }, K = n._emscripten_bind_McGePoint3d_op_sub_1 = function() {
      return (K = n._emscripten_bind_McGePoint3d_op_sub_1 = n.asm.l).apply(null, arguments);
    }, $2 = n._emscripten_bind_McGePoint3d_get_x_0 = function() {
      return ($2 = n._emscripten_bind_McGePoint3d_get_x_0 = n.asm.m).apply(null, arguments);
    }, Q = n._emscripten_bind_McGePoint3d_set_x_1 = function() {
      return (Q = n._emscripten_bind_McGePoint3d_set_x_1 = n.asm.n).apply(null, arguments);
    }, tt = n._emscripten_bind_McGePoint3d_get_y_0 = function() {
      return (tt = n._emscripten_bind_McGePoint3d_get_y_0 = n.asm.o).apply(null, arguments);
    }, et = n._emscripten_bind_McGePoint3d_set_y_1 = function() {
      return (et = n._emscripten_bind_McGePoint3d_set_y_1 = n.asm.p).apply(null, arguments);
    }, nt = n._emscripten_bind_McGePoint3d_get_z_0 = function() {
      return (nt = n._emscripten_bind_McGePoint3d_get_z_0 = n.asm.q).apply(null, arguments);
    }, rt = n._emscripten_bind_McGePoint3d_set_z_1 = function() {
      return (rt = n._emscripten_bind_McGePoint3d_set_z_1 = n.asm.r).apply(null, arguments);
    }, it = n._emscripten_bind_McGePoint3d___destroy___0 = function() {
      return (it = n._emscripten_bind_McGePoint3d___destroy___0 = n.asm.s).apply(null, arguments);
    }, at = n._emscripten_bind_McGePoint3dArray_McGePoint3dArray_0 = function() {
      return (at = n._emscripten_bind_McGePoint3dArray_McGePoint3dArray_0 = n.asm.t).apply(null, arguments);
    }, ot = n._emscripten_bind_McGePoint3dArray_append_1 = function() {
      return (ot = n._emscripten_bind_McGePoint3dArray_append_1 = n.asm.u).apply(null, arguments);
    }, st = n._emscripten_bind_McGePoint3dArray___destroy___0 = function() {
      return (st = n._emscripten_bind_McGePoint3dArray___destroy___0 = n.asm.v).apply(null, arguments);
    }, lt = n._emscripten_bind_McGeTool_McGeTool_0 = function() {
      return (lt = n._emscripten_bind_McGeTool_McGeTool_0 = n.asm.w).apply(null, arguments);
    }, ct = n._emscripten_bind_McGeTool_calcArea_1 = function() {
      return (ct = n._emscripten_bind_McGeTool_calcArea_1 = n.asm.x).apply(null, arguments);
    }, ut = n._emscripten_bind_McGeTool_pointInPolyline_2 = function() {
      return (ut = n._emscripten_bind_McGeTool_pointInPolyline_2 = n.asm.y).apply(null, arguments);
    }, ht = n._emscripten_bind_McGeTool___destroy___0 = function() {
      return (ht = n._emscripten_bind_McGeTool___destroy___0 = n.asm.z).apply(null, arguments);
    }, pt = n._malloc = function() {
      return (pt = n._malloc = n.asm.B).apply(null, arguments);
    };
    function dt() {
      function t2() {
        if (!J && (J = true, n.calledRun = true, !C)) {
          if (B(A), r(n), n.onRuntimeInitialized && n.onRuntimeInitialized(), n.postRun) for ("function" == typeof n.postRun && (n.postRun = [n.postRun]); n.postRun.length; ) {
            var t3 = n.postRun.shift();
            P.unshift(t3);
          }
          B(P);
        }
      }
      if (!(0 < L)) {
        if (n.preRun) for ("function" == typeof n.preRun && (n.preRun = [n.preRun]); n.preRun.length; ) R();
        B(O), 0 < L || (n.setStatus ? (n.setStatus("Running..."), setTimeout(function() {
          setTimeout(function() {
            n.setStatus("");
          }, 1), t2();
        }, 1)) : t2());
      }
    }
    if (I = function t2() {
      J || dt(), J || (I = t2);
    }, n.run = dt, n.preInit) for ("function" == typeof n.preInit && (n.preInit = [n.preInit]); 0 < n.preInit.length; ) n.preInit.pop()();
    function ft() {
    }
    function mt(t2) {
      return (t2 || ft).F;
    }
    function gt(t2, e3) {
      var n2 = mt(e3), r2 = n2[t2];
      return r2 || ((r2 = Object.create((e3 || ft).prototype)).C = t2, n2[t2] = r2);
    }
    function yt() {
      throw "cannot construct a VoidPtr, no constructor in IDL";
    }
    function vt(t2, e3, n2) {
      t2 && "object" == typeof t2 && (t2 = t2.C), e3 && "object" == typeof e3 && (e3 = e3.C), n2 && "object" == typeof n2 && (n2 = n2.C), this.C = void 0 === t2 ? X() : void 0 === e3 ? _emscripten_bind_McGePoint3d_McGePoint3d_1(t2) : void 0 === n2 ? _emscripten_bind_McGePoint3d_McGePoint3d_2(t2, e3) : Y(t2, e3, n2), mt(vt)[this.C] = this;
    }
    function xt() {
      this.C = at(), mt(xt)[this.C] = this;
    }
    function wt() {
      this.C = lt(), mt(wt)[this.C] = this;
    }
    return dt(), ft.prototype = Object.create(ft.prototype), ft.prototype.constructor = ft, ft.prototype.D = ft, ft.F = {}, n.WrapperObject = ft, n.getCache = mt, n.wrapPointer = gt, n.castObject = function(t2, e3) {
      return gt(t2.C, e3);
    }, n.NULL = gt(0), n.destroy = function(t2) {
      if (!t2.__destroy__) throw "Error: Cannot destroy object. (Did you create it yourself?)";
      t2.__destroy__(), delete mt(t2.D)[t2.C];
    }, n.compare = function(t2, e3) {
      return t2.C === e3.C;
    }, n.getPointer = function(t2) {
      return t2.C;
    }, n.getClass = function(t2) {
      return t2.D;
    }, yt.prototype = Object.create(ft.prototype), yt.prototype.constructor = yt, yt.prototype.D = yt, yt.F = {}, n.VoidPtr = yt, yt.prototype.__destroy__ = function() {
      q(this.C);
    }, vt.prototype = Object.create(ft.prototype), vt.prototype.constructor = vt, vt.prototype.D = vt, vt.F = {}, n.McGePoint3d = vt, vt.prototype.op_add = function(t2) {
      var e3 = this.C;
      t2 && "object" == typeof t2 && (t2 = t2.C), Z(e3, t2);
    }, vt.prototype.op_sub = function(t2) {
      var e3 = this.C;
      t2 && "object" == typeof t2 && (t2 = t2.C), K(e3, t2);
    }, vt.prototype.get_x = vt.prototype.H = function() {
      return $2(this.C);
    }, vt.prototype.set_x = vt.prototype.R = function(t2) {
      var e3 = this.C;
      t2 && "object" == typeof t2 && (t2 = t2.C), Q(e3, t2);
    }, Object.defineProperty(vt.prototype, "x", { get: vt.prototype.H, set: vt.prototype.R }), vt.prototype.get_y = vt.prototype.I = function() {
      return tt(this.C);
    }, vt.prototype.set_y = vt.prototype.S = function(t2) {
      var e3 = this.C;
      t2 && "object" == typeof t2 && (t2 = t2.C), et(e3, t2);
    }, Object.defineProperty(vt.prototype, "y", { get: vt.prototype.I, set: vt.prototype.S }), vt.prototype.get_z = vt.prototype.J = function() {
      return nt(this.C);
    }, vt.prototype.set_z = vt.prototype.T = function(t2) {
      var e3 = this.C;
      t2 && "object" == typeof t2 && (t2 = t2.C), rt(e3, t2);
    }, Object.defineProperty(vt.prototype, "z", { get: vt.prototype.J, set: vt.prototype.T }), vt.prototype.__destroy__ = function() {
      it(this.C);
    }, xt.prototype = Object.create(ft.prototype), xt.prototype.constructor = xt, xt.prototype.D = xt, xt.F = {}, n.McGePoint3dArray = xt, xt.prototype.append = xt.prototype.append = function(t2) {
      var e3 = this.C;
      t2 && "object" == typeof t2 && (t2 = t2.C), ot(e3, t2);
    }, xt.prototype.__destroy__ = function() {
      st(this.C);
    }, wt.prototype = Object.create(ft.prototype), wt.prototype.constructor = wt, wt.prototype.D = wt, wt.F = {}, n.McGeTool = wt, wt.prototype.calcArea = function(t2) {
      var e3 = this.C;
      return t2 && "object" == typeof t2 && (t2 = t2.C), ct(e3, t2);
    }, wt.prototype.pointInPolyline = function(t2, e3) {
      var n2 = this.C;
      return t2 && "object" == typeof t2 && (t2 = t2.C), e3 && "object" == typeof e3 && (e3 = e3.C), !!ut(n2, t2, e3);
    }, wt.prototype.__destroy__ = function() {
      ht(this.C);
    }, e2.ready;
  });
  return "object" == typeof exports && "object" == typeof module ? module.exports = e : "function" == typeof define && define.amd ? define([], function() {
    return e;
  }) : "object" == typeof exports && (exports.mxcadassembly = e), e();
}
function loadMxcadAssembly() {
  mxcadassemblyinit().then(function(t) {
    store.commit("setMxassembly", t);
  });
}
function _load(t) {
  window.MxDocumentReady = void 0, window.MxUiMain = (t2) => {
    const e = t2("./MxFun").MxFun;
    window.THREE = e.getTHREE(), store.commit("setMxFun", e), store.events.emit("MxUiMain", t2), window.MxUiMain = void 0;
  }, window.MxMain = (e) => (store.events.emit("MxMain", e), window.MxMain = void 0, registerMxDbEntity(), t(), 0), mxfun(), loadMxcadAssembly();
}
async function loadCoreCode() {
  return new Promise(async (t, e) => {
    try {
      if (store.state.MxFun) return console.warn("程序已自动调用loadCoreCode 无需主动调用 | The program has automatically called loadCoreCode without actively calling it"), void t();
      _load(t);
    } catch (t2) {
      e({ code: "error", msg: t2 });
    }
  });
}
function createCanvas(t = "mx-canvas") {
  let e = document.getElementById(t);
  return e || ((e = document.createElement("canvas")).id = t), e;
}
function createCanvasParent(t = createCanvas()) {
  let e;
  return t || (t = createCanvas()), t.parentNode ? e = t.parentNode : ((e = document.createElement("div")).style.height = "80vh", e.appendChild(t)), e;
}
async function dynamicImport(t) {
  let e;
  switch (t) {
    case "jquery":
      e = await dynamicImportJquery();
      break;
    case "element-resize-event-polyfill":
      e = await dynamicImportResize();
  }
  return e;
}
async function dynamicImportResize() {
  try {
    const t = await Promise.resolve().then(function() {
      return elementResizeEventPolyfill_umd_min$2;
    });
    return t.default ? t.default : t;
  } catch (t) {
    console.log("import动态导入：element-resize-event-polyfill失败！", t);
  }
}
async function dynamicImportJquery() {
  try {
    const t = await Promise.resolve().then(function() {
      return jquery$1;
    });
    return t.default ? t.default : t;
  } catch (t) {
    console.log("import动态导入：jquery失败！", t);
  }
}
window.$ = window.jQuery = jquery, _load(() => {
});
var lodash = createCommonjsModule(function(t, e) {
  (function() {
    var n, r = "Expected a function", i = "__lodash_hash_undefined__", a = "__lodash_placeholder__", o = 16, s = 32, l = 64, c = 128, u = 256, h = 1 / 0, p = 9007199254740991, d = NaN, f = 4294967295, m = [["ary", c], ["bind", 1], ["bindKey", 2], ["curry", 8], ["curryRight", o], ["flip", 512], ["partial", s], ["partialRight", l], ["rearg", u]], g = "[object Arguments]", y = "[object Array]", v = "[object Boolean]", x = "[object Date]", w = "[object Error]", b = "[object Function]", M = "[object GeneratorFunction]", _ = "[object Map]", T = "[object Number]", C = "[object Object]", S = "[object Promise]", D = "[object RegExp]", E = "[object Set]", O = "[object String]", A = "[object Symbol]", P = "[object WeakMap]", R = "[object ArrayBuffer]", L = "[object DataView]", I = "[object Float32Array]", k = "[object Float64Array]", j = "[object Int8Array]", N = "[object Int16Array]", V = "[object Int32Array]", F = "[object Uint8Array]", B = "[object Uint8ClampedArray]", G = "[object Uint16Array]", z = "[object Uint32Array]", U = /\b__p \+= '';/g, H = /\b(__p \+=) '' \+/g, W = /(__e\(.*?\)|\b__t\)) \+\n'';/g, J = /&(?:amp|lt|gt|quot|#39);/g, q = /[&<>"']/g, X = RegExp(J.source), Y = RegExp(q.source), Z = /<%-([\s\S]+?)%>/g, K = /<%([\s\S]+?)%>/g, $2 = /<%=([\s\S]+?)%>/g, Q = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, tt = /^\w*$/, et = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, nt = /[\\^$.*+?()[\]{}|]/g, rt = RegExp(nt.source), it = /^\s+/, at = /\s/, ot = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, st = /\{\n\/\* \[wrapped with (.+)\] \*/, lt = /,? & /, ct = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, ut = /[()=,{}\[\]\/\s]/, ht = /\\(\\)?/g, pt = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, dt = /\w*$/, ft = /^[-+]0x[0-9a-f]+$/i, mt = /^0b[01]+$/i, gt = /^\[object .+?Constructor\]$/, yt = /^0o[0-7]+$/i, vt = /^(?:0|[1-9]\d*)$/, xt = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, wt = /($^)/, bt = /['\n\r\u2028\u2029\\]/g, Mt = "\\ud800-\\udfff", _t = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff", Tt = "\\u2700-\\u27bf", Ct = "a-z\\xdf-\\xf6\\xf8-\\xff", St = "A-Z\\xc0-\\xd6\\xd8-\\xde", Dt = "\\ufe0e\\ufe0f", Et = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Ot = "[" + Mt + "]", At = "[" + Et + "]", Pt = "[" + _t + "]", Rt = "\\d+", Lt = "[" + Tt + "]", It = "[" + Ct + "]", kt = "[^" + Mt + Et + Rt + Tt + Ct + St + "]", jt = "\\ud83c[\\udffb-\\udfff]", Nt = "[^" + Mt + "]", Vt = "(?:\\ud83c[\\udde6-\\uddff]){2}", Ft = "[\\ud800-\\udbff][\\udc00-\\udfff]", Bt = "[" + St + "]", Gt = "\\u200d", zt = "(?:" + It + "|" + kt + ")", Ut = "(?:" + Bt + "|" + kt + ")", Ht = "(?:['’](?:d|ll|m|re|s|t|ve))?", Wt = "(?:['’](?:D|LL|M|RE|S|T|VE))?", Jt = "(?:" + Pt + "|" + jt + ")?", qt = "[" + Dt + "]?", Xt = qt + Jt + "(?:" + Gt + "(?:" + [Nt, Vt, Ft].join("|") + ")" + qt + Jt + ")*", Yt = "(?:" + [Lt, Vt, Ft].join("|") + ")" + Xt, Zt = "(?:" + [Nt + Pt + "?", Pt, Vt, Ft, Ot].join("|") + ")", Kt = RegExp("['’]", "g"), $t = RegExp(Pt, "g"), Qt = RegExp(jt + "(?=" + jt + ")|" + Zt + Xt, "g"), te = RegExp([Bt + "?" + It + "+" + Ht + "(?=" + [At, Bt, "$"].join("|") + ")", Ut + "+" + Wt + "(?=" + [At, Bt + zt, "$"].join("|") + ")", Bt + "?" + zt + "+" + Ht, Bt + "+" + Wt, "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Rt, Yt].join("|"), "g"), ee = RegExp("[" + Gt + Mt + _t + Dt + "]"), ne = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, re = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"], ie = -1, ae = {};
    ae[I] = ae[k] = ae[j] = ae[N] = ae[V] = ae[F] = ae[B] = ae[G] = ae[z] = true, ae[g] = ae[y] = ae[R] = ae[v] = ae[L] = ae[x] = ae[w] = ae[b] = ae[_] = ae[T] = ae[C] = ae[D] = ae[E] = ae[O] = ae[P] = false;
    var oe = {};
    oe[g] = oe[y] = oe[R] = oe[L] = oe[v] = oe[x] = oe[I] = oe[k] = oe[j] = oe[N] = oe[V] = oe[_] = oe[T] = oe[C] = oe[D] = oe[E] = oe[O] = oe[A] = oe[F] = oe[B] = oe[G] = oe[z] = true, oe[w] = oe[b] = oe[P] = false;
    var se = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" }, le = parseFloat, ce = parseInt, ue = "object" == typeof commonjsGlobal && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal, he = "object" == typeof self && self && self.Object === Object && self, pe = ue || he || Function("return this")(), de = e && !e.nodeType && e, fe = de && t && !t.nodeType && t, me = fe && fe.exports === de, ge = me && ue.process, ye = function() {
      try {
        return fe && fe.require && fe.require("util").types || ge && ge.binding && ge.binding("util");
      } catch (t2) {
      }
    }(), ve = ye && ye.isArrayBuffer, xe = ye && ye.isDate, we = ye && ye.isMap, be = ye && ye.isRegExp, Me = ye && ye.isSet, _e = ye && ye.isTypedArray;
    function Te(t2, e2, n2) {
      switch (n2.length) {
        case 0:
          return t2.call(e2);
        case 1:
          return t2.call(e2, n2[0]);
        case 2:
          return t2.call(e2, n2[0], n2[1]);
        case 3:
          return t2.call(e2, n2[0], n2[1], n2[2]);
      }
      return t2.apply(e2, n2);
    }
    function Ce(t2, e2, n2, r2) {
      for (var i2 = -1, a2 = null == t2 ? 0 : t2.length; ++i2 < a2; ) {
        var o2 = t2[i2];
        e2(r2, o2, n2(o2), t2);
      }
      return r2;
    }
    function Se(t2, e2) {
      for (var n2 = -1, r2 = null == t2 ? 0 : t2.length; ++n2 < r2 && false !== e2(t2[n2], n2, t2); ) ;
      return t2;
    }
    function De(t2, e2) {
      for (var n2 = -1, r2 = null == t2 ? 0 : t2.length; ++n2 < r2; ) if (!e2(t2[n2], n2, t2)) return false;
      return true;
    }
    function Ee(t2, e2) {
      for (var n2 = -1, r2 = null == t2 ? 0 : t2.length, i2 = 0, a2 = []; ++n2 < r2; ) {
        var o2 = t2[n2];
        e2(o2, n2, t2) && (a2[i2++] = o2);
      }
      return a2;
    }
    function Oe(t2, e2) {
      return !(null == t2 || !t2.length) && Fe(t2, e2, 0) > -1;
    }
    function Ae(t2, e2, n2) {
      for (var r2 = -1, i2 = null == t2 ? 0 : t2.length; ++r2 < i2; ) if (n2(e2, t2[r2])) return true;
      return false;
    }
    function Pe(t2, e2) {
      for (var n2 = -1, r2 = null == t2 ? 0 : t2.length, i2 = Array(r2); ++n2 < r2; ) i2[n2] = e2(t2[n2], n2, t2);
      return i2;
    }
    function Re(t2, e2) {
      for (var n2 = -1, r2 = e2.length, i2 = t2.length; ++n2 < r2; ) t2[i2 + n2] = e2[n2];
      return t2;
    }
    function Le(t2, e2, n2, r2) {
      var i2 = -1, a2 = null == t2 ? 0 : t2.length;
      for (r2 && a2 && (n2 = t2[++i2]); ++i2 < a2; ) n2 = e2(n2, t2[i2], i2, t2);
      return n2;
    }
    function Ie(t2, e2, n2, r2) {
      var i2 = null == t2 ? 0 : t2.length;
      for (r2 && i2 && (n2 = t2[--i2]); i2--; ) n2 = e2(n2, t2[i2], i2, t2);
      return n2;
    }
    function ke(t2, e2) {
      for (var n2 = -1, r2 = null == t2 ? 0 : t2.length; ++n2 < r2; ) if (e2(t2[n2], n2, t2)) return true;
      return false;
    }
    var je = Ue("length");
    function Ne(t2, e2, n2) {
      var r2;
      return n2(t2, function(t3, n3, i2) {
        if (e2(t3, n3, i2)) return r2 = n3, false;
      }), r2;
    }
    function Ve(t2, e2, n2, r2) {
      for (var i2 = t2.length, a2 = n2 + (r2 ? 1 : -1); r2 ? a2-- : ++a2 < i2; ) if (e2(t2[a2], a2, t2)) return a2;
      return -1;
    }
    function Fe(t2, e2, n2) {
      return e2 == e2 ? function(t3, e3, n3) {
        for (var r2 = n3 - 1, i2 = t3.length; ++r2 < i2; ) if (t3[r2] === e3) return r2;
        return -1;
      }(t2, e2, n2) : Ve(t2, Ge, n2);
    }
    function Be(t2, e2, n2, r2) {
      for (var i2 = n2 - 1, a2 = t2.length; ++i2 < a2; ) if (r2(t2[i2], e2)) return i2;
      return -1;
    }
    function Ge(t2) {
      return t2 != t2;
    }
    function ze(t2, e2) {
      var n2 = null == t2 ? 0 : t2.length;
      return n2 ? Je(t2, e2) / n2 : d;
    }
    function Ue(t2) {
      return function(e2) {
        return null == e2 ? n : e2[t2];
      };
    }
    function He(t2) {
      return function(e2) {
        return null == t2 ? n : t2[e2];
      };
    }
    function We(t2, e2, n2, r2, i2) {
      return i2(t2, function(t3, i3, a2) {
        n2 = r2 ? (r2 = false, t3) : e2(n2, t3, i3, a2);
      }), n2;
    }
    function Je(t2, e2) {
      for (var r2, i2 = -1, a2 = t2.length; ++i2 < a2; ) {
        var o2 = e2(t2[i2]);
        o2 !== n && (r2 = r2 === n ? o2 : r2 + o2);
      }
      return r2;
    }
    function qe(t2, e2) {
      for (var n2 = -1, r2 = Array(t2); ++n2 < t2; ) r2[n2] = e2(n2);
      return r2;
    }
    function Xe(t2) {
      return t2 ? t2.slice(0, hn(t2) + 1).replace(it, "") : t2;
    }
    function Ye(t2) {
      return function(e2) {
        return t2(e2);
      };
    }
    function Ze(t2, e2) {
      return Pe(e2, function(e3) {
        return t2[e3];
      });
    }
    function Ke(t2, e2) {
      return t2.has(e2);
    }
    function $e(t2, e2) {
      for (var n2 = -1, r2 = t2.length; ++n2 < r2 && Fe(e2, t2[n2], 0) > -1; ) ;
      return n2;
    }
    function Qe(t2, e2) {
      for (var n2 = t2.length; n2-- && Fe(e2, t2[n2], 0) > -1; ) ;
      return n2;
    }
    var tn = He({ "À": "A", "Á": "A", "Â": "A", "Ã": "A", "Ä": "A", "Å": "A", "à": "a", "á": "a", "â": "a", "ã": "a", "ä": "a", "å": "a", "Ç": "C", "ç": "c", "Ð": "D", "ð": "d", "È": "E", "É": "E", "Ê": "E", "Ë": "E", "è": "e", "é": "e", "ê": "e", "ë": "e", "Ì": "I", "Í": "I", "Î": "I", "Ï": "I", "ì": "i", "í": "i", "î": "i", "ï": "i", "Ñ": "N", "ñ": "n", "Ò": "O", "Ó": "O", "Ô": "O", "Õ": "O", "Ö": "O", "Ø": "O", "ò": "o", "ó": "o", "ô": "o", "õ": "o", "ö": "o", "ø": "o", "Ù": "U", "Ú": "U", "Û": "U", "Ü": "U", "ù": "u", "ú": "u", "û": "u", "ü": "u", "Ý": "Y", "ý": "y", "ÿ": "y", "Æ": "Ae", "æ": "ae", "Þ": "Th", "þ": "th", "ß": "ss", "Ā": "A", "Ă": "A", "Ą": "A", "ā": "a", "ă": "a", "ą": "a", "Ć": "C", "Ĉ": "C", "Ċ": "C", "Č": "C", "ć": "c", "ĉ": "c", "ċ": "c", "č": "c", "Ď": "D", "Đ": "D", "ď": "d", "đ": "d", "Ē": "E", "Ĕ": "E", "Ė": "E", "Ę": "E", "Ě": "E", "ē": "e", "ĕ": "e", "ė": "e", "ę": "e", "ě": "e", "Ĝ": "G", "Ğ": "G", "Ġ": "G", "Ģ": "G", "ĝ": "g", "ğ": "g", "ġ": "g", "ģ": "g", "Ĥ": "H", "Ħ": "H", "ĥ": "h", "ħ": "h", "Ĩ": "I", "Ī": "I", "Ĭ": "I", "Į": "I", "İ": "I", "ĩ": "i", "ī": "i", "ĭ": "i", "į": "i", "ı": "i", "Ĵ": "J", "ĵ": "j", "Ķ": "K", "ķ": "k", "ĸ": "k", "Ĺ": "L", "Ļ": "L", "Ľ": "L", "Ŀ": "L", "Ł": "L", "ĺ": "l", "ļ": "l", "ľ": "l", "ŀ": "l", "ł": "l", "Ń": "N", "Ņ": "N", "Ň": "N", "Ŋ": "N", "ń": "n", "ņ": "n", "ň": "n", "ŋ": "n", "Ō": "O", "Ŏ": "O", "Ő": "O", "ō": "o", "ŏ": "o", "ő": "o", "Ŕ": "R", "Ŗ": "R", "Ř": "R", "ŕ": "r", "ŗ": "r", "ř": "r", "Ś": "S", "Ŝ": "S", "Ş": "S", "Š": "S", "ś": "s", "ŝ": "s", "ş": "s", "š": "s", "Ţ": "T", "Ť": "T", "Ŧ": "T", "ţ": "t", "ť": "t", "ŧ": "t", "Ũ": "U", "Ū": "U", "Ŭ": "U", "Ů": "U", "Ű": "U", "Ų": "U", "ũ": "u", "ū": "u", "ŭ": "u", "ů": "u", "ű": "u", "ų": "u", "Ŵ": "W", "ŵ": "w", "Ŷ": "Y", "ŷ": "y", "Ÿ": "Y", "Ź": "Z", "Ż": "Z", "Ž": "Z", "ź": "z", "ż": "z", "ž": "z", "Ĳ": "IJ", "ĳ": "ij", "Œ": "Oe", "œ": "oe", "ŉ": "'n", "ſ": "s" }), en = He({ "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" });
    function nn(t2) {
      return "\\" + se[t2];
    }
    function rn(t2) {
      return ee.test(t2);
    }
    function an(t2) {
      var e2 = -1, n2 = Array(t2.size);
      return t2.forEach(function(t3, r2) {
        n2[++e2] = [r2, t3];
      }), n2;
    }
    function on(t2, e2) {
      return function(n2) {
        return t2(e2(n2));
      };
    }
    function sn(t2, e2) {
      for (var n2 = -1, r2 = t2.length, i2 = 0, o2 = []; ++n2 < r2; ) {
        var s2 = t2[n2];
        s2 !== e2 && s2 !== a || (t2[n2] = a, o2[i2++] = n2);
      }
      return o2;
    }
    function ln(t2) {
      var e2 = -1, n2 = Array(t2.size);
      return t2.forEach(function(t3) {
        n2[++e2] = t3;
      }), n2;
    }
    function cn(t2) {
      return rn(t2) ? function(t3) {
        for (var e2 = Qt.lastIndex = 0; Qt.test(t3); ) ++e2;
        return e2;
      }(t2) : je(t2);
    }
    function un(t2) {
      return rn(t2) ? function(t3) {
        return t3.match(Qt) || [];
      }(t2) : function(t3) {
        return t3.split("");
      }(t2);
    }
    function hn(t2) {
      for (var e2 = t2.length; e2-- && at.test(t2.charAt(e2)); ) ;
      return e2;
    }
    var pn = He({ "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'" }), dn = function t2(e2) {
      var at2, Mt2 = (e2 = null == e2 ? pe : dn.defaults(pe.Object(), e2, dn.pick(pe, re))).Array, _t2 = e2.Date, Tt2 = e2.Error, Ct2 = e2.Function, St2 = e2.Math, Dt2 = e2.Object, Et2 = e2.RegExp, Ot2 = e2.String, At2 = e2.TypeError, Pt2 = Mt2.prototype, Rt2 = Ct2.prototype, Lt2 = Dt2.prototype, It2 = e2["__core-js_shared__"], kt2 = Rt2.toString, jt2 = Lt2.hasOwnProperty, Nt2 = 0, Vt2 = (at2 = /[^.]+$/.exec(It2 && It2.keys && It2.keys.IE_PROTO || "")) ? "Symbol(src)_1." + at2 : "", Ft2 = Lt2.toString, Bt2 = kt2.call(Dt2), Gt2 = pe._, zt2 = Et2("^" + kt2.call(jt2).replace(nt, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), Ut2 = me ? e2.Buffer : n, Ht2 = e2.Symbol, Wt2 = e2.Uint8Array, Jt2 = Ut2 ? Ut2.allocUnsafe : n, qt2 = on(Dt2.getPrototypeOf, Dt2), Xt2 = Dt2.create, Yt2 = Lt2.propertyIsEnumerable, Zt2 = Pt2.splice, Qt2 = Ht2 ? Ht2.isConcatSpreadable : n, ee2 = Ht2 ? Ht2.iterator : n, se2 = Ht2 ? Ht2.toStringTag : n, ue2 = function() {
        try {
          var t3 = ia(Dt2, "defineProperty");
          return t3({}, "", {}), t3;
        } catch (t4) {
        }
      }(), he2 = e2.clearTimeout !== pe.clearTimeout && e2.clearTimeout, de2 = _t2 && _t2.now !== pe.Date.now && _t2.now, fe2 = e2.setTimeout !== pe.setTimeout && e2.setTimeout, ge2 = St2.ceil, ye2 = St2.floor, je2 = Dt2.getOwnPropertySymbols, He2 = Ut2 ? Ut2.isBuffer : n, fn = e2.isFinite, mn = Pt2.join, gn = on(Dt2.keys, Dt2), yn = St2.max, vn = St2.min, xn = _t2.now, wn = e2.parseInt, bn = St2.random, Mn = Pt2.reverse, _n = ia(e2, "DataView"), Tn = ia(e2, "Map"), Cn = ia(e2, "Promise"), Sn = ia(e2, "Set"), Dn = ia(e2, "WeakMap"), En = ia(Dt2, "create"), On = Dn && new Dn(), An = {}, Pn = Aa(_n), Rn = Aa(Tn), Ln = Aa(Cn), In = Aa(Sn), kn = Aa(Dn), jn = Ht2 ? Ht2.prototype : n, Nn = jn ? jn.valueOf : n, Vn = jn ? jn.toString : n;
      function Fn(t3) {
        if (Xo(t3) && !No(t3) && !(t3 instanceof Un)) {
          if (t3 instanceof zn) return t3;
          if (jt2.call(t3, "__wrapped__")) return Pa(t3);
        }
        return new zn(t3);
      }
      var Bn = /* @__PURE__ */ function() {
        function t3() {
        }
        return function(e3) {
          if (!qo(e3)) return {};
          if (Xt2) return Xt2(e3);
          t3.prototype = e3;
          var r2 = new t3();
          return t3.prototype = n, r2;
        };
      }();
      function Gn() {
      }
      function zn(t3, e3) {
        this.__wrapped__ = t3, this.__actions__ = [], this.__chain__ = !!e3, this.__index__ = 0, this.__values__ = n;
      }
      function Un(t3) {
        this.__wrapped__ = t3, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = false, this.__iteratees__ = [], this.__takeCount__ = f, this.__views__ = [];
      }
      function Hn(t3) {
        var e3 = -1, n2 = null == t3 ? 0 : t3.length;
        for (this.clear(); ++e3 < n2; ) {
          var r2 = t3[e3];
          this.set(r2[0], r2[1]);
        }
      }
      function Wn(t3) {
        var e3 = -1, n2 = null == t3 ? 0 : t3.length;
        for (this.clear(); ++e3 < n2; ) {
          var r2 = t3[e3];
          this.set(r2[0], r2[1]);
        }
      }
      function Jn(t3) {
        var e3 = -1, n2 = null == t3 ? 0 : t3.length;
        for (this.clear(); ++e3 < n2; ) {
          var r2 = t3[e3];
          this.set(r2[0], r2[1]);
        }
      }
      function qn(t3) {
        var e3 = -1, n2 = null == t3 ? 0 : t3.length;
        for (this.__data__ = new Jn(); ++e3 < n2; ) this.add(t3[e3]);
      }
      function Xn(t3) {
        var e3 = this.__data__ = new Wn(t3);
        this.size = e3.size;
      }
      function Yn(t3, e3) {
        var n2 = No(t3), r2 = !n2 && jo(t3), i2 = !n2 && !r2 && Go(t3), a2 = !n2 && !r2 && !i2 && ns(t3), o2 = n2 || r2 || i2 || a2, s2 = o2 ? qe(t3.length, Ot2) : [], l2 = s2.length;
        for (var c2 in t3) !e3 && !jt2.call(t3, c2) || o2 && ("length" == c2 || i2 && ("offset" == c2 || "parent" == c2) || a2 && ("buffer" == c2 || "byteLength" == c2 || "byteOffset" == c2) || ha(c2, l2)) || s2.push(c2);
        return s2;
      }
      function Zn(t3) {
        var e3 = t3.length;
        return e3 ? t3[Hr(0, e3 - 1)] : n;
      }
      function Kn(t3, e3, r2) {
        (r2 !== n && !Lo(t3[e3], r2) || r2 === n && !(e3 in t3)) && nr(t3, e3, r2);
      }
      function $n(t3, e3, r2) {
        var i2 = t3[e3];
        jt2.call(t3, e3) && Lo(i2, r2) && (r2 !== n || e3 in t3) || nr(t3, e3, r2);
      }
      function Qn(t3, e3) {
        for (var n2 = t3.length; n2--; ) if (Lo(t3[n2][0], e3)) return n2;
        return -1;
      }
      function tr(t3, e3, n2, r2) {
        return cr(t3, function(t4, i2, a2) {
          e3(r2, t4, n2(t4), a2);
        }), r2;
      }
      function er(t3, e3) {
        return t3 && _i(e3, Ts(e3), t3);
      }
      function nr(t3, e3, n2) {
        "__proto__" == e3 && ue2 ? ue2(t3, e3, { configurable: true, enumerable: true, value: n2, writable: true }) : t3[e3] = n2;
      }
      function rr(t3, e3) {
        for (var r2 = -1, i2 = e3.length, a2 = Mt2(i2), o2 = null == t3; ++r2 < i2; ) a2[r2] = o2 ? n : xs(t3, e3[r2]);
        return a2;
      }
      function ir(t3, e3, r2) {
        return t3 == t3 && (r2 !== n && (t3 = t3 <= r2 ? t3 : r2), e3 !== n && (t3 = t3 >= e3 ? t3 : e3)), t3;
      }
      function ar(t3, e3, r2, i2, a2, o2) {
        var s2, l2 = 1 & e3, c2 = 2 & e3, u2 = 4 & e3;
        if (r2 && (s2 = a2 ? r2(t3, i2, a2, o2) : r2(t3)), s2 !== n) return s2;
        if (!qo(t3)) return t3;
        var h2 = No(t3);
        if (h2) {
          if (s2 = function(t4) {
            var e4 = t4.length, n2 = new t4.constructor(e4);
            return e4 && "string" == typeof t4[0] && jt2.call(t4, "index") && (n2.index = t4.index, n2.input = t4.input), n2;
          }(t3), !l2) return Mi(t3, s2);
        } else {
          var p2 = sa(t3), d2 = p2 == b || p2 == M;
          if (Go(t3)) return gi(t3, l2);
          if (p2 == C || p2 == g || d2 && !a2) {
            if (s2 = c2 || d2 ? {} : ca(t3), !l2) return c2 ? function(t4, e4) {
              return _i(t4, oa(t4), e4);
            }(t3, function(t4, e4) {
              return t4 && _i(e4, Cs(e4), t4);
            }(s2, t3)) : function(t4, e4) {
              return _i(t4, aa(t4), e4);
            }(t3, er(s2, t3));
          } else {
            if (!oe[p2]) return a2 ? t3 : {};
            s2 = function(t4, e4, n2) {
              var r3, i3 = t4.constructor;
              switch (e4) {
                case R:
                  return yi(t4);
                case v:
                case x:
                  return new i3(+t4);
                case L:
                  return function(t5, e5) {
                    var n3 = e5 ? yi(t5.buffer) : t5.buffer;
                    return new t5.constructor(n3, t5.byteOffset, t5.byteLength);
                  }(t4, n2);
                case I:
                case k:
                case j:
                case N:
                case V:
                case F:
                case B:
                case G:
                case z:
                  return vi(t4, n2);
                case _:
                  return new i3();
                case T:
                case O:
                  return new i3(t4);
                case D:
                  return function(t5) {
                    var e5 = new t5.constructor(t5.source, dt.exec(t5));
                    return e5.lastIndex = t5.lastIndex, e5;
                  }(t4);
                case E:
                  return new i3();
                case A:
                  return r3 = t4, Nn ? Dt2(Nn.call(r3)) : {};
              }
            }(t3, p2, l2);
          }
        }
        o2 || (o2 = new Xn());
        var f2 = o2.get(t3);
        if (f2) return f2;
        o2.set(t3, s2), Qo(t3) ? t3.forEach(function(n2) {
          s2.add(ar(n2, e3, r2, n2, t3, o2));
        }) : Yo(t3) && t3.forEach(function(n2, i3) {
          s2.set(i3, ar(n2, e3, r2, i3, t3, o2));
        });
        var m2 = h2 ? n : (u2 ? c2 ? Ki : Zi : c2 ? Cs : Ts)(t3);
        return Se(m2 || t3, function(n2, i3) {
          m2 && (n2 = t3[i3 = n2]), $n(s2, i3, ar(n2, e3, r2, i3, t3, o2));
        }), s2;
      }
      function or(t3, e3, r2) {
        var i2 = r2.length;
        if (null == t3) return !i2;
        for (t3 = Dt2(t3); i2--; ) {
          var a2 = r2[i2], o2 = e3[a2], s2 = t3[a2];
          if (s2 === n && !(a2 in t3) || !o2(s2)) return false;
        }
        return true;
      }
      function sr(t3, e3, i2) {
        if ("function" != typeof t3) throw new At2(r);
        return _a(function() {
          t3.apply(n, i2);
        }, e3);
      }
      function lr(t3, e3, n2, r2) {
        var i2 = -1, a2 = Oe, o2 = true, s2 = t3.length, l2 = [], c2 = e3.length;
        if (!s2) return l2;
        n2 && (e3 = Pe(e3, Ye(n2))), r2 ? (a2 = Ae, o2 = false) : e3.length >= 200 && (a2 = Ke, o2 = false, e3 = new qn(e3));
        t: for (; ++i2 < s2; ) {
          var u2 = t3[i2], h2 = null == n2 ? u2 : n2(u2);
          if (u2 = r2 || 0 !== u2 ? u2 : 0, o2 && h2 == h2) {
            for (var p2 = c2; p2--; ) if (e3[p2] === h2) continue t;
            l2.push(u2);
          } else a2(e3, h2, r2) || l2.push(u2);
        }
        return l2;
      }
      Fn.templateSettings = { escape: Z, evaluate: K, interpolate: $2, variable: "", imports: { _: Fn } }, Fn.prototype = Gn.prototype, Fn.prototype.constructor = Fn, zn.prototype = Bn(Gn.prototype), zn.prototype.constructor = zn, Un.prototype = Bn(Gn.prototype), Un.prototype.constructor = Un, Hn.prototype.clear = function() {
        this.__data__ = En ? En(null) : {}, this.size = 0;
      }, Hn.prototype.delete = function(t3) {
        var e3 = this.has(t3) && delete this.__data__[t3];
        return this.size -= e3 ? 1 : 0, e3;
      }, Hn.prototype.get = function(t3) {
        var e3 = this.__data__;
        if (En) {
          var r2 = e3[t3];
          return r2 === i ? n : r2;
        }
        return jt2.call(e3, t3) ? e3[t3] : n;
      }, Hn.prototype.has = function(t3) {
        var e3 = this.__data__;
        return En ? e3[t3] !== n : jt2.call(e3, t3);
      }, Hn.prototype.set = function(t3, e3) {
        var r2 = this.__data__;
        return this.size += this.has(t3) ? 0 : 1, r2[t3] = En && e3 === n ? i : e3, this;
      }, Wn.prototype.clear = function() {
        this.__data__ = [], this.size = 0;
      }, Wn.prototype.delete = function(t3) {
        var e3 = this.__data__, n2 = Qn(e3, t3);
        return !(n2 < 0 || (n2 == e3.length - 1 ? e3.pop() : Zt2.call(e3, n2, 1), --this.size, 0));
      }, Wn.prototype.get = function(t3) {
        var e3 = this.__data__, r2 = Qn(e3, t3);
        return r2 < 0 ? n : e3[r2][1];
      }, Wn.prototype.has = function(t3) {
        return Qn(this.__data__, t3) > -1;
      }, Wn.prototype.set = function(t3, e3) {
        var n2 = this.__data__, r2 = Qn(n2, t3);
        return r2 < 0 ? (++this.size, n2.push([t3, e3])) : n2[r2][1] = e3, this;
      }, Jn.prototype.clear = function() {
        this.size = 0, this.__data__ = { hash: new Hn(), map: new (Tn || Wn)(), string: new Hn() };
      }, Jn.prototype.delete = function(t3) {
        var e3 = na(this, t3).delete(t3);
        return this.size -= e3 ? 1 : 0, e3;
      }, Jn.prototype.get = function(t3) {
        return na(this, t3).get(t3);
      }, Jn.prototype.has = function(t3) {
        return na(this, t3).has(t3);
      }, Jn.prototype.set = function(t3, e3) {
        var n2 = na(this, t3), r2 = n2.size;
        return n2.set(t3, e3), this.size += n2.size == r2 ? 0 : 1, this;
      }, qn.prototype.add = qn.prototype.push = function(t3) {
        return this.__data__.set(t3, i), this;
      }, qn.prototype.has = function(t3) {
        return this.__data__.has(t3);
      }, Xn.prototype.clear = function() {
        this.__data__ = new Wn(), this.size = 0;
      }, Xn.prototype.delete = function(t3) {
        var e3 = this.__data__, n2 = e3.delete(t3);
        return this.size = e3.size, n2;
      }, Xn.prototype.get = function(t3) {
        return this.__data__.get(t3);
      }, Xn.prototype.has = function(t3) {
        return this.__data__.has(t3);
      }, Xn.prototype.set = function(t3, e3) {
        var n2 = this.__data__;
        if (n2 instanceof Wn) {
          var r2 = n2.__data__;
          if (!Tn || r2.length < 199) return r2.push([t3, e3]), this.size = ++n2.size, this;
          n2 = this.__data__ = new Jn(r2);
        }
        return n2.set(t3, e3), this.size = n2.size, this;
      };
      var cr = Si(yr), ur = Si(vr, true);
      function hr(t3, e3) {
        var n2 = true;
        return cr(t3, function(t4, r2, i2) {
          return n2 = !!e3(t4, r2, i2);
        }), n2;
      }
      function pr(t3, e3, r2) {
        for (var i2 = -1, a2 = t3.length; ++i2 < a2; ) {
          var o2 = t3[i2], s2 = e3(o2);
          if (null != s2 && (l2 === n ? s2 == s2 && !es(s2) : r2(s2, l2))) var l2 = s2, c2 = o2;
        }
        return c2;
      }
      function dr(t3, e3) {
        var n2 = [];
        return cr(t3, function(t4, r2, i2) {
          e3(t4, r2, i2) && n2.push(t4);
        }), n2;
      }
      function fr(t3, e3, n2, r2, i2) {
        var a2 = -1, o2 = t3.length;
        for (n2 || (n2 = ua), i2 || (i2 = []); ++a2 < o2; ) {
          var s2 = t3[a2];
          e3 > 0 && n2(s2) ? e3 > 1 ? fr(s2, e3 - 1, n2, r2, i2) : Re(i2, s2) : r2 || (i2[i2.length] = s2);
        }
        return i2;
      }
      var mr = Di(), gr = Di(true);
      function yr(t3, e3) {
        return t3 && mr(t3, e3, Ts);
      }
      function vr(t3, e3) {
        return t3 && gr(t3, e3, Ts);
      }
      function xr(t3, e3) {
        return Ee(e3, function(e4) {
          return Ho(t3[e4]);
        });
      }
      function wr(t3, e3) {
        for (var r2 = 0, i2 = (e3 = pi(e3, t3)).length; null != t3 && r2 < i2; ) t3 = t3[Oa(e3[r2++])];
        return r2 && r2 == i2 ? t3 : n;
      }
      function br(t3, e3, n2) {
        var r2 = e3(t3);
        return No(t3) ? r2 : Re(r2, n2(t3));
      }
      function Mr(t3) {
        return null == t3 ? t3 === n ? "[object Undefined]" : "[object Null]" : se2 && se2 in Dt2(t3) ? function(t4) {
          var e3 = jt2.call(t4, se2), r2 = t4[se2];
          try {
            t4[se2] = n;
            var i2 = true;
          } catch (t5) {
          }
          var a2 = Ft2.call(t4);
          return i2 && (e3 ? t4[se2] = r2 : delete t4[se2]), a2;
        }(t3) : function(t4) {
          return Ft2.call(t4);
        }(t3);
      }
      function _r(t3, e3) {
        return t3 > e3;
      }
      function Tr(t3, e3) {
        return null != t3 && jt2.call(t3, e3);
      }
      function Cr(t3, e3) {
        return null != t3 && e3 in Dt2(t3);
      }
      function Sr(t3, e3, r2) {
        for (var i2 = r2 ? Ae : Oe, a2 = t3[0].length, o2 = t3.length, s2 = o2, l2 = Mt2(o2), c2 = 1 / 0, u2 = []; s2--; ) {
          var h2 = t3[s2];
          s2 && e3 && (h2 = Pe(h2, Ye(e3))), c2 = vn(h2.length, c2), l2[s2] = !r2 && (e3 || a2 >= 120 && h2.length >= 120) ? new qn(s2 && h2) : n;
        }
        h2 = t3[0];
        var p2 = -1, d2 = l2[0];
        t: for (; ++p2 < a2 && u2.length < c2; ) {
          var f2 = h2[p2], m2 = e3 ? e3(f2) : f2;
          if (f2 = r2 || 0 !== f2 ? f2 : 0, !(d2 ? Ke(d2, m2) : i2(u2, m2, r2))) {
            for (s2 = o2; --s2; ) {
              var g2 = l2[s2];
              if (!(g2 ? Ke(g2, m2) : i2(t3[s2], m2, r2))) continue t;
            }
            d2 && d2.push(m2), u2.push(f2);
          }
        }
        return u2;
      }
      function Dr(t3, e3, r2) {
        var i2 = null == (t3 = wa(t3, e3 = pi(e3, t3))) ? t3 : t3[Oa(za(e3))];
        return null == i2 ? n : Te(i2, t3, r2);
      }
      function Er(t3) {
        return Xo(t3) && Mr(t3) == g;
      }
      function Or(t3, e3, r2, i2, a2) {
        return t3 === e3 || (null == t3 || null == e3 || !Xo(t3) && !Xo(e3) ? t3 != t3 && e3 != e3 : function(t4, e4, r3, i3, a3, o2) {
          var s2 = No(t4), l2 = No(e4), c2 = s2 ? y : sa(t4), u2 = l2 ? y : sa(e4), h2 = (c2 = c2 == g ? C : c2) == C, p2 = (u2 = u2 == g ? C : u2) == C, d2 = c2 == u2;
          if (d2 && Go(t4)) {
            if (!Go(e4)) return false;
            s2 = true, h2 = false;
          }
          if (d2 && !h2) return o2 || (o2 = new Xn()), s2 || ns(t4) ? Xi(t4, e4, r3, i3, a3, o2) : function(t5, e5, n2, r4, i4, a4, o3) {
            switch (n2) {
              case L:
                if (t5.byteLength != e5.byteLength || t5.byteOffset != e5.byteOffset) return false;
                t5 = t5.buffer, e5 = e5.buffer;
              case R:
                return !(t5.byteLength != e5.byteLength || !a4(new Wt2(t5), new Wt2(e5)));
              case v:
              case x:
              case T:
                return Lo(+t5, +e5);
              case w:
                return t5.name == e5.name && t5.message == e5.message;
              case D:
              case O:
                return t5 == e5 + "";
              case _:
                var s3 = an;
              case E:
                var l3 = 1 & r4;
                if (s3 || (s3 = ln), t5.size != e5.size && !l3) return false;
                var c3 = o3.get(t5);
                if (c3) return c3 == e5;
                r4 |= 2, o3.set(t5, e5);
                var u3 = Xi(s3(t5), s3(e5), r4, i4, a4, o3);
                return o3.delete(t5), u3;
              case A:
                if (Nn) return Nn.call(t5) == Nn.call(e5);
            }
            return false;
          }(t4, e4, c2, r3, i3, a3, o2);
          if (!(1 & r3)) {
            var f2 = h2 && jt2.call(t4, "__wrapped__"), m2 = p2 && jt2.call(e4, "__wrapped__");
            if (f2 || m2) {
              var b2 = f2 ? t4.value() : t4, M2 = m2 ? e4.value() : e4;
              return o2 || (o2 = new Xn()), a3(b2, M2, r3, i3, o2);
            }
          }
          return !!d2 && (o2 || (o2 = new Xn()), function(t5, e5, r4, i4, a4, o3) {
            var s3 = 1 & r4, l3 = Zi(t5), c3 = l3.length;
            if (c3 != Zi(e5).length && !s3) return false;
            for (var u3 = c3; u3--; ) {
              var h3 = l3[u3];
              if (!(s3 ? h3 in e5 : jt2.call(e5, h3))) return false;
            }
            var p3 = o3.get(t5), d3 = o3.get(e5);
            if (p3 && d3) return p3 == e5 && d3 == t5;
            var f3 = true;
            o3.set(t5, e5), o3.set(e5, t5);
            for (var m3 = s3; ++u3 < c3; ) {
              var g2 = t5[h3 = l3[u3]], y2 = e5[h3];
              if (i4) var v2 = s3 ? i4(y2, g2, h3, e5, t5, o3) : i4(g2, y2, h3, t5, e5, o3);
              if (!(v2 === n ? g2 === y2 || a4(g2, y2, r4, i4, o3) : v2)) {
                f3 = false;
                break;
              }
              m3 || (m3 = "constructor" == h3);
            }
            if (f3 && !m3) {
              var x2 = t5.constructor, w2 = e5.constructor;
              x2 == w2 || !("constructor" in t5) || !("constructor" in e5) || "function" == typeof x2 && x2 instanceof x2 && "function" == typeof w2 && w2 instanceof w2 || (f3 = false);
            }
            return o3.delete(t5), o3.delete(e5), f3;
          }(t4, e4, r3, i3, a3, o2));
        }(t3, e3, r2, i2, Or, a2));
      }
      function Ar(t3, e3, r2, i2) {
        var a2 = r2.length, o2 = a2, s2 = !i2;
        if (null == t3) return !o2;
        for (t3 = Dt2(t3); a2--; ) {
          var l2 = r2[a2];
          if (s2 && l2[2] ? l2[1] !== t3[l2[0]] : !(l2[0] in t3)) return false;
        }
        for (; ++a2 < o2; ) {
          var c2 = (l2 = r2[a2])[0], u2 = t3[c2], h2 = l2[1];
          if (s2 && l2[2]) {
            if (u2 === n && !(c2 in t3)) return false;
          } else {
            var p2 = new Xn();
            if (i2) var d2 = i2(u2, h2, c2, t3, e3, p2);
            if (!(d2 === n ? Or(h2, u2, 3, i2, p2) : d2)) return false;
          }
        }
        return true;
      }
      function Pr(t3) {
        return !(!qo(t3) || (e3 = t3, Vt2 && Vt2 in e3)) && (Ho(t3) ? zt2 : gt).test(Aa(t3));
        var e3;
      }
      function Rr(t3) {
        return "function" == typeof t3 ? t3 : null == t3 ? Zs : "object" == typeof t3 ? No(t3) ? Nr(t3[0], t3[1]) : jr(t3) : al(t3);
      }
      function Lr(t3) {
        if (!ga(t3)) return gn(t3);
        var e3 = [];
        for (var n2 in Dt2(t3)) jt2.call(t3, n2) && "constructor" != n2 && e3.push(n2);
        return e3;
      }
      function Ir(t3, e3) {
        return t3 < e3;
      }
      function kr(t3, e3) {
        var n2 = -1, r2 = Fo(t3) ? Mt2(t3.length) : [];
        return cr(t3, function(t4, i2, a2) {
          r2[++n2] = e3(t4, i2, a2);
        }), r2;
      }
      function jr(t3) {
        var e3 = ra(t3);
        return 1 == e3.length && e3[0][2] ? va(e3[0][0], e3[0][1]) : function(n2) {
          return n2 === t3 || Ar(n2, t3, e3);
        };
      }
      function Nr(t3, e3) {
        return da(t3) && ya(e3) ? va(Oa(t3), e3) : function(r2) {
          var i2 = xs(r2, t3);
          return i2 === n && i2 === e3 ? ws(r2, t3) : Or(e3, i2, 3);
        };
      }
      function Vr(t3, e3, r2, i2, a2) {
        t3 !== e3 && mr(e3, function(o2, s2) {
          if (a2 || (a2 = new Xn()), qo(o2)) !function(t4, e4, r3, i3, a3, o3, s3) {
            var l3 = ba(t4, r3), c2 = ba(e4, r3), u2 = s3.get(c2);
            if (u2) Kn(t4, r3, u2);
            else {
              var h2 = o3 ? o3(l3, c2, r3 + "", t4, e4, s3) : n, p2 = h2 === n;
              if (p2) {
                var d2 = No(c2), f2 = !d2 && Go(c2), m2 = !d2 && !f2 && ns(c2);
                h2 = c2, d2 || f2 || m2 ? No(l3) ? h2 = l3 : Bo(l3) ? h2 = Mi(l3) : f2 ? (p2 = false, h2 = gi(c2, true)) : m2 ? (p2 = false, h2 = vi(c2, true)) : h2 = [] : Ko(c2) || jo(c2) ? (h2 = l3, jo(l3) ? h2 = us(l3) : qo(l3) && !Ho(l3) || (h2 = ca(c2))) : p2 = false;
              }
              p2 && (s3.set(c2, h2), a3(h2, c2, i3, o3, s3), s3.delete(c2)), Kn(t4, r3, h2);
            }
          }(t3, e3, s2, r2, Vr, i2, a2);
          else {
            var l2 = i2 ? i2(ba(t3, s2), o2, s2 + "", t3, e3, a2) : n;
            l2 === n && (l2 = o2), Kn(t3, s2, l2);
          }
        }, Cs);
      }
      function Fr(t3, e3) {
        var r2 = t3.length;
        if (r2) return ha(e3 += e3 < 0 ? r2 : 0, r2) ? t3[e3] : n;
      }
      function Br(t3, e3, n2) {
        var r2 = -1;
        return e3 = Pe(e3 = e3.length ? Pe(e3, function(t4) {
          return No(t4) ? function(e4) {
            return wr(e4, 1 === t4.length ? t4[0] : t4);
          } : t4;
        }) : [Zs], Ye(ea())), function(t4, e4) {
          var n3 = t4.length;
          for (t4.sort(e4); n3--; ) t4[n3] = t4[n3].value;
          return t4;
        }(kr(t3, function(t4, n3, i2) {
          return { criteria: Pe(e3, function(e4) {
            return e4(t4);
          }), index: ++r2, value: t4 };
        }), function(t4, e4) {
          return function(t5, e5, n3) {
            for (var r3 = -1, i2 = t5.criteria, a2 = e5.criteria, o2 = i2.length, s2 = n3.length; ++r3 < o2; ) {
              var l2 = xi(i2[r3], a2[r3]);
              if (l2) return r3 >= s2 ? l2 : l2 * ("desc" == n3[r3] ? -1 : 1);
            }
            return t5.index - e5.index;
          }(t4, e4, n2);
        });
      }
      function Gr(t3, e3, n2) {
        for (var r2 = -1, i2 = e3.length, a2 = {}; ++r2 < i2; ) {
          var o2 = e3[r2], s2 = wr(t3, o2);
          n2(s2, o2) && qr(a2, pi(o2, t3), s2);
        }
        return a2;
      }
      function zr(t3, e3, n2, r2) {
        var i2 = r2 ? Be : Fe, a2 = -1, o2 = e3.length, s2 = t3;
        for (t3 === e3 && (e3 = Mi(e3)), n2 && (s2 = Pe(t3, Ye(n2))); ++a2 < o2; ) for (var l2 = 0, c2 = e3[a2], u2 = n2 ? n2(c2) : c2; (l2 = i2(s2, u2, l2, r2)) > -1; ) s2 !== t3 && Zt2.call(s2, l2, 1), Zt2.call(t3, l2, 1);
        return t3;
      }
      function Ur(t3, e3) {
        for (var n2 = t3 ? e3.length : 0, r2 = n2 - 1; n2--; ) {
          var i2 = e3[n2];
          if (n2 == r2 || i2 !== a2) {
            var a2 = i2;
            ha(i2) ? Zt2.call(t3, i2, 1) : ii(t3, i2);
          }
        }
        return t3;
      }
      function Hr(t3, e3) {
        return t3 + ye2(bn() * (e3 - t3 + 1));
      }
      function Wr(t3, e3) {
        var n2 = "";
        if (!t3 || e3 < 1 || e3 > p) return n2;
        do {
          e3 % 2 && (n2 += t3), (e3 = ye2(e3 / 2)) && (t3 += t3);
        } while (e3);
        return n2;
      }
      function Jr(t3, e3) {
        return Ta(xa(t3, e3, Zs), t3 + "");
      }
      function qr(t3, e3, r2, i2) {
        if (!qo(t3)) return t3;
        for (var a2 = -1, o2 = (e3 = pi(e3, t3)).length, s2 = o2 - 1, l2 = t3; null != l2 && ++a2 < o2; ) {
          var c2 = Oa(e3[a2]), u2 = r2;
          if ("__proto__" === c2 || "constructor" === c2 || "prototype" === c2) return t3;
          if (a2 != s2) {
            var h2 = l2[c2];
            (u2 = i2 ? i2(h2, c2, l2) : n) === n && (u2 = qo(h2) ? h2 : ha(e3[a2 + 1]) ? [] : {});
          }
          $n(l2, c2, u2), l2 = l2[c2];
        }
        return t3;
      }
      var Xr = On ? function(t3, e3) {
        return On.set(t3, e3), t3;
      } : Zs, Yr = ue2 ? function(t3, e3) {
        return ue2(t3, "toString", { configurable: true, enumerable: false, value: qs(e3), writable: true });
      } : Zs;
      function Zr(t3, e3, n2) {
        var r2 = -1, i2 = t3.length;
        e3 < 0 && (e3 = -e3 > i2 ? 0 : i2 + e3), (n2 = n2 > i2 ? i2 : n2) < 0 && (n2 += i2), i2 = e3 > n2 ? 0 : n2 - e3 >>> 0, e3 >>>= 0;
        for (var a2 = Mt2(i2); ++r2 < i2; ) a2[r2] = t3[r2 + e3];
        return a2;
      }
      function Kr(t3, e3) {
        var n2;
        return cr(t3, function(t4, r2, i2) {
          return !(n2 = e3(t4, r2, i2));
        }), !!n2;
      }
      function $r(t3, e3, n2) {
        var r2 = 0, i2 = null == t3 ? r2 : t3.length;
        if ("number" == typeof e3 && e3 == e3 && i2 <= 2147483647) {
          for (; r2 < i2; ) {
            var a2 = r2 + i2 >>> 1, o2 = t3[a2];
            null !== o2 && !es(o2) && (n2 ? o2 <= e3 : o2 < e3) ? r2 = a2 + 1 : i2 = a2;
          }
          return i2;
        }
        return Qr(t3, e3, Zs, n2);
      }
      function Qr(t3, e3, r2, i2) {
        var a2 = 0, o2 = null == t3 ? 0 : t3.length;
        if (0 === o2) return 0;
        for (var s2 = (e3 = r2(e3)) != e3, l2 = null === e3, c2 = es(e3), u2 = e3 === n; a2 < o2; ) {
          var h2 = ye2((a2 + o2) / 2), p2 = r2(t3[h2]), d2 = p2 !== n, f2 = null === p2, m2 = p2 == p2, g2 = es(p2);
          if (s2) var y2 = i2 || m2;
          else y2 = u2 ? m2 && (i2 || d2) : l2 ? m2 && d2 && (i2 || !f2) : c2 ? m2 && d2 && !f2 && (i2 || !g2) : !f2 && !g2 && (i2 ? p2 <= e3 : p2 < e3);
          y2 ? a2 = h2 + 1 : o2 = h2;
        }
        return vn(o2, 4294967294);
      }
      function ti(t3, e3) {
        for (var n2 = -1, r2 = t3.length, i2 = 0, a2 = []; ++n2 < r2; ) {
          var o2 = t3[n2], s2 = e3 ? e3(o2) : o2;
          if (!n2 || !Lo(s2, l2)) {
            var l2 = s2;
            a2[i2++] = 0 === o2 ? 0 : o2;
          }
        }
        return a2;
      }
      function ei(t3) {
        return "number" == typeof t3 ? t3 : es(t3) ? d : +t3;
      }
      function ni(t3) {
        if ("string" == typeof t3) return t3;
        if (No(t3)) return Pe(t3, ni) + "";
        if (es(t3)) return Vn ? Vn.call(t3) : "";
        var e3 = t3 + "";
        return "0" == e3 && 1 / t3 == -1 / 0 ? "-0" : e3;
      }
      function ri(t3, e3, n2) {
        var r2 = -1, i2 = Oe, a2 = t3.length, o2 = true, s2 = [], l2 = s2;
        if (n2) o2 = false, i2 = Ae;
        else if (a2 >= 200) {
          var c2 = e3 ? null : zi(t3);
          if (c2) return ln(c2);
          o2 = false, i2 = Ke, l2 = new qn();
        } else l2 = e3 ? [] : s2;
        t: for (; ++r2 < a2; ) {
          var u2 = t3[r2], h2 = e3 ? e3(u2) : u2;
          if (u2 = n2 || 0 !== u2 ? u2 : 0, o2 && h2 == h2) {
            for (var p2 = l2.length; p2--; ) if (l2[p2] === h2) continue t;
            e3 && l2.push(h2), s2.push(u2);
          } else i2(l2, h2, n2) || (l2 !== s2 && l2.push(h2), s2.push(u2));
        }
        return s2;
      }
      function ii(t3, e3) {
        return null == (t3 = wa(t3, e3 = pi(e3, t3))) || delete t3[Oa(za(e3))];
      }
      function ai(t3, e3, n2, r2) {
        return qr(t3, e3, n2(wr(t3, e3)), r2);
      }
      function oi(t3, e3, n2, r2) {
        for (var i2 = t3.length, a2 = r2 ? i2 : -1; (r2 ? a2-- : ++a2 < i2) && e3(t3[a2], a2, t3); ) ;
        return n2 ? Zr(t3, r2 ? 0 : a2, r2 ? a2 + 1 : i2) : Zr(t3, r2 ? a2 + 1 : 0, r2 ? i2 : a2);
      }
      function si(t3, e3) {
        var n2 = t3;
        return n2 instanceof Un && (n2 = n2.value()), Le(e3, function(t4, e4) {
          return e4.func.apply(e4.thisArg, Re([t4], e4.args));
        }, n2);
      }
      function li(t3, e3, n2) {
        var r2 = t3.length;
        if (r2 < 2) return r2 ? ri(t3[0]) : [];
        for (var i2 = -1, a2 = Mt2(r2); ++i2 < r2; ) for (var o2 = t3[i2], s2 = -1; ++s2 < r2; ) s2 != i2 && (a2[i2] = lr(a2[i2] || o2, t3[s2], e3, n2));
        return ri(fr(a2, 1), e3, n2);
      }
      function ci(t3, e3, r2) {
        for (var i2 = -1, a2 = t3.length, o2 = e3.length, s2 = {}; ++i2 < a2; ) {
          var l2 = i2 < o2 ? e3[i2] : n;
          r2(s2, t3[i2], l2);
        }
        return s2;
      }
      function ui(t3) {
        return Bo(t3) ? t3 : [];
      }
      function hi(t3) {
        return "function" == typeof t3 ? t3 : Zs;
      }
      function pi(t3, e3) {
        return No(t3) ? t3 : da(t3, e3) ? [t3] : Ea(hs(t3));
      }
      var di = Jr;
      function fi(t3, e3, r2) {
        var i2 = t3.length;
        return r2 = r2 === n ? i2 : r2, !e3 && r2 >= i2 ? t3 : Zr(t3, e3, r2);
      }
      var mi = he2 || function(t3) {
        return pe.clearTimeout(t3);
      };
      function gi(t3, e3) {
        if (e3) return t3.slice();
        var n2 = t3.length, r2 = Jt2 ? Jt2(n2) : new t3.constructor(n2);
        return t3.copy(r2), r2;
      }
      function yi(t3) {
        var e3 = new t3.constructor(t3.byteLength);
        return new Wt2(e3).set(new Wt2(t3)), e3;
      }
      function vi(t3, e3) {
        var n2 = e3 ? yi(t3.buffer) : t3.buffer;
        return new t3.constructor(n2, t3.byteOffset, t3.length);
      }
      function xi(t3, e3) {
        if (t3 !== e3) {
          var r2 = t3 !== n, i2 = null === t3, a2 = t3 == t3, o2 = es(t3), s2 = e3 !== n, l2 = null === e3, c2 = e3 == e3, u2 = es(e3);
          if (!l2 && !u2 && !o2 && t3 > e3 || o2 && s2 && c2 && !l2 && !u2 || i2 && s2 && c2 || !r2 && c2 || !a2) return 1;
          if (!i2 && !o2 && !u2 && t3 < e3 || u2 && r2 && a2 && !i2 && !o2 || l2 && r2 && a2 || !s2 && a2 || !c2) return -1;
        }
        return 0;
      }
      function wi(t3, e3, n2, r2) {
        for (var i2 = -1, a2 = t3.length, o2 = n2.length, s2 = -1, l2 = e3.length, c2 = yn(a2 - o2, 0), u2 = Mt2(l2 + c2), h2 = !r2; ++s2 < l2; ) u2[s2] = e3[s2];
        for (; ++i2 < o2; ) (h2 || i2 < a2) && (u2[n2[i2]] = t3[i2]);
        for (; c2--; ) u2[s2++] = t3[i2++];
        return u2;
      }
      function bi(t3, e3, n2, r2) {
        for (var i2 = -1, a2 = t3.length, o2 = -1, s2 = n2.length, l2 = -1, c2 = e3.length, u2 = yn(a2 - s2, 0), h2 = Mt2(u2 + c2), p2 = !r2; ++i2 < u2; ) h2[i2] = t3[i2];
        for (var d2 = i2; ++l2 < c2; ) h2[d2 + l2] = e3[l2];
        for (; ++o2 < s2; ) (p2 || i2 < a2) && (h2[d2 + n2[o2]] = t3[i2++]);
        return h2;
      }
      function Mi(t3, e3) {
        var n2 = -1, r2 = t3.length;
        for (e3 || (e3 = Mt2(r2)); ++n2 < r2; ) e3[n2] = t3[n2];
        return e3;
      }
      function _i(t3, e3, r2, i2) {
        var a2 = !r2;
        r2 || (r2 = {});
        for (var o2 = -1, s2 = e3.length; ++o2 < s2; ) {
          var l2 = e3[o2], c2 = i2 ? i2(r2[l2], t3[l2], l2, r2, t3) : n;
          c2 === n && (c2 = t3[l2]), a2 ? nr(r2, l2, c2) : $n(r2, l2, c2);
        }
        return r2;
      }
      function Ti(t3, e3) {
        return function(n2, r2) {
          var i2 = No(n2) ? Ce : tr, a2 = e3 ? e3() : {};
          return i2(n2, t3, ea(r2, 2), a2);
        };
      }
      function Ci(t3) {
        return Jr(function(e3, r2) {
          var i2 = -1, a2 = r2.length, o2 = a2 > 1 ? r2[a2 - 1] : n, s2 = a2 > 2 ? r2[2] : n;
          for (o2 = t3.length > 3 && "function" == typeof o2 ? (a2--, o2) : n, s2 && pa(r2[0], r2[1], s2) && (o2 = a2 < 3 ? n : o2, a2 = 1), e3 = Dt2(e3); ++i2 < a2; ) {
            var l2 = r2[i2];
            l2 && t3(e3, l2, i2, o2);
          }
          return e3;
        });
      }
      function Si(t3, e3) {
        return function(n2, r2) {
          if (null == n2) return n2;
          if (!Fo(n2)) return t3(n2, r2);
          for (var i2 = n2.length, a2 = e3 ? i2 : -1, o2 = Dt2(n2); (e3 ? a2-- : ++a2 < i2) && false !== r2(o2[a2], a2, o2); ) ;
          return n2;
        };
      }
      function Di(t3) {
        return function(e3, n2, r2) {
          for (var i2 = -1, a2 = Dt2(e3), o2 = r2(e3), s2 = o2.length; s2--; ) {
            var l2 = o2[t3 ? s2 : ++i2];
            if (false === n2(a2[l2], l2, a2)) break;
          }
          return e3;
        };
      }
      function Ei(t3) {
        return function(e3) {
          var r2 = rn(e3 = hs(e3)) ? un(e3) : n, i2 = r2 ? r2[0] : e3.charAt(0), a2 = r2 ? fi(r2, 1).join("") : e3.slice(1);
          return i2[t3]() + a2;
        };
      }
      function Oi(t3) {
        return function(e3) {
          return Le(Hs(js(e3).replace(Kt, "")), t3, "");
        };
      }
      function Ai(t3) {
        return function() {
          var e3 = arguments;
          switch (e3.length) {
            case 0:
              return new t3();
            case 1:
              return new t3(e3[0]);
            case 2:
              return new t3(e3[0], e3[1]);
            case 3:
              return new t3(e3[0], e3[1], e3[2]);
            case 4:
              return new t3(e3[0], e3[1], e3[2], e3[3]);
            case 5:
              return new t3(e3[0], e3[1], e3[2], e3[3], e3[4]);
            case 6:
              return new t3(e3[0], e3[1], e3[2], e3[3], e3[4], e3[5]);
            case 7:
              return new t3(e3[0], e3[1], e3[2], e3[3], e3[4], e3[5], e3[6]);
          }
          var n2 = Bn(t3.prototype), r2 = t3.apply(n2, e3);
          return qo(r2) ? r2 : n2;
        };
      }
      function Pi(t3) {
        return function(e3, r2, i2) {
          var a2 = Dt2(e3);
          if (!Fo(e3)) {
            var o2 = ea(r2, 3);
            e3 = Ts(e3), r2 = function(t4) {
              return o2(a2[t4], t4, a2);
            };
          }
          var s2 = t3(e3, r2, i2);
          return s2 > -1 ? a2[o2 ? e3[s2] : s2] : n;
        };
      }
      function Ri(t3) {
        return Yi(function(e3) {
          var i2 = e3.length, a2 = i2, o2 = zn.prototype.thru;
          for (t3 && e3.reverse(); a2--; ) {
            var s2 = e3[a2];
            if ("function" != typeof s2) throw new At2(r);
            if (o2 && !l2 && "wrapper" == Qi(s2)) var l2 = new zn([], true);
          }
          for (a2 = l2 ? a2 : i2; ++a2 < i2; ) {
            var c2 = Qi(s2 = e3[a2]), u2 = "wrapper" == c2 ? $i(s2) : n;
            l2 = u2 && fa(u2[0]) && 424 == u2[1] && !u2[4].length && 1 == u2[9] ? l2[Qi(u2[0])].apply(l2, u2[3]) : 1 == s2.length && fa(s2) ? l2[c2]() : l2.thru(s2);
          }
          return function() {
            var t4 = arguments, n2 = t4[0];
            if (l2 && 1 == t4.length && No(n2)) return l2.plant(n2).value();
            for (var r2 = 0, a3 = i2 ? e3[r2].apply(this, t4) : n2; ++r2 < i2; ) a3 = e3[r2].call(this, a3);
            return a3;
          };
        });
      }
      function Li(t3, e3, r2, i2, a2, o2, s2, l2, u2, h2) {
        var p2 = e3 & c, d2 = 1 & e3, f2 = 2 & e3, m2 = 24 & e3, g2 = 512 & e3, y2 = f2 ? n : Ai(t3);
        return function c2() {
          for (var v2 = arguments.length, x2 = Mt2(v2), w2 = v2; w2--; ) x2[w2] = arguments[w2];
          if (m2) var b2 = ta(c2), M2 = function(t4, e4) {
            for (var n2 = t4.length, r3 = 0; n2--; ) t4[n2] === e4 && ++r3;
            return r3;
          }(x2, b2);
          if (i2 && (x2 = wi(x2, i2, a2, m2)), o2 && (x2 = bi(x2, o2, s2, m2)), v2 -= M2, m2 && v2 < h2) {
            var _2 = sn(x2, b2);
            return Bi(t3, e3, Li, c2.placeholder, r2, x2, _2, l2, u2, h2 - v2);
          }
          var T2 = d2 ? r2 : this, C2 = f2 ? T2[t3] : t3;
          return v2 = x2.length, l2 ? x2 = function(t4, e4) {
            for (var r3 = t4.length, i3 = vn(e4.length, r3), a3 = Mi(t4); i3--; ) {
              var o3 = e4[i3];
              t4[i3] = ha(o3, r3) ? a3[o3] : n;
            }
            return t4;
          }(x2, l2) : g2 && v2 > 1 && x2.reverse(), p2 && u2 < v2 && (x2.length = u2), this && this !== pe && this instanceof c2 && (C2 = y2 || Ai(C2)), C2.apply(T2, x2);
        };
      }
      function Ii(t3, e3) {
        return function(n2, r2) {
          return function(t4, e4, n3, r3) {
            return yr(t4, function(t5, i2, a2) {
              e4(r3, n3(t5), i2, a2);
            }), r3;
          }(n2, t3, e3(r2), {});
        };
      }
      function ki(t3, e3) {
        return function(r2, i2) {
          var a2;
          if (r2 === n && i2 === n) return e3;
          if (r2 !== n && (a2 = r2), i2 !== n) {
            if (a2 === n) return i2;
            "string" == typeof r2 || "string" == typeof i2 ? (r2 = ni(r2), i2 = ni(i2)) : (r2 = ei(r2), i2 = ei(i2)), a2 = t3(r2, i2);
          }
          return a2;
        };
      }
      function ji(t3) {
        return Yi(function(e3) {
          return e3 = Pe(e3, Ye(ea())), Jr(function(n2) {
            var r2 = this;
            return t3(e3, function(t4) {
              return Te(t4, r2, n2);
            });
          });
        });
      }
      function Ni(t3, e3) {
        var r2 = (e3 = e3 === n ? " " : ni(e3)).length;
        if (r2 < 2) return r2 ? Wr(e3, t3) : e3;
        var i2 = Wr(e3, ge2(t3 / cn(e3)));
        return rn(e3) ? fi(un(i2), 0, t3).join("") : i2.slice(0, t3);
      }
      function Vi(t3) {
        return function(e3, r2, i2) {
          return i2 && "number" != typeof i2 && pa(e3, r2, i2) && (r2 = i2 = n), e3 = os(e3), r2 === n ? (r2 = e3, e3 = 0) : r2 = os(r2), function(t4, e4, n2, r3) {
            for (var i3 = -1, a2 = yn(ge2((e4 - t4) / (n2 || 1)), 0), o2 = Mt2(a2); a2--; ) o2[r3 ? a2 : ++i3] = t4, t4 += n2;
            return o2;
          }(e3, r2, i2 = i2 === n ? e3 < r2 ? 1 : -1 : os(i2), t3);
        };
      }
      function Fi(t3) {
        return function(e3, n2) {
          return "string" == typeof e3 && "string" == typeof n2 || (e3 = cs(e3), n2 = cs(n2)), t3(e3, n2);
        };
      }
      function Bi(t3, e3, r2, i2, a2, o2, c2, u2, h2, p2) {
        var d2 = 8 & e3;
        e3 |= d2 ? s : l, 4 & (e3 &= ~(d2 ? l : s)) || (e3 &= -4);
        var f2 = [t3, e3, a2, d2 ? o2 : n, d2 ? c2 : n, d2 ? n : o2, d2 ? n : c2, u2, h2, p2], m2 = r2.apply(n, f2);
        return fa(t3) && Ma(m2, f2), m2.placeholder = i2, Ca(m2, t3, e3);
      }
      function Gi(t3) {
        var e3 = St2[t3];
        return function(t4, n2) {
          if (t4 = cs(t4), (n2 = null == n2 ? 0 : vn(ss(n2), 292)) && fn(t4)) {
            var r2 = (hs(t4) + "e").split("e");
            return +((r2 = (hs(e3(r2[0] + "e" + (+r2[1] + n2))) + "e").split("e"))[0] + "e" + (+r2[1] - n2));
          }
          return e3(t4);
        };
      }
      var zi = Sn && 1 / ln(new Sn([, -0]))[1] == h ? function(t3) {
        return new Sn(t3);
      } : el;
      function Ui(t3) {
        return function(e3) {
          var n2 = sa(e3);
          return n2 == _ ? an(e3) : n2 == E ? function(t4) {
            var e4 = -1, n3 = Array(t4.size);
            return t4.forEach(function(t5) {
              n3[++e4] = [t5, t5];
            }), n3;
          }(e3) : function(t4, e4) {
            return Pe(e4, function(e5) {
              return [e5, t4[e5]];
            });
          }(e3, t3(e3));
        };
      }
      function Hi(t3, e3, i2, h2, p2, d2, f2, m2) {
        var g2 = 2 & e3;
        if (!g2 && "function" != typeof t3) throw new At2(r);
        var y2 = h2 ? h2.length : 0;
        if (y2 || (e3 &= -97, h2 = p2 = n), f2 = f2 === n ? f2 : yn(ss(f2), 0), m2 = m2 === n ? m2 : ss(m2), y2 -= p2 ? p2.length : 0, e3 & l) {
          var v2 = h2, x2 = p2;
          h2 = p2 = n;
        }
        var w2 = g2 ? n : $i(t3), b2 = [t3, e3, i2, h2, p2, v2, x2, d2, f2, m2];
        if (w2 && function(t4, e4) {
          var n2 = t4[1], r2 = e4[1], i3 = n2 | r2, o2 = i3 < 131, s2 = r2 == c && 8 == n2 || r2 == c && n2 == u && t4[7].length <= e4[8] || 384 == r2 && e4[7].length <= e4[8] && 8 == n2;
          if (!o2 && !s2) return t4;
          1 & r2 && (t4[2] = e4[2], i3 |= 1 & n2 ? 0 : 4);
          var l2 = e4[3];
          if (l2) {
            var h3 = t4[3];
            t4[3] = h3 ? wi(h3, l2, e4[4]) : l2, t4[4] = h3 ? sn(t4[3], a) : e4[4];
          }
          (l2 = e4[5]) && (h3 = t4[5], t4[5] = h3 ? bi(h3, l2, e4[6]) : l2, t4[6] = h3 ? sn(t4[5], a) : e4[6]), (l2 = e4[7]) && (t4[7] = l2), r2 & c && (t4[8] = null == t4[8] ? e4[8] : vn(t4[8], e4[8])), null == t4[9] && (t4[9] = e4[9]), t4[0] = e4[0], t4[1] = i3;
        }(b2, w2), t3 = b2[0], e3 = b2[1], i2 = b2[2], h2 = b2[3], p2 = b2[4], !(m2 = b2[9] = b2[9] === n ? g2 ? 0 : t3.length : yn(b2[9] - y2, 0)) && 24 & e3 && (e3 &= -25), e3 && 1 != e3) M2 = 8 == e3 || e3 == o ? function(t4, e4, r2) {
          var i3 = Ai(t4);
          return function a2() {
            for (var o2 = arguments.length, s2 = Mt2(o2), l2 = o2, c2 = ta(a2); l2--; ) s2[l2] = arguments[l2];
            var u2 = o2 < 3 && s2[0] !== c2 && s2[o2 - 1] !== c2 ? [] : sn(s2, c2);
            return (o2 -= u2.length) < r2 ? Bi(t4, e4, Li, a2.placeholder, n, s2, u2, n, n, r2 - o2) : Te(this && this !== pe && this instanceof a2 ? i3 : t4, this, s2);
          };
        }(t3, e3, m2) : e3 != s && 33 != e3 || p2.length ? Li.apply(n, b2) : function(t4, e4, n2, r2) {
          var i3 = 1 & e4, a2 = Ai(t4);
          return function e5() {
            for (var o2 = -1, s2 = arguments.length, l2 = -1, c2 = r2.length, u2 = Mt2(c2 + s2), h3 = this && this !== pe && this instanceof e5 ? a2 : t4; ++l2 < c2; ) u2[l2] = r2[l2];
            for (; s2--; ) u2[l2++] = arguments[++o2];
            return Te(h3, i3 ? n2 : this, u2);
          };
        }(t3, e3, i2, h2);
        else var M2 = function(t4, e4, n2) {
          var r2 = 1 & e4, i3 = Ai(t4);
          return function e5() {
            return (this && this !== pe && this instanceof e5 ? i3 : t4).apply(r2 ? n2 : this, arguments);
          };
        }(t3, e3, i2);
        return Ca((w2 ? Xr : Ma)(M2, b2), t3, e3);
      }
      function Wi(t3, e3, r2, i2) {
        return t3 === n || Lo(t3, Lt2[r2]) && !jt2.call(i2, r2) ? e3 : t3;
      }
      function Ji(t3, e3, r2, i2, a2, o2) {
        return qo(t3) && qo(e3) && (o2.set(e3, t3), Vr(t3, e3, n, Ji, o2), o2.delete(e3)), t3;
      }
      function qi(t3) {
        return Ko(t3) ? n : t3;
      }
      function Xi(t3, e3, r2, i2, a2, o2) {
        var s2 = 1 & r2, l2 = t3.length, c2 = e3.length;
        if (l2 != c2 && !(s2 && c2 > l2)) return false;
        var u2 = o2.get(t3), h2 = o2.get(e3);
        if (u2 && h2) return u2 == e3 && h2 == t3;
        var p2 = -1, d2 = true, f2 = 2 & r2 ? new qn() : n;
        for (o2.set(t3, e3), o2.set(e3, t3); ++p2 < l2; ) {
          var m2 = t3[p2], g2 = e3[p2];
          if (i2) var y2 = s2 ? i2(g2, m2, p2, e3, t3, o2) : i2(m2, g2, p2, t3, e3, o2);
          if (y2 !== n) {
            if (y2) continue;
            d2 = false;
            break;
          }
          if (f2) {
            if (!ke(e3, function(t4, e4) {
              if (!Ke(f2, e4) && (m2 === t4 || a2(m2, t4, r2, i2, o2))) return f2.push(e4);
            })) {
              d2 = false;
              break;
            }
          } else if (m2 !== g2 && !a2(m2, g2, r2, i2, o2)) {
            d2 = false;
            break;
          }
        }
        return o2.delete(t3), o2.delete(e3), d2;
      }
      function Yi(t3) {
        return Ta(xa(t3, n, Na), t3 + "");
      }
      function Zi(t3) {
        return br(t3, Ts, aa);
      }
      function Ki(t3) {
        return br(t3, Cs, oa);
      }
      var $i = On ? function(t3) {
        return On.get(t3);
      } : el;
      function Qi(t3) {
        for (var e3 = t3.name + "", n2 = An[e3], r2 = jt2.call(An, e3) ? n2.length : 0; r2--; ) {
          var i2 = n2[r2], a2 = i2.func;
          if (null == a2 || a2 == t3) return i2.name;
        }
        return e3;
      }
      function ta(t3) {
        return (jt2.call(Fn, "placeholder") ? Fn : t3).placeholder;
      }
      function ea() {
        var t3 = Fn.iteratee || Ks;
        return t3 = t3 === Ks ? Rr : t3, arguments.length ? t3(arguments[0], arguments[1]) : t3;
      }
      function na(t3, e3) {
        var n2, r2, i2 = t3.__data__;
        return ("string" == (r2 = typeof (n2 = e3)) || "number" == r2 || "symbol" == r2 || "boolean" == r2 ? "__proto__" !== n2 : null === n2) ? i2["string" == typeof e3 ? "string" : "hash"] : i2.map;
      }
      function ra(t3) {
        for (var e3 = Ts(t3), n2 = e3.length; n2--; ) {
          var r2 = e3[n2], i2 = t3[r2];
          e3[n2] = [r2, i2, ya(i2)];
        }
        return e3;
      }
      function ia(t3, e3) {
        var r2 = function(t4, e4) {
          return null == t4 ? n : t4[e4];
        }(t3, e3);
        return Pr(r2) ? r2 : n;
      }
      var aa = je2 ? function(t3) {
        return null == t3 ? [] : (t3 = Dt2(t3), Ee(je2(t3), function(e3) {
          return Yt2.call(t3, e3);
        }));
      } : ll, oa = je2 ? function(t3) {
        for (var e3 = []; t3; ) Re(e3, aa(t3)), t3 = qt2(t3);
        return e3;
      } : ll, sa = Mr;
      function la(t3, e3, n2) {
        for (var r2 = -1, i2 = (e3 = pi(e3, t3)).length, a2 = false; ++r2 < i2; ) {
          var o2 = Oa(e3[r2]);
          if (!(a2 = null != t3 && n2(t3, o2))) break;
          t3 = t3[o2];
        }
        return a2 || ++r2 != i2 ? a2 : !!(i2 = null == t3 ? 0 : t3.length) && Jo(i2) && ha(o2, i2) && (No(t3) || jo(t3));
      }
      function ca(t3) {
        return "function" != typeof t3.constructor || ga(t3) ? {} : Bn(qt2(t3));
      }
      function ua(t3) {
        return No(t3) || jo(t3) || !!(Qt2 && t3 && t3[Qt2]);
      }
      function ha(t3, e3) {
        var n2 = typeof t3;
        return !!(e3 = null == e3 ? p : e3) && ("number" == n2 || "symbol" != n2 && vt.test(t3)) && t3 > -1 && t3 % 1 == 0 && t3 < e3;
      }
      function pa(t3, e3, n2) {
        if (!qo(n2)) return false;
        var r2 = typeof e3;
        return !!("number" == r2 ? Fo(n2) && ha(e3, n2.length) : "string" == r2 && e3 in n2) && Lo(n2[e3], t3);
      }
      function da(t3, e3) {
        if (No(t3)) return false;
        var n2 = typeof t3;
        return !("number" != n2 && "symbol" != n2 && "boolean" != n2 && null != t3 && !es(t3)) || tt.test(t3) || !Q.test(t3) || null != e3 && t3 in Dt2(e3);
      }
      function fa(t3) {
        var e3 = Qi(t3), n2 = Fn[e3];
        if ("function" != typeof n2 || !(e3 in Un.prototype)) return false;
        if (t3 === n2) return true;
        var r2 = $i(n2);
        return !!r2 && t3 === r2[0];
      }
      (_n && sa(new _n(new ArrayBuffer(1))) != L || Tn && sa(new Tn()) != _ || Cn && sa(Cn.resolve()) != S || Sn && sa(new Sn()) != E || Dn && sa(new Dn()) != P) && (sa = function(t3) {
        var e3 = Mr(t3), r2 = e3 == C ? t3.constructor : n, i2 = r2 ? Aa(r2) : "";
        if (i2) switch (i2) {
          case Pn:
            return L;
          case Rn:
            return _;
          case Ln:
            return S;
          case In:
            return E;
          case kn:
            return P;
        }
        return e3;
      });
      var ma = It2 ? Ho : cl;
      function ga(t3) {
        var e3 = t3 && t3.constructor;
        return t3 === ("function" == typeof e3 && e3.prototype || Lt2);
      }
      function ya(t3) {
        return t3 == t3 && !qo(t3);
      }
      function va(t3, e3) {
        return function(r2) {
          return null != r2 && r2[t3] === e3 && (e3 !== n || t3 in Dt2(r2));
        };
      }
      function xa(t3, e3, r2) {
        return e3 = yn(e3 === n ? t3.length - 1 : e3, 0), function() {
          for (var n2 = arguments, i2 = -1, a2 = yn(n2.length - e3, 0), o2 = Mt2(a2); ++i2 < a2; ) o2[i2] = n2[e3 + i2];
          i2 = -1;
          for (var s2 = Mt2(e3 + 1); ++i2 < e3; ) s2[i2] = n2[i2];
          return s2[e3] = r2(o2), Te(t3, this, s2);
        };
      }
      function wa(t3, e3) {
        return e3.length < 2 ? t3 : wr(t3, Zr(e3, 0, -1));
      }
      function ba(t3, e3) {
        if (("constructor" !== e3 || "function" != typeof t3[e3]) && "__proto__" != e3) return t3[e3];
      }
      var Ma = Sa(Xr), _a = fe2 || function(t3, e3) {
        return pe.setTimeout(t3, e3);
      }, Ta = Sa(Yr);
      function Ca(t3, e3, n2) {
        var r2 = e3 + "";
        return Ta(t3, function(t4, e4) {
          var n3 = e4.length;
          if (!n3) return t4;
          var r3 = n3 - 1;
          return e4[r3] = (n3 > 1 ? "& " : "") + e4[r3], e4 = e4.join(n3 > 2 ? ", " : " "), t4.replace(ot, "{\n/* [wrapped with " + e4 + "] */\n");
        }(r2, function(t4, e4) {
          return Se(m, function(n3) {
            var r3 = "_." + n3[0];
            e4 & n3[1] && !Oe(t4, r3) && t4.push(r3);
          }), t4.sort();
        }(function(t4) {
          var e4 = r2.match(st);
          return e4 ? e4[1].split(lt) : [];
        }(), n2)));
      }
      function Sa(t3) {
        var e3 = 0, r2 = 0;
        return function() {
          var i2 = xn(), a2 = 16 - (i2 - r2);
          if (r2 = i2, a2 > 0) {
            if (++e3 >= 800) return arguments[0];
          } else e3 = 0;
          return t3.apply(n, arguments);
        };
      }
      function Da(t3, e3) {
        var r2 = -1, i2 = t3.length, a2 = i2 - 1;
        for (e3 = e3 === n ? i2 : e3; ++r2 < e3; ) {
          var o2 = Hr(r2, a2), s2 = t3[o2];
          t3[o2] = t3[r2], t3[r2] = s2;
        }
        return t3.length = e3, t3;
      }
      var Ea = function(t3) {
        var e3 = Do(function(t4) {
          var e4 = [];
          return 46 === t4.charCodeAt(0) && e4.push(""), t4.replace(et, function(t5, n3, r2, i2) {
            e4.push(r2 ? i2.replace(ht, "$1") : n3 || t5);
          }), e4;
        }, function(t4) {
          return 500 === n2.size && n2.clear(), t4;
        }), n2 = e3.cache;
        return e3;
      }();
      function Oa(t3) {
        if ("string" == typeof t3 || es(t3)) return t3;
        var e3 = t3 + "";
        return "0" == e3 && 1 / t3 == -1 / 0 ? "-0" : e3;
      }
      function Aa(t3) {
        if (null != t3) {
          try {
            return kt2.call(t3);
          } catch (t4) {
          }
          try {
            return t3 + "";
          } catch (t4) {
          }
        }
        return "";
      }
      function Pa(t3) {
        if (t3 instanceof Un) return t3.clone();
        var e3 = new zn(t3.__wrapped__, t3.__chain__);
        return e3.__actions__ = Mi(t3.__actions__), e3.__index__ = t3.__index__, e3.__values__ = t3.__values__, e3;
      }
      var Ra = Jr(function(t3, e3) {
        return Bo(t3) ? lr(t3, fr(e3, 1, Bo, true)) : [];
      }), La = Jr(function(t3, e3) {
        var r2 = za(e3);
        return Bo(r2) && (r2 = n), Bo(t3) ? lr(t3, fr(e3, 1, Bo, true), ea(r2, 2)) : [];
      }), Ia = Jr(function(t3, e3) {
        var r2 = za(e3);
        return Bo(r2) && (r2 = n), Bo(t3) ? lr(t3, fr(e3, 1, Bo, true), n, r2) : [];
      });
      function ka(t3, e3, n2) {
        var r2 = null == t3 ? 0 : t3.length;
        if (!r2) return -1;
        var i2 = null == n2 ? 0 : ss(n2);
        return i2 < 0 && (i2 = yn(r2 + i2, 0)), Ve(t3, ea(e3, 3), i2);
      }
      function ja(t3, e3, r2) {
        var i2 = null == t3 ? 0 : t3.length;
        if (!i2) return -1;
        var a2 = i2 - 1;
        return r2 !== n && (a2 = ss(r2), a2 = r2 < 0 ? yn(i2 + a2, 0) : vn(a2, i2 - 1)), Ve(t3, ea(e3, 3), a2, true);
      }
      function Na(t3) {
        return null != t3 && t3.length ? fr(t3, 1) : [];
      }
      function Va(t3) {
        return t3 && t3.length ? t3[0] : n;
      }
      var Fa = Jr(function(t3) {
        var e3 = Pe(t3, ui);
        return e3.length && e3[0] === t3[0] ? Sr(e3) : [];
      }), Ba = Jr(function(t3) {
        var e3 = za(t3), r2 = Pe(t3, ui);
        return e3 === za(r2) ? e3 = n : r2.pop(), r2.length && r2[0] === t3[0] ? Sr(r2, ea(e3, 2)) : [];
      }), Ga = Jr(function(t3) {
        var e3 = za(t3), r2 = Pe(t3, ui);
        return (e3 = "function" == typeof e3 ? e3 : n) && r2.pop(), r2.length && r2[0] === t3[0] ? Sr(r2, n, e3) : [];
      });
      function za(t3) {
        var e3 = null == t3 ? 0 : t3.length;
        return e3 ? t3[e3 - 1] : n;
      }
      var Ua = Jr(Ha);
      function Ha(t3, e3) {
        return t3 && t3.length && e3 && e3.length ? zr(t3, e3) : t3;
      }
      var Wa = Yi(function(t3, e3) {
        var n2 = null == t3 ? 0 : t3.length, r2 = rr(t3, e3);
        return Ur(t3, Pe(e3, function(t4) {
          return ha(t4, n2) ? +t4 : t4;
        }).sort(xi)), r2;
      });
      function Ja(t3) {
        return null == t3 ? t3 : Mn.call(t3);
      }
      var qa = Jr(function(t3) {
        return ri(fr(t3, 1, Bo, true));
      }), Xa = Jr(function(t3) {
        var e3 = za(t3);
        return Bo(e3) && (e3 = n), ri(fr(t3, 1, Bo, true), ea(e3, 2));
      }), Ya = Jr(function(t3) {
        var e3 = za(t3);
        return e3 = "function" == typeof e3 ? e3 : n, ri(fr(t3, 1, Bo, true), n, e3);
      });
      function Za(t3) {
        if (!t3 || !t3.length) return [];
        var e3 = 0;
        return t3 = Ee(t3, function(t4) {
          if (Bo(t4)) return e3 = yn(t4.length, e3), true;
        }), qe(e3, function(e4) {
          return Pe(t3, Ue(e4));
        });
      }
      function Ka(t3, e3) {
        if (!t3 || !t3.length) return [];
        var r2 = Za(t3);
        return null == e3 ? r2 : Pe(r2, function(t4) {
          return Te(e3, n, t4);
        });
      }
      var $a = Jr(function(t3, e3) {
        return Bo(t3) ? lr(t3, e3) : [];
      }), Qa = Jr(function(t3) {
        return li(Ee(t3, Bo));
      }), to = Jr(function(t3) {
        var e3 = za(t3);
        return Bo(e3) && (e3 = n), li(Ee(t3, Bo), ea(e3, 2));
      }), eo = Jr(function(t3) {
        var e3 = za(t3);
        return e3 = "function" == typeof e3 ? e3 : n, li(Ee(t3, Bo), n, e3);
      }), no = Jr(Za), ro = Jr(function(t3) {
        var e3 = t3.length, r2 = e3 > 1 ? t3[e3 - 1] : n;
        return Ka(t3, r2 = "function" == typeof r2 ? (t3.pop(), r2) : n);
      });
      function io(t3) {
        var e3 = Fn(t3);
        return e3.__chain__ = true, e3;
      }
      function ao(t3, e3) {
        return e3(t3);
      }
      var oo = Yi(function(t3) {
        var e3 = t3.length, r2 = e3 ? t3[0] : 0, i2 = this.__wrapped__, a2 = function(e4) {
          return rr(e4, t3);
        };
        return !(e3 > 1 || this.__actions__.length) && i2 instanceof Un && ha(r2) ? ((i2 = i2.slice(r2, +r2 + (e3 ? 1 : 0))).__actions__.push({ func: ao, args: [a2], thisArg: n }), new zn(i2, this.__chain__).thru(function(t4) {
          return e3 && !t4.length && t4.push(n), t4;
        })) : this.thru(a2);
      }), so = Ti(function(t3, e3, n2) {
        jt2.call(t3, n2) ? ++t3[n2] : nr(t3, n2, 1);
      }), lo = Pi(ka), co = Pi(ja);
      function uo(t3, e3) {
        return (No(t3) ? Se : cr)(t3, ea(e3, 3));
      }
      function ho(t3, e3) {
        return (No(t3) ? function(t4, e4) {
          for (var n2 = null == t4 ? 0 : t4.length; n2-- && false !== e4(t4[n2], n2, t4); ) ;
          return t4;
        } : ur)(t3, ea(e3, 3));
      }
      var po = Ti(function(t3, e3, n2) {
        jt2.call(t3, n2) ? t3[n2].push(e3) : nr(t3, n2, [e3]);
      }), fo = Jr(function(t3, e3, n2) {
        var r2 = -1, i2 = "function" == typeof e3, a2 = Fo(t3) ? Mt2(t3.length) : [];
        return cr(t3, function(t4) {
          a2[++r2] = i2 ? Te(e3, t4, n2) : Dr(t4, e3, n2);
        }), a2;
      }), mo = Ti(function(t3, e3, n2) {
        nr(t3, n2, e3);
      });
      function go(t3, e3) {
        return (No(t3) ? Pe : kr)(t3, ea(e3, 3));
      }
      var yo = Ti(function(t3, e3, n2) {
        t3[n2 ? 0 : 1].push(e3);
      }, function() {
        return [[], []];
      }), vo = Jr(function(t3, e3) {
        if (null == t3) return [];
        var n2 = e3.length;
        return n2 > 1 && pa(t3, e3[0], e3[1]) ? e3 = [] : n2 > 2 && pa(e3[0], e3[1], e3[2]) && (e3 = [e3[0]]), Br(t3, fr(e3, 1), []);
      }), xo = de2 || function() {
        return pe.Date.now();
      };
      function wo(t3, e3, r2) {
        return e3 = r2 ? n : e3, e3 = t3 && null == e3 ? t3.length : e3, Hi(t3, c, n, n, n, n, e3);
      }
      function bo(t3, e3) {
        var i2;
        if ("function" != typeof e3) throw new At2(r);
        return t3 = ss(t3), function() {
          return --t3 > 0 && (i2 = e3.apply(this, arguments)), t3 <= 1 && (e3 = n), i2;
        };
      }
      var Mo = Jr(function(t3, e3, n2) {
        var r2 = 1;
        if (n2.length) {
          var i2 = sn(n2, ta(Mo));
          r2 |= s;
        }
        return Hi(t3, r2, e3, n2, i2);
      }), _o = Jr(function(t3, e3, n2) {
        var r2 = 3;
        if (n2.length) {
          var i2 = sn(n2, ta(_o));
          r2 |= s;
        }
        return Hi(e3, r2, t3, n2, i2);
      });
      function To(t3, e3, i2) {
        var a2, o2, s2, l2, c2, u2, h2 = 0, p2 = false, d2 = false, f2 = true;
        if ("function" != typeof t3) throw new At2(r);
        function m2(e4) {
          var r2 = a2, i3 = o2;
          return a2 = o2 = n, h2 = e4, l2 = t3.apply(i3, r2);
        }
        function g2(t4) {
          var r2 = t4 - u2;
          return u2 === n || r2 >= e3 || r2 < 0 || d2 && t4 - h2 >= s2;
        }
        function y2() {
          var t4 = xo();
          if (g2(t4)) return v2(t4);
          c2 = _a(y2, function(t5) {
            var n2 = e3 - (t5 - u2);
            return d2 ? vn(n2, s2 - (t5 - h2)) : n2;
          }(t4));
        }
        function v2(t4) {
          return c2 = n, f2 && a2 ? m2(t4) : (a2 = o2 = n, l2);
        }
        function x2() {
          var t4 = xo(), r2 = g2(t4);
          if (a2 = arguments, o2 = this, u2 = t4, r2) {
            if (c2 === n) return function(t5) {
              return h2 = t5, c2 = _a(y2, e3), p2 ? m2(t5) : l2;
            }(u2);
            if (d2) return mi(c2), c2 = _a(y2, e3), m2(u2);
          }
          return c2 === n && (c2 = _a(y2, e3)), l2;
        }
        return e3 = cs(e3) || 0, qo(i2) && (p2 = !!i2.leading, s2 = (d2 = "maxWait" in i2) ? yn(cs(i2.maxWait) || 0, e3) : s2, f2 = "trailing" in i2 ? !!i2.trailing : f2), x2.cancel = function() {
          c2 !== n && mi(c2), h2 = 0, a2 = u2 = o2 = c2 = n;
        }, x2.flush = function() {
          return c2 === n ? l2 : v2(xo());
        }, x2;
      }
      var Co = Jr(function(t3, e3) {
        return sr(t3, 1, e3);
      }), So = Jr(function(t3, e3, n2) {
        return sr(t3, cs(e3) || 0, n2);
      });
      function Do(t3, e3) {
        if ("function" != typeof t3 || null != e3 && "function" != typeof e3) throw new At2(r);
        var n2 = function() {
          var r2 = arguments, i2 = e3 ? e3.apply(this, r2) : r2[0], a2 = n2.cache;
          if (a2.has(i2)) return a2.get(i2);
          var o2 = t3.apply(this, r2);
          return n2.cache = a2.set(i2, o2) || a2, o2;
        };
        return n2.cache = new (Do.Cache || Jn)(), n2;
      }
      function Eo(t3) {
        if ("function" != typeof t3) throw new At2(r);
        return function() {
          var e3 = arguments;
          switch (e3.length) {
            case 0:
              return !t3.call(this);
            case 1:
              return !t3.call(this, e3[0]);
            case 2:
              return !t3.call(this, e3[0], e3[1]);
            case 3:
              return !t3.call(this, e3[0], e3[1], e3[2]);
          }
          return !t3.apply(this, e3);
        };
      }
      Do.Cache = Jn;
      var Oo = di(function(t3, e3) {
        var n2 = (e3 = 1 == e3.length && No(e3[0]) ? Pe(e3[0], Ye(ea())) : Pe(fr(e3, 1), Ye(ea()))).length;
        return Jr(function(r2) {
          for (var i2 = -1, a2 = vn(r2.length, n2); ++i2 < a2; ) r2[i2] = e3[i2].call(this, r2[i2]);
          return Te(t3, this, r2);
        });
      }), Ao = Jr(function(t3, e3) {
        var r2 = sn(e3, ta(Ao));
        return Hi(t3, s, n, e3, r2);
      }), Po = Jr(function(t3, e3) {
        var r2 = sn(e3, ta(Po));
        return Hi(t3, l, n, e3, r2);
      }), Ro = Yi(function(t3, e3) {
        return Hi(t3, u, n, n, n, e3);
      });
      function Lo(t3, e3) {
        return t3 === e3 || t3 != t3 && e3 != e3;
      }
      var Io = Fi(_r), ko = Fi(function(t3, e3) {
        return t3 >= e3;
      }), jo = Er(/* @__PURE__ */ function() {
        return arguments;
      }()) ? Er : function(t3) {
        return Xo(t3) && jt2.call(t3, "callee") && !Yt2.call(t3, "callee");
      }, No = Mt2.isArray, Vo = ve ? Ye(ve) : function(t3) {
        return Xo(t3) && Mr(t3) == R;
      };
      function Fo(t3) {
        return null != t3 && Jo(t3.length) && !Ho(t3);
      }
      function Bo(t3) {
        return Xo(t3) && Fo(t3);
      }
      var Go = He2 || cl, zo = xe ? Ye(xe) : function(t3) {
        return Xo(t3) && Mr(t3) == x;
      };
      function Uo(t3) {
        if (!Xo(t3)) return false;
        var e3 = Mr(t3);
        return e3 == w || "[object DOMException]" == e3 || "string" == typeof t3.message && "string" == typeof t3.name && !Ko(t3);
      }
      function Ho(t3) {
        if (!qo(t3)) return false;
        var e3 = Mr(t3);
        return e3 == b || e3 == M || "[object AsyncFunction]" == e3 || "[object Proxy]" == e3;
      }
      function Wo(t3) {
        return "number" == typeof t3 && t3 == ss(t3);
      }
      function Jo(t3) {
        return "number" == typeof t3 && t3 > -1 && t3 % 1 == 0 && t3 <= p;
      }
      function qo(t3) {
        var e3 = typeof t3;
        return null != t3 && ("object" == e3 || "function" == e3);
      }
      function Xo(t3) {
        return null != t3 && "object" == typeof t3;
      }
      var Yo = we ? Ye(we) : function(t3) {
        return Xo(t3) && sa(t3) == _;
      };
      function Zo(t3) {
        return "number" == typeof t3 || Xo(t3) && Mr(t3) == T;
      }
      function Ko(t3) {
        if (!Xo(t3) || Mr(t3) != C) return false;
        var e3 = qt2(t3);
        if (null === e3) return true;
        var n2 = jt2.call(e3, "constructor") && e3.constructor;
        return "function" == typeof n2 && n2 instanceof n2 && kt2.call(n2) == Bt2;
      }
      var $o = be ? Ye(be) : function(t3) {
        return Xo(t3) && Mr(t3) == D;
      }, Qo = Me ? Ye(Me) : function(t3) {
        return Xo(t3) && sa(t3) == E;
      };
      function ts(t3) {
        return "string" == typeof t3 || !No(t3) && Xo(t3) && Mr(t3) == O;
      }
      function es(t3) {
        return "symbol" == typeof t3 || Xo(t3) && Mr(t3) == A;
      }
      var ns = _e ? Ye(_e) : function(t3) {
        return Xo(t3) && Jo(t3.length) && !!ae[Mr(t3)];
      }, rs = Fi(Ir), is = Fi(function(t3, e3) {
        return t3 <= e3;
      });
      function as(t3) {
        if (!t3) return [];
        if (Fo(t3)) return ts(t3) ? un(t3) : Mi(t3);
        if (ee2 && t3[ee2]) return function(t4) {
          for (var e4, n2 = []; !(e4 = t4.next()).done; ) n2.push(e4.value);
          return n2;
        }(t3[ee2]());
        var e3 = sa(t3);
        return (e3 == _ ? an : e3 == E ? ln : Ls)(t3);
      }
      function os(t3) {
        return t3 ? (t3 = cs(t3)) === h || t3 === -1 / 0 ? 17976931348623157e292 * (t3 < 0 ? -1 : 1) : t3 == t3 ? t3 : 0 : 0 === t3 ? t3 : 0;
      }
      function ss(t3) {
        var e3 = os(t3), n2 = e3 % 1;
        return e3 == e3 ? n2 ? e3 - n2 : e3 : 0;
      }
      function ls(t3) {
        return t3 ? ir(ss(t3), 0, f) : 0;
      }
      function cs(t3) {
        if ("number" == typeof t3) return t3;
        if (es(t3)) return d;
        if (qo(t3)) {
          var e3 = "function" == typeof t3.valueOf ? t3.valueOf() : t3;
          t3 = qo(e3) ? e3 + "" : e3;
        }
        if ("string" != typeof t3) return 0 === t3 ? t3 : +t3;
        t3 = Xe(t3);
        var n2 = mt.test(t3);
        return n2 || yt.test(t3) ? ce(t3.slice(2), n2 ? 2 : 8) : ft.test(t3) ? d : +t3;
      }
      function us(t3) {
        return _i(t3, Cs(t3));
      }
      function hs(t3) {
        return null == t3 ? "" : ni(t3);
      }
      var ps = Ci(function(t3, e3) {
        if (ga(e3) || Fo(e3)) _i(e3, Ts(e3), t3);
        else for (var n2 in e3) jt2.call(e3, n2) && $n(t3, n2, e3[n2]);
      }), ds = Ci(function(t3, e3) {
        _i(e3, Cs(e3), t3);
      }), fs = Ci(function(t3, e3, n2, r2) {
        _i(e3, Cs(e3), t3, r2);
      }), ms = Ci(function(t3, e3, n2, r2) {
        _i(e3, Ts(e3), t3, r2);
      }), gs = Yi(rr), ys = Jr(function(t3, e3) {
        t3 = Dt2(t3);
        var r2 = -1, i2 = e3.length, a2 = i2 > 2 ? e3[2] : n;
        for (a2 && pa(e3[0], e3[1], a2) && (i2 = 1); ++r2 < i2; ) for (var o2 = e3[r2], s2 = Cs(o2), l2 = -1, c2 = s2.length; ++l2 < c2; ) {
          var u2 = s2[l2], h2 = t3[u2];
          (h2 === n || Lo(h2, Lt2[u2]) && !jt2.call(t3, u2)) && (t3[u2] = o2[u2]);
        }
        return t3;
      }), vs = Jr(function(t3) {
        return t3.push(n, Ji), Te(Ds, n, t3);
      });
      function xs(t3, e3, r2) {
        var i2 = null == t3 ? n : wr(t3, e3);
        return i2 === n ? r2 : i2;
      }
      function ws(t3, e3) {
        return null != t3 && la(t3, e3, Cr);
      }
      var bs = Ii(function(t3, e3, n2) {
        null != e3 && "function" != typeof e3.toString && (e3 = Ft2.call(e3)), t3[e3] = n2;
      }, qs(Zs)), Ms = Ii(function(t3, e3, n2) {
        null != e3 && "function" != typeof e3.toString && (e3 = Ft2.call(e3)), jt2.call(t3, e3) ? t3[e3].push(n2) : t3[e3] = [n2];
      }, ea), _s = Jr(Dr);
      function Ts(t3) {
        return Fo(t3) ? Yn(t3) : Lr(t3);
      }
      function Cs(t3) {
        return Fo(t3) ? Yn(t3, true) : function(t4) {
          if (!qo(t4)) return function(t5) {
            var e4 = [];
            if (null != t5) for (var n3 in Dt2(t5)) e4.push(n3);
            return e4;
          }(t4);
          var e3 = ga(t4), n2 = [];
          for (var r2 in t4) ("constructor" != r2 || !e3 && jt2.call(t4, r2)) && n2.push(r2);
          return n2;
        }(t3);
      }
      var Ss = Ci(function(t3, e3, n2) {
        Vr(t3, e3, n2);
      }), Ds = Ci(function(t3, e3, n2, r2) {
        Vr(t3, e3, n2, r2);
      }), Es = Yi(function(t3, e3) {
        var n2 = {};
        if (null == t3) return n2;
        var r2 = false;
        e3 = Pe(e3, function(e4) {
          return e4 = pi(e4, t3), r2 || (r2 = e4.length > 1), e4;
        }), _i(t3, Ki(t3), n2), r2 && (n2 = ar(n2, 7, qi));
        for (var i2 = e3.length; i2--; ) ii(n2, e3[i2]);
        return n2;
      }), Os = Yi(function(t3, e3) {
        return null == t3 ? {} : function(t4, e4) {
          return Gr(t4, e4, function(e5, n2) {
            return ws(t4, n2);
          });
        }(t3, e3);
      });
      function As(t3, e3) {
        if (null == t3) return {};
        var n2 = Pe(Ki(t3), function(t4) {
          return [t4];
        });
        return e3 = ea(e3), Gr(t3, n2, function(t4, n3) {
          return e3(t4, n3[0]);
        });
      }
      var Ps = Ui(Ts), Rs = Ui(Cs);
      function Ls(t3) {
        return null == t3 ? [] : Ze(t3, Ts(t3));
      }
      var Is = Oi(function(t3, e3, n2) {
        return e3 = e3.toLowerCase(), t3 + (n2 ? ks(e3) : e3);
      });
      function ks(t3) {
        return Us(hs(t3).toLowerCase());
      }
      function js(t3) {
        return (t3 = hs(t3)) && t3.replace(xt, tn).replace($t, "");
      }
      var Ns = Oi(function(t3, e3, n2) {
        return t3 + (n2 ? "-" : "") + e3.toLowerCase();
      }), Vs = Oi(function(t3, e3, n2) {
        return t3 + (n2 ? " " : "") + e3.toLowerCase();
      }), Fs = Ei("toLowerCase"), Bs = Oi(function(t3, e3, n2) {
        return t3 + (n2 ? "_" : "") + e3.toLowerCase();
      }), Gs = Oi(function(t3, e3, n2) {
        return t3 + (n2 ? " " : "") + Us(e3);
      }), zs = Oi(function(t3, e3, n2) {
        return t3 + (n2 ? " " : "") + e3.toUpperCase();
      }), Us = Ei("toUpperCase");
      function Hs(t3, e3, r2) {
        return t3 = hs(t3), (e3 = r2 ? n : e3) === n ? function(t4) {
          return ne.test(t4);
        }(t3) ? function(t4) {
          return t4.match(te) || [];
        }(t3) : function(t4) {
          return t4.match(ct) || [];
        }(t3) : t3.match(e3) || [];
      }
      var Ws = Jr(function(t3, e3) {
        try {
          return Te(t3, n, e3);
        } catch (t4) {
          return Uo(t4) ? t4 : new Tt2(t4);
        }
      }), Js = Yi(function(t3, e3) {
        return Se(e3, function(e4) {
          e4 = Oa(e4), nr(t3, e4, Mo(t3[e4], t3));
        }), t3;
      });
      function qs(t3) {
        return function() {
          return t3;
        };
      }
      var Xs = Ri(), Ys = Ri(true);
      function Zs(t3) {
        return t3;
      }
      function Ks(t3) {
        return Rr("function" == typeof t3 ? t3 : ar(t3, 1));
      }
      var $s = Jr(function(t3, e3) {
        return function(n2) {
          return Dr(n2, t3, e3);
        };
      }), Qs = Jr(function(t3, e3) {
        return function(n2) {
          return Dr(t3, n2, e3);
        };
      });
      function tl(t3, e3, n2) {
        var r2 = Ts(e3), i2 = xr(e3, r2);
        null != n2 || qo(e3) && (i2.length || !r2.length) || (n2 = e3, e3 = t3, t3 = this, i2 = xr(e3, Ts(e3)));
        var a2 = !(qo(n2) && "chain" in n2 && !n2.chain), o2 = Ho(t3);
        return Se(i2, function(n3) {
          var r3 = e3[n3];
          t3[n3] = r3, o2 && (t3.prototype[n3] = function() {
            var e4 = this.__chain__;
            if (a2 || e4) {
              var n4 = t3(this.__wrapped__);
              return (n4.__actions__ = Mi(this.__actions__)).push({ func: r3, args: arguments, thisArg: t3 }), n4.__chain__ = e4, n4;
            }
            return r3.apply(t3, Re([this.value()], arguments));
          });
        }), t3;
      }
      function el() {
      }
      var nl = ji(Pe), rl = ji(De), il = ji(ke);
      function al(t3) {
        return da(t3) ? Ue(Oa(t3)) : /* @__PURE__ */ function(t4) {
          return function(e3) {
            return wr(e3, t4);
          };
        }(t3);
      }
      var ol = Vi(), sl = Vi(true);
      function ll() {
        return [];
      }
      function cl() {
        return false;
      }
      var ul, hl = ki(function(t3, e3) {
        return t3 + e3;
      }, 0), pl = Gi("ceil"), dl = ki(function(t3, e3) {
        return t3 / e3;
      }, 1), fl = Gi("floor"), ml = ki(function(t3, e3) {
        return t3 * e3;
      }, 1), gl = Gi("round"), yl = ki(function(t3, e3) {
        return t3 - e3;
      }, 0);
      return Fn.after = function(t3, e3) {
        if ("function" != typeof e3) throw new At2(r);
        return t3 = ss(t3), function() {
          if (--t3 < 1) return e3.apply(this, arguments);
        };
      }, Fn.ary = wo, Fn.assign = ps, Fn.assignIn = ds, Fn.assignInWith = fs, Fn.assignWith = ms, Fn.at = gs, Fn.before = bo, Fn.bind = Mo, Fn.bindAll = Js, Fn.bindKey = _o, Fn.castArray = function() {
        if (!arguments.length) return [];
        var t3 = arguments[0];
        return No(t3) ? t3 : [t3];
      }, Fn.chain = io, Fn.chunk = function(t3, e3, r2) {
        e3 = (r2 ? pa(t3, e3, r2) : e3 === n) ? 1 : yn(ss(e3), 0);
        var i2 = null == t3 ? 0 : t3.length;
        if (!i2 || e3 < 1) return [];
        for (var a2 = 0, o2 = 0, s2 = Mt2(ge2(i2 / e3)); a2 < i2; ) s2[o2++] = Zr(t3, a2, a2 += e3);
        return s2;
      }, Fn.compact = function(t3) {
        for (var e3 = -1, n2 = null == t3 ? 0 : t3.length, r2 = 0, i2 = []; ++e3 < n2; ) {
          var a2 = t3[e3];
          a2 && (i2[r2++] = a2);
        }
        return i2;
      }, Fn.concat = function() {
        var t3 = arguments.length;
        if (!t3) return [];
        for (var e3 = Mt2(t3 - 1), n2 = arguments[0], r2 = t3; r2--; ) e3[r2 - 1] = arguments[r2];
        return Re(No(n2) ? Mi(n2) : [n2], fr(e3, 1));
      }, Fn.cond = function(t3) {
        var e3 = null == t3 ? 0 : t3.length, n2 = ea();
        return t3 = e3 ? Pe(t3, function(t4) {
          if ("function" != typeof t4[1]) throw new At2(r);
          return [n2(t4[0]), t4[1]];
        }) : [], Jr(function(n3) {
          for (var r2 = -1; ++r2 < e3; ) {
            var i2 = t3[r2];
            if (Te(i2[0], this, n3)) return Te(i2[1], this, n3);
          }
        });
      }, Fn.conforms = function(t3) {
        return function(t4) {
          var e3 = Ts(t4);
          return function(n2) {
            return or(n2, t4, e3);
          };
        }(ar(t3, 1));
      }, Fn.constant = qs, Fn.countBy = so, Fn.create = function(t3, e3) {
        var n2 = Bn(t3);
        return null == e3 ? n2 : er(n2, e3);
      }, Fn.curry = function t3(e3, r2, i2) {
        var a2 = Hi(e3, 8, n, n, n, n, n, r2 = i2 ? n : r2);
        return a2.placeholder = t3.placeholder, a2;
      }, Fn.curryRight = function t3(e3, r2, i2) {
        var a2 = Hi(e3, o, n, n, n, n, n, r2 = i2 ? n : r2);
        return a2.placeholder = t3.placeholder, a2;
      }, Fn.debounce = To, Fn.defaults = ys, Fn.defaultsDeep = vs, Fn.defer = Co, Fn.delay = So, Fn.difference = Ra, Fn.differenceBy = La, Fn.differenceWith = Ia, Fn.drop = function(t3, e3, r2) {
        var i2 = null == t3 ? 0 : t3.length;
        return i2 ? Zr(t3, (e3 = r2 || e3 === n ? 1 : ss(e3)) < 0 ? 0 : e3, i2) : [];
      }, Fn.dropRight = function(t3, e3, r2) {
        var i2 = null == t3 ? 0 : t3.length;
        return i2 ? Zr(t3, 0, (e3 = i2 - (e3 = r2 || e3 === n ? 1 : ss(e3))) < 0 ? 0 : e3) : [];
      }, Fn.dropRightWhile = function(t3, e3) {
        return t3 && t3.length ? oi(t3, ea(e3, 3), true, true) : [];
      }, Fn.dropWhile = function(t3, e3) {
        return t3 && t3.length ? oi(t3, ea(e3, 3), true) : [];
      }, Fn.fill = function(t3, e3, r2, i2) {
        var a2 = null == t3 ? 0 : t3.length;
        return a2 ? (r2 && "number" != typeof r2 && pa(t3, e3, r2) && (r2 = 0, i2 = a2), function(t4, e4, r3, i3) {
          var a3 = t4.length;
          for ((r3 = ss(r3)) < 0 && (r3 = -r3 > a3 ? 0 : a3 + r3), (i3 = i3 === n || i3 > a3 ? a3 : ss(i3)) < 0 && (i3 += a3), i3 = r3 > i3 ? 0 : ls(i3); r3 < i3; ) t4[r3++] = e4;
          return t4;
        }(t3, e3, r2, i2)) : [];
      }, Fn.filter = function(t3, e3) {
        return (No(t3) ? Ee : dr)(t3, ea(e3, 3));
      }, Fn.flatMap = function(t3, e3) {
        return fr(go(t3, e3), 1);
      }, Fn.flatMapDeep = function(t3, e3) {
        return fr(go(t3, e3), h);
      }, Fn.flatMapDepth = function(t3, e3, r2) {
        return r2 = r2 === n ? 1 : ss(r2), fr(go(t3, e3), r2);
      }, Fn.flatten = Na, Fn.flattenDeep = function(t3) {
        return null != t3 && t3.length ? fr(t3, h) : [];
      }, Fn.flattenDepth = function(t3, e3) {
        return null != t3 && t3.length ? fr(t3, e3 = e3 === n ? 1 : ss(e3)) : [];
      }, Fn.flip = function(t3) {
        return Hi(t3, 512);
      }, Fn.flow = Xs, Fn.flowRight = Ys, Fn.fromPairs = function(t3) {
        for (var e3 = -1, n2 = null == t3 ? 0 : t3.length, r2 = {}; ++e3 < n2; ) {
          var i2 = t3[e3];
          r2[i2[0]] = i2[1];
        }
        return r2;
      }, Fn.functions = function(t3) {
        return null == t3 ? [] : xr(t3, Ts(t3));
      }, Fn.functionsIn = function(t3) {
        return null == t3 ? [] : xr(t3, Cs(t3));
      }, Fn.groupBy = po, Fn.initial = function(t3) {
        return null != t3 && t3.length ? Zr(t3, 0, -1) : [];
      }, Fn.intersection = Fa, Fn.intersectionBy = Ba, Fn.intersectionWith = Ga, Fn.invert = bs, Fn.invertBy = Ms, Fn.invokeMap = fo, Fn.iteratee = Ks, Fn.keyBy = mo, Fn.keys = Ts, Fn.keysIn = Cs, Fn.map = go, Fn.mapKeys = function(t3, e3) {
        var n2 = {};
        return e3 = ea(e3, 3), yr(t3, function(t4, r2, i2) {
          nr(n2, e3(t4, r2, i2), t4);
        }), n2;
      }, Fn.mapValues = function(t3, e3) {
        var n2 = {};
        return e3 = ea(e3, 3), yr(t3, function(t4, r2, i2) {
          nr(n2, r2, e3(t4, r2, i2));
        }), n2;
      }, Fn.matches = function(t3) {
        return jr(ar(t3, 1));
      }, Fn.matchesProperty = function(t3, e3) {
        return Nr(t3, ar(e3, 1));
      }, Fn.memoize = Do, Fn.merge = Ss, Fn.mergeWith = Ds, Fn.method = $s, Fn.methodOf = Qs, Fn.mixin = tl, Fn.negate = Eo, Fn.nthArg = function(t3) {
        return t3 = ss(t3), Jr(function(e3) {
          return Fr(e3, t3);
        });
      }, Fn.omit = Es, Fn.omitBy = function(t3, e3) {
        return As(t3, Eo(ea(e3)));
      }, Fn.once = function(t3) {
        return bo(2, t3);
      }, Fn.orderBy = function(t3, e3, r2, i2) {
        return null == t3 ? [] : (No(e3) || (e3 = null == e3 ? [] : [e3]), No(r2 = i2 ? n : r2) || (r2 = null == r2 ? [] : [r2]), Br(t3, e3, r2));
      }, Fn.over = nl, Fn.overArgs = Oo, Fn.overEvery = rl, Fn.overSome = il, Fn.partial = Ao, Fn.partialRight = Po, Fn.partition = yo, Fn.pick = Os, Fn.pickBy = As, Fn.property = al, Fn.propertyOf = function(t3) {
        return function(e3) {
          return null == t3 ? n : wr(t3, e3);
        };
      }, Fn.pull = Ua, Fn.pullAll = Ha, Fn.pullAllBy = function(t3, e3, n2) {
        return t3 && t3.length && e3 && e3.length ? zr(t3, e3, ea(n2, 2)) : t3;
      }, Fn.pullAllWith = function(t3, e3, r2) {
        return t3 && t3.length && e3 && e3.length ? zr(t3, e3, n, r2) : t3;
      }, Fn.pullAt = Wa, Fn.range = ol, Fn.rangeRight = sl, Fn.rearg = Ro, Fn.reject = function(t3, e3) {
        return (No(t3) ? Ee : dr)(t3, Eo(ea(e3, 3)));
      }, Fn.remove = function(t3, e3) {
        var n2 = [];
        if (!t3 || !t3.length) return n2;
        var r2 = -1, i2 = [], a2 = t3.length;
        for (e3 = ea(e3, 3); ++r2 < a2; ) {
          var o2 = t3[r2];
          e3(o2, r2, t3) && (n2.push(o2), i2.push(r2));
        }
        return Ur(t3, i2), n2;
      }, Fn.rest = function(t3, e3) {
        if ("function" != typeof t3) throw new At2(r);
        return Jr(t3, e3 = e3 === n ? e3 : ss(e3));
      }, Fn.reverse = Ja, Fn.sampleSize = function(t3, e3, r2) {
        return e3 = (r2 ? pa(t3, e3, r2) : e3 === n) ? 1 : ss(e3), (No(t3) ? function(t4, e4) {
          return Da(Mi(t4), ir(e4, 0, t4.length));
        } : function(t4, e4) {
          var n2 = Ls(t4);
          return Da(n2, ir(e4, 0, n2.length));
        })(t3, e3);
      }, Fn.set = function(t3, e3, n2) {
        return null == t3 ? t3 : qr(t3, e3, n2);
      }, Fn.setWith = function(t3, e3, r2, i2) {
        return i2 = "function" == typeof i2 ? i2 : n, null == t3 ? t3 : qr(t3, e3, r2, i2);
      }, Fn.shuffle = function(t3) {
        return (No(t3) ? function(t4) {
          return Da(Mi(t4));
        } : function(t4) {
          return Da(Ls(t4));
        })(t3);
      }, Fn.slice = function(t3, e3, r2) {
        var i2 = null == t3 ? 0 : t3.length;
        return i2 ? (r2 && "number" != typeof r2 && pa(t3, e3, r2) ? (e3 = 0, r2 = i2) : (e3 = null == e3 ? 0 : ss(e3), r2 = r2 === n ? i2 : ss(r2)), Zr(t3, e3, r2)) : [];
      }, Fn.sortBy = vo, Fn.sortedUniq = function(t3) {
        return t3 && t3.length ? ti(t3) : [];
      }, Fn.sortedUniqBy = function(t3, e3) {
        return t3 && t3.length ? ti(t3, ea(e3, 2)) : [];
      }, Fn.split = function(t3, e3, r2) {
        return r2 && "number" != typeof r2 && pa(t3, e3, r2) && (e3 = r2 = n), (r2 = r2 === n ? f : r2 >>> 0) ? (t3 = hs(t3)) && ("string" == typeof e3 || null != e3 && !$o(e3)) && !(e3 = ni(e3)) && rn(t3) ? fi(un(t3), 0, r2) : t3.split(e3, r2) : [];
      }, Fn.spread = function(t3, e3) {
        if ("function" != typeof t3) throw new At2(r);
        return e3 = null == e3 ? 0 : yn(ss(e3), 0), Jr(function(n2) {
          var r2 = n2[e3], i2 = fi(n2, 0, e3);
          return r2 && Re(i2, r2), Te(t3, this, i2);
        });
      }, Fn.tail = function(t3) {
        var e3 = null == t3 ? 0 : t3.length;
        return e3 ? Zr(t3, 1, e3) : [];
      }, Fn.take = function(t3, e3, r2) {
        return t3 && t3.length ? Zr(t3, 0, (e3 = r2 || e3 === n ? 1 : ss(e3)) < 0 ? 0 : e3) : [];
      }, Fn.takeRight = function(t3, e3, r2) {
        var i2 = null == t3 ? 0 : t3.length;
        return i2 ? Zr(t3, (e3 = i2 - (e3 = r2 || e3 === n ? 1 : ss(e3))) < 0 ? 0 : e3, i2) : [];
      }, Fn.takeRightWhile = function(t3, e3) {
        return t3 && t3.length ? oi(t3, ea(e3, 3), false, true) : [];
      }, Fn.takeWhile = function(t3, e3) {
        return t3 && t3.length ? oi(t3, ea(e3, 3)) : [];
      }, Fn.tap = function(t3, e3) {
        return e3(t3), t3;
      }, Fn.throttle = function(t3, e3, n2) {
        var i2 = true, a2 = true;
        if ("function" != typeof t3) throw new At2(r);
        return qo(n2) && (i2 = "leading" in n2 ? !!n2.leading : i2, a2 = "trailing" in n2 ? !!n2.trailing : a2), To(t3, e3, { leading: i2, maxWait: e3, trailing: a2 });
      }, Fn.thru = ao, Fn.toArray = as, Fn.toPairs = Ps, Fn.toPairsIn = Rs, Fn.toPath = function(t3) {
        return No(t3) ? Pe(t3, Oa) : es(t3) ? [t3] : Mi(Ea(hs(t3)));
      }, Fn.toPlainObject = us, Fn.transform = function(t3, e3, n2) {
        var r2 = No(t3), i2 = r2 || Go(t3) || ns(t3);
        if (e3 = ea(e3, 4), null == n2) {
          var a2 = t3 && t3.constructor;
          n2 = i2 ? r2 ? new a2() : [] : qo(t3) && Ho(a2) ? Bn(qt2(t3)) : {};
        }
        return (i2 ? Se : yr)(t3, function(t4, r3, i3) {
          return e3(n2, t4, r3, i3);
        }), n2;
      }, Fn.unary = function(t3) {
        return wo(t3, 1);
      }, Fn.union = qa, Fn.unionBy = Xa, Fn.unionWith = Ya, Fn.uniq = function(t3) {
        return t3 && t3.length ? ri(t3) : [];
      }, Fn.uniqBy = function(t3, e3) {
        return t3 && t3.length ? ri(t3, ea(e3, 2)) : [];
      }, Fn.uniqWith = function(t3, e3) {
        return e3 = "function" == typeof e3 ? e3 : n, t3 && t3.length ? ri(t3, n, e3) : [];
      }, Fn.unset = function(t3, e3) {
        return null == t3 || ii(t3, e3);
      }, Fn.unzip = Za, Fn.unzipWith = Ka, Fn.update = function(t3, e3, n2) {
        return null == t3 ? t3 : ai(t3, e3, hi(n2));
      }, Fn.updateWith = function(t3, e3, r2, i2) {
        return i2 = "function" == typeof i2 ? i2 : n, null == t3 ? t3 : ai(t3, e3, hi(r2), i2);
      }, Fn.values = Ls, Fn.valuesIn = function(t3) {
        return null == t3 ? [] : Ze(t3, Cs(t3));
      }, Fn.without = $a, Fn.words = Hs, Fn.wrap = function(t3, e3) {
        return Ao(hi(e3), t3);
      }, Fn.xor = Qa, Fn.xorBy = to, Fn.xorWith = eo, Fn.zip = no, Fn.zipObject = function(t3, e3) {
        return ci(t3 || [], e3 || [], $n);
      }, Fn.zipObjectDeep = function(t3, e3) {
        return ci(t3 || [], e3 || [], qr);
      }, Fn.zipWith = ro, Fn.entries = Ps, Fn.entriesIn = Rs, Fn.extend = ds, Fn.extendWith = fs, tl(Fn, Fn), Fn.add = hl, Fn.attempt = Ws, Fn.camelCase = Is, Fn.capitalize = ks, Fn.ceil = pl, Fn.clamp = function(t3, e3, r2) {
        return r2 === n && (r2 = e3, e3 = n), r2 !== n && (r2 = (r2 = cs(r2)) == r2 ? r2 : 0), e3 !== n && (e3 = (e3 = cs(e3)) == e3 ? e3 : 0), ir(cs(t3), e3, r2);
      }, Fn.clone = function(t3) {
        return ar(t3, 4);
      }, Fn.cloneDeep = function(t3) {
        return ar(t3, 5);
      }, Fn.cloneDeepWith = function(t3, e3) {
        return ar(t3, 5, e3 = "function" == typeof e3 ? e3 : n);
      }, Fn.cloneWith = function(t3, e3) {
        return ar(t3, 4, e3 = "function" == typeof e3 ? e3 : n);
      }, Fn.conformsTo = function(t3, e3) {
        return null == e3 || or(t3, e3, Ts(e3));
      }, Fn.deburr = js, Fn.defaultTo = function(t3, e3) {
        return null == t3 || t3 != t3 ? e3 : t3;
      }, Fn.divide = dl, Fn.endsWith = function(t3, e3, r2) {
        t3 = hs(t3), e3 = ni(e3);
        var i2 = t3.length, a2 = r2 = r2 === n ? i2 : ir(ss(r2), 0, i2);
        return (r2 -= e3.length) >= 0 && t3.slice(r2, a2) == e3;
      }, Fn.eq = Lo, Fn.escape = function(t3) {
        return (t3 = hs(t3)) && Y.test(t3) ? t3.replace(q, en) : t3;
      }, Fn.escapeRegExp = function(t3) {
        return (t3 = hs(t3)) && rt.test(t3) ? t3.replace(nt, "\\$&") : t3;
      }, Fn.every = function(t3, e3, r2) {
        var i2 = No(t3) ? De : hr;
        return r2 && pa(t3, e3, r2) && (e3 = n), i2(t3, ea(e3, 3));
      }, Fn.find = lo, Fn.findIndex = ka, Fn.findKey = function(t3, e3) {
        return Ne(t3, ea(e3, 3), yr);
      }, Fn.findLast = co, Fn.findLastIndex = ja, Fn.findLastKey = function(t3, e3) {
        return Ne(t3, ea(e3, 3), vr);
      }, Fn.floor = fl, Fn.forEach = uo, Fn.forEachRight = ho, Fn.forIn = function(t3, e3) {
        return null == t3 ? t3 : mr(t3, ea(e3, 3), Cs);
      }, Fn.forInRight = function(t3, e3) {
        return null == t3 ? t3 : gr(t3, ea(e3, 3), Cs);
      }, Fn.forOwn = function(t3, e3) {
        return t3 && yr(t3, ea(e3, 3));
      }, Fn.forOwnRight = function(t3, e3) {
        return t3 && vr(t3, ea(e3, 3));
      }, Fn.get = xs, Fn.gt = Io, Fn.gte = ko, Fn.has = function(t3, e3) {
        return null != t3 && la(t3, e3, Tr);
      }, Fn.hasIn = ws, Fn.head = Va, Fn.identity = Zs, Fn.includes = function(t3, e3, n2, r2) {
        t3 = Fo(t3) ? t3 : Ls(t3), n2 = n2 && !r2 ? ss(n2) : 0;
        var i2 = t3.length;
        return n2 < 0 && (n2 = yn(i2 + n2, 0)), ts(t3) ? n2 <= i2 && t3.indexOf(e3, n2) > -1 : !!i2 && Fe(t3, e3, n2) > -1;
      }, Fn.indexOf = function(t3, e3, n2) {
        var r2 = null == t3 ? 0 : t3.length;
        if (!r2) return -1;
        var i2 = null == n2 ? 0 : ss(n2);
        return i2 < 0 && (i2 = yn(r2 + i2, 0)), Fe(t3, e3, i2);
      }, Fn.inRange = function(t3, e3, r2) {
        return e3 = os(e3), r2 === n ? (r2 = e3, e3 = 0) : r2 = os(r2), function(t4, e4, n2) {
          return t4 >= vn(e4, n2) && t4 < yn(e4, n2);
        }(t3 = cs(t3), e3, r2);
      }, Fn.invoke = _s, Fn.isArguments = jo, Fn.isArray = No, Fn.isArrayBuffer = Vo, Fn.isArrayLike = Fo, Fn.isArrayLikeObject = Bo, Fn.isBoolean = function(t3) {
        return true === t3 || false === t3 || Xo(t3) && Mr(t3) == v;
      }, Fn.isBuffer = Go, Fn.isDate = zo, Fn.isElement = function(t3) {
        return Xo(t3) && 1 === t3.nodeType && !Ko(t3);
      }, Fn.isEmpty = function(t3) {
        if (null == t3) return true;
        if (Fo(t3) && (No(t3) || "string" == typeof t3 || "function" == typeof t3.splice || Go(t3) || ns(t3) || jo(t3))) return !t3.length;
        var e3 = sa(t3);
        if (e3 == _ || e3 == E) return !t3.size;
        if (ga(t3)) return !Lr(t3).length;
        for (var n2 in t3) if (jt2.call(t3, n2)) return false;
        return true;
      }, Fn.isEqual = function(t3, e3) {
        return Or(t3, e3);
      }, Fn.isEqualWith = function(t3, e3, r2) {
        var i2 = (r2 = "function" == typeof r2 ? r2 : n) ? r2(t3, e3) : n;
        return i2 === n ? Or(t3, e3, n, r2) : !!i2;
      }, Fn.isError = Uo, Fn.isFinite = function(t3) {
        return "number" == typeof t3 && fn(t3);
      }, Fn.isFunction = Ho, Fn.isInteger = Wo, Fn.isLength = Jo, Fn.isMap = Yo, Fn.isMatch = function(t3, e3) {
        return t3 === e3 || Ar(t3, e3, ra(e3));
      }, Fn.isMatchWith = function(t3, e3, r2) {
        return r2 = "function" == typeof r2 ? r2 : n, Ar(t3, e3, ra(e3), r2);
      }, Fn.isNaN = function(t3) {
        return Zo(t3) && t3 != +t3;
      }, Fn.isNative = function(t3) {
        if (ma(t3)) throw new Tt2("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");
        return Pr(t3);
      }, Fn.isNil = function(t3) {
        return null == t3;
      }, Fn.isNull = function(t3) {
        return null === t3;
      }, Fn.isNumber = Zo, Fn.isObject = qo, Fn.isObjectLike = Xo, Fn.isPlainObject = Ko, Fn.isRegExp = $o, Fn.isSafeInteger = function(t3) {
        return Wo(t3) && t3 >= -9007199254740991 && t3 <= p;
      }, Fn.isSet = Qo, Fn.isString = ts, Fn.isSymbol = es, Fn.isTypedArray = ns, Fn.isUndefined = function(t3) {
        return t3 === n;
      }, Fn.isWeakMap = function(t3) {
        return Xo(t3) && sa(t3) == P;
      }, Fn.isWeakSet = function(t3) {
        return Xo(t3) && "[object WeakSet]" == Mr(t3);
      }, Fn.join = function(t3, e3) {
        return null == t3 ? "" : mn.call(t3, e3);
      }, Fn.kebabCase = Ns, Fn.last = za, Fn.lastIndexOf = function(t3, e3, r2) {
        var i2 = null == t3 ? 0 : t3.length;
        if (!i2) return -1;
        var a2 = i2;
        return r2 !== n && (a2 = (a2 = ss(r2)) < 0 ? yn(i2 + a2, 0) : vn(a2, i2 - 1)), e3 == e3 ? function(t4, e4, n2) {
          for (var r3 = a2 + 1; r3--; ) if (t4[r3] === e4) return r3;
          return r3;
        }(t3, e3) : Ve(t3, Ge, a2, true);
      }, Fn.lowerCase = Vs, Fn.lowerFirst = Fs, Fn.lt = rs, Fn.lte = is, Fn.max = function(t3) {
        return t3 && t3.length ? pr(t3, Zs, _r) : n;
      }, Fn.maxBy = function(t3, e3) {
        return t3 && t3.length ? pr(t3, ea(e3, 2), _r) : n;
      }, Fn.mean = function(t3) {
        return ze(t3, Zs);
      }, Fn.meanBy = function(t3, e3) {
        return ze(t3, ea(e3, 2));
      }, Fn.min = function(t3) {
        return t3 && t3.length ? pr(t3, Zs, Ir) : n;
      }, Fn.minBy = function(t3, e3) {
        return t3 && t3.length ? pr(t3, ea(e3, 2), Ir) : n;
      }, Fn.stubArray = ll, Fn.stubFalse = cl, Fn.stubObject = function() {
        return {};
      }, Fn.stubString = function() {
        return "";
      }, Fn.stubTrue = function() {
        return true;
      }, Fn.multiply = ml, Fn.nth = function(t3, e3) {
        return t3 && t3.length ? Fr(t3, ss(e3)) : n;
      }, Fn.noConflict = function() {
        return pe._ === this && (pe._ = Gt2), this;
      }, Fn.noop = el, Fn.now = xo, Fn.pad = function(t3, e3, n2) {
        t3 = hs(t3);
        var r2 = (e3 = ss(e3)) ? cn(t3) : 0;
        if (!e3 || r2 >= e3) return t3;
        var i2 = (e3 - r2) / 2;
        return Ni(ye2(i2), n2) + t3 + Ni(ge2(i2), n2);
      }, Fn.padEnd = function(t3, e3, n2) {
        t3 = hs(t3);
        var r2 = (e3 = ss(e3)) ? cn(t3) : 0;
        return e3 && r2 < e3 ? t3 + Ni(e3 - r2, n2) : t3;
      }, Fn.padStart = function(t3, e3, n2) {
        t3 = hs(t3);
        var r2 = (e3 = ss(e3)) ? cn(t3) : 0;
        return e3 && r2 < e3 ? Ni(e3 - r2, n2) + t3 : t3;
      }, Fn.parseInt = function(t3, e3, n2) {
        return n2 || null == e3 ? e3 = 0 : e3 && (e3 = +e3), wn(hs(t3).replace(it, ""), e3 || 0);
      }, Fn.random = function(t3, e3, r2) {
        if (r2 && "boolean" != typeof r2 && pa(t3, e3, r2) && (e3 = r2 = n), r2 === n && ("boolean" == typeof e3 ? (r2 = e3, e3 = n) : "boolean" == typeof t3 && (r2 = t3, t3 = n)), t3 === n && e3 === n ? (t3 = 0, e3 = 1) : (t3 = os(t3), e3 === n ? (e3 = t3, t3 = 0) : e3 = os(e3)), t3 > e3) {
          var i2 = t3;
          t3 = e3, e3 = i2;
        }
        if (r2 || t3 % 1 || e3 % 1) {
          var a2 = bn();
          return vn(t3 + a2 * (e3 - t3 + le("1e-" + ((a2 + "").length - 1))), e3);
        }
        return Hr(t3, e3);
      }, Fn.reduce = function(t3, e3, n2) {
        var r2 = No(t3) ? Le : We, i2 = arguments.length < 3;
        return r2(t3, ea(e3, 4), n2, i2, cr);
      }, Fn.reduceRight = function(t3, e3, n2) {
        var r2 = No(t3) ? Ie : We, i2 = arguments.length < 3;
        return r2(t3, ea(e3, 4), n2, i2, ur);
      }, Fn.repeat = function(t3, e3, r2) {
        return e3 = (r2 ? pa(t3, e3, r2) : e3 === n) ? 1 : ss(e3), Wr(hs(t3), e3);
      }, Fn.replace = function() {
        var t3 = arguments, e3 = hs(t3[0]);
        return t3.length < 3 ? e3 : e3.replace(t3[1], t3[2]);
      }, Fn.result = function(t3, e3, r2) {
        var i2 = -1, a2 = (e3 = pi(e3, t3)).length;
        for (a2 || (a2 = 1, t3 = n); ++i2 < a2; ) {
          var o2 = null == t3 ? n : t3[Oa(e3[i2])];
          o2 === n && (i2 = a2, o2 = r2), t3 = Ho(o2) ? o2.call(t3) : o2;
        }
        return t3;
      }, Fn.round = gl, Fn.runInContext = t2, Fn.sample = function(t3) {
        return (No(t3) ? Zn : function(t4) {
          return Zn(Ls(t4));
        })(t3);
      }, Fn.size = function(t3) {
        if (null == t3) return 0;
        if (Fo(t3)) return ts(t3) ? cn(t3) : t3.length;
        var e3 = sa(t3);
        return e3 == _ || e3 == E ? t3.size : Lr(t3).length;
      }, Fn.snakeCase = Bs, Fn.some = function(t3, e3, r2) {
        var i2 = No(t3) ? ke : Kr;
        return r2 && pa(t3, e3, r2) && (e3 = n), i2(t3, ea(e3, 3));
      }, Fn.sortedIndex = function(t3, e3) {
        return $r(t3, e3);
      }, Fn.sortedIndexBy = function(t3, e3, n2) {
        return Qr(t3, e3, ea(n2, 2));
      }, Fn.sortedIndexOf = function(t3, e3) {
        var n2 = null == t3 ? 0 : t3.length;
        if (n2) {
          var r2 = $r(t3, e3);
          if (r2 < n2 && Lo(t3[r2], e3)) return r2;
        }
        return -1;
      }, Fn.sortedLastIndex = function(t3, e3) {
        return $r(t3, e3, true);
      }, Fn.sortedLastIndexBy = function(t3, e3, n2) {
        return Qr(t3, e3, ea(n2, 2), true);
      }, Fn.sortedLastIndexOf = function(t3, e3) {
        if (null != t3 && t3.length) {
          var n2 = $r(t3, e3, true) - 1;
          if (Lo(t3[n2], e3)) return n2;
        }
        return -1;
      }, Fn.startCase = Gs, Fn.startsWith = function(t3, e3, n2) {
        return t3 = hs(t3), n2 = null == n2 ? 0 : ir(ss(n2), 0, t3.length), e3 = ni(e3), t3.slice(n2, n2 + e3.length) == e3;
      }, Fn.subtract = yl, Fn.sum = function(t3) {
        return t3 && t3.length ? Je(t3, Zs) : 0;
      }, Fn.sumBy = function(t3, e3) {
        return t3 && t3.length ? Je(t3, ea(e3, 2)) : 0;
      }, Fn.template = function(t3, e3, r2) {
        var i2 = Fn.templateSettings;
        r2 && pa(t3, e3, r2) && (e3 = n), t3 = hs(t3), e3 = fs({}, e3, i2, Wi);
        var a2, o2, s2 = fs({}, e3.imports, i2.imports, Wi), l2 = Ts(s2), c2 = Ze(s2, l2), u2 = 0, h2 = e3.interpolate || wt, p2 = "__p += '", d2 = Et2((e3.escape || wt).source + "|" + h2.source + "|" + (h2 === $2 ? pt : wt).source + "|" + (e3.evaluate || wt).source + "|$", "g"), f2 = "//# sourceURL=" + (jt2.call(e3, "sourceURL") ? (e3.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++ie + "]") + "\n";
        t3.replace(d2, function(e4, n2, r3, i3, s3, l3) {
          return r3 || (r3 = i3), p2 += t3.slice(u2, l3).replace(bt, nn), n2 && (a2 = true, p2 += "' +\n__e(" + n2 + ") +\n'"), s3 && (o2 = true, p2 += "';\n" + s3 + ";\n__p += '"), r3 && (p2 += "' +\n((__t = (" + r3 + ")) == null ? '' : __t) +\n'"), u2 = l3 + e4.length, e4;
        }), p2 += "';\n";
        var m2 = jt2.call(e3, "variable") && e3.variable;
        if (m2) {
          if (ut.test(m2)) throw new Tt2("Invalid `variable` option passed into `_.template`");
        } else p2 = "with (obj) {\n" + p2 + "\n}\n";
        p2 = (o2 ? p2.replace(U, "") : p2).replace(H, "$1").replace(W, "$1;"), p2 = "function(" + (m2 || "obj") + ") {\n" + (m2 ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (a2 ? ", __e = _.escape" : "") + (o2 ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + p2 + "return __p\n}";
        var g2 = Ws(function() {
          return Ct2(l2, f2 + "return " + p2).apply(n, c2);
        });
        if (g2.source = p2, Uo(g2)) throw g2;
        return g2;
      }, Fn.times = function(t3, e3) {
        if ((t3 = ss(t3)) < 1 || t3 > p) return [];
        var n2 = f, r2 = vn(t3, f);
        e3 = ea(e3), t3 -= f;
        for (var i2 = qe(r2, e3); ++n2 < t3; ) e3(n2);
        return i2;
      }, Fn.toFinite = os, Fn.toInteger = ss, Fn.toLength = ls, Fn.toLower = function(t3) {
        return hs(t3).toLowerCase();
      }, Fn.toNumber = cs, Fn.toSafeInteger = function(t3) {
        return t3 ? ir(ss(t3), -9007199254740991, p) : 0 === t3 ? t3 : 0;
      }, Fn.toString = hs, Fn.toUpper = function(t3) {
        return hs(t3).toUpperCase();
      }, Fn.trim = function(t3, e3, r2) {
        if ((t3 = hs(t3)) && (r2 || e3 === n)) return Xe(t3);
        if (!t3 || !(e3 = ni(e3))) return t3;
        var i2 = un(t3), a2 = un(e3);
        return fi(i2, $e(i2, a2), Qe(i2, a2) + 1).join("");
      }, Fn.trimEnd = function(t3, e3, r2) {
        if ((t3 = hs(t3)) && (r2 || e3 === n)) return t3.slice(0, hn(t3) + 1);
        if (!t3 || !(e3 = ni(e3))) return t3;
        var i2 = un(t3);
        return fi(i2, 0, Qe(i2, un(e3)) + 1).join("");
      }, Fn.trimStart = function(t3, e3, r2) {
        if ((t3 = hs(t3)) && (r2 || e3 === n)) return t3.replace(it, "");
        if (!t3 || !(e3 = ni(e3))) return t3;
        var i2 = un(t3);
        return fi(i2, $e(i2, un(e3))).join("");
      }, Fn.truncate = function(t3, e3) {
        var r2 = 30, i2 = "...";
        if (qo(e3)) {
          var a2 = "separator" in e3 ? e3.separator : a2;
          r2 = "length" in e3 ? ss(e3.length) : r2, i2 = "omission" in e3 ? ni(e3.omission) : i2;
        }
        var o2 = (t3 = hs(t3)).length;
        if (rn(t3)) {
          var s2 = un(t3);
          o2 = s2.length;
        }
        if (r2 >= o2) return t3;
        var l2 = r2 - cn(i2);
        if (l2 < 1) return i2;
        var c2 = s2 ? fi(s2, 0, l2).join("") : t3.slice(0, l2);
        if (a2 === n) return c2 + i2;
        if (s2 && (l2 += c2.length - l2), $o(a2)) {
          if (t3.slice(l2).search(a2)) {
            var u2, h2 = c2;
            for (a2.global || (a2 = Et2(a2.source, hs(dt.exec(a2)) + "g")), a2.lastIndex = 0; u2 = a2.exec(h2); ) var p2 = u2.index;
            c2 = c2.slice(0, p2 === n ? l2 : p2);
          }
        } else if (t3.indexOf(ni(a2), l2) != l2) {
          var d2 = c2.lastIndexOf(a2);
          d2 > -1 && (c2 = c2.slice(0, d2));
        }
        return c2 + i2;
      }, Fn.unescape = function(t3) {
        return (t3 = hs(t3)) && X.test(t3) ? t3.replace(J, pn) : t3;
      }, Fn.uniqueId = function(t3) {
        var e3 = ++Nt2;
        return hs(t3) + e3;
      }, Fn.upperCase = zs, Fn.upperFirst = Us, Fn.each = uo, Fn.eachRight = ho, Fn.first = Va, tl(Fn, (ul = {}, yr(Fn, function(t3, e3) {
        jt2.call(Fn.prototype, e3) || (ul[e3] = t3);
      }), ul), { chain: false }), Fn.VERSION = "4.17.21", Se(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(t3) {
        Fn[t3].placeholder = Fn;
      }), Se(["drop", "take"], function(t3, e3) {
        Un.prototype[t3] = function(r2) {
          r2 = r2 === n ? 1 : yn(ss(r2), 0);
          var i2 = this.__filtered__ && !e3 ? new Un(this) : this.clone();
          return i2.__filtered__ ? i2.__takeCount__ = vn(r2, i2.__takeCount__) : i2.__views__.push({ size: vn(r2, f), type: t3 + (i2.__dir__ < 0 ? "Right" : "") }), i2;
        }, Un.prototype[t3 + "Right"] = function(e4) {
          return this.reverse()[t3](e4).reverse();
        };
      }), Se(["filter", "map", "takeWhile"], function(t3, e3) {
        var n2 = e3 + 1, r2 = 1 == n2 || 3 == n2;
        Un.prototype[t3] = function(t4) {
          var e4 = this.clone();
          return e4.__iteratees__.push({ iteratee: ea(t4, 3), type: n2 }), e4.__filtered__ = e4.__filtered__ || r2, e4;
        };
      }), Se(["head", "last"], function(t3, e3) {
        var n2 = "take" + (e3 ? "Right" : "");
        Un.prototype[t3] = function() {
          return this[n2](1).value()[0];
        };
      }), Se(["initial", "tail"], function(t3, e3) {
        var n2 = "drop" + (e3 ? "" : "Right");
        Un.prototype[t3] = function() {
          return this.__filtered__ ? new Un(this) : this[n2](1);
        };
      }), Un.prototype.compact = function() {
        return this.filter(Zs);
      }, Un.prototype.find = function(t3) {
        return this.filter(t3).head();
      }, Un.prototype.findLast = function(t3) {
        return this.reverse().find(t3);
      }, Un.prototype.invokeMap = Jr(function(t3, e3) {
        return "function" == typeof t3 ? new Un(this) : this.map(function(n2) {
          return Dr(n2, t3, e3);
        });
      }), Un.prototype.reject = function(t3) {
        return this.filter(Eo(ea(t3)));
      }, Un.prototype.slice = function(t3, e3) {
        t3 = ss(t3);
        var r2 = this;
        return r2.__filtered__ && (t3 > 0 || e3 < 0) ? new Un(r2) : (t3 < 0 ? r2 = r2.takeRight(-t3) : t3 && (r2 = r2.drop(t3)), e3 !== n && (r2 = (e3 = ss(e3)) < 0 ? r2.dropRight(-e3) : r2.take(e3 - t3)), r2);
      }, Un.prototype.takeRightWhile = function(t3) {
        return this.reverse().takeWhile(t3).reverse();
      }, Un.prototype.toArray = function() {
        return this.take(f);
      }, yr(Un.prototype, function(t3, e3) {
        var r2 = /^(?:filter|find|map|reject)|While$/.test(e3), i2 = /^(?:head|last)$/.test(e3), a2 = Fn[i2 ? "take" + ("last" == e3 ? "Right" : "") : e3], o2 = i2 || /^find/.test(e3);
        a2 && (Fn.prototype[e3] = function() {
          var e4 = this.__wrapped__, s2 = i2 ? [1] : arguments, l2 = e4 instanceof Un, c2 = s2[0], u2 = l2 || No(e4), h2 = function(t4) {
            var e5 = a2.apply(Fn, Re([t4], s2));
            return i2 && p2 ? e5[0] : e5;
          };
          u2 && r2 && "function" == typeof c2 && 1 != c2.length && (l2 = u2 = false);
          var p2 = this.__chain__, d2 = !!this.__actions__.length, f2 = o2 && !p2, m2 = l2 && !d2;
          if (!o2 && u2) {
            e4 = m2 ? e4 : new Un(this);
            var g2 = t3.apply(e4, s2);
            return g2.__actions__.push({ func: ao, args: [h2], thisArg: n }), new zn(g2, p2);
          }
          return f2 && m2 ? t3.apply(this, s2) : (g2 = this.thru(h2), f2 ? i2 ? g2.value()[0] : g2.value() : g2);
        });
      }), Se(["pop", "push", "shift", "sort", "splice", "unshift"], function(t3) {
        var e3 = Pt2[t3], n2 = /^(?:push|sort|unshift)$/.test(t3) ? "tap" : "thru", r2 = /^(?:pop|shift)$/.test(t3);
        Fn.prototype[t3] = function() {
          var t4 = arguments;
          if (r2 && !this.__chain__) {
            var i2 = this.value();
            return e3.apply(No(i2) ? i2 : [], t4);
          }
          return this[n2](function(n3) {
            return e3.apply(No(n3) ? n3 : [], t4);
          });
        };
      }), yr(Un.prototype, function(t3, e3) {
        var n2 = Fn[e3];
        if (n2) {
          var r2 = n2.name + "";
          jt2.call(An, r2) || (An[r2] = []), An[r2].push({ name: e3, func: n2 });
        }
      }), An[Li(n, 2).name] = [{ name: "wrapper", func: n }], Un.prototype.clone = function() {
        var t3 = new Un(this.__wrapped__);
        return t3.__actions__ = Mi(this.__actions__), t3.__dir__ = this.__dir__, t3.__filtered__ = this.__filtered__, t3.__iteratees__ = Mi(this.__iteratees__), t3.__takeCount__ = this.__takeCount__, t3.__views__ = Mi(this.__views__), t3;
      }, Un.prototype.reverse = function() {
        if (this.__filtered__) {
          var t3 = new Un(this);
          t3.__dir__ = -1, t3.__filtered__ = true;
        } else (t3 = this.clone()).__dir__ *= -1;
        return t3;
      }, Un.prototype.value = function() {
        var t3 = this.__wrapped__.value(), e3 = this.__dir__, n2 = No(t3), r2 = e3 < 0, i2 = n2 ? t3.length : 0, a2 = function(t4, e4, n3) {
          for (var r3 = -1, i3 = n3.length; ++r3 < i3; ) {
            var a3 = n3[r3], o3 = a3.size;
            switch (a3.type) {
              case "drop":
                t4 += o3;
                break;
              case "dropRight":
                e4 -= o3;
                break;
              case "take":
                e4 = vn(e4, t4 + o3);
                break;
              case "takeRight":
                t4 = yn(t4, e4 - o3);
            }
          }
          return { start: t4, end: e4 };
        }(0, i2, this.__views__), o2 = a2.start, s2 = a2.end, l2 = s2 - o2, c2 = r2 ? s2 : o2 - 1, u2 = this.__iteratees__, h2 = u2.length, p2 = 0, d2 = vn(l2, this.__takeCount__);
        if (!n2 || !r2 && i2 == l2 && d2 == l2) return si(t3, this.__actions__);
        var f2 = [];
        t: for (; l2-- && p2 < d2; ) {
          for (var m2 = -1, g2 = t3[c2 += e3]; ++m2 < h2; ) {
            var y2 = u2[m2], v2 = y2.iteratee, x2 = y2.type, w2 = v2(g2);
            if (2 == x2) g2 = w2;
            else if (!w2) {
              if (1 == x2) continue t;
              break t;
            }
          }
          f2[p2++] = g2;
        }
        return f2;
      }, Fn.prototype.at = oo, Fn.prototype.chain = function() {
        return io(this);
      }, Fn.prototype.commit = function() {
        return new zn(this.value(), this.__chain__);
      }, Fn.prototype.next = function() {
        this.__values__ === n && (this.__values__ = as(this.value()));
        var t3 = this.__index__ >= this.__values__.length;
        return { done: t3, value: t3 ? n : this.__values__[this.__index__++] };
      }, Fn.prototype.plant = function(t3) {
        for (var e3, r2 = this; r2 instanceof Gn; ) {
          var i2 = Pa(r2);
          i2.__index__ = 0, i2.__values__ = n, e3 ? a2.__wrapped__ = i2 : e3 = i2;
          var a2 = i2;
          r2 = r2.__wrapped__;
        }
        return a2.__wrapped__ = t3, e3;
      }, Fn.prototype.reverse = function() {
        var t3 = this.__wrapped__;
        if (t3 instanceof Un) {
          var e3 = t3;
          return this.__actions__.length && (e3 = new Un(this)), (e3 = e3.reverse()).__actions__.push({ func: ao, args: [Ja], thisArg: n }), new zn(e3, this.__chain__);
        }
        return this.thru(Ja);
      }, Fn.prototype.toJSON = Fn.prototype.valueOf = Fn.prototype.value = function() {
        return si(this.__wrapped__, this.__actions__);
      }, Fn.prototype.first = Fn.prototype.head, ee2 && (Fn.prototype[ee2] = function() {
        return this;
      }), Fn;
    }();
    fe ? ((fe.exports = dn)._ = dn, de._ = dn) : pe._ = dn;
  }).call(commonjsGlobal);
});
var MrxDbgUiPrBaseReturn;
async function useCanvasResizeListener(t, e, n = 100) {
  if (!store.state.MxFun) return void console.error("请先调用loadCoreCode方法! ");
  if (!t) return void console.error("请确保mxdrawObj参数 是通过调用MxFun.createMxObject的callback回调函数拿到的mxDraw对象");
  let r = t;
  if (!r.isLoadCanvasResizeListene) {
    let i;
    r.isLoadCanvasResizeListene = true, t.addEvent("addResizeEvent", (t2) => {
      i = t2;
    }), await dynamicImport("element-resize-event-polyfill");
    let a = createCanvasParent(e);
    a.addEventListener ? a.addEventListener("resize", lodash.throttle(function(t2) {
      i && i();
    }, n), false) : console.log("mx: parentdiv[addEventListener] invalid");
  }
}
var McEdGetPointWorldDrawObject = class {
  constructor() {
    var t;
    this._McEdGetPointWorldDraw = new (null === (t = store.state.MxFun) || void 0 === t ? void 0 : t.getMxJigCmdManager().McEdGetPointWorldDrawObjectClass())(), this._get = () => this._McEdGetPointWorldDraw;
  }
  drawCircle(t, e) {
    return this._McEdGetPointWorldDraw.drawCircle(t, e);
  }
  drawLine(t, e) {
    return this._McEdGetPointWorldDraw.drawLine(t, e);
  }
  drawSolid(t, e) {
    this.drawSolid(t, e);
  }
  drawRect(t, e) {
    return this._McEdGetPointWorldDraw.drawRect(t, e);
  }
  drawEntity(t, e) {
    return this._McEdGetPointWorldDraw.drawEntity(t, e);
  }
  drawMcDbEntity(t, e) {
    return this._McEdGetPointWorldDraw.drawMcDbEntity(t, e);
  }
  drawMcDbLine(t, e, n, r, i, a) {
    return this._McEdGetPointWorldDraw.drawMcDbLine(t, e, n, r, i, a);
  }
  drawText(t, e, n, r) {
    return this._McEdGetPointWorldDraw.drawText(t, e, n, r);
  }
  setDraw(t) {
    return this._McEdGetPointWorldDraw.setDraw(t);
  }
  setColor(t) {
    return this._McEdGetPointWorldDraw.setColor(t);
  }
  getColor() {
    return this._McEdGetPointWorldDraw.getColor();
  }
  drawCustomEntity(t, e) {
    return this._McEdGetPointWorldDraw.drawCustomEntity(t, e);
  }
};
!function(t) {
  t[t.kCancel = -2] = "kCancel", t[t.kNone = -1] = "kNone", t[t.kOk = 0] = "kOk", t[t.kKeyWord = 1] = "kKeyWord";
}(MrxDbgUiPrBaseReturn || (MrxDbgUiPrBaseReturn = {}));
var MrxDbgUiPrBaseReturn$1 = MrxDbgUiPrBaseReturn;
var MxCursorType;
var DynamicInputType;
var DetailedResult;
var UserInputControls;
!function(t) {
  t[t.kNormal = 0] = "kNormal", t[t.kRect = 1] = "kRect", t[t.kCross = 2] = "kCross";
}(MxCursorType || (MxCursorType = {})), function(t) {
  t[t.kNoInput = 0] = "kNoInput", t[t.kXYCoordInput = 1] = "kXYCoordInput", t[t.kDistanceInput = 2] = "kDistanceInput", t[t.kDynTip = 3] = "kDynTip", t[t.kAutoInput = 4] = "kAutoInput";
}(DynamicInputType || (DynamicInputType = {})), function(t) {
  t[t.kUnknown = 1] = "kUnknown", t[t.kTouchDownIn = 2] = "kTouchDownIn", t[t.kTouchUpIn = 3] = "kTouchUpIn", t[t.kMouseLeftIn = 4] = "kMouseLeftIn", t[t.kMouseLeftUpIn = 5] = "kMouseLeftUpIn", t[t.kMouseRightIn = 6] = "kMouseRightIn", t[t.kKeyIn = 7] = "kKeyIn", t[t.kCoordIn = 8] = "kCoordIn", t[t.kNullEnterIn = 9] = "kNullEnterIn", t[t.kNullSpaceIn = 10] = "kNullSpaceIn", t[t.kEcsIn = 11] = "kEcsIn", t[t.kNewCommadIn = 12] = "kNewCommadIn", t[t.kCodeAbort = 13] = "kCodeAbort";
}(DetailedResult || (DetailedResult = {})), function(t) {
  t[t.kGovernedByOrthoMode = 1] = "kGovernedByOrthoMode", t[t.kNullResponseAccepted = 2] = "kNullResponseAccepted", t[t.kDontEchoCancelForCtrlC = 4] = "kDontEchoCancelForCtrlC", t[t.kDontUpdateLastPoint = 8] = "kDontUpdateLastPoint", t[t.kNoDwgLimitsChecking = 16] = "kNoDwgLimitsChecking", t[t.kNoZeroResponseAccepted = 32] = "kNoZeroResponseAccepted", t[t.kNoNegativeResponseAccepted = 64] = "kNoNegativeResponseAccepted", t[t.kAccept3dCoordinates = 128] = "kAccept3dCoordinates", t[t.kAcceptMouseUpAsPoint = 256] = "kAcceptMouseUpAsPoint", t[t.kAnyBlankTerminatesInput = 512] = "kAnyBlankTerminatesInput", t[t.kInitialBlankTerminatesInput = 1024] = "kInitialBlankTerminatesInput", t[t.kAcceptOtherInputString = 2048] = "kAcceptOtherInputString", t[t.kGovernedByUCSDetect = 4096] = "kGovernedByUCSDetect", t[t.kNoZDirectionOrtho = 8192] = "kNoZDirectionOrtho", t[t.kSpacesInAccepted = 16384] = "kSpacesInAccepted";
}(UserInputControls || (UserInputControls = {}));
var MrxDbgUiPrBase = class {
  constructor(t) {
    this.imp = t, this.status = MrxDbgUiPrBaseReturn$1.kCancel;
  }
  keyWords() {
    return this.imp.keyWords();
  }
  setKeyWords(t) {
    return this.imp.setKeyWords(t);
  }
  message() {
    return this.imp.message();
  }
  setMessage(t) {
    return this.imp.setMessage(t);
  }
  clearLastInputPoint() {
    this.imp.clearLastInputPoint();
  }
  setLastInputPoint(t) {
    this.imp.SetLASTPOINT(t);
  }
  keyWordPicked() {
    return this.imp.keyWordPicked();
  }
  isKeyWordPicked(t) {
    return this.status == MrxDbgUiPrBaseReturn$1.kKeyWord && this.imp.isKeyWordPicked(t);
  }
  setUserDraw(t) {
    if ("function" != typeof t) return this.imp.setUserDraw(t._get ? t._get() : t);
    {
      const e = new McEdGetPointWorldDrawObject();
      e.setDraw(t), this.imp.setUserDraw(e._get());
    }
  }
  getDetailedResult() {
    return this.imp.getDetailedResult();
  }
  getStatus() {
    return this.status;
  }
  drawReserve(t) {
    return this.imp.drawReserve(t);
  }
  setInputToucheType(t) {
    return this.imp.setInputToucheType(t);
  }
  getInputToucheType() {
    return this.imp.getInputToucheType();
  }
  setCursorType(t) {
    this.imp.setCursorType(t);
  }
  getCursorType() {
    return this.imp.getCursorType();
  }
  setDynamicInputType(t) {
    this.imp.setDynamicInputType(t);
  }
  getDynamicInputType() {
    return this.imp.getDynamicInputType();
  }
  isDisableDynInput() {
    return this.imp.isDisableDynInput();
  }
  setDisableDynInput(t) {
    return this.imp.setDisableDynInput(t);
  }
  setDisableOsnap(t) {
    return this.imp.setDisableOsnap(t);
  }
  isOffsetInputPostion() {
    return this.imp.isOffsetInputPostion();
  }
  setOffsetInputPostion(t) {
    return this.imp.setOffsetInputPostion(t);
  }
  isDisableOsnap() {
    return this.imp.isDisableOsnap();
  }
  setDisableDynamicTrace(t) {
    this.imp.setDisableDynamicTrace(t);
  }
  isDisableDynamicTrace() {
    return this.imp.isDisableDynamicTrace();
  }
  setDisablePolarAxisTrace(t) {
    this.imp.setDisablePolarAxisTrace(t);
  }
  isDisablePolarAxisTrace() {
    return this.imp.isDisablePolarAxisTrace();
  }
  setDisableGridTrace(t) {
    this.imp.setDisableGridTrace(t);
  }
  isDisableGridTrace() {
    return this.imp.isDisableGridTrace();
  }
  setDisableOrthoTrace(t) {
    this.imp.setDisableOrthoTrace(t);
  }
  isDisableOrthoTrace() {
    return this.imp.isDisableOrtho();
  }
  disableAllTrace(t = true) {
    this.imp.disableAllTrace(t);
  }
  userInputControls() {
    return this.imp.userInputControls();
  }
  setUserInputControls(t) {
    this.imp.setUserInputControls(t);
  }
};
var MrxDbgUiPrPoint = class extends MrxDbgUiPrBase {
  constructor() {
    var t;
    super(new (null === (t = store.state.MxFun) || void 0 === t ? void 0 : t.getMxJigCmdManager().getMrxDbgUiPrPointClass())());
  }
  value() {
    return this.imp.value();
  }
  getCADValue() {
    return this.imp.getCADValue();
  }
  valueDocCoord() {
    return this.imp.valueDocCoord();
  }
  basePt() {
    return this.imp.basePt();
  }
  setBasePt(t) {
    return this.imp.setBasePt(t);
  }
  setUseBasePt(t) {
    return this.imp.setUseBasePt(t);
  }
  go(t) {
    let e = this;
    return t ? (e.imp.go((n) => {
      e.status = n, t(n);
    }), new Promise((t2, e2) => {
      t2(null);
    })) : new Promise((t2, n) => {
      e.imp.go((n2) => {
        e.status = n2, t2(0 != n2 ? null : e.imp.value());
      });
    });
  }
  goWhile(t, e) {
    return this.imp.goWhile(t, e);
  }
  abort(t) {
    this.imp.abort(t);
  }
};
var MxVueComandLine = class {
  constructor() {
    this.msCmdText = "", this.msCmdDisplay = "", this.msCmdTip = "", this.mxFunObject = void 0, this.mountUpDisplayFun = (t) => {
      this.mUpDisplayFun = t;
    }, this.setCmdText = (t) => {
      this.msCmdText = t;
    }, this.getCmdText = () => this.msCmdText, this.getCmdDisplay = () => this.msCmdDisplay, this.setCmdDisplay = (t) => {
      this.msCmdDisplay = t;
    }, this.addCmdDisplay = (t) => {
      this.msCmdDisplay.length > 1024 ? (this.msCmdDisplay = this.msCmdDisplay.substring(this.msCmdDisplay.length - 1024, this.msCmdDisplay.length), this.msCmdDisplay = this.msCmdDisplay + t) : this.msCmdDisplay = this.msCmdDisplay + t;
    }, this.setCmdTip = (t) => {
      this.msCmdTip = t;
    }, this.getCmdTip = () => this.msCmdTip;
  }
  upDisplay() {
    const { msCmdTip: t, msCmdDisplay: e, msCmdText: n } = this;
    null != this.mUpDisplayFun && this.mUpDisplayFun({ msCmdTip: t, msCmdDisplay: e, msCmdText: n });
  }
};
var MxInputType = { kNoInput: 0, kXYCoordInput: 1, kDistanceInput: 2, kDynTip: 3 };
var MxInputPostionType = { kRelative: 0, kAbsolutely: 1 };
var MxDynamicInput = class {
  constructor() {
    this.mType = MxInputType.kNoInput, this.mPos = [0, 0], this.mTip = "", this.mValue1 = "", this.mValue1Pos = [0, 0], this.mValue2 = "", this.mValue2Pos = [0, 0], this.misShow = false, this.focusIndex = 0, this.mLockValues = /* @__PURE__ */ new Map(), this.mOnKeydownEvent = void 0, this.mFocusValue = "", this.setFocusValue = (t) => {
      this.mFocusValue = t;
    }, this.getFocusValue = () => this.mFocusValue, this.getFocusIndex = () => this.focusIndex, this.setFocusIndex = (t) => {
      this.focusIndex = t;
    }, this.mountKeydownEvent = (t) => {
      this.mOnKeydownEvent = t;
    }, this.onKeydown = (t) => null == this.mOnKeydownEvent ? 0 : this.mOnKeydownEvent(t), this.setType = (t) => {
      this.mType = t;
    }, this.getType = () => this.mType, this.isShow = () => this.misShow, this.setPos = (t) => {
      this.mPos = t;
    }, this.setTip = (t) => {
      this.mTip = t;
    }, this.setValue1 = (t) => {
      this.mValue1 = t;
    }, this.getValue1 = () => this.mValue1, this.setValue1Pos = (t) => {
      this.mValue1Pos = t;
    }, this.setValue2 = (t) => {
      this.mValue2 = t;
    }, this.getValue2 = () => this.mValue2, this.setValue2Pos = (t) => {
      this.mValue2Pos = t;
    }, this.setShow = (t) => {
      this.misShow = t;
    }, this.getData = () => {
      if (!this.misShow) return;
      let t = { list: [{ value: "", readonly: true }, { value: "", readonly: false }, { value: "", readonly: false }], pos: this.mPos, postype: MxInputPostionType.kRelative };
      return this.mType != MxInputType.kNoInput ? (this.mType == MxInputType.kXYCoordInput ? (t.list[0].show = true, t.list[0].value = this.mTip, t.list[0].readonly = true, t.list[1].show = true, t.list[1].value = this.mValue1, t.list[1].readonly = false, t.list[2].show = true, t.list[2].value = this.mValue2, t.list[2].readonly = false) : this.mType == MxInputType.kDistanceInput ? (t.list[0].show = true, t.list[0].value = this.mTip, t.list[0].readonly = true, t.list[1].show = true, t.list[1].value = this.mValue1, t.list[1].readonly = false, t.list[1].pos = this.mValue1Pos, t.list[2].show = true, t.list[2].value = this.mValue2, t.list[2].readonly = false, t.list[2].pos = this.mValue2Pos, t.postype = MxInputPostionType.kAbsolutely) : this.mType == MxInputType.kDynTip ? (t.list[0].show = true, t.list[0].value = this.mTip, t.list[0].readonly = true, t.list[1].show = false, t.list[2].show = false) : t = void 0, t) : void 0;
    };
  }
  setLockValues(t, e) {
    0 == e.length ? this.mLockValues.delete(t) : this.mLockValues.set(t, e);
  }
  getLockValues(t) {
    return this.mLockValues.has(t) ? this.mLockValues.get(t) : "";
  }
  getLockValuesMap() {
    return this.mLockValues;
  }
  clearLockValuesMap() {
    this.mLockValues.clear();
  }
};
var CursorType = { kNormal: "Normal", kRect: "Rect", kCross: "Cross", kPan: "Pan" };
var RightMenuType = { kNoShow: 0, kDefautMenu: 1, kCommandRuningMenu: 2, kOsnapSetCommandRuningMenu: 3 };
var MxVueInterface = class {
  constructor() {
    this.mSetCoordFun = void 0, this.mUpdateCursorFun = void 0, this.mOnKeydownEvent = void 0, this.mCursorType = CursorType.kNormal, this.mComandLine = new MxVueComandLine(), this.mdynamicInput = new MxDynamicInput(), this.mMxEvents = {}, this.mountSetCoordFun = (t) => {
      this.mSetCoordFun = t;
    }, this.mountUpdateCursorFun = (t) => {
      this.mUpdateCursorFun = t;
    }, this.mountKeydownEvent = (t) => {
      this.mOnKeydownEvent = t;
    }, this.onKeydown = (t) => {
      null != this.mOnKeydownEvent && this.mOnKeydownEvent(t);
    }, this.mountsetRightMenuSnapTypeFun = (t) => {
      this.mRightMenuSnapTypeFun = t;
    }, this.setTipCoord = (t) => {
      null != this.mSetCoordFun && this.mSetCoordFun(t);
    }, this.getCursorType = () => this.mCursorType, this.setCursorType = (t) => {
      if ("number" == typeof t) switch (t) {
        case 0:
          this.mCursorType = CursorType.kNormal;
          break;
        case 1:
          this.mCursorType = CursorType.kRect;
          break;
        case 2:
          this.mCursorType = CursorType.kCross;
          break;
        case 3:
          this.mCursorType = CursorType.kPan;
      }
      else this.mCursorType = t;
      null != this.mUpdateCursorFun && this.mUpdateCursorFun(this.mCursorType);
    }, this.getTitle = () => this.mTitle, this.getTopButtonBarData = () => this.mTopButtonBarData, this.getMenuBarData = () => this.mMenuBarData, this.getRighButtonBarData = () => this.mRighButtonBarData, this.getLeftButtonBarData = () => this.mLeftButtonBarData, this.getTitleButtonBarData = () => this.mTitleButtonBarData, this.getLayerComboxData = () => this.mLayerComboxData, this.getColorComboxData = () => this.mColorComboxData, this.getLinetypeComboxData = () => this.mLinetypeComboxData, this.getFooterData = () => this.mFooterData, this.sendStringToExecute = (t) => {
      this.mxFunObject.sendStringToExecute(t);
    }, this.getCmdLine = () => this.mComandLine, this.getDynamicInput = () => this.mdynamicInput, this.init = (t) => {
      this.mxFunObject = t;
    }, this.OnMxEvent = (t) => {
      const e = t.name;
      if (null == e) return;
      const n = this.mMxEvents[e];
      null != n && n(t.param);
    }, this.mountMxEvent = (t, e) => {
      this.mMxEvents[t] = e;
    };
  }
  setRightMenuOSmodeValue(t) {
    null != this.mRightMenuSnapTypeFun && this.mRightMenuSnapTypeFun(t);
  }
  executeOperations(t) {
    this.mTsWeb_MxUiVue.executeOperations(t);
  }
  mountTsWeb_MxUiVue(t) {
    this.mTsWeb_MxUiVue = t;
  }
  getRightMenuType(t) {
    let e = MxFun.getRunningCommand();
    return e ? t && e.isEnableOsnap() ? RightMenuType.kOsnapSetCommandRuningMenu : RightMenuType.kCommandRuningMenu : RightMenuType.kDefautMenu;
  }
};
var mxUiData$1 = new MxVueInterface();
function createReandomId(t = 10) {
  return new Number(Math.random().toString().substr(3, t) + Date.now()).toString(36);
}
var Node = class extends PubSub {
  constructor() {
    super(...arguments), this.parent = null, this.children = [];
  }
  add(...t) {
    if (t.length > 1) {
      for (let e2 = 0; e2 < t.length; e2++) {
        const n = t[e2];
        this.add(n);
      }
      return this;
    }
    const e = t[0];
    return e === this ? (console.error("Node.add 不可以添加它自己"), this) : (e && (null !== e.parent && e.parent.remove(e), e.parent = this, this.children.push(e)), this);
  }
  remove(...t) {
    t.length > 1 && t.forEach((t2) => {
      this.remove(t2);
    });
    const e = t[0], n = this.children.indexOf(e);
    return -1 !== n && (e.parent = null, this.children.splice(n, 1)), this;
  }
  removeFromParent() {
    const t = this.parent;
    return null !== t && t.remove(this), this;
  }
  clear() {
    for (let t = 0; t < this.children.length; t++) this.children[t].parent = null;
    return this.children.length = 0, this;
  }
  getNodeByProperty(t, e) {
    if (this[t] === e) return this;
    for (let n = 0, r = this.children.length; n < r; n++) {
      const r2 = this.children[n].getNodeByProperty(t, e);
      if (void 0 !== r2) return r2;
    }
  }
  getNodesByProperty(t, e) {
    let n = [];
    this[t] === e && n.push(this);
    for (let r = 0, i = this.children.length; r < i; r++) {
      const i2 = this.children[r].getNodesByProperty(t, e);
      i2.length > 0 && (n = n.concat(i2));
    }
    return n;
  }
  traverse(t) {
    t(this);
    const e = this.children;
    for (let n = 0, r = e.length; n < r; n++) e[n].traverse(t);
  }
  traverseParent(t) {
    null !== this.parent && false !== t(this.parent) && this.parent.traverseParent(t);
  }
  emit(t, ...e) {
    super.emit(t, ...e), this.traverseParent((n) => (n.emit(t, ...e), false !== (null == e ? void 0 : e.isEventBubbling) && void 0));
  }
};
var RenderOrderNode = class extends Node {
  constructor() {
    super(), this.renderOrder = 30;
  }
  setRenderOrder(t) {
    this.renderOrder = t;
  }
  getRenderOrder() {
    return this.renderOrder;
  }
  top() {
    var t;
    if (!this.parent) return;
    let e = Math.max(...null === (t = this.parent) || void 0 === t ? void 0 : t.children.map(({ renderOrder: t2 }) => t2));
    e !== this.renderOrder && e++, this.setRenderOrder(e);
  }
  bottom() {
    var t;
    if (!this.parent) return;
    let e = Math.min(...null === (t = this.parent) || void 0 === t ? void 0 : t.children.map(({ renderOrder: t2 }) => t2));
    e--, this.setRenderOrder(e);
  }
  restoreDefaultRenderOrder() {
    this.renderOrder = 30;
  }
};
var Layer = class extends RenderOrderNode {
  constructor(t) {
    super(), this.isLayer = true, this.getLayerMap = () => this.getDatabase()._mxDatabase.mapNameToLayer, this.getEntityMap = () => this.getDatabase()._mxDatabase.mapIdToEntity, this.getRootLayerName = () => this.getNames()[0] || "0";
    const e = "string" == typeof t ? t : Date.now() + Math.random().toString(36).substr(2, 9);
    Object.defineProperty(this, "name", { get: () => e, set() {
      throw new Error("不能修改Layer.name值, 因为它是Layer 实例的唯一标识");
    }, configurable: false });
    let n = this.renderOrder;
    Object.defineProperty(this, "renderOrder", { get: () => n, set(t2) {
      this.getLayer().group.renderOrder = t2, n = t2, MxFun.updateDisplay();
    } });
  }
  get visible() {
    const t = this.getDatabase().getLayer(this.name);
    return !t || t.getVisible();
  }
  set visible(t) {
    this.getDatabase().showLayer(this.name, t), MxFun.updateDisplay();
  }
  setVisible(t) {
    this.visible = t;
  }
  getDatabase() {
    return this._database || (this._database = MxFun.getCurrentDatabase()), this._database;
  }
  getLayer() {
    return this.getDatabase().getLayer(this.name) || this.getDatabase().addLayer(this.name), this.getDatabase().getLayer(this.name);
  }
  getCurrentName() {
    return this.getDatabase()._mxDatabase.curLayer.toString();
  }
  async callLayerContextFun(t) {
    const e = this.getCurrentName();
    this.getDatabase().setCurrentLayer(this.name);
    const n = await t();
    return this.getDatabase().setCurrentLayer(e), n;
  }
  getNames() {
    return Array.from(this.getLayerMap().keys());
  }
  getAllEntity() {
    return Array.from(this.getEntityMap().values()).filter(({ userObject: t }) => t.layer === this.name).map(({ userObject: t }) => t);
  }
  add(...t) {
    var e;
    const n = this.getLayer();
    return n.group.renderOrder !== this.renderOrder && (n.group.renderOrder = this.renderOrder, this.children = this.getAllEntity()), this.parent || (this.parent = MxFun.getCurrentDraw(), null === (e = this.parent) || void 0 === e || e.add(this)), super.add(...t), this.callLayerContextFun(() => {
      t.forEach((t2) => {
        t2 && this.getDatabase().addEntity(t2);
      });
    }), this;
  }
  remove(...t) {
    super.remove(...t);
    let e = this.getRootLayerName();
    return this.callLayerContextFun(() => {
      t.forEach((t2) => {
        t2 && (t2.setLayer(e), t2.setNeedUpdateDisplay());
      });
    }), this;
  }
};
var MxDbDatabase = class {
  constructor(t) {
    this._mxDatabase = t;
  }
  addLayer(t) {
    return this._mxDatabase.addLayer(t);
  }
  showLayer(t, e) {
    this._mxDatabase.showLayer(t, e);
  }
  setCurrentLayer(t) {
    return this._mxDatabase.setCurrentLayer(t);
  }
  getLayer(t) {
    return this._mxDatabase.getLayer(t);
  }
  addEntity(t) {
    return this._mxDatabase.addMxEntity(t);
  }
  getGroup(t) {
    return this._mxDatabase.getGroupDictionary().getAt(t);
  }
  addGroup(t) {
    return this._mxDatabase.getGroupDictionary().add(t);
  }
  getEntityInGroup(t) {
    return this._mxDatabase.getGroupDictionary().getEntityInGroup(t);
  }
  deleteGroup(t) {
    return this._mxDatabase.getGroupDictionary().delete(t);
  }
};
var MxTempMarkDraw = class {
  constructor(t) {
    this.imp = t;
  }
  clear() {
    this.imp.clear();
  }
  drawLine(t, e, n = 16777215, r = 1) {
    this.imp.drawLine(t, e, n, r);
  }
  drawCircle(t, e, n) {
    this.imp.drawCircle(t, e, n);
  }
  drawEntity(t) {
    this.imp.drawEntity(t);
  }
  drawCircleMark(t, e, n) {
    this.imp.drawCircleMark(t, e, n);
  }
};
function setGeometrPostion(t, e) {
  for (let n = 0; n < t.vertices.length; n++) t.vertices[n].x += e.x, t.vertices[n].y += e.y, t.vertices[n].z += e.z;
}
function repairGeometryFaceVertexUvs(t) {
  t.computeBoundingBox();
  const e = t.boundingBox.min, n = t.boundingBox.max, r = new THREE.Vector2(0 - e.x, 0 - e.y), i = new THREE.Vector2(n.x - e.x, n.y - e.y);
  t.faceVertexUvs[0] = [];
  const a = t.faces;
  for (let e2 = 0; e2 < a.length; e2++) {
    const n2 = a[e2], o = t.vertices[n2.a], s = t.vertices[n2.b], l = t.vertices[n2.c];
    t.faceVertexUvs[0].push([new THREE.Vector2((o.x + r.x) / i.x, (o.y + r.y) / i.y), new THREE.Vector2((s.x + r.x) / i.x, (s.y + r.y) / i.y), new THREE.Vector2((l.x + r.x) / i.x, (l.y + r.y) / i.y)]);
  }
  return t.uvsNeedUpdate = true, t;
}
function insertPointsWithEqualSpacing(t) {
  const e = [];
  if (t.length < 2) return t;
  let n = Number.MAX_VALUE;
  for (let e2 = 0; e2 < t.length - 1; e2++) {
    const r = t[e2].distanceTo(t[e2 + 1]);
    r < n && (n = r);
  }
  for (let r = 0; r < t.length - 1; r++) {
    const i = t[r], a = t[r + 1];
    e.push(i);
    const o = i.distanceTo(a);
    if (o > n) {
      const t2 = Math.floor(o / n), r2 = a.clone().sub(i).normalize();
      for (let a2 = 1; a2 < t2; a2++) {
        const t3 = i.clone().add(r2.clone().multiplyScalar(a2 * n));
        e.push(t3);
      }
    }
  }
  return e.push(t[t.length - 1]), e;
}
function getToGenerateRoundedCorners(t, e, n = true) {
  const r = new THREE.CurvePath();
  if (t.length < 2) throw new Error("Points should have at least 2 items");
  if (!e || 0 === e.length) return t;
  !n && t[0].equals(t[t.length - 1]) && t.pop(), n || t.push(t[0]);
  for (let i2 = 0; i2 < t.length - 1; i2++) {
    const a = e[i2] || 0;
    if (0 === i2 && !n) {
      const e2 = t[0].clone().sub(t[1]);
      e2.normalize();
      const n2 = t[1].clone();
      n2.add(e2.clone().multiplyScalar(a));
      const i3 = new THREE.LineCurve3(t[0], n2);
      r.curves.push(i3);
      continue;
    }
    const o = !n || t[i2 - 1] ? t[i2 - 1].clone().sub(t[i2]) : t[t.length - 1].clone().sub(t[0]);
    o.normalize();
    const s = !n || t[i2 + 1] ? t[i2 + 1].clone().sub(t[i2]) : t[1].clone().sub(t[0]);
    s.normalize();
    const l = t[i2].clone().add(o.clone().multiplyScalar(a)), c = t[i2].clone(), u = t[i2].clone().add(s.clone().multiplyScalar(a)), h = new THREE.QuadraticBezierCurve3(l, c, u);
    if (i2 === t.length - 2) {
      const e2 = t[i2].clone().add(s.clone().multiplyScalar(a)), o2 = t[i2 + 1].clone();
      n ? o2.add(s.clone().multiplyScalar(-a)) : o2.add(s.clone());
      const l2 = new THREE.LineCurve3(e2, o2);
      r.curves.push(h, l2);
    } else r.curves.push(h);
    0 === i2 && t.push(t[0]);
  }
  let i = r.getPoints();
  return i = insertPointsWithEqualSpacing(i);
}
function computeRectPoints(t, e) {
  return [t, t.clone().set(e.x, t.y, e.z), e, e.clone().set(t.x, e.y, t.z)];
}
function calculateArcOrigin(t, e, n) {
  const r = t.x, i = e.x, a = n.x, o = t.y, s = e.y, l = n.y, c = r - i, u = o - s, h = r - a, p = o - l, d = (r * r - i * i + (o * o - s * s)) / 2, f = (r * r - a * a + (o * o - l * l)) / 2, m = u * h - c * p, g = -(p * d - u * f) / m, y = -(c * f - h * d) / m;
  return new THREE.Vector3(g, y, 0);
}
function calculateRadiusArc(t, e) {
  const n = t.x, r = t.y, i = e.x, a = e.y;
  return Math.sqrt((n - i) * (n - i) + (r - a) * (r - a));
}
function calculateArcAngle(t, e, n) {
  const r = t.x, i = e.x;
  let a, o, s;
  return a = (t.y - e.y) / n, (o = (r - i) / n) >= 0.99999 && (o = 0.99999), o <= -0.99999 && (o = -0.99999), s = (s = Math.acos(o)) / Math.PI * 180, a < -0.05 && (s = 360 - s), { sin: a, cos: o, angle: s };
}
function judgementArcRenderDirection(t, e, n) {
  let r, i;
  return (i = t < e ? e - t : e - t + 360) > (r = t < n ? n - t : n - t + 360);
}
function createThreePointArc(t, e, n, r = false, i = false, a = new THREE.Color("#ff0000")) {
  const o = calculateArcOrigin(t, e, n), s = o.x, l = o.y, c = calculateRadiusArc(t, o), u = calculateArcAngle(t, o, c), h = calculateArcAngle(e, o, c), p = calculateArcAngle(n, o, c);
  let d, f, m = u.angle, g = h.angle, y = p.angle, v = judgementArcRenderDirection(m, g, y);
  i && (v = true), r ? (f = new THREE.ArcCurve(s, l, c, THREE.MathUtils.degToRad(m), THREE.MathUtils.degToRad(g), !v), d = v ? g > m ? THREE.MathUtils.radToDeg(f.aEndAngle - f.aStartAngle) : 360 - Math.abs(THREE.MathUtils.radToDeg(f.aEndAngle - f.aStartAngle)) : m > g ? Math.abs(THREE.MathUtils.radToDeg(f.aEndAngle - f.aStartAngle)) : 360 - THREE.MathUtils.radToDeg(f.aEndAngle - f.aStartAngle)) : (f = new THREE.ArcCurve(s, l, c, THREE.MathUtils.degToRad(m), THREE.MathUtils.degToRad(y), v), d = v ? y > m ? 360 - THREE.MathUtils.radToDeg(f.aEndAngle - f.aStartAngle) : Math.abs(THREE.MathUtils.radToDeg(f.aEndAngle - f.aStartAngle)) : m > y ? 360 + THREE.MathUtils.radToDeg(f.aEndAngle - f.aStartAngle) : THREE.MathUtils.radToDeg(f.aEndAngle - f.aStartAngle));
  const x = d * Math.PI * c / 180, w = new THREE.BufferGeometry().setFromPoints(f.getPoints(50)), b = new THREE.LineBasicMaterial({ color: a });
  return { arc: new THREE.Line(w, b), radius: c, angle: d, arcLength: x };
}
function computeRegularPolygonVertices(t = new THREE.Vector3(), e = new THREE.Vector3(), n = 3) {
  const r = [];
  n = Math.max(3, n), r.push(e);
  const i = 2 * Math.PI / n;
  for (let a = 1; a < n; a++) {
    const n2 = Math.cos(i * a), o = Math.sin(i * a), s = t.clone(), l = e.clone(), c = l.x - s.x, u = l.y - s.y, h = new THREE.Vector3(c * n2 - u * o + s.x, c * o + u * n2 + s.y);
    r.push(h);
  }
  return r;
}
function computeBounding(t) {
  if (0 == t.length) {
    let t2 = new THREE.Vector3();
    return { centerPoint: t2, minPoint: t2, maxPoint: t2 };
  }
  {
    let e = new THREE.Vector3(t[0].x, t[0].y, t[0].z || 0), n = new THREE.Vector3(t[0].x, t[0].y, t[0].z || 0), r = t.length;
    for (let i = 1; i < r; i++) {
      let r2 = t[i];
      e.x > r2.x && (e.x = r2.x), e.y > r2.y && (e.y = r2.y), n.x < r2.x && (n.x = r2.x), n.y < r2.y && (n.y = r2.y);
    }
    return { centerPoint: new THREE.Vector3(e.x + 0.5 * (n.x - e.x), e.y + 0.5 * (n.y - e.y), 0), minPoint: e, maxPoint: n };
  }
}
function MxThreeJSMixin(t) {
  return t.createImage = function(e, n, r, i, a) {
    if (!a) return new Promise((a2, o) => {
      t.createImage.call(this, e, n, r, i, (t2) => a2(t2));
    });
    new THREE.TextureLoader().load(i, function(t2) {
      let i2 = new THREE.PlaneGeometry(n, r), o = new THREE.MeshLambertMaterial({ map: t2, transparent: true, side: THREE.DoubleSide });
      o.map && (o.map.needsUpdate = true), setGeometrPostion(i2, e);
      let s = new THREE.Mesh(i2, o);
      s.material.depthTest = false, a && a(s);
    }, void 0, function(t2) {
      console.log(t2), a && a(null);
    });
  }, t.loadSVG = function(t2, e, n, r) {
    return n ? (store.state.MxFun.loadSVG(t2, e, n, r), new Promise((t3) => {
      t3(null);
    })) : new Promise((n2) => {
      store.state.MxFun.loadSVG(t2, e, (t3) => {
        n2(t3);
      }, r);
    });
  }, t.clacTextSize = (t2, e) => store.state.MxFun.getMxThreeJS().clacTextSize(t2, e), t.clacTextSpriteSize = (t2, e, n) => store.state.MxFun.getMxThreeJS().clacTextSpriteSize(t2, e, n), t.creatTextSprite = (t2, e, n, r, i) => 0 === t2.length ? null : (i instanceof Object ? i.getHex && (i = i.getHex()) : "string" == typeof i && (i = parseInt(i)), store.state.MxFun.getMxThreeJS().creatTextSprite(t2, e, n, r, i)), t;
}
var MxThreeJS$1 = class {
  createLine(t, e, n) {
    const r = new THREE.Geometry(), i = new THREE.LineBasicMaterial({ color: n });
    return r.vertices.push(t, e), new THREE.Line(r, i);
  }
  createCircle(t, e, n) {
    const r = new THREE.CircleGeometry(e, 64, 3, 2 * Math.PI), i = new THREE.LineBasicMaterial({ color: n });
    r.vertices.shift();
    const a = new THREE.LineLoop(r, i), { x: o, y: s, z: l } = t;
    return a.position.set(o, s, l), a;
  }
  createPoint(t, e, n = 3) {
    const r = new THREE.Geometry();
    r.vertices.push(t);
    const i = new THREE.PointsMaterial({ color: e, size: n });
    return new THREE.Points(r, i);
  }
  createTriangle(t, e, n = 1) {
    if (t.length < 3) return null;
    const r = t.length, i = new THREE.Geometry();
    for (let e2 = 0; e2 + 2 < r; e2 += 3) {
      i.vertices.push(t[e2]), i.vertices.push(t[e2 + 1]), i.vertices.push(t[e2 + 2]);
      const n2 = new THREE.Face3(e2, e2 + 1, e2 + 2);
      i.faces.push(n2);
    }
    i.computeFaceNormals(), i.computeVertexNormals();
    const a = new THREE.MeshBasicMaterial({ color: e, transparent: true, depthTest: false, side: THREE.DoubleSide, opacity: n });
    return new THREE.Mesh(i, a);
  }
  createLines(t, e) {
    const n = new THREE.Geometry();
    n.vertices = t;
    const r = new THREE.LineBasicMaterial({ color: e });
    return new THREE.Line(n, r);
  }
  createDashedLines(t, e, n, r) {
    const i = new THREE.Geometry();
    i.vertices = t;
    const a = new THREE.Line(i, new THREE.LineDashedMaterial({ color: e, dashSize: n, gapSize: r }));
    return a.computeLineDistances(), a;
  }
};
var MxThreeJS = MxThreeJSMixin(new MxThreeJS$1());
var MxDrawObject = class extends Node {
  constructor(t) {
    super(), this.rootLayer = new Layer(t.m_mxDatabase.curLayer), this.add(this.rootLayer), this._mxdrawObj = t;
  }
  getMxObjectImplement() {
    return this._mxdrawObj;
  }
  getScene() {
    return this._mxdrawObj.getScene();
  }
  setMultipleSelect(t) {
    this._mxdrawObj.isMultipleSelect = t;
  }
  isMapBox() {
    return this._mxdrawObj.isMapBox();
  }
  getCamera() {
    return this._mxdrawObj.getCamera();
  }
  getRenderer() {
    return this._mxdrawObj.getRenderer();
  }
  setMouseRightRotate(t = true) {
    return this._mxdrawObj.setMouseRightRotate(t);
  }
  getFullDisplayRange() {
    return this._mxdrawObj.getFullDisplayRange();
  }
  getCanvas() {
    return this._mxdrawObj.getCanvas();
  }
  updateDisplay(t = false) {
    return this._mxdrawObj.updateDisplay(t);
  }
  createCanvasImageData(t, e) {
    return this._mxdrawObj.createCanvasImageData(t, e);
  }
  setViewColor(t) {
    return this._mxdrawObj.setViewColor(t);
  }
  getViewColor() {
    return this._mxdrawObj.getViewColor();
  }
  setSize(t, e) {
    return this._mxdrawObj.setSize(t, e);
  }
  getIntersectObjects(t) {
    return this._mxdrawObj.getIntersectObjects(t);
  }
  addObject(t, e = true) {
    return this._mxdrawObj.addObject(t, e);
  }
  addViewObject(t) {
    return this._mxdrawObj.addViewObject(t);
  }
  getViewWidth() {
    return this._mxdrawObj.getViewWidth();
  }
  getViewHeight() {
    return this._mxdrawObj.getViewHeight();
  }
  removeObject(t, e = true) {
    return this._mxdrawObj.removeObject(t, e);
  }
  zoomInitialStates() {
    return this._mxdrawObj.zoomInitialStates();
  }
  zoomScale(t) {
    return this._mxdrawObj.zoomScale(t);
  }
  zoomW(t, e, n, r, i) {
    return this._mxdrawObj.zoomW(t, e, n, r, i);
  }
  saveZoom() {
    return this._mxdrawObj.saveZoom();
  }
  recoverZoom() {
    return this._mxdrawObj.recoverZoom();
  }
  zoomCenter(t, e) {
    return this._mxdrawObj.zoomCenter(t, e);
  }
  initZoomW(t, e) {
    return this._mxdrawObj.initZoomW(t, e);
  }
  addEvent(t, e) {
    return this._mxdrawObj.addEvent(t, e);
  }
  on(t, e) {
    return super.on(t, e), this._mxdrawObj.addEvent(t, e);
  }
  off(t, e) {
    return super.off(t, e), this.removeEventFuction(t, e);
  }
  removeEventFuction(t, e) {
    return this._mxdrawObj.removeEventFuction(t, e);
  }
  setIniset(t) {
    return this._mxdrawObj.setIniset(t);
  }
  getViewDocCoord() {
    return this._mxdrawObj.getViewDocCoord();
  }
  screenCoord2World(t, e, n) {
    return this._mxdrawObj.screenCoord2World(t, e, n);
  }
  worldCoord2Screen(t, e, n) {
    return this._mxdrawObj.worldCoord2Screen(t, e, n);
  }
  screenCoord2Doc(t, e) {
    return this._mxdrawObj.screenCoord2Doc(t, e, 0);
  }
  worldCoordLong2Doc(t) {
    return this._mxdrawObj.worldCoordLong2Doc(t);
  }
  docCoordLong2World(t) {
    return this._mxdrawObj.docCoordLong2World(t);
  }
  docCoord2World(t, e, n) {
    return this._mxdrawObj.docCoord2World(t, e, n);
  }
  docCoord2World2(t) {
    return this._mxdrawObj.docCoord2World(t.x, t.y, t.z);
  }
  worldCoord2Doc(t, e, n) {
    return this._mxdrawObj.worldCoord2Doc(t, e, n);
  }
  worldCoord2Doc2(t) {
    return this._mxdrawObj.worldCoord2Doc(t.x, t.y, t.z);
  }
  docCoord2Screen(t, e) {
    return this._mxdrawObj.docCoord2Screen(t, e, 0);
  }
  screenCoordLong2Doc(t) {
    return this._mxdrawObj.screenCoordLong2Doc(t);
  }
  docCoordLong2Screen(t) {
    return this._mxdrawObj.docCoordLong2Screen(t);
  }
  screenCoordLong2World(t) {
    return this._mxdrawObj.screenCoordLong2World(t);
  }
  worldCoordLong2Screen(t) {
    return this._mxdrawObj.worldCoordLong2Screen(t);
  }
  initRendererParam(t) {
    return this._mxdrawObj.initRendererParam(t);
  }
  addMxEntity(t) {
    return this.rootLayer.add(t), t.objectId();
  }
  getMxCurrentSelect() {
    let t = this._mxdrawObj.getMxAllSelect();
    return 0 == t.length && (t = this._mxdrawObj.getPrvCommandSelect()), t;
  }
  getMxCADCurrentSelect() {
    let t = this._mxdrawObj.getMxCADAllSelect();
    return 0 == t.length && (t = this._mxdrawObj.getPrvCommandMxCADSelect()), t;
  }
  getSelectPoints() {
    return this._mxdrawObj.getSelectPoints();
  }
  addMxCurrentSelect(t, e = true, n = true) {
    return this._mxdrawObj.addMxCurrentSelect(t, e, n);
  }
  addMxCADCurrentSelect(t, e = true, n = true) {
    return this._mxdrawObj.addMxCADCurrentSelect(t, e, n);
  }
  fireSelectChange(t) {
    this._mxdrawObj.fireSelectChange(t);
  }
  clearMxCurrentSelect() {
    return this._mxdrawObj.clearMxCurrentSelect();
  }
  getMxEntity(t) {
    return this._mxdrawObj.getMxEntityUserObject(t);
  }
  findMxEntityAtPoint(t, e, n) {
    return this._mxdrawObj.findMxEntityAtPoint(t, e, n);
  }
  getAllMxEntity() {
    return this._mxdrawObj.getAllMxEntity();
  }
  setViewMovementMethod(t) {
    return this._mxdrawObj.setMouseMiddlePan(t);
  }
  setMouseMiddlePan(t) {
    return this._mxdrawObj.setMouseMiddlePan(t);
  }
  resetThreeJSControls() {
    return this._mxdrawObj.resetThreeJSControls();
  }
  enableZoom(t) {
    return this._mxdrawObj.enableZoom(t);
  }
  enablePan(t) {
    return this._mxdrawObj.enablePan(t);
  }
  eraseMxEntity(t) {
    return this._mxdrawObj.eraseMxEntity(t);
  }
  removeViewObject(t) {
    this._mxdrawObj.removeViewObject(t);
  }
  saveMxEntityToJson(t) {
    return JSON.stringify(this._mxdrawObj.saveMxEntityToJson(t));
  }
  saveMxEntityToObject(t) {
    return this._mxdrawObj.saveMxEntityToJson(t);
  }
  async loadMxEntityFromJson(t, e = null) {
    if (e) {
      let t2 = e.length;
      for (let n = 0; n < t2; n++) await MxThreeJS.loadSVG(e[n]);
    }
    return this.getAllMxEntity().forEach((t2) => {
      for (let e2 in t2) Reflect.deleteProperty(t2, e2);
    }), "string" == typeof t ? this._mxdrawObj.loadMxEntityFromJson(JSON.parse(t)) : this._mxdrawObj.loadMxEntityFromJson(t);
  }
  eraseAllMxEntity() {
    return this._mxdrawObj.eraseAllMxEntity();
  }
  makeCurrent() {
    this._mxdrawObj.makeCurrent();
  }
  getViewCenterDocCoord() {
    return this._mxdrawObj.getViewCenterDocCoord();
  }
  updateCanvasSize() {
    this._mxdrawObj.updateCanvasSize();
  }
  newFile(t, e, n, r) {
    return this._mxdrawObj.newFile(t, e, n, r);
  }
  stopAllLoading() {
    this._mxdrawObj.stopAllLoading();
  }
  getOrbitControls() {
    return this._mxdrawObj.getOrbitControls();
  }
  enableViewControls(t) {
    return this._mxdrawObj.enableViewControls(t);
  }
  getMxDatabase() {
    return new MxDbDatabase(this._mxdrawObj.getMxDatabase());
  }
  getTempMarkDraw() {
    return new MxTempMarkDraw(this._mxdrawObj.getTempMarkDraw());
  }
  setZoomSpeed(t) {
    return this._mxdrawObj.setZoomSpeed(t);
  }
  resetRenderer() {
    return this._mxdrawObj.resetRenderer();
  }
  setRequestHeader(t) {
    return this._mxdrawObj.setRequestHeader(t);
  }
  closeWebSocket() {
    return this._mxdrawObj.closeWebSocket();
  }
  cadCoord2Doc(t, e, n) {
    return this._mxdrawObj.cadCoord2Doc(t, e, n);
  }
  cadCoord2Doc2(t) {
    return this._mxdrawObj.cadCoord2Doc2(t);
  }
  toSmallcoord(t) {
    return this._mxdrawObj.toSmallcoord(t);
  }
  toSmallcoord2(t, e, n = 0) {
    return this._mxdrawObj.toSmallcoord2(t, e, n);
  }
  docCoord2Cad(t, e, n) {
    return this._mxdrawObj.docCoord2Cad(t, e, n);
  }
  docCoord2Cad2(t) {
    return this._mxdrawObj.docCoord2Cad2(t);
  }
  viewCoord2Cad(t, e, n) {
    return this._mxdrawObj.viewCoord2Cad(t, e, n);
  }
  cadCoord2View(t, e, n) {
    return this._mxdrawObj.cadCoord2View(t, e, n);
  }
  cadCoordLong2View(t) {
    return this._mxdrawObj.cadCoordLong2View(t);
  }
  viewCoordLong2Cad(t) {
    return this._mxdrawObj.viewCoordLong2Cad(t);
  }
  docCoordLong2Cad(t) {
    return this._mxdrawObj.docCoordLong2Cad(t);
  }
  cadCoordLong2Doc(t) {
    return this._mxdrawObj.cadCoordLong2Doc(t);
  }
  setViewAngle(t) {
    return this._mxdrawObj.setViewAngle(t);
  }
  getViewAngle() {
    return this._mxdrawObj.getViewAngle();
  }
  getSysVar(t) {
    return this._mxdrawObj.sysVariable().getSysVar();
  }
  setSysVar(t, e) {
    return this._mxdrawObj.sysVariable().setSysVar(t, e);
  }
  isMxCAD() {
    return this._mxdrawObj.isCppMxCAD();
  }
  getAllLayoutName() {
    return this._mxdrawObj.getAllLayoutName();
  }
  getDtabaseJsonString() {
    return this._mxdrawObj.getDtabaseJsonString();
  }
  gotoLayout(t) {
    return this._mxdrawObj.gotoLayout(t);
  }
  initMxCpp(t) {
    return this._mxdrawObj.initMxCpp(t);
  }
  isWebgl2() {
    return this._mxdrawObj.isWebgl2();
  }
  getId() {
    return this._mxdrawObj.getId();
  }
  addControlsEvent(t, e, n = false) {
    return this._mxdrawObj.addControlsEvent(t, e, n);
  }
  clearAllObject() {
    return this.rootLayer.clear(), this._mxdrawObj.clearAllObject();
  }
  setPointMultipleSelect(t = true) {
    return this._mxdrawObj.setPointMultipleSelect(t);
  }
  isWhiteViewColor() {
    return this._mxdrawObj.isWhiteViewColor();
  }
  automaticInversionColor(t) {
    return this._mxdrawObj.automaticInversionColor(t);
  }
  renderLoop(t = true) {
    return this._mxdrawObj.renderLoop(t);
  }
};
var initEvents = (t) => {
  let e = [];
  ["click", "mousedown", "mouseup"].forEach((n) => {
    t.addEventListener(n, () => {
      e.forEach((t2) => {
        t2.emit(n);
      });
    });
  }), t.addEventListener("mousemove", () => {
    const t2 = MxFun.getCurrentDraw().findMxEntityAtPoint(MxFun.getCurrentMousePostion(), false);
    t2.forEach((t3) => {
      t3.emit("mousemove");
    }), 0 === t2.length && (e.length > 0 && e.forEach((t3) => {
      t3.emit("mouseout");
    }), e = []), 0 === e.length && (e = t2).forEach((t3) => {
      t3.emit("mouseover"), t3.emit("hover");
    });
  });
};
function createMxObject({ canvasId: t = createReandomId(), cadFile: e = "", callback: n, isNewFile: r = false, useWebsocket: i = false, isAutoResize: a = true, mapBox: o, isMxCAD: s = false, userIdentitySign: l = "emptyUserIdentity", isCPPMxCAD: c = false }) {
  if (this.initUiDataObject(mxUiData$1), !i && r && (r = false), o) if (c) {
    const t2 = o.canvas;
    let e2 = true;
    store.state.MxFun.createMxObject(t2, "", (e3) => {
      let r2 = new MxDrawObject(e3);
      e3.setMouseRightRotate(false), e3.setIniset({ EnableOsnapFunction: true }), n && n(r2, { canvas: t2, canvasParent: void 0 });
    }, e2, false, false, o, c);
  } else {
    const t2 = o.canvas;
    store.state.MxFun.createMxObject(t2, e, (e2) => {
      let r2 = new MxDrawObject(e2);
      e2.setIniset({ EnableOsnapFunction: true }), n && n(r2, { canvas: t2, canvasParent: void 0 });
    }, void 0, r, i, o);
  }
  else if (c) {
    const e2 = createCanvas(t), r2 = createCanvasParent(e2);
    r2.parentNode && 11 != r2.parentNode.nodeType || document.body.appendChild(r2);
    let i2 = true;
    store.state.MxFun.createMxObject(t, "", (t2) => {
      let i3 = new MxDrawObject(t2);
      t2.setMouseRightRotate(false), t2.setIniset({ EnableOsnapFunction: true }), t2.addEvent("onResize", () => (r2.tabindex = 3, { width: r2.clientWidth, height: r2.clientHeight })), a && useCanvasResizeListener(i3, e2), n && n(i3, { canvas: e2, canvasParent: r2 });
    }, i2, false, false, void 0, c);
  } else {
    const o2 = createCanvas(t), c2 = createCanvasParent(o2);
    let u;
    c2.parentNode && 11 != c2.parentNode.nodeType || document.body.appendChild(c2), s && (u = true, i = true), store.state.MxFun.createMxObject(t, e, (t2) => {
      let e2 = new MxDrawObject(t2);
      if (s) {
        const e3 = 2;
        0 == l.length && (l = "invalidUserIdentity"), t2.initRunMode(e3), t2.initUserLoginData(l, "");
      }
      t2.setMouseRightRotate(false), t2.setIniset({ EnableOsnapFunction: true }), t2.addEvent("onResize", () => (c2.tabindex = 3, { width: c2.clientWidth, height: c2.clientHeight })), a && useCanvasResizeListener(e2, o2), initEvents(o2), n && n(e2, { canvas: o2, canvasParent: c2 });
    }, u, r, i, void 0);
  }
}
var mxUiData = mxUiData$1;
var mxFunSyncInitialization;
var MxFunClass = class {
  constructor() {
    this.createMxObject = createMxObject, this.getMxFunTHREE = () => store.state.MxFun.getTHREE();
  }
  setMxServer(t = "ws://localhost:5090") {
    store.state.MxFun.setMxServer(t);
  }
  setloadImageFuction(t) {
    store.state.MxFun.setloadImageFuction(t);
  }
  onInitSync(t) {
    mxFunSyncInitialization = t;
  }
  callSyncInitialization() {
    return null != mxFunSyncInitialization ? mxFunSyncInitialization() : new Promise((t) => {
      t(true);
    });
  }
  screenCoord2Doc(t, e) {
    return store.state.MxFun.screenCoord2Doc(t, e, 0);
  }
  docCoord2Screen(t, e) {
    return store.state.MxFun.docCoord2Screen(t, e, 0);
  }
  getCurrentDraw() {
    const t = store.state.MxFun.getCurrentDraw();
    return t.tmp || (t.tmp = new MxDrawObject(t)), t.tmp;
  }
  addToCurrentSpace(t) {
    return MxFun.getCurrentDraw().addMxEntity(t);
  }
  initUiDataObject(t) {
    return mxUiData = t, store.state.MxFun.initUiDataObject(t);
  }
  getUIData() {
    return mxUiData;
  }
  getCurrentDatabase() {
    return MxFun.getCurrentDraw().getMxDatabase();
  }
  testMX(t) {
    return 11;
  }
  loadImageMaterial(t, e) {
    return e ? (store.state.MxFun.loadImageMaterial(t, e), new Promise((t2, e2) => {
      t2(null);
    })) : new Promise((e2, n) => {
      store.state.MxFun.loadImageMaterial(t, (t2) => {
        e2(t2 || null);
      });
    });
  }
  selectEnt(t, e = null) {
    return new Promise((n, r) => {
      const i = new MrxDbgUiPrPoint();
      i.setMessage(t), i.go((t2) => {
        if (0 != t2) return void n(0);
        const r2 = i.value();
        let a = MxFun.getCurrentDraw().findMxEntityAtPoint(r2), o = 0;
        for (; 0 != a.length; ) {
          let t3 = a.length;
          for (let n2 = 0; n2 < t3; n2++) {
            let t4 = a[n2];
            if (!e || !e.type || e.type == t4.getTypeName()) {
              o = t4.objectId();
              break;
            }
          }
          break;
        }
        n(o);
      });
    });
  }
  listenForCommandLineInput(t) {
    mxUiData.getCmdLine().mountUpDisplayFun(t);
  }
  setCommandLineInputData(t, e) {
    mxUiData.getCmdLine().setCmdText(t), mxUiData.onKeydown(e);
  }
  listenForCoordTip(t) {
    mxUiData.mountSetCoordFun(t);
  }
  listenForUpdateCursor(t) {
    mxUiData.mountUpdateCursorFun(t);
  }
  getMxFunThreeTool() {
    return store.state.MxFun.getMxThreeJS();
  }
  ceneratecursor(t = 128, e = 10, n = true, r) {
    return store.state.MxFun.ceneratecursor(t, e, n, r);
  }
  getCurrentMousePostion() {
    let t = store.state.MxFun.getCurrentMousePostion();
    return new THREE.Vector3(t.x, t.y, 0);
  }
  onUseCreateMxDbEntity(t) {
    store.events.on("use:create:MxDbEntity", t);
  }
};
var _MxFun = new MxFunClass();
var MxFun = new Proxy({}, { get: (t, e) => "function" == typeof _MxFun[e] ? _MxFun[e].bind(_MxFun) : store.state.MxFun[e] });
var MxCloneType;
var MxCommandFlag;
var MxDefaultRenderOrder;
var InputToucheType;
!function(t) {
  t[t.kClone = 1] = "kClone", t[t.kDragClone = 2] = "kDragClone", t[t.kMxFileClone = 3] = "kMxFileClone", t[t.kSaveDwgClone = 4] = "kSaveDwgClone";
}(MxCloneType || (MxCloneType = {})), function(t) {
  t[t.MCRX_CMD_MODAL = 0] = "MCRX_CMD_MODAL", t[t.MCRX_CMD_TRANSPARENT = 1] = "MCRX_CMD_TRANSPARENT", t[t.MCRX_CMD_NO_UNDO_MARKER = 2] = "MCRX_CMD_NO_UNDO_MARKER", t[t.MCRX_CMD_NOPRV = 4] = "MCRX_CMD_NOPRV", t[t.MCRX_CMD_NO_RECORD_PRVCMD = 8] = "MCRX_CMD_NO_RECORD_PRVCMD", t[t.MCRX_CMD_NO_CLEAR_SELECT = 16] = "MCRX_CMD_NO_CLEAR_SELECT", t[t.MCRX_CMD_NO_CLEAR_SELECT_GRIP_POINT = 32] = "MCRX_CMD_NO_CLEAR_SELECT_GRIP_POINT";
}(MxCommandFlag || (MxCommandFlag = {})), function(t) {
  t[t.kCADMeshRenderOrder = 10] = "kCADMeshRenderOrder", t[t.kCADCurveRenderOrder = 20] = "kCADCurveRenderOrder", t[t.kMxEntityRenderOrder = 30] = "kMxEntityRenderOrder", t[t.kGripRenderOrder = 110] = "kGripRenderOrder", t[t.kDynJigRenderOrder = 120] = "kDynJigRenderOrder";
}(MxDefaultRenderOrder || (MxDefaultRenderOrder = {})), function(t) {
  t[t.kGetBegan = 1] = "kGetBegan", t[t.kGetEnd = 2] = "kGetEnd";
}(InputToucheType || (InputToucheType = {}));
var MxType = Object.freeze({ __proto__: null, get MxCloneType() {
  return MxCloneType;
}, get MxCommandFlag() {
  return MxCommandFlag;
}, get MxDefaultRenderOrder() {
  return MxDefaultRenderOrder;
}, get InputToucheType() {
  return InputToucheType;
} });
var MxassemblyClass = class {
  constructor() {
    this.mxassembly = null;
  }
  initImp() {
    this.mxassembly || store.state.Mxassembly && (this.mxassembly = store.state.Mxassembly);
  }
  NewMcGePoint3d(t, e, n) {
    this.initImp();
    let r = new this.mxassembly.McGePoint3d();
    return t && (r.x = t), e && (r.y = e), n && (r.z = n), r;
  }
  NewMcGePoint3dArray(t) {
    this.initImp();
    let e = new this.mxassembly.McGePoint3dArray();
    return t && t.forEach((t2) => {
      let n = this.NewMcGePoint3d();
      n.x = t2.x, n.y = t2.y, n.z = t2.z, e.append(n);
    }), e;
  }
};
var Mxassembly = new MxassemblyClass();
var McGeToolClass = class {
  constructor() {
    this.mxgeTool = null;
  }
  initImp() {
    this.mxgeTool || store.state.Mxassembly && (this.mxgeTool = new store.state.Mxassembly.McGeTool());
  }
  calcArea(t) {
    if (this.initImp(), !store.state.Mxassembly) return 0;
    if (t instanceof Array) {
      let e = Mxassembly.NewMcGePoint3dArray(t);
      return this.mxgeTool.calcArea(e);
    }
    return this.mxgeTool.calcArea(t);
  }
  pointInPolyline(t, e) {
    this.initImp();
    let n = e;
    e instanceof Array && (n = Mxassembly.NewMcGePoint3dArray(e));
    let r = Mxassembly.NewMcGePoint3d(t.x, t.y, t.z);
    return this.mxgeTool.pointInPolyline(r, n);
  }
};
var McGeTool = new McGeToolClass();
var MrxDbgUtilsClass = class {
  constructor() {
    this.imp = null;
  }
  initImp() {
    if (!this.imp && store.state.MxFun) {
      let t = store.state.MxFun;
      this.imp = new t.getMrxDbgUtilsClass();
    }
  }
  findEntAtPoint(t, e = null, n, r = true, i) {
    return this.initImp(), n || (n = MxFun.getCurrentDraw()), this.imp.findEntAtPoint(n.getMxObjectImplement(), t, e, r, i);
  }
  selectEnt(t, e) {
    return this.initImp(), this.imp.selectEnt(t);
  }
  getCorner(t, e, n = false, r, i = false) {
    return this.initImp(), this.imp.getCorner(t, e, n, r, i);
  }
};
var MrxDbgUtils = new MrxDbgUtilsClass();
var MxPaintBrushProps = {};
var MxPaintBrush = { getProps: () => MxPaintBrushProps, setProps: (t) => Object.assign(MxPaintBrushProps, t), use: (t) => Object.assign(t, MxPaintBrushProps) };
var DataType;
!function(t) {
  t[t.Default = 0] = "Default", t[t.Color = 1] = "Color", t[t.Vector2 = 2] = "Vector2", t[t.Vector3 = 3] = "Vector3", t[t.Vector4 = 4] = "Vector4", t[t.Matrix3 = 5] = "Matrix3", t[t.Matrix4 = 6] = "Matrix4";
}(DataType || (DataType = {}));
var MXDBDATATYPE = "datatype";
function getDwgKeyVal(t, e) {
  let n, r = "";
  return lodash.isObject(e) ? (n = e.default, r = e.key) : "string" == typeof e && (r = e), [r, void 0 === t[r] ? n : t[r]];
}
var MxDbEntity = class extends RenderOrderNode {
  constructor() {
    super(), this.color = 16777215, this.opacity = 1, this.visible = true, this.userData = {}, this.sGuid = "", this.dLineWidth = 0, this.lineWidthByPixels = true, this.dDashArray = 0, this.dDashRatio = 0, this.layer = "", this.use_smallcoord_display = false, this.addEvent = this.on, this.removeEvent = this.off, this.callEvent = this.emit;
    const t = this.constructor;
    t.isPaintBrushDraw && (MxPaintBrush.use(this), store.events.emit("use:create:MxDbEntity", this), t.isPaintBrushDraw = false);
  }
  static register() {
    const t = this;
    t.isRegister || (t.cmd && t.draw && MxFun.addCommand(t.cmd, (e) => t.use.call(t, void 0, e)), new t().rxInit(), t.isRegister = true);
  }
  static async use(t, e) {
    return new Promise((n, r) => {
      const i = this;
      if (!i.isRegister && i.register(), i.isPaintBrushDraw = true, !i.cmd && i.draw) return r();
      const a = (e2) => {
        n(e2), t && t(e2), store.events.off("use:create:MxDbEntity", a);
      };
      store.events.on("use:create:MxDbEntity", a), i.draw(e);
    });
  }
  initGuid(t) {
    this.sGuid.length > 0 ? console.log("mx: init guid error") : this.sGuid = t;
  }
  toSmallcoord2(t, e, n, r = 0) {
    return this.use_smallcoord_display ? t.toSmallcoord2(e, n, r) : new THREE.Vector3(e, n, r);
  }
  toSmallcoord(t, e) {
    return this.use_smallcoord_display ? t.toSmallcoord(e) : e;
  }
  isUseSmallcoordDisplay() {
    return this.use_smallcoord_display;
  }
  setUseSmallcoordDisplay(t) {
    this.use_smallcoord_display = t;
  }
  dwgInHelp(t, e, n) {
    let r = this;
    const i = t.type === MxType.MxCloneType.kMxFileClone || t.type === MxType.MxCloneType.kSaveDwgClone, a = (t2) => {
      if (!t2) return;
      const { value: e2, [MXDBDATATYPE]: r2 } = t2;
      switch (r2) {
        case DataType.Color:
          return new THREE.Color(...e2);
        case DataType.Vector2:
          return new THREE.Vector2(...e2);
        case DataType.Vector3:
          return new THREE.Vector3(...e2);
        case DataType.Vector4:
          return new THREE.Vector4(...e2);
        case DataType.Matrix3:
          return new THREE.Matrix3().fromArray(e2);
        case DataType.Matrix4:
          return new THREE.Matrix4().fromArray(e2);
      }
      return n && n.getCacheVal ? n.getCacheVal(t2) : void 0;
    };
    function o(t2) {
      return t2 instanceof THREE.Color || t2 instanceof THREE.Vector2 || t2 instanceof THREE.Vector3 || t2 instanceof THREE.Vector4 || t2 instanceof THREE.Matrix3 || t2 instanceof THREE.Matrix4 ? t2.clone() : n && n.getVal ? n.getVal(t2) : void 0;
    }
    return e.forEach((e2) => {
      const [n2, s] = getDwgKeyVal(t, e2);
      r[n2] = lodash.cloneDeepWith(s, i ? a : o);
    }), true;
  }
  dwgOutHelp(t, e) {
    const n = (t2) => t2 instanceof THREE.Color ? { [MXDBDATATYPE]: DataType.Color, value: t2.toArray() } : t2 instanceof THREE.Vector2 ? { [MXDBDATATYPE]: DataType.Vector2, value: t2.toArray() } : t2 instanceof THREE.Vector3 ? { [MXDBDATATYPE]: DataType.Vector3, value: t2.toArray() } : t2 instanceof THREE.Vector4 ? { [MXDBDATATYPE]: DataType.Vector4, value: t2.toArray() } : t2 instanceof THREE.Matrix3 ? { [MXDBDATATYPE]: DataType.Matrix3, value: t2.toArray() } : t2 instanceof THREE.Matrix4 ? { [MXDBDATATYPE]: DataType.Matrix4, value: t2.toArray() } : void 0;
    let r = this;
    const i = t.type === MxType.MxCloneType.kMxFileClone || t.type === MxType.MxCloneType.kSaveDwgClone;
    return e.forEach((e2) => {
      const [a, o] = getDwgKeyVal(r, e2);
      t[a] = i ? lodash.cloneDeepWith(o, n) : o;
    }), t;
  }
  create(t) {
    return new (0, this.constructor)(t);
  }
  transformBy(t) {
  }
  transformScale(t, e) {
    let n = new THREE.Matrix4().makeTranslation(t.x, t.y, t.z).multiply(new THREE.Matrix4().makeScale(e, e, e)).multiply(new THREE.Matrix4().makeTranslation(-t.x, -t.y, -t.z));
    this.transformBy(n);
  }
  transformRotate(t, e) {
    let n = new THREE.Matrix4().makeTranslation(t.x, t.y, t.z).multiply(new THREE.Matrix4().makeRotationZ(e)).multiply(new THREE.Matrix4().makeTranslation(-t.x, -t.y, -t.z));
    this.transformBy(n);
  }
  transformMove(t) {
    let e = new THREE.Matrix4().makeTranslation(t.x, t.y, t.z);
    this.transformBy(e);
  }
  getGeomExtents() {
    return null;
  }
  getClosestPointTo(t, e = 0) {
    return null;
  }
  getImp() {
    return this.MxDbEntityImp;
  }
  setNeedUpdateDisplay(t) {
    let e = this.getImp();
    return !!e && (t ? e.upDisplay() : e.setDirtyDisplay(true), true);
  }
  getMxObject() {
    let t = this.getImp();
    return t ? t.getMxObject() : null;
  }
  onViewChange() {
    return false;
  }
  objectId() {
    let t = this.getImp();
    return t ? t.objectId() : 0;
  }
  erase() {
    let t = this.getImp();
    return !!t && t.erase();
  }
  setLayer(t) {
    let e = this.getImp();
    e && e.nodifySetLayer(), this.layer = t;
  }
  getLayer() {
    return this.layer;
  }
  setColor(t) {
    return this.color = t, this;
  }
  getColor() {
    return this.color || 16777215;
  }
  clone(t) {
    let e = this.create(), n = { type: t || MxType.MxCloneType.kClone };
    return this.dwgOut(n), e.dwgIn(n), e.sGuid = "", e;
  }
  onDwgIn(t) {
    this.color = t.color, this.renderOrder = t.renderOrder, this.opacity = t.opacity, this.visible = t.visible, t.userData ? this.userData = JSON.parse(JSON.stringify(t.userData)) : this.userData = {}, this.dLineWidth = t.lineWidth, this.lineWidthByPixels = t.lineWidthByPixels, this.dDashArray = t.dashArray, this.dDashRatio = t.dashRatio, this.layer = t.layer, t.guid && (this.sGuid = t.guid);
  }
  onDwgOut(t) {
    t.color = this.color, t.renderOrder = this.renderOrder, t.opacity = this.opacity, t.visible = this.visible, t.lineWidth = this.dLineWidth, t.lineWidthByPixels = this.lineWidthByPixels, t.dashArray = this.dDashArray, t.dashRatio = this.dDashRatio, t.layer = this.layer, t.guid = this.sGuid, Object.keys(this.userData).length > 0 && (t.userData = this.userData);
  }
  rxInit() {
    MxFun.initMxDbEntityType(this);
  }
  setRenderOrder(t) {
    this.renderOrder = t;
  }
  getRenderOrder() {
    return this.renderOrder;
  }
  setLineWidthByPixels(t) {
    return this.lineWidthByPixels = t, this;
  }
  getLineWidthByPixels() {
    return this.lineWidthByPixels;
  }
  setLineWidth(t) {
    return this.dLineWidth = t, this;
  }
  getLineWidth() {
    return this.dLineWidth;
  }
  getGetLength() {
    return 0;
  }
  setDashLen(t) {
    let e = this.getGetLength();
    if (e < 1e-6 || t < 1e-6) return this;
    let n = Math.floor(e / t);
    return n < 1e-6 && (this.dDashRatio = 0), this.dDashArray = 1 / n, this;
  }
  setDashRatio(t) {
    return this.dDashRatio = t, this;
  }
  setDashArray(t) {
    return this.dDashArray = t, this;
  }
  setDash(t, e) {
    return this.dDashArray = t, this.dDashRatio = e, 0 == this.dLineWidth && (this.dLineWidth = 6, this.lineWidthByPixels = true), this;
  }
  getDash() {
    return { dDashArray: this.dDashArray, dDashRatio: this.dDashRatio };
  }
  setDashLineDisplay(t) {
    return t ? (this.dDashArray < 1e-5 && (this.dDashArray = 0.03), this.dDashRatio < 1e-5 && (this.dDashRatio = 0.1), 0 == this.dLineWidth && (this.dLineWidth = 6, this.lineWidthByPixels = true)) : (this.dDashArray = 0, this.dDashRatio = 0), this;
  }
  isDashLineDisplay() {
    return this.dDashArray > 0 && this.dDashRatio > 0;
  }
  guid() {
    return this.sGuid;
  }
  setGuid(t) {
    return this.sGuid = t;
  }
  onEndGripEidt() {
    this.callEvent("onEndGripEidt");
  }
  onStartGripEidt() {
    return this.callEvent("onStartGripEidt");
  }
  toJsonString(t = MxType.MxCloneType.kMxFileClone) {
    let e = { type: t };
    return this.dwgOut(e), e.TypeName = this.getTypeName(), JSON.stringify(e);
  }
  fromJsonString(t) {
    let e = JSON.parse(t);
    return (e.type == MxType.MxCloneType.kMxFileClone || e.type == MxType.MxCloneType.kClone) && this.dwgIn(e);
  }
};
function drawMxDbImage() {
  const t = new MrxDbgUiPrPoint();
  t.setMessage("\n指定插入点:");
  let e = MxFun.getCurrentDraw();
  t.go((n) => {
    if (0 != n) return;
    let r = MxFun.screenCoordLong2Doc(300), i = MxFun.screenCoordLong2Doc(200);
    const a = t.value();
    let o = MxFun.screenCoord2Doc(10, 10);
    a.z = o.z;
    let s = new MxDbImage();
    s.setRenderOrder(MxType.MxDefaultRenderOrder.kCADMeshRenderOrder - 1), s.setPoint1(a);
    let l = new THREE.Vector3(a.x + r, a.y + i, a.z);
    s.setPoint2(l);
    let c = prompt("请填写图片网络地址", "https://cdn.pixabay.com/photo/2022/11/15/12/23/winter-7593872_960_720.jpg");
    c && (s.setImagePath(c), e.addMxEntity(s), s.addEvent("onStartGripEidt", () => (s.visible = false, s.setNeedUpdateDisplay(), { renderOrder: MxType.MxDefaultRenderOrder.kCADMeshRenderOrder - 1 })), s.addEvent("onEndGripEidt", () => {
      s.visible = true, s.setNeedUpdateDisplay();
    }));
  });
}
MxDbEntity.isRegister = false;
var MxDbImage = class _MxDbImage extends MxDbEntity {
  constructor() {
    super(...arguments), this.pt1 = new THREE.Vector3(), this.pt2 = new THREE.Vector3(), this.imagePath = "", this.isLoadMaterialFromPath = true, this.material = null, this.angle = 0;
  }
  getTypeName() {
    return "MxDbImage";
  }
  getAngle() {
    return this.angle;
  }
  setAngle(t) {
    this.angle = t;
  }
  worldDraw(t) {
    let e = new THREE.Vector3(this.pt1.x, this.pt2.y), n = new THREE.Vector3(this.pt2.x, this.pt1.y);
    if (Math.abs(this.angle) > 1e-5) {
      let e2 = new THREE.Vector3(0.5 * (this.pt1.x - this.pt2.x) + this.pt2.x, 0.5 * (this.pt1.y - this.pt2.y) + this.pt2.y), n2 = new THREE.Matrix4();
      n2.makeRotationZ(this.angle);
      let r = new THREE.Matrix4().makeTranslation(e2.x, e2.y, e2.z).multiply(n2).multiply(new THREE.Matrix4().makeTranslation(-e2.x, -e2.y, -e2.z));
      t.setMatrix(r);
    }
    if (1 == t.getType()) {
      if (t.drawSelectLine(this.pt1, e), t.drawSelectLine(e, this.pt2), t.drawSelectLine(this.pt2, n), t.drawSelectLine(n, this.pt1), this.material) {
        let e2 = Math.abs(this.pt1.x - this.pt2.x), n2 = Math.abs(this.pt1.y - this.pt2.y), r = new THREE.PlaneGeometry(e2, n2), i = Math.min(this.pt1.x, this.pt2.x), a = Math.min(this.pt1.y, this.pt2.y);
        for (let t2 = 0; t2 < r.vertices.length; t2++) r.vertices[t2].x += i + 0.5 * e2, r.vertices[t2].y += a + 0.5 * n2, r.vertices[t2].z = 0;
        let o = new THREE.Mesh(r, this.material);
        o.material.depthTest = false, t.drawEntity(o);
      } else if (this.imagePath.length > 0 && this.isLoadMaterialFromPath) {
        let e2 = this, n2 = t.getMxObject();
        const r = (t2) => {
          this.isLoadMaterialFromPath = false, t2 && (e2.setMaterial(t2), e2.setNeedUpdateDisplay(), n2.updateDisplay());
        };
        MxFun.loadImageMaterial(this.imagePath, (t2) => {
          r(t2);
        });
      }
    } else if (this.material) {
      let e2 = Math.abs(this.pt1.x - this.pt2.x), n2 = Math.abs(this.pt1.y - this.pt2.y), r = new THREE.PlaneGeometry(e2, n2), i = Math.min(this.pt1.x, this.pt2.x), a = Math.min(this.pt1.y, this.pt2.y);
      for (let t2 = 0; t2 < r.vertices.length; t2++) r.vertices[t2].x += i + 0.5 * e2, r.vertices[t2].y += a + 0.5 * n2, r.vertices[t2].z = 0;
      let o = new THREE.Mesh(r, this.material);
      o.material.depthTest = false, t.drawEntity(o);
    } else t.drawLine(this.pt1, e), t.drawLine(e, this.pt2), t.drawLine(this.pt2, n), t.drawLine(n, this.pt1);
    t.setMatrix(null);
  }
  setImagePath(t) {
    this.imagePath = t, this.isLoadMaterialFromPath = true, this.material = null;
  }
  getImagePath() {
    return this.imagePath;
  }
  setMaterial(t) {
    this.material = t;
  }
  loadMaterial(t) {
    t && (this.imagePath = t), this.isLoadMaterialFromPath = false, this.material = null;
    let e = this;
    MxFun.loadImageMaterial(this.imagePath, (t2) => {
      this.isLoadMaterialFromPath = false, e.setMaterial(t2);
    });
  }
  setPoint1(t) {
    this.pt1 = t;
  }
  getPoint1() {
    return this.pt1;
  }
  setPoint2(t) {
    this.pt2 = t;
  }
  getPoint2() {
    return this.pt2;
  }
  getGripPoints() {
    let t = [];
    t.push(this.pt1), t.push(this.pt2);
    let e = new THREE.Vector3(this.pt1.x + 0.5 * (this.pt2.x - this.pt1.x), this.pt1.y + 0.5 * (this.pt2.y - this.pt1.y));
    return t.push(e), t;
  }
  moveGripPointsAt(t, e) {
    return 0 == t ? this.pt1.add(e) : 1 == t ? this.pt2.add(e) : 2 == t && (this.pt1.add(e), this.pt2.add(e)), true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.pt1.copy(t.pt1), this.pt2.copy(t.pt2), this.imagePath = t.imagePath.substr(0), this.isLoadMaterialFromPath = true, t.angle && (this.angle = t.angle), t.material && (this.material = t.material), true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), t.pt1 = this.pt1, t.pt2 = this.pt2, t.imagePath = this.imagePath, t.angle = this.angle, t.type == MxType.MxCloneType.kDragClone && (t.material = this.material), t;
  }
  create() {
    return new _MxDbImage();
  }
};
var McGiWorldDrawType;
MxDbImage.cmd = "Mx_DrawImage", MxDbImage.draw = drawMxDbImage, addRegisterMxDbEntity(MxDbImage), function(t) {
  t[t.kWorldDraw = 1] = "kWorldDraw", t[t.kDynDragDraw = 2] = "kDynDragDraw", t[t.kSelectDraw = 3] = "kSelectDraw";
}(McGiWorldDrawType || (McGiWorldDrawType = {}));
var McGiWorldDrawType$1 = McGiWorldDrawType;
var MxDbSVGText = class {
  constructor() {
    this.txtPos = new THREE.Vector3(), this.txt = "", this.txtHeight = 1, this.color = void 0, this._txtObject = null, this._txtAspectRatio = -1, this.move = false, this.drawConnectingLine = false, this._connectingLine = null, this.fontStyle = "", this.underline = false, this._underLine = null;
  }
};
async function drawMxDbSVG() {
  const t = new MrxDbgUiPrPoint();
  t.setMessage("\n指定一点:");
  let e = await t.go();
  if (!e) return;
  let n = new MxDbSVG(), r = prompt("请输入svg图片网络或本地地址", "https://img.alicdn.com/imgextra/i2/O1CN01FF1t1g1Q3PDWpSm4b_!!6000000001920-55-tps-508-135.svg");
  if (!r) return;
  n.setSvgPath(r), n.setSvgPostion(e), n.svgReverse = true, n.svgMargin.x = 0.2, n.setSvgAlignmentRatio(new THREE.Vector2(0.5, -1)), n.setRenderOrder(100), n.setSvgSize(new THREE.Vector2(50, 0));
  let i = new MxDbSVGText();
  i.txt = "A1", i.txtPos = new THREE.Vector3(0, -30, 0), i.txtHeight = 30, n.addText(i), n.fixedSize = true, n.color = 65297, MxFun.addToCurrentSpace(n);
}
var MxDbSVG = class _MxDbSVG extends MxDbEntity {
  constructor() {
    super(...arguments), this.svgPos = new THREE.Vector3(), this.svg = null, this.svgPath = "", this.svgSize = new THREE.Vector2(50, 50), this.svgAlignmentRatio = new THREE.Vector2(0, 0), this.imagePath = "", this.isLoadMaterialFromPath = true, this.material = null, this.svgRotate = 0, this.svgReverse = false, this.svgMirror = false, this.svgChildColor = [], this.svgMargin = new THREE.Vector2(0, 0), this.isSvgDirtyLocation = false, this.isLoadFromPath = true, this.aryText = [], this.svgBoxSize = null, this.fixedSize = false, this.useSvgColor = false;
  }
  setSvgChildColor(t) {
    if (this.svgChildColor = t, !this.useSvgColor && this.svg) {
      let t2 = new THREE.Color(this.getColor()), e = 0, n = this;
      this.svg.traverse(function(r) {
        r.material && (e < n.svgChildColor.length ? r.material.color = new THREE.Color(n.svgChildColor[e]) : r.material.color = t2, e++);
      }), this.setNeedUpdateDisplay(true);
    }
  }
  getSvgChildColor() {
    return this.svgChildColor;
  }
  calcVewSize(t) {
    let e = this.svgSize.x, n = this.svgSize.y;
    return n <= 0 && (n = this.svgBoxSize ? this.svgBoxSize.y / this.svgBoxSize.x * e : e), this.fixedSize && (e = t.screenCoordLong2Doc(e), n = t.screenCoordLong2Doc(n)), [e, n];
  }
  calcSvgDrawRect(t) {
    if (!t) return;
    this.calcSvgPosition(t);
    let [e, n] = this.calcVewSize(t), r = new THREE.Matrix4();
    r.makeScale(this.svgMirror ? -1 : 1, this.svgReverse ? -1 : 1, 1);
    let i = new THREE.Matrix4();
    i.makeRotationZ(this.svgRotate);
    let a = new THREE.Matrix4(), o = new THREE.Vector3(this.svgPos.x - e * this.svgAlignmentRatio.x, this.svgPos.y - n * this.svgAlignmentRatio.y, 0);
    a.makeTranslation(o.x, o.y, o.z), i.multiply(r), i.premultiply(a);
    let s = new THREE.Vector3(0, 0, 0), l = new THREE.Vector3(e, 0, 0), c = new THREE.Vector3(e, n, 0), u = new THREE.Vector3(0, n, 0);
    return s.applyMatrix4(i), l.applyMatrix4(i), c.applyMatrix4(i), u.applyMatrix4(i), { pt1: s, pt2: c, pt3: l, pt4: u, cenpt: c.clone().add(s.clone().sub(c).multiplyScalar(0.5)), sizew: e, sizeh: n };
  }
  calcImageDrawRect(t) {
    if (!t) return;
    this.calcSvgPosition(t);
    let [e, n] = this.calcVewSize(t), r = new THREE.Matrix4();
    r.makeScale(this.svgMirror ? -1 : 1, this.svgReverse ? -1 : 1, 1);
    let i = new THREE.Matrix4(), a = new THREE.Matrix4(), o = new THREE.Vector3(this.svgPos.x - e * this.svgAlignmentRatio.x, this.svgPos.y - n * this.svgAlignmentRatio.y, 0);
    a.makeTranslation(o.x, o.y, o.z), i.multiply(r), i.premultiply(a);
    let s = new THREE.Vector3(0, 0, 0), l = new THREE.Vector3(e, 0, 0), c = new THREE.Vector3(e, n, 0), u = new THREE.Vector3(0, n, 0);
    return s.applyMatrix4(i), l.applyMatrix4(i), c.applyMatrix4(i), u.applyMatrix4(i), { pt1: s, pt2: c, pt3: l, pt4: u, cenpt: c.clone().add(s.clone().sub(c).multiplyScalar(0.5)), sizew: e, sizeh: n };
  }
  worldDraw(t) {
    let e, n = t.getMxObject();
    if (this.imagePath.length > 0) {
      if (e = this.calcImageDrawRect(n), Math.abs(this.svgRotate) > 1e-5) {
        let n2 = new THREE.Vector3(0.5 * (e.pt1.x - e.pt2.x) + e.pt2.x, 0.5 * (e.pt1.y - e.pt2.y) + e.pt2.y), r2 = new THREE.Matrix4();
        r2.makeRotationZ(this.svgRotate);
        let i2 = new THREE.Matrix4().makeTranslation(n2.x, n2.y, n2.z).multiply(r2).multiply(new THREE.Matrix4().makeTranslation(-n2.x, -n2.y, -n2.z));
        t.setMatrix(i2);
      }
    } else e = this.calcSvgDrawRect(n);
    let r = e.pt1, i = e.pt2, a = e.pt3, o = e.pt4, s = e.cenpt, l = e.sizew, c = this;
    if (t.getType() != McGiWorldDrawType$1.kSelectDraw && this.aryText.forEach((e2, r2) => {
      if (e2.txt.length > 0) {
        let o2, u = new THREE.Vector3(e2.txtPos.x, e2.txtPos.y, 0);
        this.fixedSize && (e2.txtPos.x > 0 ? u.x = this.svgPos.x + n.screenCoordLong2Doc(e2.txtPos.x) : u.x = this.svgPos.x - n.screenCoordLong2Doc(e2.txtPos.x), e2.txtPos.y > 0 ? u.y = this.svgPos.y + n.screenCoordLong2Doc(e2.txtPos.y) : u.y = this.svgPos.y - n.screenCoordLong2Doc(e2.txtPos.y)), e2.color && (o2 = t.getColor(), t.setColor(e2.color));
        let h = e2.txtHeight;
        c.fixedSize && (h = n.screenCoordLong2Doc(e2.txtHeight)), t.setXData({ type: "text", txt: e2.txt, index: r2 });
        let p = t.drawText(e2.txt, h, 0, u, void 0, (t2) => {
          let n2 = "";
          return n2 = e2.fontStyle.length > 0 ? `${e2.fontStyle} ${t2}px Arial` : `normal ${t2}px Arial`;
        });
        if (t.getType() == McGiWorldDrawType$1.kWorldDraw && (e2._txtObject = p), e2.underline && e2._txtObject) {
          const n2 = new THREE.Box3();
          n2.expandByObject(e2._txtObject);
          let r3 = new THREE.Vector3(n2.min.x, n2.min.y + 0.1 * h, 0), o3 = new THREE.Vector3(n2.max.x, n2.min.y + 0.1 * h, 0);
          var i2 = new THREE.Geometry();
          let s2 = new THREE.LineBasicMaterial({ color: t.getColor(), transparent: true, depthTest: false });
          i2.vertices.push(r3, o3);
          var a2 = new THREE.Line(i2, s2);
          t.drawEntity(a2), t.getType() == McGiWorldDrawType$1.kWorldDraw && (e2._underLine = a2);
        }
        if (e2._txtAspectRatio = -1, o2 && t.setColor(o2), e2.drawConnectingLine) {
          let n2 = s.clone().sub(u);
          if (n2.length() > h + l) {
            n2.normalize();
            let r3 = s.clone().sub(n2.clone().multiplyScalar(l)), o3 = u.clone().add(n2.clone().multiplyScalar(h));
            i2 = new THREE.Geometry();
            let c2 = new THREE.LineBasicMaterial({ color: t.getColor(), transparent: true, depthTest: false });
            i2.vertices.push(r3, o3), a2 = new THREE.Line(i2, c2), t.setXData({ type: "line" }), t.drawEntity(a2), t.getType() == McGiWorldDrawType$1.kWorldDraw && (e2._connectingLine = a2);
          }
        }
      }
    }), 1 == t.getType()) {
      if (this.svg) t.setXData({ type: "svg" }), t.drawEntity(this.svg);
      else if (this.svgPath.length > 0 && this.isLoadFromPath) {
        let e2 = this, r2 = t.getMxObject();
        MxThreeJS.loadSVG(this.svgPath, void 0, (i2) => {
          if (i2) {
            let a2 = i2;
            if (a2.boxSize) e2.svgBoxSize = a2.boxSize.clone();
            else {
              let t2 = new THREE.Box3().setFromObject(i2);
              e2.svgBoxSize || (e2.svgBoxSize = new THREE.Vector3()), e2.svgBoxSize.x = t2.max.x - t2.min.x, e2.svgBoxSize.y = t2.max.y - t2.min.y;
            }
            let [o2, s2] = e2.calcVewSize(n);
            e2.svgBoxSize && (i2.scale.x = o2 / e2.svgBoxSize.x, i2.scale.y = s2 / e2.svgBoxSize.y), i2.scale.z = i2.scale.x, e2.svgReverse && (i2.scale.y *= -1), e2.svgMirror && (i2.scale.x *= -1), i2.rotateZ(e2.svgRotate), e2.isSvgDirtyLocation = true;
            let l2 = new THREE.Color(t.getColor()), c2 = 0;
            i2.traverse(function(t2) {
              t2.material && (t2.material = t2.material.clone(), t2.material.transparent = true, t2.material.depthTest = false, e2.useSvgColor || (c2 < e2.svgChildColor.length ? t2.material.color = new THREE.Color(e2.svgChildColor[c2]) : t2.material.color = l2), c2++);
            }), e2.svg = i2, e2.setNeedUpdateDisplay(), r2.updateDisplay();
          } else console.log("mx LoadSVG:" + e2.svgPath + " failed");
          e2.isLoadFromPath = false;
        });
      } else if (this.material) {
        let e2 = Math.abs(r.x - i.x), n2 = Math.abs(r.y - i.y), a2 = new THREE.PlaneGeometry(e2, n2), o2 = Math.min(r.x, i.x), s2 = Math.min(r.y, i.y);
        for (let t2 = 0; t2 < a2.vertices.length; t2++) a2.vertices[t2].x += o2 + 0.5 * e2, a2.vertices[t2].y += s2 + 0.5 * n2, a2.vertices[t2].z = 0;
        let l2 = new THREE.Mesh(a2, this.material);
        l2.material.depthTest = false, t.drawEntity(l2);
      } else if (this.isLoadMaterialFromPath && this.imagePath.length > 0) {
        let e2 = this, n2 = t.getMxObject();
        MxFun.loadImageMaterial(this.imagePath, (t2) => {
          this.isLoadMaterialFromPath = false, t2 && (e2.material = t2, e2.setNeedUpdateDisplay(), n2.updateDisplay());
        });
      }
      this.fixedSize || (t.drawSelectLine(r, i), t.drawSelectLine(a, o), t.drawSelectLine(r, a), t.drawSelectLine(a, i), t.drawSelectLine(i, o), t.drawSelectLine(o, r));
    } else t.drawLine(r, a), t.drawLine(a, i), t.drawLine(i, o), t.drawLine(o, r);
    this.imagePath.length > 0 && t.setMatrix(null);
  }
  async setSvgPath(t, e = false) {
    this.svgPath = t, this.svg = null, this.isLoadFromPath = true, this.svgBoxSize = null, e && await MxThreeJS.loadSVG(t);
  }
  getSvgPath() {
    return this.svgPath;
  }
  setSvgPostion(t) {
    this.svgPos = t.clone(), this.isSvgDirtyLocation = true;
  }
  setImagePath(t, e) {
    this.imagePath = t, e ? (this.material = e, this.isLoadMaterialFromPath = false) : (this.material = null, this.isLoadMaterialFromPath = true);
  }
  getImagePath() {
    return this.imagePath;
  }
  getSvgPostion() {
    return this.svgPos;
  }
  setSvgSize(t) {
    this.svgSize = t, this.isSvgDirtyLocation = true;
  }
  getSvgSize() {
    return this.svgSize;
  }
  setSvgAlignmentRatio(t) {
    this.svgAlignmentRatio = t, this.isSvgDirtyLocation = true;
  }
  getSvgAlignmentRatio() {
    return this.svgAlignmentRatio;
  }
  getText(t) {
    return t < this.aryText.length ? this.aryText[t] : null;
  }
  addText(t) {
    this.aryText.push(t);
  }
  getGripPoints() {
    let t = [];
    t.push(this.svgPos);
    let e = 0;
    for (; e < this.aryText.length; e++) {
      let n = this.aryText[e];
      if (n.move) {
        let e2 = new THREE.Vector3(n.txtPos.x, n.txtPos.y, 0);
        if (this.fixedSize) {
          let t2 = MxFun.getCurrentDraw();
          n.txtPos.x > 0 ? e2.x = this.svgPos.x + t2.screenCoordLong2Doc(n.txtPos.x) : e2.x = this.svgPos.x - t2.screenCoordLong2Doc(n.txtPos.x), n.txtPos.y > 0 ? e2.y = this.svgPos.y + t2.screenCoordLong2Doc(n.txtPos.y) : e2.y = this.svgPos.y - t2.screenCoordLong2Doc(n.txtPos.y);
        }
        t.push(e2);
      }
    }
    return t;
  }
  moveGripPointsAt(t, e) {
    if (0 == t) this.svgPos.add(e), this.fixedSize || this.aryText.forEach((t2) => {
      t2.txtPos.add(e);
    });
    else if (t - 1 >= 0 && t - 1 < this.aryText.length) {
      let n = this.aryText[t - 1];
      if (n.move) if (this.fixedSize) {
        let t2 = MxFun.getCurrentDraw();
        n.txtPos.x += t2.docCoordLong2Screen(e.x), n.txtPos.y += t2.docCoordLong2Screen(e.y);
      } else n.txtPos.add(e);
    }
    return this.isSvgDirtyLocation = true, true;
  }
  calcSvgPosition(t) {
    if (!this.svg || !this.isSvgDirtyLocation) return;
    this.isSvgDirtyLocation = false;
    let [e, n] = this.calcVewSize(t);
    this.svg.position.x = this.svgPos.x - e * this.svgAlignmentRatio.x - this.svgMargin.x * e, this.svg.position.y = this.svgPos.y - n * this.svgAlignmentRatio.y - this.svgMargin.y * n;
  }
  dwgIn(t) {
    this.onDwgIn(t), this.fixedSize = t.fixedSize, this.fixedSize ? this.svg = null : t.type == MxType.MxCloneType.kClone && t.svg && (this.svg = t.svg.clone()), this.svgPos.copy(t.svgPos), this.svgPath = t.svgPath.substr(0), this.svgSize.copy(t.svgSize), this.svgAlignmentRatio.copy(t.svgAlignmentRatio), this.isSvgDirtyLocation = true, this.svg || (this.isLoadFromPath = true), this.svgBoxSize = null;
    let e = t.txts;
    return this.aryText = [], e.forEach((t2) => {
      let e2 = new MxDbSVGText();
      e2.txt = t2.txt, e2.txtHeight = t2.txtHeight, e2.txtPos.copy(t2.txtPos), e2.move = t2.move, e2.drawConnectingLine = t2.drawConnectingLine, this.aryText.push(e2);
    }), this.svgRotate = t.svgRotate, this.useSvgColor = t.useSvgColor, this.svgReverse = t.svgReverse, this.svgMirror = t.svgMirror, this.svgMargin = t.svgMargin, t.svgChildColor ? this.svgChildColor = t.svgChildColor : this.svgChildColor = [], this.imagePath = t.imagePath.substr(0), this.isLoadMaterialFromPath = true, t.material && (this.material = t.material), true;
  }
  dwgOut(t) {
    this.onDwgOut(t);
    let e, n = this.getMxObject();
    return t.type == MxType.MxCloneType.kClone && (t.svg = this.svg), t.svgPath = this.svgPath, t.svgPos = this.svgPos, t.svgSize = this.svgSize, t.svgAlignmentRatio = this.svgAlignmentRatio, t.txts = [], t.type == MxType.MxCloneType.kSaveDwgClone && n && (e = this.calcSvgDrawRect(n)), this.aryText.forEach((e2) => {
      let n2 = { txtPos: e2.txtPos, txt: e2.txt, txtHeight: e2.txtHeight, color: e2.color, _txtAspectRatio: e2._txtAspectRatio, move: e2.move, drawConnectingLine: e2.drawConnectingLine };
      t.type == MxType.MxCloneType.kSaveDwgClone && (e2._connectingLine && (n2.connectingLine = e2._connectingLine.geometry.vertice), e2._underLine && (n2._underLine = e2._underLine.geometry.vertice)), t.txts.push(n2);
    }), t.fixedSize = this.fixedSize, t.svgRotate = this.svgRotate, t.useSvgColor = this.useSvgColor, t.svgReverse = this.svgReverse, t.svgMirror = this.svgMirror, t.svgMargin = this.svgMargin, t.svgChildColor = this.svgChildColor, t.type == MxType.MxCloneType.kSaveDwgClone && (t.svgRect = e), t.imagePath = this.imagePath, t.type == MxType.MxCloneType.kDragClone && (t.material = this.material), t;
  }
  create() {
    return new _MxDbSVG();
  }
  transformBy(t) {
    this.svgPos.applyMatrix4(t), this.isSvgDirtyLocation = true, this.fixedSize || this.aryText.forEach((e) => {
      e.txtPos.applyMatrix4(t);
    });
  }
  getTypeName() {
    return "MxDbSVG";
  }
  setColor(t) {
    if (super.setColor(t), this.svg) {
      let t2 = new THREE.Color(this.color);
      this.svg.traverse(function(e) {
        e.material && (e.material.color = t2);
      });
    }
    return this;
  }
  setSvg(t) {
    this.svg = t, this.isLoadFromPath = false, this.svgBoxSize = null;
  }
  calcSvgBoxSize(t) {
    if (!this.svgBoxSize) if (t.boxSize) this.svgBoxSize = t.boxSize.clone();
    else {
      let e = new THREE.Box3().setFromObject(t);
      this.svgBoxSize || (this.svgBoxSize = new THREE.Vector3()), this.svgBoxSize.x = e.max.x - e.min.x, this.svgBoxSize.y = e.max.y - e.min.y;
    }
  }
  reComputeSVG() {
    if (!this.svg) return;
    let t = this.getMxObject();
    if (!t) return;
    this.calcSvgBoxSize(this.svg);
    let [e, n] = this.calcVewSize(t);
    this.svgBoxSize && (this.svg.scale.x = e / this.svgBoxSize.x, this.svg.scale.y = n / this.svgBoxSize.y), this.svg.scale.z = this.svg.scale.x, this.svgReverse && (this.svg.scale.y *= -1), this.svgMirror && (this.svg.scale.x *= -1), this.isSvgDirtyLocation = true, this.calcSvgPosition(t);
  }
  onViewChange() {
    if (!this.fixedSize) return false;
    if (this.imagePath.length > 0) return this.setNeedUpdateDisplay(false), true;
    let t = this.getMxObject();
    if (null == t) return false;
    if (this.svg) {
      this.calcSvgBoxSize(this.svg);
      let [e2, n2] = this.calcVewSize(t);
      this.svgBoxSize && (this.svg.scale.x = e2 / this.svgBoxSize.x, this.svg.scale.y = n2 / this.svgBoxSize.y), this.svg.scale.z = this.svg.scale.x, this.svgReverse && (this.svg.scale.y *= -1), this.svgMirror && (this.svg.scale.x *= -1), this.isSvgDirtyLocation = true, this.calcSvgPosition(t);
    }
    let e = this.calcSvgDrawRect(t), n = e.cenpt, r = e.sizew, i = this;
    return this.aryText.forEach((e2) => {
      if (e2._txtObject && t) {
        let o = t.screenCoordLong2Doc(e2.txtHeight);
        if (o > 1e-5) {
          e2._txtAspectRatio <= 0 && (e2._txtAspectRatio = e2._txtObject.scale.x / e2._txtObject.scale.y), e2._txtObject.scale.set(e2._txtAspectRatio * o * 1.5, 1.5 * o, 1), e2.txtPos.x > 0 ? e2._txtObject.position.x = i.svgPos.x + t.screenCoordLong2Doc(e2.txtPos.x) : e2._txtObject.position.x = i.svgPos.x - t.screenCoordLong2Doc(e2.txtPos.x), e2.txtPos.y > 0 ? e2._txtObject.position.y = i.svgPos.y + t.screenCoordLong2Doc(e2.txtPos.y) : e2._txtObject.position.y = i.svgPos.y - t.screenCoordLong2Doc(e2.txtPos.y);
          let s = e2._txtObject.position;
          if (e2._txtObject.updateMatrix(), e2._underLine) {
            const t2 = new THREE.Box3();
            let n2 = e2._txtObject.parent;
            e2._txtObject.parent = null, t2.expandByObject(e2._txtObject), e2._txtObject.parent = n2;
            let r2 = new THREE.Vector3(t2.min.x, t2.min.y + 0.1 * o, 0), i2 = new THREE.Vector3(t2.max.x, t2.min.y + 0.1 * o, 0);
            (a = new THREE.Geometry()).vertices.push(r2, i2), e2._underLine.geometry = a;
          }
          if (e2._connectingLine) {
            let t2 = n.clone().sub(s);
            t2.normalize();
            let i2 = n.clone().sub(t2.clone().multiplyScalar(r)), l = s.clone().add(t2.clone().multiplyScalar(o));
            var a;
            (a = new THREE.Geometry()).vertices.push(i2, l), e2._connectingLine.geometry = a;
          }
        }
      }
    }), true;
  }
};
function drawMxDbPolyline() {
  const t = new MrxDbgUiPrPoint();
  t.setMessage("\n指定第一点:");
  let e, n = new MxDbPolyline();
  t.go((r) => {
    if (0 != r) return;
    let i = t.value();
    e || (e = i.clone());
    let a = i;
    const o = new McEdGetPointWorldDrawObject();
    o.setDraw((t2, e2) => {
      e2.setColor(16711680), e2.drawLine(a, t2), e2.drawCustomEntity(n);
    }), t.setUserDraw(o), t.setMessage("\n指定下一点:");
    let s = 0;
    n.addVertexAt(i), t.goWhile((e2) => {
      if (0 == e2) a = t.value(), n.addVertexAt(a), ++s >= 2 ? (t.setMessage("\n指定下一点:"), t.setKeyWords("[闭合(C)/放弃(U)]")) : s > 0 ? (t.setMessage("\n指定下一点:"), t.setKeyWords("[放弃(U)]")) : (t.setMessage("\n指定第一点:"), t.setKeyWords(""));
      else if (1 == e2) {
        if (t.isKeyWordPicked("C")) return { exit: true };
        t.isKeyWordPicked("U") && console.log("Mx_Line undo....");
      }
    }, () => {
      MxFun.getCurrentDraw().addMxEntity(n);
    });
  });
}
MxDbSVG.cmd = "Mx_ModelFixedSvg", MxDbSVG.draw = drawMxDbSVG, addRegisterMxDbEntity(MxDbSVG);
var MxDbPolyline = class _MxDbPolyline extends MxDbEntity {
  constructor() {
    super(...arguments), this.points = [];
  }
  getTypeName() {
    return "MxDbPolyline";
  }
  worldDraw(t) {
    this.points.length < 2 || t.drawLines(this.points);
  }
  getGripPoints() {
    return this.points;
  }
  moveGripPointsAt(t, e) {
    return !(t >= this.points.length || (this.points[t].add(e), 0));
  }
  create() {
    return new _MxDbPolyline();
  }
  dwgIn(t) {
    this.onDwgIn(t);
    let e = t.points;
    return this.points = [], e.forEach((t2) => {
      this.points.push(new THREE.Vector3(t2.x, t2.y, t2.z));
    }), true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), t.points = this.points, t;
  }
  addVertexAt(t) {
    this.points.push(t);
  }
  numVerts() {
    return this.points.length;
  }
  getPointAt(t) {
    return t < this.points.length ? this.points[t] : null;
  }
  setPointAt(t, e) {
    return t < this.points.length && (this.points[t] = e, true);
  }
};
function drawMxDb2LineAngularDimension() {
  const t = new MrxDbgUiPrPoint(), e = MxFun.getCurrentDraw(), n = new MxDb2LineAngularDimension(), r = new McEdGetPointWorldDrawObject();
  return t.setMessage("\n指定第一点:"), t.go((i) => {
    0 === i && (t.setMessage("\n指定第二个角度点:"), n.point1 = t.value(), r.setDraw((t2, e2) => {
      n.point2 = t2, r.drawLine(n.point1, t2);
    }), t.setUserDraw(r), t.go((i2) => {
      t.setMessage("\n指定最后一个点:"), 0 === i2 && (n.point2 = t.value(), r.setDraw((t2, e2) => {
        n.point3 = t2, r.drawCustomEntity(n);
      }), t.go((t2) => {
        0 === t2 && e.addMxEntity(n);
      }));
    }));
  }), n;
}
MxDbPolyline.cmd = "Mx_Lines", MxDbPolyline.draw = drawMxDbPolyline, addRegisterMxDbEntity(MxDbPolyline);
var propertyDbKeys$6 = ["colors", "point1", "point2", "point3"];
var MxDb2LineAngularDimension = class _MxDb2LineAngularDimension extends MxDbEntity {
  constructor(t) {
    if (super(), this.point1 = new THREE.Vector3(), this.point2 = new THREE.Vector3(), this.point3 = new THREE.Vector3(), this.colors = [], t) {
      const { points: e, colors: n } = t;
      e && this.setPoints(e), n && this.setColor(n);
    }
  }
  calculateLineAngle(t, e, n) {
    const r = 2 * Math.PI / 360;
    return { startAngle: 180 * Math.atan2(e.y - t.y, e.x - t.x) / Math.PI * r, endAngle: 180 * Math.atan2(n.y - t.y, n.x - t.x) / Math.PI * r };
  }
  setPoints(t) {
    const [e, n, r] = t;
    return e && (this.point1 = e), n && (this.point2 = n), r && (this.point3 = r), this;
  }
  setColor(t) {
    return lodash.isArray(t) ? this.colors = t : this.color = t, this;
  }
  worldDraw(t) {
    if (t.getType() == McGiWorldDrawType$1.kWorldDraw || t.getType() == McGiWorldDrawType$1.kDynDragDraw) {
      const [e, n, r, i] = this.colors || [], a = this.getColor(), o = t.getMxObject();
      t.setOpacity(this.opacity), t.setColor(e || a), t.drawLine(this.point1, this.point2), t.setColor(n || a), t.drawLine(this.point2, this.point3);
      const { startAngle: s, endAngle: l } = this.calculateLineAngle(this.point2, this.point1, this.point3), c = this.point2.distanceTo(this.point1), u = this.point2.distanceTo(this.point3), h = Math.min(c, u) / 4;
      let p = THREE.MathUtils.radToDeg(s - l);
      p < 0 && (p += 360);
      let d = o.screenCoordLong2Doc(50);
      const f = new THREE.ArcCurve(this.point2.x, this.point2.y, h, s, l, true), m = new THREE.Geometry().setFromPoints(f.getPoints(50));
      t.setColor(r || a), t.drawGeometryLines(m);
      const g = f.getPoint(0.5);
      let y = new THREE.Vector3(g.x, g.y, 0);
      const v = y.sub(this.point2), x = v.length() + 0.5 * d;
      v.normalize().multiplyScalar(x), y = this.point2.clone().add(v), t.setColor(i || a), t.drawText(p.toFixed(3) + "°", 0.5 * d, 0, y);
    } else t.drawLine(this.point1, this.point2), t.drawLine(this.point3, this.point2);
  }
  getGripPoints() {
    return [this.point1, this.point2, this.point3];
  }
  moveGripPointsAt(t, e) {
    return 0 === t ? this.point1.add(e) : 1 === t ? this.point2.add(e) : 2 === t && this.point3.add(e), true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.dwgInHelp(t, propertyDbKeys$6), true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), this.dwgOutHelp(t, propertyDbKeys$6), t;
  }
  create() {
    return new _MxDb2LineAngularDimension();
  }
  transformBy(t) {
    this.point1.applyMatrix4(t), this.point2.applyMatrix4(t);
  }
  getTypeName() {
    return "MxDb2LineAngularDimension";
  }
};
MxDb2LineAngularDimension.cmd = "Mx_AngleSurveying", MxDb2LineAngularDimension.draw = drawMxDb2LineAngularDimension, addRegisterMxDbEntity(MxDb2LineAngularDimension);
var MxFilters = class _MxFilters {
  constructor() {
    this.uniformObj = {}, this.filtersStr = "", this.filtersTypes = "", this.VSHADER_SOURCE = "\n  varying vec2 v_Uv;\n  void main () {\n      v_Uv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }\n  ", this.FSHADER_SOURCE = `
  varying vec2 v_Uv;
  uniform sampler2D e_Texture;
  uniform mat4 colorMatrix;
  ${this.filtersStr}
  void main () {
    vec4 color = texture2D( e_Texture, v_Uv );
    color = color * colorMatrix;
    ${this.filtersTypes}
    gl_FragColor = color;
  }`, this._matrix = new THREE.Matrix4();
  }
  channel({ r: t = 1, g: e = 1, b: n = 1 }) {
    return this._matrix = new THREE.Matrix4().set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1).multiply(this._matrix), this;
  }
  brightness(t) {
    return this._matrix = new THREE.Matrix4().set(t, 0, 0, 0, 0, t, 0, 0, 0, 0, t, 0, 0, 0, 0, 1).multiply(this._matrix), this;
  }
  saturate(t) {
    const e = 0.2126 * (1 - t), n = 0.7152 * (1 - t), r = 0.0722 * (1 - t);
    return this._matrix = new THREE.Matrix4().set(e + t, n, r, 0, e, n + t, r, 0, e, n, r + t, 0, 0, 0, 0, 1).multiply(this._matrix), this;
  }
  contrast(t) {
    const e = 0.5 * (1 - t);
    return this._matrix = new THREE.Matrix4().set(t, 0, 0, 0, 0, t, 0, 0, 0, 0, t, 0, e, e, e, 1).multiply(this._matrix), this;
  }
  opacity(t) {
    return this._matrix = new THREE.Matrix4().set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, t).multiply(this._matrix), this;
  }
  invert(t) {
    const e = 1 - 2 * t;
    return this._matrix = new THREE.Matrix4().set(e, 0, 0, 0, 0, e, 0, 0, 0, 0, e, 0, t, t, t, 1).multiply(this._matrix), this;
  }
  grayscale(t = 1) {
    const e = 0.2126 * t, n = 0.7152 * t, r = 0.0722 * t;
    return this._matrix = new THREE.Matrix4().set(e + 1 - t, n, r, 0, e, n + 1 - t, r, 0, e, n, r + 1 - t, 0, 0, 0, 0, 1).multiply(this._matrix), this;
  }
  sepia(t = 1) {
    return this._matrix = new THREE.Matrix4().set(1 - 0.607 * t, 0.769 * t, 0.189 * t, 0, 0.349 * t, 1 - 0.314 * t, 0.168 * t, 0, 0.272 * t, 0.534 * t, 1 - 0.869 * t, 0, 0, 0, 0, 1).multiply(this._matrix), this;
  }
  hueRotate(t) {
    const e = t / 180 * Math.PI, n = Math.cos(e), r = Math.sin(e), i = 0.2126, a = 0.7152, o = 0.0722;
    return this._matrix = new THREE.Matrix4().set(i + 0.7874 * n + r * -i, a + n * -a + r * -a, o + n * -o + 0.9278 * r, 0, i + n * -i + 0.143 * r, a + n * (1 - a) + 0.14 * r, o + n * -o + -0.283 * r, 0, i + n * -i + -0.7874 * r, a + n * -a + r * a, o + 0.9278 * n + r * o, 0, 0, 0, 0, 1).multiply(this._matrix), this;
  }
  convolution(t, e = 1 / 9, n = 521) {
    return this.uniformObj = Object.assign(Object.assign({}, this.uniformObj), { cKernel: { value: t.toArray() }, stStep: { value: e }, scaleFactor: { value: n } }), this.filtersTypes.indexOf("convolutionTextureColor") < 0 && (this.filtersStr += "\n        uniform float cKernel[9];\n        uniform float stStep;\n        uniform float scaleFactor;\n        vec4 convolutionTextureColor(vec4 color) {\n            vec2 offsets[9];\n            offsets[0] = vec2(-1.0,-1.0);\n            offsets[1] =  vec2(0.0,-1.0);\n            offsets[2] = vec2(1.0,-1.0);\n            offsets[3] =  vec2(-1.0,0.0);\n            offsets[4] = vec2(0.0,0.0);\n            offsets[5] = vec2(1.0,0.0);\n            offsets[6] =  vec2(-1.0,1.0);\n            offsets[7] = vec2(0.0,1.0);\n            offsets[8] = vec2(1.0,1.0);\n\n            vec4 sum = color;\n            for(int i = 0; i < 9; i++) {\n                sum = sum + cKernel[i] * scaleFactor * texture2D(e_Texture, v_Uv + offsets[i] / stStep);\n            };\n            return sum;\n        }", this.filtersTypes += "color = convolutionTextureColor(color);\n"), this;
  }
  reset() {
    return this.uniformObj = {}, this.filtersStr = "", this.filtersTypes = "", this._matrix = new THREE.Matrix4(), this;
  }
  _getFilterShaderData(t) {
    return { uniforms: Object.assign({ e_Texture: { value: t }, colorMatrix: { value: this._matrix } }, this.uniformObj), vertexShader: this.VSHADER_SOURCE, fragmentShader: this.FSHADER_SOURCE };
  }
  _getFilterColor(t = "#000000", e = 1) {
    t = new THREE.Color(t);
    let { r: n, g: r, b: i } = t;
    const a = this._matrix.toArray();
    a[12], a[13], a[14], a[15];
    const o = a[0] * n + a[1] * n + a[2] * n + a[3] * e, s = a[4] * r + a[5] * r + a[6] * r + a[7] * e, l = a[8] * i + a[9] * i + a[10] * i + a[11] * e;
    return t.setRGB(o, s, l), t;
  }
  toJSON() {
    return JSON.stringify({ matrix: this._matrix.toArray(), uniformObj: this.uniformObj, filtersStr: this.filtersStr, filtersTypes: this.filtersTypes });
  }
  static fromJSON(t) {
    const { matrix: e, uniformObj: n, filtersStr: r, filtersTypes: i } = JSON.parse(t), a = new _MxFilters();
    return a._matrix = new THREE.Matrix4().fromArray(e), a.uniformObj = n, a.filtersStr = r, a.filtersTypes = i, a;
  }
};
var MxDbShape = class extends MxDbEntity {
  constructor() {
    super(...arguments), this.isLoadMaterialFromPath = true, this.stroke = "#fff", this.strokeLineWidth = 2, this.isStrokeDashLine = false, this.isFill = false, this._fillImageSrc = null, this.curveSegments = 50, this.closed = true, this.filter = null, this._cornerRadius = [], this._propertyDbKeys = ["isFill", "stroke", "strokeLineWidth", "isStrokeDashLine", "closed", "cornerRadius", "fillImageSrc", "fillImageParam", "curveSegments"];
  }
  setStroke(t) {
    return this.stroke = t, this;
  }
  setStrokeLineWidth(t) {
    return this.strokeLineWidth = t, this;
  }
  setIsStrokeDashLine(t) {
    return this.isStrokeDashLine = t, this;
  }
  setIsFill(t) {
    return this.isFill = t, this;
  }
  get fillImageSrc() {
    return this._fillImageSrc;
  }
  set fillImageSrc(t) {
    this._fillImageSrc = t, this.isLoadMaterialFromPath = true, this.material = null, this.fillImageSrc && (this.isFill = true), false !== t && null !== t || (this.setNeedUpdateDisplay(), MxFun.updateDisplay());
  }
  setFillImageSrc(t) {
    return this.fillImageSrc = t, this;
  }
  setFillImageParam(t) {
    this.fillImageParam = void 0 === t ? t : Object.assign(this.fillImageParam, t);
  }
  setCurveSegments(t) {
    return this.curveSegments = t, this;
  }
  setClosed(t) {
    return this.closed = t, this;
  }
  getFilter() {
    return this.filter;
  }
  setFilter(t) {
    this.filter = t, this.isLoadMaterialFromPath = true, this.material = null;
  }
  get cornerRadius() {
    return this._cornerRadius;
  }
  set cornerRadius(t) {
    this.setCornerRadius(t);
  }
  setCornerRadius(t, e = true) {
    this._cornerRadius = t instanceof Array ? t.map((t2) => e ? MxFun.screenCoordLong2Doc(t2) : t2) : e ? MxFun.screenCoordLong2Doc(t) : t;
  }
  getTypeName() {
    return "MxDbShape";
  }
  getShapePoints(t) {
    const { curveSegments: e } = this;
    return this.points = t.getPoints(e).map((t2) => t2 instanceof THREE.Vector2 ? new THREE.Vector3(t2.x, t2.y, 0) : t2), this.points;
  }
  createPaths(t) {
    return this._paths = new THREE.CurvePath(), Array.isArray(t) ? t.forEach((t2) => this._paths.add(t2)) : this._paths.add(t), this._paths;
  }
  _draw(t, e) {
    let { isFill: n, closed: r, opacity: i, dLineWidth: a, lineWidthByPixels: o } = this;
    t.setOpacity(i), t.setLineWidthByPixels(o), t.setLineWidth(a);
    const s = t.getColor();
    t.setColor(this.filter ? this.filter._getFilterColor(this.color, this.opacity) : this.color);
    const l = this.getCornerRadiusPoints(r || n ? this.getClosedPoints(e) : e);
    n ? !this.fillImageSrc && t.drawSolid(l) : t.drawLines(l), this._fillImg(t, l), t.setColor(s);
  }
  getCornerRadiusPoints(t) {
    const { cornerRadius: e } = this;
    if (!e) return t;
    const n = "number" == typeof e ? t.map(() => e) : e;
    return n.length > 0 ? getToGenerateRoundedCorners(t, n) : t;
  }
  _drawStoreLine(t, e, n) {
    const { isFill: r, stroke: i, strokeLineWidth: a } = this, o = t.getLineWidth(), s = t.getColor(), l = t.isDashLineDisplay();
    i && r && (t.setDashLineDisplay(this.isStrokeDashLine), t.setColor(i), t.setLineWidth(a), n ? n(t) : t.drawLines(this.getCornerRadiusPoints(this.getClosedPoints(e))), t.setColor(s), t.setLineWidth(o), t.setDashLineDisplay(l));
  }
  getClosedPoints(t) {
    return [...t, t[0]];
  }
  getTotalLength() {
    if (this.points) {
      let t = 0;
      return this.points.reduce((e, n) => (t += e.distanceTo(n), n)), t;
    }
    if (this._paths) return this._paths.getLength() + (this.closedLine ? this.closedLine.getLength() : 0);
  }
  getGetLength() {
    return this._paths.getLength();
  }
  getArea() {
    return this.points ? McGeTool.calcArea(this.closed ? this.getClosedPoints(this.points) : this.points) : 0;
  }
  worldDraw(t) {
    const e = this.createPaths(new THREE.Curve()), n = this.getShapePoints(e);
    this._draw(t, n), this._drawStoreLine(t, n);
  }
  _fillImg(t, e) {
    const n = { transparent: true, depthTest: false, opacity: this.opacity, visible: this.visible };
    if (!this.isFill || !this.fillImageSrc) return;
    if (!this.material) {
      let t2 = this;
      return void MxFun.loadImageMaterial(this.fillImageSrc, (e2) => {
        t2.isLoadMaterialFromPath = false, e2 && (t2.material = e2, t2.setNeedUpdateDisplay(), MxFun.updateDisplay());
      });
    }
    const r = e.map(({ x: t2, y: e2 }) => new THREE.Vector2(t2, e2));
    let i = this.material, a = new THREE.ShapeGeometry(new THREE.Shape(r));
    if (a = repairGeometryFaceVertexUvs(a), this.filter) {
      const t2 = i.map, e2 = this.filter._getFilterShaderData(t2);
      i = new THREE.ShaderMaterial(Object.assign(Object.assign({}, e2), n));
    }
    if (i.depthTest = false, i.transparent = true, i.opacity = this.opacity, i.visible = this.visible, this.fillImageParam) {
      const t2 = this.fillImageParam;
      for (let e2 in this.fillImageParam) this.material.map[e2] = t2[e2];
    }
    let o = new THREE.Mesh(a, i);
    t.drawEntity(o);
  }
  getGripPoints() {
    return [];
  }
  moveGripPointsAt(t, e) {
    return true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.dwgInHelp(t, this._propertyDbKeys), this.isLoadMaterialFromPath = true, this.material = null, t.type === MxType.MxCloneType.kMxFileClone ? t.filter && (this.filter = MxFilters.fromJSON(t.filter)) : t.filter && (this.filter = t.filter), true;
  }
  dwgOut(t) {
    var e;
    return this.onDwgOut(t), this.dwgOutHelp(t, this._propertyDbKeys), t.type === MxType.MxCloneType.kMxFileClone ? this.filter && (t.filter = null === (e = this.filter) || void 0 === e ? void 0 : e.toJSON()) : t.filter = this.filter, t;
  }
  transformBy(t) {
    this.points && this.points.forEach((e) => {
      e.applyMatrix4(t);
    });
  }
};
var MxDbEllipseShape = class extends MxDbShape {
  constructor() {
    super(), this.center = new THREE.Vector3(), this.xRadius = 10, this.yRadius = 10, this.startAngle = 0, this.endAngle = 2 * Math.PI, this.clockwise = false, this.rotation = 0, this.isClosedToCenter = true, this._propertyDbKeys = [...this._propertyDbKeys, "center", "xRadius", "yRadius", "startAngle", "endAngle", "clockwise", "rotation", "isClosedToCenter"];
  }
  getTypeName() {
    return "MxDbEllipseShape";
  }
  setCenter(t) {
    return this.center = t, this;
  }
  setXRadius(t) {
    return this.xRadius = t, this;
  }
  setYRadius(t) {
    return this.yRadius = t, this;
  }
  setStartAngle(t) {
    return this.startAngle = t, this;
  }
  setEndAngle(t) {
    return this.endAngle = t, this;
  }
  setClockwise(t) {
    return this.clockwise = t, this;
  }
  setRotation(t) {
    return this.rotation = t, this;
  }
  setIsClosedToCenter(t) {
    return this.isClosedToCenter = t, this;
  }
  worldDraw(t) {
    this.drawEllipseShape(t);
  }
  drawEllipseShape(t) {
    let { startAngle: e, endAngle: n, clockwise: r } = this;
    const i = this.createEllipseCurve(), a = this.createPaths(i);
    let o, s = this.getShapePoints(a);
    return this._draw(t, s), this._drawStoreLine(t, s), { centralAngle: o = r ? n > e ? THREE.MathUtils.radToDeg(i.aEndAngle - i.aStartAngle) : 360 - Math.abs(THREE.MathUtils.radToDeg(i.aEndAngle - i.aStartAngle)) : e > n ? Math.abs(THREE.MathUtils.radToDeg(i.aEndAngle - i.aStartAngle)) : 360 - THREE.MathUtils.radToDeg(i.aEndAngle - i.aStartAngle), curve: i, points: s };
  }
  createEllipseCurve(t = this.center.x, e = this.center.y, n = this.xRadius, r = this.yRadius, i = this.startAngle, a = this.endAngle, o = this.clockwise, s = this.rotation) {
    return new THREE.EllipseCurve(t, e, n, r, i, a, o, s);
  }
  getCornerRadiusPoints(t) {
    return t;
  }
  getClosedPoints(t) {
    try {
      let e = (this._paths || new THREE.CatmullRomCurve3(t, false, "catmullrom", 0)).getLength();
      this.closedLine = this.getClosedLine(t);
      const n = this.closedLine.getLength();
      let r = this.curveSegments / e, i = 2.5 * (e > this.curveSegments ? n * r : 1);
      if (i > 20 * this.curveSegments && (i = 20 * this.curveSegments), i <= 0) return t;
      const a = this.closedLine.getPoints(i);
      return [...t, ...a];
    } catch (e) {
      return [...t, t[0]];
    }
  }
  getClosedLine(t) {
    const { isClosedToCenter: e, center: n } = this;
    let r = e ? [t[t.length - 1], n, t[0]] : [t[t.length - 1], t[0]];
    return new THREE.CatmullRomCurve3(r, false, "catmullrom", 0.01);
  }
  getGripPoints() {
    return [this.center];
  }
  moveGripPointsAt(t, e) {
    return 0 === t && this.center.add(e), true;
  }
};
addRegisterMxDbEntity(MxDbEllipseShape);
var MxDbCircleShape = class extends MxDbEllipseShape {
  getTypeName() {
    return "MxDbCircleShape";
  }
  get radius() {
    return this.xRadius;
  }
  set radius(t) {
    this.xRadius = t, this.yRadius = t;
  }
  setRadius(t) {
    return this.radius = t, this;
  }
  setXRadius(t) {
    return this.setRadius(t), this;
  }
  setYRadius(t) {
    return this.setRadius(t), this;
  }
};
function drawMx3PointArc() {
  const t = new MrxDbgUiPrPoint(), e = new McEdGetPointWorldDrawObject(), n = new Mx3PointArc();
  t.setUserDraw(e), t.setMessage("\n确定圆弧开始点:"), t.go((r) => {
    r === MrxDbgUiPrBaseReturn$1.kOk && (n.point1 = t.value(), e.setDraw((t2) => {
      e.drawLine(n.point1, t2);
    })), t.setMessage("\n确定圆弧结束点:"), t.go((r2) => {
      r2 === MrxDbgUiPrBaseReturn$1.kOk && (n.point2 = t.value(), e.setDraw((t2) => {
        n.point3 = t2, e.drawCustomEntity(n);
      })), t.setMessage("\n确定圆弧上任意一点:"), t.go((t2) => {
        if (t2 === MrxDbgUiPrBaseReturn$1.kOk) {
          MxFun.getCurrentDraw().addMxEntity(n);
          const { radius: t3, angle: e2, arcLength: r3 } = createThreePointArc(n.point1, n.point2, n.point3, true);
          console.log("半径:", t3), console.log("圆弧弧长:", r3, n.getTotalLength());
        }
      });
    });
  });
}
addRegisterMxDbEntity(MxDbCircleShape);
var Mx3PointArc = class _Mx3PointArc extends MxDbCircleShape {
  constructor() {
    super(), this.point1 = new THREE.Vector3(), this.point2 = new THREE.Vector3(), this.point3 = new THREE.Vector3(), this.autoClockwise = true, this.closed = false, this.centralAngle = 0, this._propertyDbKeys = [...this._propertyDbKeys, "point1", "point2", "point3", "autoClockwise"];
  }
  getTypeName() {
    return "Mx3PointArc";
  }
  create() {
    return new _Mx3PointArc();
  }
  worldDraw(t) {
    this.updateDataInfo();
    const { centralAngle: e } = this.drawEllipseShape(t);
    this.centralAngle = e;
  }
  getGripPoints() {
    return [this.point1, this.point2, this.point3, this.center];
  }
  compute3PointAngle(t = this.point1, e = this.point2, n = this.point3) {
    const r = calculateArcAngle(t, this.center, this.radius), i = calculateArcAngle(e, this.center, this.radius), a = calculateArcAngle(n, this.center, this.radius);
    return [r.angle, i.angle, a.angle];
  }
  upDateCenter(t = this.point1, e = this.point2, n = this.point3) {
    return this.center = calculateArcOrigin(t, e, n), this.center;
  }
  upDateRadius(t = this.point1) {
    return this.radius = calculateRadiusArc(t, this.center), this.radius;
  }
  upDataClockwise(t, e, n) {
    const { autoClockwise: r } = this;
    r && (this.clockwise = judgementArcRenderDirection(e, t, n));
  }
  updateDataInfo() {
    this.upDateCenter(this.point1, this.point2, this.point3), this.upDateRadius(this.point1);
    const [t, e, n] = this.compute3PointAngle();
    this.startAngle = THREE.MathUtils.degToRad(t), this.endAngle = THREE.MathUtils.degToRad(e), this.upDataClockwise(t, e, n);
  }
  getArcMidPoint() {
    const t = MxFun.getMxFunTHREE();
    this.updateDataInfo();
    let { startAngle: e, endAngle: n, center: r, radius: i, clockwise: a } = this;
    a ? e < n && (e += 2 * Math.PI) : e > n && (n += 2 * Math.PI);
    const o = (e + n) / 2, s = r.x + i * Math.cos(o), l = r.y + i * Math.sin(o);
    return new t.Vector3(s, l, 0);
  }
  moveGripPointsAt(t, e) {
    return 0 === t ? this.point1.add(e) : 1 === t ? this.point2.add(e) : 2 === t ? this.point3.add(e) : 3 === t && (this.point1.add(e), this.point2.add(e), this.point3.add(e)), this.upDateCenter(), true;
  }
};
Mx3PointArc.cmd = "Mx_3PointArc", Mx3PointArc.draw = drawMx3PointArc, Mx3PointArc.isRegister = false, addRegisterMxDbEntity(Mx3PointArc);
var drawMx2PointArc = async () => {
  const t = new MrxDbgUiPrPoint(), e = new Mx2PointArc(), n = await t.go();
  if (!n) return;
  e.startPoint = n, t.setUserDraw((t2, n2) => {
    e.endPoint = t2, n2.drawCustomEntity(e);
  });
  const r = await t.go();
  r && (e.endPoint = r, MxFun.getCurrentDraw().addMxEntity(e));
};
var Mx2PointArc = class _Mx2PointArc extends Mx3PointArc {
  getTypeName() {
    return "Mx2PointArc";
  }
  create() {
    return new _Mx2PointArc();
  }
  get startPoint() {
    return this.point1;
  }
  set startPoint(t) {
    this.point1 = t, this.point3.x, this.point1.x, this.point3.y, this.point2.y;
  }
  get endPoint() {
    return this.point2;
  }
  set endPoint(t) {
    this.point2 = t, this.point3 = this.getArcMidPoint();
  }
};
function drawMxDbCoord() {
  const t = new MrxDbgUiPrPoint();
  t.setMessage("\n指定坐标点:"), t.go((e) => {
    if (0 != e) return;
    const n = t.value();
    let r = new MxDbCoord();
    r.point1 = n, r.point2 = n.clone(), t.setBasePt(n), t.setUseBasePt(true), t.setUserDraw((t2, e2) => {
      r.point2 = t2, e2.drawCustomEntity(r);
    }), t.setMessage("\n指定标注点:"), t.go((e2) => {
      0 == e2 ? (r.point2 = t.value(), MxFun.addToCurrentSpace(r)) : console.log(e2);
    });
  });
}
Mx2PointArc.cmd = "Mx_2PointArc", Mx2PointArc.draw = drawMx2PointArc, Mx2PointArc.isRegister = false, addRegisterMxDbEntity(Mx2PointArc);
var MxDbCoord = class _MxDbCoord extends MxDbEntity {
  constructor() {
    super(...arguments), this.point1 = new THREE.Vector3(), this.point2 = new THREE.Vector3();
  }
  worldDraw(t) {
    let e = t.getMxObject();
    t.drawLine(this.point1, this.point2);
    let n = this.point2.clone();
    var r = e.screenCoordLong2Doc(20), i = 6 * r;
    n.x = n.x + i, t.drawLine(this.point2, n);
    var a = new THREE.Vector3(), o = new THREE.Vector3();
    let s = e.docCoord2Cad(this.point1.x, this.point1.y, this.point1.z), l = s.x.toFixed(3), c = s.y.toFixed(3);
    a.x = this.point2.x + 0.3 * r + 0.5 * i, a.y = this.point2.y + 0.1 * r + 0.5 * r, t.drawText(l, r, 0, a), o.x = this.point2.x + 0.3 * r + 0.5 * i, o.y = this.point2.y - 0.1 * r - 0.5 * r, t.drawText(c, r, 0, o);
  }
  getGripPoints() {
    let t = [];
    return t.push(this.point1), t.push(this.point2), t;
  }
  moveGripPointsAt(t, e) {
    return 0 == t ? this.point1.add(e) : 1 == t && this.point2.add(e), true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.point1.copy(t.point1), this.point2.copy(t.point2), true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), t.point1 = this.point1, t.point2 = this.point2, t;
  }
  create() {
    return new _MxDbCoord();
  }
  transformBy(t) {
    this.point1.applyMatrix4(t), this.point2.applyMatrix4(t);
  }
  getTypeName() {
    return "MxDbCoord";
  }
};
async function drawMxDbLine() {
  const t = new MrxDbgUiPrPoint();
  t.setMessage("\n指定第一点:");
  let e = await t.go();
  if (null == e) return;
  t.setBasePt(e.clone()), t.setUseBasePt(true), t.setMessage("\n指定第二点:");
  let n = await t.go();
  if (null == n) return;
  let r = new MxDbLine();
  r.pt1 = e, r.pt2 = n, MxFun.addToCurrentSpace(r);
}
MxDbCoord.cmd = "Mx_Coord", MxDbCoord.draw = drawMxDbCoord, addRegisterMxDbEntity(MxDbCoord);
var MxDbLine = class _MxDbLine extends MxDbEntity {
  constructor() {
    super(...arguments), this.pt1 = new THREE.Vector3(), this.pt2 = new THREE.Vector3();
  }
  getTypeName() {
    return "MxDbLine";
  }
  worldDraw(t) {
    t.drawLine(this.pt1, this.pt2);
  }
  setPoint1(t) {
    this.pt1 = t;
  }
  getPoint1() {
    return this.pt1;
  }
  setPoint2(t) {
    this.pt2 = t;
  }
  getPoint2() {
    return this.pt2;
  }
  getGripPoints() {
    let t = [];
    t.push(this.pt1), t.push(this.pt2);
    let e = new THREE.Vector3(this.pt1.x + 0.5 * (this.pt2.x - this.pt1.x), this.pt1.y + 0.5 * (this.pt2.y - this.pt1.y), 0);
    return t.push(e), t;
  }
  moveGripPointsAt(t, e) {
    return 0 == t ? this.pt1.add(e) : 1 == t ? this.pt2.add(e) : 2 == t && (this.pt1.add(e), this.pt2.add(e)), true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.pt1.copy(t.pt1), this.pt2.copy(t.pt2), true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), t.pt1 = this.pt1, t.pt2 = this.pt2, t;
  }
  create() {
    return new _MxDbLine();
  }
  getGeomExtents() {
    return new THREE.Box3(this.pt1, this.pt2);
  }
  getGetLength() {
    return this.pt1.distanceTo(this.pt2);
  }
};
async function drawMxDbRect() {
  const t = new MrxDbgUiPrPoint();
  t.setMessage("\n指定第一点:");
  let e = await t.go();
  if (!e) return;
  let n = new MxDbRect();
  n.pt1 = e;
  const r = new McEdGetPointWorldDrawObject();
  r.setDraw((t2) => {
    n.pt2 = t2, r.drawCustomEntity(n);
  }), t.setBasePt(e), t.setUseBasePt(true), t.setUserDraw(r), t.setMessage("\n指定第二点:"), await t.go() && (n.pt2 = t.value(), MxFun.getCurrentDraw().addMxEntity(n));
}
MxDbLine.cmd = "Mx_Line", MxDbLine.draw = drawMxDbLine, addRegisterMxDbEntity(MxDbLine);
var MxDbRect = class _MxDbRect extends MxDbEntity {
  constructor() {
    super(...arguments), this.cornerRadius = [], this.pt1 = new THREE.Vector3(), this.pt2 = new THREE.Vector3(), this.isSolidColorFill = false, this.isLoadMaterialFromPath = true, this.material = null;
  }
  worldDraw(t) {
    let e = computeRectPoints(this.pt1, this.pt2);
    if (this.cornerRadius.length > 0 && (e = getToGenerateRoundedCorners(e, this.cornerRadius)), t.getType() != McGiWorldDrawType$1.kWorldDraw) return e.push(e[0]), void t.drawLines(e);
    const n = { transparent: true, depthTest: false, opacity: this.opacity, visible: this.visible };
    if (this.isSolidColorFill) {
      let r;
      e = e.map(({ x: t2, y: e2 }) => new THREE.Vector2(t2, e2)), r = new THREE.ShapeGeometry(new THREE.Shape(e));
      let i = new THREE.MeshBasicMaterial(Object.assign({ color: this.filter ? this.filter._getFilterColor(this.color, this.opacity) : new THREE.Color(this.color) }, n)), a = new THREE.Mesh(r, i);
      t.drawEntity(a);
    } else if (this.fillImageSrc) {
      if (this.material) {
        e = e.map(({ x: t2, y: e2 }) => new THREE.Vector2(t2, e2));
        let r = this.material, i = new THREE.ShapeGeometry(new THREE.Shape(e));
        if (i = repairGeometryFaceVertexUvs(i), this.filter) {
          const t2 = r.map;
          this.fillImageParam && (this.fillImageParam.center && (t2.center = this.fillImageParam.center), this.fillImageParam.offset && (t2.offset = this.fillImageParam.offset), this.fillImageParam.repeat && (t2.repeat = this.fillImageParam.repeat), this.fillImageParam.rotation && (t2.rotation = this.fillImageParam.rotation));
          const e2 = this.filter._getFilterShaderData(t2);
          r = new THREE.ShaderMaterial(Object.assign(Object.assign({}, e2), n));
        }
        r.depthTest = false, r.transparent = true, r.opacity = this.opacity, r.visible = this.visible;
        let a = new THREE.Mesh(i, r);
        t.drawEntity(a);
      } else if (this.fillImageSrc.length > 0 && this.isLoadMaterialFromPath) {
        let t2 = this;
        MxFun.loadImageMaterial(this.fillImageSrc, (e2) => {
          this.isLoadMaterialFromPath = false, e2 && (t2.material = e2, t2.setNeedUpdateDisplay(), MxFun.updateDisplay());
        });
      }
    } else t.drawLines([...e, e[0]]);
  }
  getGripPoints() {
    let t = [];
    t.push(this.pt1);
    const e = new THREE.Line3(this.pt1, this.pt2);
    let n = new THREE.Vector3();
    return e.getCenter(n), t.push(n), t.push(this.pt2), t;
  }
  moveGripPointsAt(t, e) {
    return 0 == t ? this.pt1.add(e) : 1 == t ? (this.pt1.add(e), this.pt2.add(e)) : 2 == t && this.pt2.add(e), true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.pt1.copy(t.pt1), this.pt2.copy(t.pt2), this.isSolidColorFill = t.isSolidColorFill, this.fillImageSrc = t.fillImageSrc, this.fillImageParam = t.fillImageParam, this.cornerRadius = t.cornerRadius, this.filter = t.filter, this.isLoadMaterialFromPath = true, this.material = null, true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), t.pt1 = this.pt1, t.pt2 = this.pt2, t.isSolidColorFill = this.isSolidColorFill, t.fillImageSrc = this.fillImageSrc, t.fillImageParam = this.fillImageParam, t.cornerRadius = this.cornerRadius, t.filter = this.filter, t;
  }
  create() {
    return new _MxDbRect();
  }
  transformBy(t) {
    this.pt1.applyMatrix4(t), this.pt2.applyMatrix4(t);
  }
  setRadius(t, e = true) {
    this.cornerRadius = t instanceof Array ? t.map((t2) => e ? MxFun.screenCoordLong2Doc(t2) : t2) : t > 0 ? e ? [MxFun.screenCoordLong2Doc(t), MxFun.screenCoordLong2Doc(t), MxFun.screenCoordLong2Doc(t), MxFun.screenCoordLong2Doc(t)] : [t, t, t, t] : [];
  }
  getTypeName() {
    return "MxDbRect";
  }
  getFilter() {
    return this.filter;
  }
  setFilter(t) {
    this.filter = t, this.isLoadMaterialFromPath = true, this.material = null;
  }
  setFillImagePath(t) {
    this.fillImageSrc = t, this.isLoadMaterialFromPath = true, this.material = null, this.fillImageSrc && (this.isSolidColorFill = false);
  }
  getFillImagePath() {
    return this.fillImageSrc;
  }
};
function drawMxDbAlignedDimension() {
  let t = new MxDbAlignedDimension();
  const e = new MrxDbgUiPrPoint();
  return e.setMessage("\n指定第一点:"), e.go((n) => {
    if (0 != n) return;
    const r = e.value();
    t.setPoint1(r), t.setColor(65314);
    const i = new McEdGetPointWorldDrawObject();
    i.setDraw((e2) => {
      t.setPoint2(e2), i.drawCustomEntity(t);
    }), e.setBasePt(r), e.setUseBasePt(true), e.setUserDraw(i), e.setMessage("\n指定第二点:"), e.setInputToucheType(MxType.InputToucheType.kGetEnd), e.go((n2) => {
      if (0 != n2) return void console.log(n2);
      const r2 = e.value();
      t.setPoint2(r2), MxFun.getCurrentDraw().addMxEntity(t);
    });
  }), t;
}
MxDbRect.cmd = "Mx_DrawRect", MxDbRect.draw = drawMxDbRect, addRegisterMxDbEntity(MxDbRect);
var propertyDbKeys$5 = ["point1", "point2", "fontColor"];
var MxDbAlignedDimension = class _MxDbAlignedDimension extends MxDbEntity {
  constructor(t) {
    if (super(), this.point1 = new THREE.Vector3(), this.point2 = new THREE.Vector3(), t) {
      const { points: e, fontColor: n } = t;
      e && this.setPoints(e), n && (this.fontColor = n);
    }
  }
  setPoints(t) {
    const [e, n] = t;
    e && (this.point1 = e), n && (this.point2 = n);
  }
  getTypeName() {
    return "MxDbAlignedDimension";
  }
  getDirection(t, e, n) {
    const r = new THREE.Vector3(t.x, t.y, 0), i = new THREE.Vector3(1, 0, 0), a = t.angleTo(i);
    let o = -1;
    (a < 7 * Math.PI / 18 || a > 10 * Math.PI / 18) && e.x > n.x && (o = 1);
    const s = new THREE.Matrix4();
    return s.makeRotationZ(Math.PI / 2 * o), r.applyMatrix4(s), r;
  }
  getDimText() {
    return new THREE.Vector3(this.point1.x - this.point2.x, this.point1.y - this.point2.y, 0).length().toFixed(3);
  }
  worldDraw(t) {
    if (t.setOpacity(this.opacity), t.getType() == McGiWorldDrawType$1.kWorldDraw || t.getType() == McGiWorldDrawType$1.kDynDragDraw) {
      let e = function(t2, n2) {
        Array.isArray(t2) ? t2.forEach((t3) => {
          e(t3, n2);
        }) : t2.opacity = n2;
      };
      const n = this.point1, r = this.point2;
      let i, a, o, s, l, c, u;
      const h = new THREE.Vector3(n.x - r.x, n.y - r.y, 0), p = this.getDirection(h, n, r), d = new THREE.Matrix4();
      d.makeScale(0.01, 0.01, 0.01);
      const f = new THREE.Vector3(p.x, p.y, 0);
      f.applyMatrix4(d);
      const m = new THREE.Vector3(n.x + f.x, n.y + f.y, 0), g = new THREE.Vector3(r.x + f.x, r.y + f.y, 0), y = this.getColor();
      c = MxThreeJS.createPoint(n, y), u = MxThreeJS.createPoint(r, y);
      const v = new THREE.Vector3(p.x, p.y, 0), x = new THREE.Vector3(p.x, p.y, 0);
      d.identity(), d.makeScale(0.2, 0.2, 0), v.applyMatrix4(d), d.identity(), d.makeScale(0.02, 0.02, 0), x.applyMatrix4(d), t.drawLine(m.x + 2 * x.x, m.y + 2 * x.y, g.x + 2 * x.x, g.y + 2 * x.y), i = MxThreeJS.createLine(new THREE.Vector3(m.x + 3 * x.x, m.y + 3 * x.y, 0), new THREE.Vector3(n.x + 0.5 * x.x, n.y + 0.5 * x.y, 0), y), a = MxThreeJS.createLine(new THREE.Vector3(g.x + 3 * x.x, g.y + 3 * x.y, 0), new THREE.Vector3(r.x + 0.5 * x.x, r.y + 0.5 * x.y, 0), y);
      {
        const e2 = new THREE.Vector3(1, 0, 0);
        let i2 = h.angleTo(e2);
        const a2 = new THREE.Vector3(p.x, p.y, 0);
        a2.normalize();
        const s2 = n.distanceTo(r);
        h.y < 0 ? i2 = i2 < Math.PI / 2 ? 2 * Math.PI - i2 : Math.PI - i2 : i2 > Math.PI / 2 && (i2 = Math.PI + i2);
        const l2 = t.getMxObject();
        l2 && (i2 -= l2.getViewAngle());
        const c2 = this.getDimText();
        null != (o = MxThreeJS.creatTextSprite(c2, new THREE.Vector3(g.x + h.x / 2 + a2.x * s2 / 15, g.y + h.y / 2 + a2.y * s2 / 15, 0), 0.07 * s2, i2, this.fontColor || y)) && (o.material.opacity = this.opacity, t.drawEntity(o));
      }
      {
        d.identity(), d.makeScale(0.08, 0.08, 0.08);
        const t2 = new THREE.Matrix4();
        t2.makeRotationZ(17 * Math.PI / 18);
        let e2 = new THREE.Vector3(h.x, h.y, 0);
        e2.applyMatrix4(d), e2.applyMatrix4(t2), t2.identity(), t2.makeRotationZ(17 * -Math.PI / 18);
        let n2 = new THREE.Vector3(h.x, h.y, 0);
        n2.applyMatrix4(d), n2.applyMatrix4(t2);
        const r2 = new Array();
        r2.push(new THREE.Vector3(m.x + 2 * x.x, m.y + 2 * x.y, 0), new THREE.Vector3(m.x + 2 * x.x + e2.x, m.y + e2.y + 2 * x.y, 0), new THREE.Vector3(m.x + 2 * x.x + n2.x, m.y + n2.y + 2 * x.y, 0)), s = MxThreeJS.createTriangle(r2, y), t2.identity(), t2.makeRotationZ(Math.PI / 18), (e2 = new THREE.Vector3(h.x, h.y, 0)).applyMatrix4(d), e2.applyMatrix4(t2), t2.identity(), t2.makeRotationZ(-Math.PI / 18), (n2 = new THREE.Vector3(h.x, h.y, 0)).applyMatrix4(d), n2.applyMatrix4(t2);
        const i2 = new Array();
        i2.push(new THREE.Vector3(g.x + 2 * x.x, g.y + 2 * x.y, 0), new THREE.Vector3(g.x + e2.x + 2 * x.x, g.y + e2.y + 2 * x.y, 0), new THREE.Vector3(g.x + n2.x + 2 * x.x, g.y + n2.y + 2 * x.y, 0)), l = MxThreeJS.createTriangle(i2, y);
      }
      t.drawEntity(i), t.drawEntity(a), s && (e(s.material, this.opacity), t.drawEntity(s)), l && (e(l.material, this.opacity), t.drawEntity(l)), t.drawEntity(c), t.drawEntity(u);
    } else t.drawLine(this.point1, this.point2);
  }
  setPoint1(t) {
    this.point1 = t;
  }
  setPoint2(t) {
    this.point2 = t;
  }
  setColor(t) {
    return lodash.isArray(t) ? ([this.color = this.color, this.fontColor = this.fontColor || this.color] = t, console.log("this.fontColor : ", this.fontColor)) : this.color = t, this;
  }
  getGripPoints() {
    let t = [];
    return t.push(this.point1), t.push(this.point2), t;
  }
  moveGripPointsAt(t, e) {
    return 0 == t ? this.point1.add(e) : (t = 1) && this.point2.add(e), true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.dwgInHelp(t, propertyDbKeys$5), true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), this.dwgOutHelp(t, propertyDbKeys$5), t;
  }
  create() {
    return new _MxDbAlignedDimension();
  }
};
MxDbAlignedDimension.cmd = "Mx_DimensionMeasurement", MxDbAlignedDimension.draw = drawMxDbAlignedDimension, addRegisterMxDbEntity(MxDbAlignedDimension);
var MxDbHatch = class extends MxDbEntity {
  constructor() {
    super(...arguments), this.points = [];
  }
  worldDraw(t) {
    t.getType() === McGiWorldDrawType$1.kWorldDraw ? t.drawSolid(this.points) : t.drawLines([...this.points, this.points[0]]);
  }
  getTypeName() {
    return "MxDbHatch";
  }
  moveGripPointsAt(t, e) {
    return 0 === t ? this.points.forEach((t2) => {
      t2.add(e);
    }) : this.points[t - 1] && this.points[t - 1].add(e), true;
  }
  setPoints(t) {
    this.points = t.map((t2) => t2.clone());
  }
  getGripPoints() {
    if (this.points.length > 0) {
      const { centerPoint: t } = computeBounding(this.points);
      return [t, ...this.points];
    }
    return [];
  }
  dwgIn(t) {
    this.onDwgIn(t);
    const e = t.points;
    return this.points = e.map(({ x: t2, y: e2, z: n }) => new THREE.Vector3(t2, e2, n)), true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), t.points = this.points, t;
  }
};
function drawMxDbArea() {
  const t = new MrxDbgUiPrPoint();
  t.setMessage("\n指定第一点:"), t.go((e) => {
    if (0 != e) return;
    const n = t.value();
    let r = new MxDbArea();
    r.addPoint(n);
    const i = new McEdGetPointWorldDrawObject();
    i.setDraw((t2, e2) => {
      let n2 = r.clone();
      n2.addPoint(t2), i.drawCustomEntity(n2);
    }), t.setUserDraw(i), t.setMessage("\n指定下一点:"), t.goWhile((e2) => {
      if (0 == e2) {
        const e3 = t.value();
        r.addPoint(e3);
      }
    }, (t2) => {
      r.isFill = true, r.fillOpacity = 0.7, r.fillColor = 6697540, MxFun.getCurrentDraw().addMxEntity(r);
    });
  });
}
addRegisterMxDbEntity(MxDbHatch);
var MxDbArea = class _MxDbArea extends MxDbEntity {
  constructor() {
    super(...arguments), this.points = [], this.isFill = false, this.fillColor = 6697540, this.fillOpacity = 0.7;
  }
  getTypeName() {
    return "MxDbArea";
  }
  create() {
    return new _MxDbArea();
  }
  getDimText() {
    return McGeTool.calcArea(this.points).toFixed(2);
  }
  worldDraw(t) {
    if (this.points.length < 3) return void (2 == this.points.length && t.drawLine(this.points[0], this.points[1]));
    let e = this.points[0], n = e.clone(), r = e.clone(), i = this.points.length;
    for (let a2 = 1; a2 < i; a2++) {
      let i2 = this.points[a2];
      n.x > i2.x && (n.x = i2.x), n.y > i2.y && (n.y = i2.y), r.x < i2.x && (r.x = i2.x), r.y < i2.y && (r.y = i2.y), t.drawLine(e, i2), e = i2;
    }
    t.drawLine(e, this.points[0]);
    let a = new THREE.Vector3(n.x + 0.5 * (r.x - n.x), n.y + 0.5 * (r.y - n.y));
    const o = t.getColor();
    let s = MxFun.screenCoordLong2Doc(20), l = MxThreeJS.creatTextSprite(this.getDimText(), a, s, 0, o);
    if (null != l && t.drawEntity(l), t.getType() == McGiWorldDrawType$1.kWorldDraw && this.isFill) {
      t.setColor(this.fillColor), t.setOpacity(this.fillOpacity), t.setRenderOrder(t.getRenderOrder() - 1);
      const e2 = new MxDbHatch();
      e2.points = this.points, e2.worldDraw(t);
    }
  }
  getGripPoints() {
    return this.points;
  }
  moveGripPointsAt(t, e) {
    return !(t >= this.points.length || (this.points[t].add(e), 0));
  }
  dwgIn(t) {
    this.onDwgIn(t);
    let e = t.points;
    return this.points = [], e.forEach((t2) => {
      this.points.push(new THREE.Vector3(t2.x, t2.y, t2.z));
    }), this.dwgInHelp(t, ["isFill", "fillColor", "fillOpacity"]), true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), t.points = this.points, this.dwgOutHelp(t, ["isFill", "fillColor", "fillOpacity"]), t;
  }
  addPoint(t) {
    this.points.push(t.clone());
  }
  getPoints() {
    return this.points;
  }
  clearPoint() {
    this.points = [];
  }
};
async function drawMxDbLeadTag() {
  const t = new MrxDbgUiPrPoint();
  let e = await t.go();
  if (!e) return;
  let n = prompt("请输入文字批注", "批注");
  if (!n) return;
  const r = new MxDbLeadTag();
  r.point = e, r.text = n, MxFun.addToCurrentSpace(r);
}
MxDbArea.cmd = "Mx_Area", MxDbArea.draw = drawMxDbArea, addRegisterMxDbEntity(MxDbArea);
var MxDbLeadTag = class extends MxDbEntity {
  constructor() {
    super(...arguments), this.point = new THREE.Vector3(), this.leadLen = 88, this.text = "", this.textHeight = 24;
  }
  getTypeName() {
    return "MxDbLeadTag";
  }
  createDots(t, e) {
    const { x: n, y: r, z: i } = t, a = new THREE.Shape();
    a.arc(n, r, e.screenCoordLong2Doc(6), 0, 2 * Math.PI, true);
    const o = new THREE.Path();
    o.arc(n, r, e.screenCoordLong2Doc(3), 0, 2 * Math.PI, true), a.holes.push(o);
    const s = new THREE.ShapeGeometry(a), l = new THREE.MeshPhongMaterial({ color: "#ff0000", transparent: true }), c = new THREE.Shape();
    c.arc(n, r, e.screenCoordLong2Doc(3), 0, 2 * Math.PI, true);
    const u = new THREE.ShapeGeometry(c), h = new THREE.MeshPhongMaterial({ color: "#e2da8f", transparent: true }), p = new THREE.Mesh(s, l), d = new THREE.Mesh(u, h);
    return p.add(d), p;
  }
  worldDraw(t) {
    let e = t.getMxObject();
    const n = this.createDots(this.point, e);
    if (t.drawEntity(n), n.geometry.computeBoundingBox(), t.drawSelectLine(n.geometry.boundingBox.max, n.geometry.boundingBox.min), 2 === t.getType()) return;
    let r = t.getMxObject().screenCoordLong2Doc(this.leadLen), i = new THREE.Vector3(this.point.x + 2 * r, this.point.y + r, 0);
    const a = i.x - r, o = new THREE.Vector3(a, i.y, i.z);
    t.setLineWidth(4), t.setColor(16770565), t.drawLines([this.point, o, i]);
    const s = t.getMxObject().screenCoordLong2Doc(this.textHeight), l = i.clone().setX(i.x);
    t.setColor(16744448);
    const c = MxThreeJS.creatTextSprite(this.text, l, s, 0, t.getColor());
    if (c) {
      const e2 = new THREE.Box3(), n2 = new THREE.Vector3();
      e2.expandByObject(c), e2.getSize(n2), c.position.setX(c.position.x + n2.x / 2);
      const r2 = t.getMxObject().screenCoordLong2Doc(5), i2 = e2.min.clone().setX(e2.min.x + n2.x / 2).setY(e2.min.y - r2), a2 = e2.max.clone().setX(e2.max.x + n2.x / 2).setY(e2.min.y + r2);
      a2.setY(e2.max.y + r2);
      const o2 = new THREE.Vector3(i2.x, a2.y), s2 = new THREE.Vector3(a2.x, i2.y);
      t.setColor(16777215), t.setLineWidth(0), t.drawLine(i2, o2), t.drawLine(a2, s2), t.drawLine(i2, s2), t.drawLine(o2, a2);
      const l2 = r2 / 2, u = [], h = [];
      u.push(new THREE.Vector3(o2.x + l2, o2.y - r2, o2.z), new THREE.Vector3(o2.x + l2, o2.y - l2, o2.z), new THREE.Vector3(o2.x + r2, o2.y - l2, o2.z)), h.push(new THREE.Vector3(s2.x - l2, s2.y + r2, s2.z), new THREE.Vector3(s2.x - l2, s2.y + l2, s2.z), new THREE.Vector3(s2.x - r2, s2.y + l2, s2.z)), t.drawLines(u), t.drawLines(h), t.setOpacity(0.5), t.setColor(6697540), t.setRenderOrder(-100), t.drawSolid([i2, o2, a2, s2]), t.setRenderOrder(100), t.drawEntity(c);
    }
  }
  getGripPoints() {
    return [this.point];
  }
  onViewChange() {
    return this.setNeedUpdateDisplay(), true;
  }
  moveGripPointsAt(t, e) {
    return 0 === t && this.point.add(e), true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.dwgInHelp(t, ["point", "text", "textHeight", "leadLen"]), true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), this.dwgOutHelp(t, ["point", "text", "textHeight", "leadLen"]), t;
  }
};
function drawMxDbAnyLine() {
  const t = new MrxDbgUiPrPoint(), e = MxFun.getCurrentDraw(), n = new McEdGetPointWorldDrawObject(), r = new MxDbAnyLine();
  t.setUserDraw(n), t.setMessage("\n点击开始画线:"), t.go((i) => {
    i === MrxDbgUiPrBaseReturn$1.kOk && (r.points.push(t.value()), n.setDraw((t2) => {
      r.points.push(t2.clone()), n.drawCustomEntity(r);
    })), t.setMessage("\n再次点击结束画线:"), t.go((t2) => {
      t2 === MrxDbgUiPrBaseReturn$1.kOk && e.addMxEntity(r);
    });
  });
}
MxDbLeadTag.cmd = "Mx_LeadTag", MxDbLeadTag.draw = drawMxDbLeadTag, addRegisterMxDbEntity(MxDbLeadTag);
var propertyDbKeys$4 = ["points"];
var MxDbAnyLine = class _MxDbAnyLine extends MxDbEntity {
  constructor() {
    super(...arguments), this.points = [];
  }
  getTypeName() {
    return "MxDbAnyLine";
  }
  create() {
    return new _MxDbAnyLine();
  }
  worldDraw(t) {
    let e = t.getMxObject();
    const n = new THREE.Box3().setFromPoints(this.points);
    let r = new THREE.Vector3();
    if (n.getCenter(r), t.drawLines(this.points), t.getType() === McGiWorldDrawType$1.kSelectDraw) {
      const i = new THREE.Vector3();
      n.getSize(i), i.addScalar(e.screenCoordLong2Doc(20));
      const a = i.x / 2, o = i.y / 2, s = { x: r.x - a, y: r.y - o }, l = { x: r.x + a, y: r.y - o }, c = { x: r.x + a, y: r.y + o }, u = { x: r.x - a, y: r.y + o };
      t.drawLine(l.x, l.y, c.x, c.y), t.drawLine(s.x, s.y, l.x, l.y), t.drawLine(c.x, c.y, u.x, u.y), t.drawLine(u.x, u.y, s.x, s.y);
    }
  }
  setPoints(t) {
    return this.points = t, this;
  }
  getCenter() {
    const t = new THREE.Geometry();
    t.vertices = this.points;
    const e = new THREE.Vector3();
    return t.computeBoundingBox(), t.boundingBox.getCenter(e), e;
  }
  getGripPoints() {
    return [this.getCenter()];
  }
  moveGripPointsAt(t, e) {
    return 0 === t && this.points.forEach((t2) => {
      t2.add(e);
    }), true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.dwgInHelp(t, propertyDbKeys$4), true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), this.dwgOutHelp(t, propertyDbKeys$4), t;
  }
};
function drawMxDbCloudLine() {
  const t = new MrxDbgUiPrPoint(), e = MxFun.getCurrentDraw(), n = new McEdGetPointWorldDrawObject();
  t.setMessage("\n点击开启绘制云线:"), t.go(() => {
    const r = MxFun.screenCoordLong2Doc(16);
    let i = t.value();
    const a = new MxDbCloudLine();
    a.setRadius(r), a.addPoint(i), n.setDraw((t2) => {
      i.distanceTo(t2) > r && (i = t2.clone(), a.addPoint(t2, true)), n.drawCustomEntity(a);
    }), t.setUserDraw(n), t.setMessage("\n再次点击结束绘制云线:"), t.go(() => {
      e.addMxEntity(a);
    });
  });
}
MxDbAnyLine.cmd = "Mx_AnyLine", MxDbAnyLine.draw = drawMxDbAnyLine, addRegisterMxDbEntity(MxDbAnyLine);
var propertyDbKeys$3 = ["points", "radius"];
var MxDbCloudLine = class _MxDbCloudLine extends MxDbEntity {
  constructor() {
    super(), this.points = [], this.radius = 16, this.cachePoint = null, this.use_smallcoord_display = true;
  }
  getTypeName() {
    return "MxDbCloudLine";
  }
  create() {
    return new _MxDbCloudLine();
  }
  setRadius(t) {
    this.radius = t;
  }
  getRadius() {
    return this.radius;
  }
  getCachePoint() {
    return this.cachePoint;
  }
  clacNewArcDiameterPoint(t) {
    if (0 == this.points.length) return t;
    let e = this.points[this.points.length - 1];
    const n = 2 * this.radius, r = e.distanceTo(t);
    if (r < n) return null;
    const i = n * (t.x - e.x) / r + e.x, a = n * (t.y - e.y) / r + e.y;
    return new THREE.Vector3(i, a, e.z);
  }
  createCloudArcCurvePoints(t, e, n) {
    const r = new THREE.Vector3((t.x + e.x) / 2, (t.y + e.y) / 2, 0);
    n || (n = r.distanceTo(t));
    const { startAngle: i, endAngle: a } = function(t2, e2, n2) {
      const r2 = 2 * Math.PI / 360;
      return { startAngle: 180 * Math.atan2(e2.y - t2.y, e2.x - t2.x) / Math.PI * r2, endAngle: 180 * Math.atan2(n2.y - t2.y, n2.x - t2.x) / Math.PI * r2 };
    }(r, t, e);
    return new THREE.ArcCurve(r.x, r.y, n, i, a, true).getPoints(10);
  }
  addPoint(t, e) {
    let n = this.clacNewArcDiameterPoint(t);
    n && (this.points.push(n), this.cachePoint = null, e && (this.cachePoint = this.reCalculateDrawGeometryPoint()));
  }
  addLine(t, e) {
    this.addPoint(t);
    const n = 2 * this.radius;
    let r = this.points[this.points.length - 1], i = r.distanceTo(e);
    const a = Math.round(i / n);
    for (let t2 = 0; t2 < a; t2++) {
      i = r.distanceTo(e);
      const t3 = n * (e.x - r.x) / i + r.x, a2 = n * (e.y - r.y) / i + r.y;
      let o = new THREE.Vector3(t3, a2, e.z);
      this.addPoint(o), r = o;
    }
    return this.addPoint(e), this.points[this.points.length - 1];
  }
  reCalculateDrawGeometryPoint() {
    if (this.points.length < 2) return null;
    let t = this.points[0], e = this.points.length, n = [];
    for (let r = 1; r < e; r++) {
      let e2 = this.points[r];
      this.createCloudArcCurvePoints(t, e2).forEach((t2) => {
        n.push(new THREE.Vector3(t2.x, t2.y, 0));
      }), t = e2;
    }
    return n;
  }
  worldDraw(t) {
    if (this.cachePoint || (this.cachePoint = this.reCalculateDrawGeometryPoint()), !this.cachePoint) return;
    let e = t.getMxObject();
    if (t.getType() === McGiWorldDrawType$1.kSelectDraw) {
      let n = new THREE.Geometry();
      this.cachePoint.forEach((t2) => {
        n.vertices.push(new THREE.Vector3(t2.x, t2.y, 0));
      }), n.computeBoundingBox();
      const r = new THREE.Vector3();
      n.boundingBox.getSize(r);
      let i = new THREE.Vector3();
      n.boundingBox.getCenter(i);
      const a = r.x / 2, o = r.y / 2, s = { x: i.x - a, y: i.y - o }, l = { x: i.x + a, y: i.y - o }, c = { x: i.x + a, y: i.y + o }, u = { x: i.x - a, y: i.y + o };
      t.drawLine(this.toSmallcoord2(e, s.x, s.y), this.toSmallcoord2(e, l.x, l.y)), t.drawLine(this.toSmallcoord2(e, l.x, l.y), this.toSmallcoord2(e, c.x, c.y)), t.drawLine(this.toSmallcoord2(e, c.x, c.y), this.toSmallcoord2(e, u.x, u.y)), t.drawLine(this.toSmallcoord2(e, u.x, u.y), this.toSmallcoord2(e, s.x, s.y));
    } else {
      let n = [];
      this.cachePoint.forEach((t2) => {
        n.push(this.toSmallcoord(e, t2));
      }), t.drawLines(n);
    }
  }
  getCenter() {
    const t = new THREE.Geometry();
    t.vertices = this.points;
    let e = new THREE.Vector3();
    return t.computeBoundingBox(), t.boundingBox.getCenter(e), e;
  }
  getGripPoints() {
    return [this.getCenter()];
  }
  moveGripPointsAt(t, e) {
    return this.points.forEach((t2) => {
      t2.add(e);
    }), this.cachePoint = null, true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.dwgInHelp(t, propertyDbKeys$3), this.cachePoint = null, true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), this.dwgOutHelp(t, propertyDbKeys$3), t.type === MxType.MxCloneType.kSaveDwgClone && this.dwgOutHelp(t, ["cachePoint"]), t;
  }
};
function drawMxDbRegularPolygon() {
  const t = new MrxDbgUiPrPoint(), e = MxFun.getCurrentDraw(), n = new McEdGetPointWorldDrawObject(), r = new MxDbRegularPolygon();
  t.setMessage("\n点击开始绘制多边形:"), t.go(() => {
    let i = prompt("请输入多边形的边数", "8");
    i && (r.sidesNumber = Number(i), r.centerPoint = t.value(), t.setUserDraw(n), n.setDraw((t2) => {
      r.otherPoint = t2, n.drawCustomEntity(r);
    }), t.setMessage("\n再次点击结束绘制多边形:"), t.go(() => {
      e.addMxEntity(r);
    }));
  });
}
MxDbCloudLine.isRegister = false, MxDbCloudLine.cmd = "Mx_CloudLine", MxDbCloudLine.draw = drawMxDbCloudLine, addRegisterMxDbEntity(MxDbCloudLine);
var MxDbRegularPolygon = class extends MxDbShape {
  getTypeName() {
    return "MxDbRegularPolygon";
  }
  constructor() {
    super(), this.centerPoint = new THREE.Vector3(), this.otherPoint = new THREE.Vector3(), this.sidesNumber = 5, this._propertyDbKeys = [...this._propertyDbKeys, "centerPoint", "otherPoint", "sidesNumber"];
  }
  worldDraw(t) {
    const e = computeRegularPolygonVertices(this.centerPoint, this.otherPoint, this.sidesNumber);
    this.closed = false, e.push(e[0]), this._draw(t, e), this._drawStoreLine(t, e);
  }
  getGripPoints() {
    return [this.centerPoint, this.otherPoint];
  }
  moveGripPointsAt(t, e) {
    return 0 === t ? (this.centerPoint.add(e), this.otherPoint.add(e)) : 1 === t && this.otherPoint.add(e), true;
  }
};
function drawMxDbLeadComment() {
  const t = new MrxDbgUiPrPoint();
  t.setMessage("\n指定第一点:"), t.go((e) => {
    if (0 != e) return;
    const n = t.value();
    let r = new MxDbLeadComment();
    r.point1 = n.clone(), r.textHeight = MxFun.screenCoordLong2Doc(50);
    let i = prompt("请输入文字批注", "批注");
    if (!i) return;
    r.text = i, r.textWidth = MxFun.screenCoordLong2Doc(10 * i.length), r.fixedSize = true, r.fixedSize && (r.textHeight = 50, r.textWidth = 50 * i.length);
    const a = new McEdGetPointWorldDrawObject();
    a.setDraw((t2, e2) => {
      r.point2 = t2, e2.drawCustomEntity(r);
    }), t.setBasePt(n), t.setUseBasePt(true), t.setUserDraw(a), t.setMessage("\n指定第二点:"), t.go((e2) => {
      if (0 != e2) return void console.log(e2);
      const n2 = t.value();
      r.point2 = n2, MxFun.addToCurrentSpace(r);
    });
  });
}
MxDbRegularPolygon.cmd = "Mx_RegularPolygon", MxDbRegularPolygon.draw = drawMxDbRegularPolygon, addRegisterMxDbEntity(MxDbRegularPolygon);
var MxDbLeadComment = class _MxDbLeadComment extends MxDbEntity {
  constructor() {
    super(), this.point1 = new THREE.Vector3(), this.point2 = new THREE.Vector3(), this.text = "", this.textHeight = 20, this.textWidth = 0, this.fixedSize = false, this.use_smallcoord_display = true;
  }
  getTypeName() {
    return "MxDbLeadComment";
  }
  create() {
    return new _MxDbLeadComment();
  }
  worldDraw(t) {
    let e = t.getMxObject(), n = this.toSmallcoord(e, this.point1), r = this.toSmallcoord(e, this.point2);
    if (t.drawLine(n, r), this.text.length > 0) {
      const n2 = new THREE.Vector3();
      let i = this.textHeight, a = this.textWidth;
      this.fixedSize && (i = e.screenCoordLong2Doc(i), a = e.screenCoordLong2Doc(a));
      let o = MxThreeJS.clacTextSpriteSize(this.text, i, a);
      n2.x = r.x + 0.5 * o.textwidth, n2.y = r.y + 0.5 * o.allTextHeight, t.drawText(this.text, i, 0, n2, a);
      const s = new THREE.Vector3();
      s.x = r.x + o.textwidth, s.y = r.y, t.drawLine(s, r);
    }
  }
  getGripPoints() {
    let t = [];
    return t.push(this.point1), t.push(this.point2), t;
  }
  moveGripPointsAt(t, e) {
    return 0 == t ? this.point1.add(e) : 1 == t && this.point2.add(e), true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.point1.copy(t.point1), this.point2.copy(t.point2), this.text = t.text.substr(0), this.textHeight = t.textHeight, t.textWidth && (this.textWidth = t.textWidth), this.fixedSize = t.fixedSize, true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), t.point1 = this.point1, t.point2 = this.point2, t.textHeight = this.textHeight, t.text = this.text, t.textWidth = this.textWidth, t.fixedSize = this.fixedSize, t;
  }
  onViewChange() {
    return !!this.fixedSize && (this.setNeedUpdateDisplay(false), true);
  }
};
function drawMxDbRectBoxLeadComment() {
  const t = new MrxDbgUiPrPoint(), e = MxFun.getCurrentDraw(), n = new McEdGetPointWorldDrawObject(), r = new MxDbRectBoxLeadComment();
  r.setLineWidth(3), r.setLineWidthByPixels(true), t.setMessage("\n云线框起始点:"), t.go((i) => {
    r.radius = MxFun.screenCoordLong2Doc(8), i == MrxDbgUiPrBaseReturn$1.kOk && (r.point1 = t.value(), n.setDraw((t2) => {
      r.point2 = t2, n.drawCustomEntity(r);
    }), t.setUserDraw(n), t.setMessage("\n云线框结束点:"), t.go((i2) => {
      if (i2 != MrxDbgUiPrBaseReturn$1.kOk) return;
      r.point2 = t.value(), n.setDraw((t2) => {
        r.point3 = t2, n.drawCustomEntity(r);
      });
      let a = prompt("请输入文字批注", "批注");
      a || (a = "默认批注文字"), r.text = a, r.textWidth = MxFun.screenCoordLong2Doc(10 * a.length), r.textHeight = MxFun.screenCoordLong2Doc(5 * a.length), r.fixedSize = true, r.fixedSize && (r.textHeight = 20, r.textWidth = 20 * a.length), t.setMessage("\n审图标注点:"), t.go((n2) => {
        n2 == MrxDbgUiPrBaseReturn$1.kOk && (r.point3 = t.value(), e.addMxEntity(r));
      });
    }));
  });
}
MxDbLeadComment.cmd = "Mx_Comment", MxDbLeadComment.draw = drawMxDbLeadComment, addRegisterMxDbEntity(MxDbLeadComment);
var MxDbRectBoxLeadComment = class _MxDbRectBoxLeadComment extends MxDbEntity {
  constructor() {
    super(), this.point1 = new THREE.Vector3(), this.point2 = new THREE.Vector3(), this.point3 = new THREE.Vector3(), this.text = "", this.textHeight = 20, this.radius = 16, this.textWidth = 0, this.fixedSize = false, this.use_smallcoord_display = true;
  }
  getTypeName() {
    return "MxDbRectBoxLeadComment";
  }
  create() {
    return new _MxDbRectBoxLeadComment();
  }
  getCloudLine() {
    let t = new MxDbCloudLine();
    t.setRadius(this.radius);
    let e = this.point1.clone(), n = this.point2.clone();
    if (e.x > n.x) {
      let t2 = e.x;
      e.x = n.x, n.x = t2;
    }
    if (e.y > n.y) {
      let t2 = e.y;
      e.y = n.y, n.y = t2;
    }
    let r = new THREE.Vector3(e.x, n.y, e.z);
    r = t.addLine(e, r), n = new THREE.Vector3(n.x, r.y, n.z), n = t.addLine(r, n);
    let i = new THREE.Vector3(n.x, e.y, e.z);
    i = t.addLine(n, i);
    let a = e = t.addLine(i, e), o = e.distanceTo(this.point3);
    return o > r.distanceTo(this.point3) && (a = r, o = r.distanceTo(this.point3)), o > n.distanceTo(this.point3) && (a = n, o = n.distanceTo(this.point3)), o > i.distanceTo(this.point3) && (a = i, o = i.distanceTo(this.point3)), { cloudLine: t, pt1: e, pt2: r, pt3: n, pt4: i, leadPt: a };
  }
  worldDraw(t) {
    let e = this.getCloudLine(), n = e.cloudLine;
    if (n.setUseSmallcoordDisplay(this.use_smallcoord_display), n.worldDraw(t), this.text.length > 0) {
      let n2 = e.leadPt, r = new MxDbLeadComment();
      r.setUseSmallcoordDisplay(this.use_smallcoord_display), r.point1 = n2, r.point2 = this.point3, r.text = this.text, r.textHeight = this.textHeight, r.textWidth = this.textWidth, r.fixedSize = this.fixedSize, r.worldDraw(t);
    }
  }
  getGripPoints() {
    let t = [];
    return t.push(this.point1), t.push(this.point2), t.push(this.point3), t;
  }
  moveGripPointsAt(t, e) {
    return 0 == t ? this.point1.add(e) : 1 == t ? this.point2.add(e) : 2 == t && this.point3.add(e), true;
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.point1.copy(t.point1), this.point2.copy(t.point2), this.point3.copy(t.point3), this.text = t.text.substr(0), this.textHeight = t.textHeight, this.radius = t.radius, t.textWidth && (this.textWidth = t.textWidth), this.fixedSize = t.fixedSize, true;
  }
  dwgOut(t) {
    if (this.onDwgOut(t), t.point1 = this.point1, t.point2 = this.point2, t.point3 = this.point3, t.textHeight = this.textHeight, t.text = this.text, t.radius = this.radius, t.textWidth = this.textWidth, t.fixedSize = this.fixedSize, t.type === MxType.MxCloneType.kSaveDwgClone) {
      let e = this.getCloudLine(), n = e.cloudLine.reCalculateDrawGeometryPoint();
      t.cachePoint = n || [], t.leadPt = e.leadPt;
    }
    return t;
  }
  onViewChange() {
    return !!this.fixedSize && (this.setNeedUpdateDisplay(false), true);
  }
};
function drawMxDbEllipse() {
  const t = new MrxDbgUiPrPoint(), e = MxFun.getCurrentDraw(), n = new McEdGetPointWorldDrawObject(), r = new MxDbEllipse();
  t.setMessage("\n点击开始绘制椭圆:"), t.go(() => {
    r.point1 = t.value(), n.setDraw((t2) => {
      r.point2 = t2, n.drawCustomEntity(r);
    }), t.setUserDraw(n), t.setMessage("\n再次点击结束绘制椭圆:"), t.go(() => {
      e.addMxEntity(r);
    });
  });
}
MxDbRectBoxLeadComment.cmd = "Mx_CheckDraw", MxDbRectBoxLeadComment.draw = drawMxDbRectBoxLeadComment, addRegisterMxDbEntity(MxDbRectBoxLeadComment);
var MxDbEllipse = class _MxDbEllipse extends MxDbEllipseShape {
  constructor() {
    super(), this.point1 = new THREE.Vector3(), this.point2 = new THREE.Vector3(), this.isClosedToCenter = false, this.closed = false, this._propertyDbKeys = [...this._propertyDbKeys, "point1", "point2"];
  }
  getTypeName() {
    return "MxDbEllipse";
  }
  create() {
    return new _MxDbEllipse();
  }
  setPoint1(t) {
    return this.point1 = t, this;
  }
  setPoint2(t) {
    return this.point2 = t, this;
  }
  worldDraw(t) {
    const { point1: e, point2: n } = this, r = e.clone().set(n.x, e.y, n.z), i = n.clone().set(e.x, n.y, e.z);
    this.xRadius = e.distanceTo(r) / 2, this.yRadius = e.distanceTo(i) / 2;
    const a = e.x > n.x, o = e.y > n.y, s = a ? e.x - this.xRadius : e.x + this.xRadius, l = o ? e.y - this.yRadius : e.y + this.yRadius;
    this.center = new THREE.Vector3(s, l, 0), this.drawEllipseShape(t), t.getType() === McGiWorldDrawType$1.kSelectDraw && t.drawLines([e, new THREE.Vector3(e.x, n.y), n, new THREE.Vector3(n.x, e.y), e]);
  }
  getGripPoints() {
    let t = new THREE.Vector3(0.5 * (this.point2.x + this.point1.x), 0.5 * (this.point2.y + this.point1.y), 0);
    return [this.point1, this.point2, t];
  }
  moveGripPointsAt(t, e) {
    return 0 === t ? this.point1.add(e) : 1 === t ? this.point2.add(e) : 2 === t && (this.point1.add(e), this.point2.add(e)), true;
  }
};
async function drawMxDbText() {
  const t = new MrxDbgUiPrPoint();
  t.setMessage("\n 点取文字插入点:");
  let e = await t.go();
  if (null == e) return;
  let n = prompt("请输入文字");
  if (!n) return;
  let r = new MxDbText();
  r.position = e, r.height = MxFun.screenCoordLong2Doc(50), r.text = n, MxFun.addToCurrentSpace(r);
}
var _SpriteText;
function getSpriteTextColor(t) {
  return t ? t instanceof THREE.Color ? t.getStyle() : "number" == typeof t ? new THREE.Color(t).getStyle() : t : "#fff";
}
function toCSSFont(t, e, n, r, i) {
  let a = document.createElement("span");
  return a.style.font = "1px serif", a.style.fontFamily = t, a.style.fontSize = `${e}px`, a.style.fontStyle = n, a.style.fontVariant = r, a.style.fontWeight = i, a.style.font;
}
function getSpriteTextClass() {
  if (!_SpriteText) {
    class t extends THREE.Sprite {
      constructor(t2) {
        super(new THREE.SpriteMaterial());
        const { text: e, textHeight: n, color: r, backgroundColor: i, padding: a, borderWidth: o, borderRadius: s, borderColor: l, strokeWidth: c, strokeColor: u, fontFace: h, fontSize: p, fontWeight: d, textAlign: f, textShadowBlur: m, textShadowColor: g, textShadowOffsetX: y, textShadowOffsetY: v, angle: x, scale: w, underline: b, fontStyle: M, fontVariant: _ } = t2 || {};
        this._text = `${e}`, this._textHeight = n || 10, this._color = r, this._backgroundColor = i, this._padding = a || 0, this._borderWidth = o || 0, this._borderRadius = s || 0, this._borderColor = l || "white", this._strokeWidth = c || 0, this._strokeColor = u || "white", this._fontFace = h || "Arial", this._fontSize = p || 90, this._fontWeight = (null == d ? void 0 : d.toString()) || "normal", this._textAlign = f || "start", this._fontStyle = M || "normal", this._fontVariant = _ || "normal", this._textShadowBlur = m || 0, this._textShadowColor = g, this._textShadowOffsetX = y || 0, this._textShadowOffsetY = v || 0, this._angle = x || 0, this._textScale = w || 1, this._underline = b || false, this._canvas = document.createElement("canvas"), this._genCanvas();
      }
      get text() {
        return this._text;
      }
      set text(t2) {
        this._text = t2, this._genCanvas();
      }
      get textHeight() {
        return this._textHeight;
      }
      set textHeight(t2) {
        this._textHeight = t2, this._genCanvas();
      }
      get color() {
        return this._color;
      }
      set color(t2) {
        this._color = t2, this._genCanvas();
      }
      get backgroundColor() {
        return this._backgroundColor;
      }
      set backgroundColor(t2) {
        this._backgroundColor = t2, this._genCanvas();
      }
      get padding() {
        return this._padding;
      }
      set padding(t2) {
        this._padding = t2, this._genCanvas();
      }
      get borderWidth() {
        return this._borderWidth;
      }
      set borderWidth(t2) {
        this._borderWidth = t2, this._genCanvas();
      }
      get borderRadius() {
        return this._borderRadius;
      }
      set borderRadius(t2) {
        this._borderRadius = t2, this._genCanvas();
      }
      get borderColor() {
        return this._borderColor;
      }
      set borderColor(t2) {
        this._borderColor = t2, this._genCanvas();
      }
      get fontFace() {
        return this._fontFace;
      }
      set fontFace(t2) {
        this._fontFace = t2, this._genCanvas();
      }
      get fontSize() {
        return this._fontSize;
      }
      set fontSize(t2) {
        this._fontSize = t2, this._genCanvas();
      }
      get fontWeight() {
        return this._fontWeight;
      }
      set fontWeight(t2) {
        this._fontWeight = t2, this._genCanvas();
      }
      get strokeWidth() {
        return this._strokeWidth;
      }
      set strokeWidth(t2) {
        this._strokeWidth = t2, this._genCanvas();
      }
      get strokeColor() {
        return this._strokeColor;
      }
      set strokeColor(t2) {
        this._strokeColor = t2, this._genCanvas();
      }
      get textAlign() {
        return this._textAlign;
      }
      set textAlign(t2) {
        this._textAlign = t2, this._genCanvas();
      }
      get textShadowBlur() {
        return this._textShadowBlur;
      }
      set textShadowBlur(t2) {
        this._textShadowBlur = t2, this._genCanvas();
      }
      get textShadowColor() {
        return this._textShadowColor;
      }
      set textShadowColor(t2) {
        this._textShadowColor = t2, this._genCanvas();
      }
      get textShadowOffsetX() {
        return this._textShadowOffsetX;
      }
      set textShadowOffsetX(t2) {
        this._textShadowOffsetX = t2, this._genCanvas();
      }
      get textShadowOffsetY() {
        return this._textShadowOffsetY;
      }
      set textShadowOffsetY(t2) {
        this._textShadowOffsetY = t2, this._genCanvas();
      }
      get angle() {
        return this._angle;
      }
      set angle(t2) {
        this._angle = t2, this._genCanvas();
      }
      get textScale() {
        return this._textScale;
      }
      set textScale(t2) {
        this._textScale = t2, this._genCanvas();
      }
      get underline() {
        return this._underline;
      }
      set underline(t2) {
        this._underline = t2, this._genCanvas();
      }
      get fontStyle() {
        return this._fontStyle;
      }
      set fontStyle(t2) {
        this._fontStyle = t2, this._genCanvas();
      }
      get fontVariant() {
        return this._fontVariant;
      }
      set fontVariant(t2) {
        this._fontVariant = t2, this._genCanvas();
      }
      _genCanvas() {
        const t2 = this._canvas, e = t2.getContext("2d"), n = Array.isArray(this.borderWidth) ? this.borderWidth : [this.borderWidth, this.borderWidth], r = n.map((t3) => t3 * this.fontSize * 0.1), i = (Array.isArray(this.borderRadius) ? this.borderRadius : [this.borderRadius, this.borderRadius, this.borderRadius, this.borderRadius]).map((t3) => t3 * this.fontSize * 0.1), a = Array.isArray(this.padding) ? this.padding : [this.padding, this.padding], o = a.map((t3) => t3 * this.fontSize * 0.1), s = this.text.split("\n"), l = this.font;
        e.font = l;
        const c = Math.max(...s.map((t3) => e.measureText(t3).width)), u = 4 * this.strokeWidth + (this.underline ? this.fontSize / 15 * 4 : this.fontSize / 15), h = (this.fontSize + u) * s.length;
        if (t2.width = c + 2 * r[0] + 2 * o[0], t2.height = h + 2 * r[1] + 2 * o[1], this.borderWidth) {
          if (e.strokeStyle = getSpriteTextColor(this.borderColor), r[0]) {
            const n2 = r[0] / 2;
            e.lineWidth = r[0], e.beginPath(), e.moveTo(n2, i[0]), e.lineTo(n2, t2.height - i[3]), e.moveTo(t2.width - n2, i[1]), e.lineTo(t2.width - n2, t2.height - i[2]), e.stroke();
          }
          if (r[1]) {
            const n2 = r[1] / 2;
            e.lineWidth = r[1], e.beginPath(), e.moveTo(Math.max(r[0], i[0]), n2), e.lineTo(t2.width - Math.max(r[0], i[1]), n2), e.moveTo(Math.max(r[0], i[3]), t2.height - n2), e.lineTo(t2.width - Math.max(r[0], i[2]), t2.height - n2), e.stroke();
          }
          if (this.borderRadius) {
            const n2 = Math.max(...r), a2 = n2 / 2;
            e.lineWidth = n2, e.beginPath(), [!!i[0] && [i[0], a2, a2, i[0]], !!i[1] && [t2.width - i[1], t2.width - a2, a2, i[1]], !!i[2] && [t2.width - i[2], t2.width - a2, t2.height - a2, t2.height - i[2]], !!i[3] && [i[3], a2, t2.height - a2, t2.height - i[3]]].filter((t3) => t3).forEach((t3) => {
              const [n3, r2, i2, a3] = t3;
              e.moveTo(n3, i2), e.quadraticCurveTo(r2, i2, r2, a3);
            }), e.stroke();
          }
        }
        this.backgroundColor && (e.fillStyle = getSpriteTextColor(this.backgroundColor), this.borderRadius ? (e.beginPath(), e.moveTo(r[0], i[0]), [[r[0], i[0], t2.width - i[1], r[1], r[1], r[1]], [t2.width - r[0], t2.width - r[0], t2.width - r[0], r[1], i[1], t2.height - i[2]], [t2.width - r[0], t2.width - i[2], i[3], t2.height - r[1], t2.height - r[1], t2.height - r[1]], [r[0], r[0], r[0], t2.height - r[1], t2.height - i[3], i[0]]].forEach(([t3, n2, r2, i2, a2, o2]) => {
          e.quadraticCurveTo(t3, i2, n2, a2), e.lineTo(r2, o2);
        }), e.closePath(), e.fill()) : e.fillRect(r[0], r[1], t2.width - 2 * r[0], t2.height - 2 * r[1])), e.translate(r[0], r[1]), e.translate(o[0], o[1]), e.font = l, e.fillStyle = getSpriteTextColor(this.color), e.textBaseline = "bottom", e.shadowBlur = this.textShadowBlur, e.shadowColor = new THREE.Color(this.textShadowColor).getStyle(), e.shadowOffsetX = this.textShadowOffsetX, e.shadowOffsetY = this.textShadowOffsetY;
        const p = this.strokeWidth > 0;
        p && (e.lineWidth = this.strokeWidth * this.fontSize / 10, e.strokeStyle = getSpriteTextColor(this.strokeColor));
        const d = "center" === this.textAlign, f = "start" === this.textAlign || "left" === this.textAlign;
        s.forEach(async (n2, r2) => {
          let i2 = d ? 2 : 1;
          const a2 = e.measureText(n2).width, o2 = f ? 0 : (c - a2) / i2, s2 = (r2 + 1) * (this.fontSize + u);
          p && e.strokeText(n2, o2, s2), e.fillText(n2, o2, s2), this.underline && e.fillRect(o2, t2.height - this.fontSize / 25, a2, this.fontSize / 25);
        }), this.material.map && this.material.map.dispose();
        const m = this.material.map = new THREE.Texture(t2);
        m.minFilter = THREE.LinearFilter, m.needsUpdate = true;
        const g = this.textHeight * s.length + 2 * n[1] + 2 * a[1], y = g * t2.width / t2.height;
        this.scale.set(y, g, this.scale.z), this.material.rotation = this.angle, this.scale.applyMatrix4(new THREE.Matrix4().makeScale(this.textScale, this.textScale, 1));
      }
      clone() {
        return new (0, this.constructor)(this.text, this.textHeight, this.color).copy(THREE.Sprite.prototype.clone.call(this));
      }
      copy(t2) {
        return THREE.Sprite.prototype.copy.call(this, t2), this.color = t2.color, this.backgroundColor = t2.backgroundColor, this.padding = t2.padding, this.borderWidth = t2.borderWidth, this.borderColor = t2.borderColor, this.fontFace = t2.fontFace, this.fontSize = t2.fontSize, this.fontWeight = t2.fontWeight, this.strokeWidth = t2.strokeWidth, this.strokeColor = t2.strokeColor, this.textAlign = t2.textAlign, this.textShadowBlur = t2.textShadowBlur, this.textShadowColor = t2.textShadowColor, this.textShadowOffsetX = t2.textShadowOffsetX, this.textShadowOffsetY = t2.textShadowOffsetY, this.angle = t2.angle, this.textScale = t2.textScale, this;
      }
      get font() {
        return toCSSFont(this.fontFace, this.fontSize, this.fontStyle, this.fontVariant, this.fontWeight);
      }
      checkFontFace() {
        try {
          const { fontFace: t2 } = this;
          return document.fonts.check(t2);
        } catch (t2) {
        }
        return true;
      }
      async loadFontFace() {
        try {
          const { fontFace: t2 } = this;
          await document.fonts.load(t2);
        } catch (t2) {
        }
      }
      dispose() {
        var t2;
        null === (t2 = this.material.map) || void 0 === t2 || t2.dispose(), this.material.dispose(), this.geometry.dispose(), this.dispatchEvent({ type: "dispose" });
      }
    }
    _SpriteText = t;
  }
  return _SpriteText;
}
MxDbEllipse.cmd = "Mx_Ellipse", MxDbEllipse.draw = drawMxDbEllipse, addRegisterMxDbEntity(MxDbEllipse);
var propertyDbKeys$2 = ["text", "position", "height", "backgroundColor", "padding", "borderWidth", "borderRadius", "borderColor", "fontFace", "fontSize", "fontWeight", "strokeWidth", "strokeColor", "angle", "textAlign", "textShadowBlur", "textShadowColor", "textShadowOffsetX", "textShadowOffsetY", "scale", "underline"];
var MxDbText = class _MxDbText extends MxDbEntity {
  constructor() {
    super(...arguments), this.position = new THREE.Vector3(), this._text = "", this._height = 16, this._angle = 0, this._scale = 1, this._underline = false;
  }
  setPosition(t) {
    return this.position = t, this;
  }
  get text() {
    return this.spriteText ? this.spriteText.text : this._text;
  }
  set text(t) {
    this.spriteText ? this.spriteText.text = t : this._text = t;
  }
  setText(t) {
    return this.text = t, this;
  }
  get height() {
    return this.spriteText ? this.spriteText.textHeight : this._height;
  }
  set height(t) {
    this.spriteText ? this.spriteText.textHeight = t : this._height = t;
  }
  setHeight(t) {
    return this.height = t, this;
  }
  get backgroundColor() {
    return this.spriteText ? this.spriteText.backgroundColor : this._backgroundColor;
  }
  set backgroundColor(t) {
    this.spriteText ? this.spriteText.backgroundColor = t : this._backgroundColor = t;
  }
  setBackgroundColor(t) {
    return this.backgroundColor = t, this;
  }
  get padding() {
    return this.spriteText ? this.spriteText.padding : this._padding;
  }
  set padding(t) {
    this.spriteText ? this.spriteText.padding = t : this._padding = t;
  }
  setPadding(t) {
    return this.padding = t, this;
  }
  get borderWidth() {
    return this.spriteText ? this.spriteText.borderWidth : this._borderWidth;
  }
  set borderWidth(t) {
    this.spriteText ? this.spriteText.borderWidth = t : this._borderWidth = t;
  }
  setBorderWidth(t) {
    return this.borderWidth = t, this;
  }
  get borderRadius() {
    return this.spriteText ? this.spriteText.borderRadius : this._borderRadius;
  }
  set borderRadius(t) {
    this.spriteText ? this.spriteText.borderRadius = t : this._borderRadius = t;
  }
  setBorderRadius(t) {
    return this.borderRadius = t, this;
  }
  get borderColor() {
    return this.spriteText ? this.spriteText.borderColor : this._borderColor;
  }
  set borderColor(t) {
    this.spriteText ? this.spriteText.borderColor = t : this._borderColor = t;
  }
  setBorderColor(t) {
    return this.borderColor = t, this;
  }
  get fontFace() {
    return this.spriteText ? this.spriteText.fontFace : this._fontFace;
  }
  set fontFace(t) {
    this.spriteText ? this.spriteText.fontFace = t : this._fontFace = t;
  }
  setFontFace(t) {
    return this.fontFace = t, this;
  }
  get fontSize() {
    return this.spriteText ? this.spriteText.fontSize : this._fontSize;
  }
  set fontSize(t) {
    this.spriteText ? this.spriteText.fontSize = t : this._fontSize = t;
  }
  setFontSize(t) {
    return this.fontSize = t, this;
  }
  get fontWeight() {
    return this.spriteText ? this.spriteText.fontWeight : this._fontWeight;
  }
  set fontWeight(t) {
    this.spriteText ? this.spriteText.fontWeight = t : this._fontWeight = t;
  }
  setFontWeight(t) {
    return this.fontWeight = t, this;
  }
  get strokeWidth() {
    return this.spriteText ? this.spriteText.strokeWidth : this._strokeWidth;
  }
  set strokeWidth(t) {
    this.spriteText ? this.spriteText.strokeWidth = t : this._strokeWidth = t;
  }
  setStrokeWidth(t) {
    return this.strokeWidth = t, this;
  }
  get strokeColor() {
    return this.spriteText ? this.spriteText.strokeColor : this._strokeColor;
  }
  set strokeColor(t) {
    this.spriteText ? this.spriteText.strokeColor = t : this._strokeColor = t;
  }
  setStrokeColor(t) {
    return this.strokeColor = t, this;
  }
  get textAlign() {
    return this.spriteText ? this.spriteText.textAlign : this._textAlign;
  }
  set textAlign(t) {
    this.spriteText ? this.spriteText.textAlign = t : this._textAlign = t;
  }
  setTextAlign(t) {
    return this.textAlign = t, this;
  }
  get textShadowBlur() {
    return this.spriteText ? this.spriteText.textShadowBlur : this._textShadowBlur;
  }
  set textShadowBlur(t) {
    this.spriteText ? this.spriteText.textShadowBlur = t : this._textShadowBlur = t;
  }
  setTextShadowBlur(t) {
    return this.textShadowBlur = t, this;
  }
  get textShadowColor() {
    return this.spriteText ? this.spriteText.textShadowColor : this._textShadowColor;
  }
  set textShadowColor(t) {
    this.spriteText ? this.spriteText.textShadowColor = t : this._textShadowColor = t;
  }
  setTextShadowColor(t) {
    return this.textShadowColor = t, this;
  }
  get textShadowOffsetX() {
    return this.spriteText ? this.spriteText.textShadowOffsetX : this._textShadowOffsetX;
  }
  set textShadowOffsetX(t) {
    this.spriteText ? this.spriteText.textShadowOffsetX = t : this._textShadowOffsetX = t;
  }
  setTextShadowOffsetX(t) {
    return this.textShadowOffsetX = t, this;
  }
  get textShadowOffsetY() {
    return this.spriteText ? this.spriteText.textShadowOffsetY : this._textShadowOffsetY;
  }
  set textShadowOffsetY(t) {
    this.spriteText ? this.spriteText.textShadowOffsetY = t : this._textShadowOffsetY = t;
  }
  setTextShadowOffsetY(t) {
    return this.textShadowOffsetY = t, this;
  }
  get angle() {
    return this.spriteText ? this.spriteText.angle : this._angle;
  }
  set angle(t) {
    this.spriteText ? this.spriteText.angle = t : this._angle = t;
  }
  setAngle(t) {
    return this.angle = t, this;
  }
  get scale() {
    return this.spriteText ? this.spriteText.textScale : this._scale;
  }
  set scale(t) {
    this.spriteText ? this.spriteText.textScale = t : this._scale = t;
  }
  setScale(t) {
    return this.scale = t, this;
  }
  get underline() {
    return this.spriteText ? this.spriteText.underline : this._underline;
  }
  set underline(t) {
    this.spriteText ? this.spriteText.underline = t : this._underline = t;
  }
  setUnderline(t) {
    this.underline = t;
  }
  getTypeName() {
    return "MxDbText";
  }
  worldDraw(t) {
    if (this.text.length > 0) {
      t.getType() !== McGiWorldDrawType$1.kWorldDraw || this.spriteText || this.createSpriteText(), this.color !== this.spriteText.color && (this.spriteText.color = this.color), this.spriteText.material.setValues({ opacity: this.opacity, visible: this.visible });
      const { x: e, y: n, z: r } = this.position;
      this.spriteText.position.set(e, n, r), t.drawEntity(this.spriteText);
    }
  }
  createSpriteText() {
    const t = getSpriteTextClass(), { text: e, height: n, color: r, backgroundColor: i, padding: a, borderWidth: o, borderRadius: s, borderColor: l, strokeWidth: c, strokeColor: u, fontFace: h, fontSize: p, fontWeight: d, textAlign: f, textShadowBlur: m, textShadowColor: g, textShadowOffsetX: y, textShadowOffsetY: v, angle: x, scale: w, underline: b } = this;
    this.spriteText = new t({ text: e, textHeight: n, color: r, backgroundColor: i, padding: a, borderWidth: o, borderRadius: s, borderColor: l, strokeWidth: c, strokeColor: u, fontFace: h, fontSize: p, fontWeight: d, textAlign: f, textShadowBlur: m, textShadowColor: g, textShadowOffsetX: y, textShadowOffsetY: v, angle: x, scale: w, underline: b });
  }
  getGripPoints() {
    return [this.position];
  }
  moveGripPointsAt(t, e) {
    return 0 === t && this.position.add(e), true;
  }
  create() {
    return new _MxDbText();
  }
  dwgIn(t) {
    var e, n;
    return this.onDwgIn(t), this.dwgInHelp(t, propertyDbKeys$2), "string" == typeof t.path && (t.path = JSON.parse(t.path)), "Curve.toJSON" === (null === (n = null === (e = null == t ? void 0 : t.path) || void 0 === e ? void 0 : e.metadata) || void 0 === n ? void 0 : n.generator) && (t.path = new THREE.Path().fromJSON(t.path)), t.type === MxType.MxCloneType.kMxFileClone || t.type === MxType.MxCloneType.kSaveDwgClone ? this.createSpriteText() : this.spriteText = t.spriteText, true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), this.dwgOutHelp(t, propertyDbKeys$2), t.type === MxType.MxCloneType.kMxFileClone || t.type === MxType.MxCloneType.kSaveDwgClone ? t.spriteText = void 0 : t.spriteText = this.spriteText, t;
  }
  getGeomExtents() {
    return new THREE.Box3().expandByObject(this.spriteText);
  }
  erase() {
    return super.erase(), this.spriteText && this.spriteText.dispose(), true;
  }
};
function createCurvePath(t = false) {
  const e = new THREE.CurvePath();
  return e.autoClose = t, e;
}
function createQuadraticBezierCurve3(t) {
  let e = 0, n = [];
  for (let r = 0; r < t.length; r++) {
    const r2 = t[e], i = t[++e] || r2, a = t[++e] || i;
    if (!r2 || !i || !a) break;
    n.push(new THREE.QuadraticBezierCurve3(r2, i, a));
  }
  return n;
}
function createCubicBezierCurve3(t) {
  let e = 0, n = [];
  for (let r = 0; r < t.length; r++) {
    const r2 = t[e], i = t[++e] || r2, a = t[++e] || i, o = t[++e] || a;
    if (!(r2 && i && a && o)) break;
    n.push(new THREE.CubicBezierCurve3(r2, i, a, o));
  }
  return n;
}
function getCurveColorGradientData(t, e) {
  let n = 0, r = [], i = [];
  const a = Number((1 / e.length).toFixed(2));
  let o = new THREE.Color(e[n]), s = new THREE.Color(e[n + 1]);
  for (let l = 0, c = t.length; l < c; l++) {
    const c2 = t[l], u = l / t.length;
    u / n >= a && (n++, s.set(new THREE.Color(e[n] || e[--n]))), r.push(c2.x, c2.y, c2.z || 0), o.lerpHSL(s, u), i.push(o.r, o.g, o.b);
  }
  return [r, i];
}
function getColorGradientData(t, e) {
  let n = [], r = [];
  for (let i = 0, a = t.length; i < a; i++) {
    const a2 = t[i];
    n.push(a2.x, a2.y, a2.z || 0);
    const o = new THREE.Color(e[i]);
    r.push(o.r, o.g, o.b);
  }
  return [n, r];
}
MxDbText.cmd = "Mx_Text", MxDbText.draw = drawMxDbText, addRegisterMxDbEntity(MxDbText);
var propertyDbKeys$1 = ["points", "colors", "linecap", "linejoin", "closed", "curveType", "tension", "bezierType"];
var MxDbGradientLine = class _MxDbGradientLine extends MxDbEntity {
  constructor() {
    super(...arguments), this.linecap = "round", this.linejoin = "round", this.closed = false, this.curveType = "centripetal", this.tension = 0, this.bezierType = "quadratic";
  }
  create() {
    return new _MxDbGradientLine();
  }
  getTypeName() {
    return "MxDbGradientLine";
  }
  setPoints(t) {
    return this.points = t, this;
  }
  setColors(t) {
    return this.colors = t, this;
  }
  addColor(t) {
    return this.colors.push(t), this;
  }
  setLinecap(t) {
    this.linecap = t;
  }
  setClosed(t) {
    this.closed = t;
  }
  setCurveType(t) {
    this.curveType = t;
  }
  setTension(t) {
    this.tension = t;
  }
  setBezierType(t) {
    this.bezierType = t;
  }
  worldDraw(t) {
    const e = t.getType();
    let n = this.getPoints();
    const { closed: r, curveType: i, tension: a, bezierType: o } = this, s = new THREE.BufferGeometry();
    let l = [], c = [];
    const u = "cubic" === o, h = "quadratic" === o;
    0 !== a ? this.curve = new THREE.CatmullRomCurve3(n, r, i, a) : o ? (this.curve = createCurvePath(r), u ? this.curve.curves = createCubicBezierCurve3(n) : h ? this.curve.curves = createQuadraticBezierCurve3(n) : this.curve = void 0) : this.curve = void 0, this.curve && (n = this.curve.getPoints(50));
    const { linecap: p, linejoin: d } = this;
    let f;
    if (this.colors && this.colors.length > 1) {
      const t2 = r ? [...this.colors, this.colors[0]] : this.colors;
      [l, c] = this.curve ? getCurveColorGradientData(n, t2) : getColorGradientData(n, t2), s.setAttribute("position", new THREE.Float32BufferAttribute(l, 3)), s.setAttribute("color", new THREE.Float32BufferAttribute(c, 3)), f = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors, linecap: p, linejoin: d });
    } else s.setFromPoints(n), f = new THREE.LineBasicMaterial({ color: this.color, linecap: p, linejoin: d });
    const m = r ? new THREE.LineLoop(s, f) : new THREE.Line(s, f);
    if (t.drawEntity(m), (e === McGiWorldDrawType$1.kSelectDraw || e === McGiWorldDrawType$1.kDynDragDraw) && this.curve) {
      let e2 = this.getPoints();
      const n2 = t.getLineWidth();
      t.setLineWidth(1), t.drawLines(e2), t.setLineWidth(n2);
    }
  }
  getGripPoints() {
    return this.getPoints();
  }
  getPoints() {
    return this.closed ? [...this.points, this.points[0]] : this.points;
  }
  moveGripPointsAt(t, e) {
    return this.move(t, e), true;
  }
  move(t, e) {
    return this.points[t].add(e), this;
  }
  dwgIn(t) {
    return this.dwgInHelp(t, propertyDbKeys$1), this.curve = t.curve, true;
  }
  dwgOut(t) {
    return this.dwgOutHelp(t, propertyDbKeys$1), t.curve = this.curve, t;
  }
};
function drawMxDbEllipseArc() {
  const t = new MrxDbgUiPrPoint(), e = MxFun.getCurrentDraw(), n = new McEdGetPointWorldDrawObject();
  let r = new MxDbEllipseArc();
  t.setUserDraw(n), t.go(async () => {
    r.center = t.value(), n.setDraw((t2, e2) => {
      r.startPoint = t2, r.yRadius = r.center.distanceTo(t2), e2.drawCustomEntity(r);
    }), r.startPoint = await t.go() || new THREE.Vector3(), n.setDraw((t2, e2) => {
      r.endPoint = t2, e2.drawCustomEntity(r);
    }), r.endPoint = await t.go() || new THREE.Vector3(), e.addMxEntity(r);
  });
}
addRegisterMxDbEntity(MxDbGradientLine);
var MxDbEllipseArc = class extends MxDbEllipseShape {
  getTypeName() {
    return "MxDbEllipseArc";
  }
  constructor() {
    super(), this._propertyDbKeys = [...this._propertyDbKeys, "startPoint", "endPoint"];
  }
  setStartPoint(t) {
    return this.startPoint = t, this;
  }
  setEndPoint(t) {
    return this.endPoint = t, this;
  }
  worldDraw(t) {
    let { center: e, startPoint: n, endPoint: r } = this;
    n && (this.xRadius = e.distanceTo(n), this.startAngle = THREE.MathUtils.degToRad(calculateArcAngle(n, e, this.xRadius).angle)), r && (this.yRadius = e.distanceTo(r), this.endAngle = THREE.MathUtils.degToRad(calculateArcAngle(r, e, this.yRadius).angle)), this.drawEllipseShape(t);
  }
  getGripPoints() {
    return [this.center, this.startPoint, this.endPoint];
  }
  moveGripPointsAt(t, e) {
    return 0 === t && (this.center.add(e), this.startPoint.add(e), this.endPoint.add(e)), 1 === t && this.startPoint.add(e), 2 === t && this.endPoint.add(e), true;
  }
};
function drawMxDbCircleArc() {
  const t = new MrxDbgUiPrPoint(), e = MxFun.getCurrentDraw(), n = new McEdGetPointWorldDrawObject();
  let r = new MxDbCircleArc();
  r.stroke = "#ff0000", t.setUserDraw(n), t.setMessage("\n确定圆弧中点:"), t.go(async () => {
    r.center = t.value(), n.setDraw((t2) => {
      n.drawLine(r.center, t2);
    }), t.setMessage("\n确定圆弧开始点:"), r.startPoint = await t.go() || new THREE.Vector3(), n.setDraw((t2) => {
      r.endPoint = t2, n.drawCustomEntity(r);
    }), t.setMessage("\n确定圆弧结束点:"), r.endPoint = await t.go() || new THREE.Vector3(), n.setDraw(() => {
    }), e.addMxEntity(r);
  });
}
MxDbEllipseArc.cmd = "Mx_MxDbEllipseArc", MxDbEllipseArc.draw = drawMxDbEllipseArc, addRegisterMxDbEntity(MxDbEllipseArc);
var MxDbCircleArc = class extends MxDbCircleShape {
  constructor() {
    super(), this._propertyDbKeys = [...this._propertyDbKeys, "startPoint", "endPoint"];
  }
  getTypeName() {
    return "MxDbCircleArc";
  }
  setStartPoint(t) {
    return this.startPoint = t, this;
  }
  setEndPoint(t) {
    return this.endPoint = t, this;
  }
  worldDraw(t) {
    console.log(1111);
    let { startPoint: e, endPoint: n } = this;
    if (e && (this.startAngle = this.computePointAngle(e)), n && (this.endAngle = this.computePointAngle(n)), e && n) {
      const { points: e2 } = this.drawEllipseShape(t);
      this.startPoint = e2[0];
    }
  }
  computePointAngle(t) {
    return this.radius = this.center.distanceTo(t), THREE.MathUtils.degToRad(calculateArcAngle(t, this.center, this.radius).angle);
  }
  getGripPoints() {
    return [this.center, this.startPoint, this.endPoint];
  }
  moveGripPointsAt(t, e) {
    return 0 === t ? (this.center.add(e), this.startPoint.add(e), this.endPoint.add(e)) : 1 === t ? this.startPoint.add(e) : 2 === t && this.endPoint.add(e), true;
  }
};
MxDbCircleArc.cmd = "Mx_MxDbCircleArc", MxDbCircleArc.draw = drawMxDbCircleArc, addRegisterMxDbEntity(MxDbCircleArc);
var MxDbArcShape = class extends MxDbCircleArc {
  constructor() {
    super(), this.center = new THREE.Vector3(), this.innerRadius = 10, this.outerRadius = 20, this._propertyDbKeys = [...this._propertyDbKeys, "center", "innerRadius", "outerRadius"];
  }
  getTypeName() {
    return "MxDbArcShape";
  }
  worldDraw(t) {
    t.getType() === McGiWorldDrawType$1.kDynDragDraw ? (t.drawCircle(this.center, this.innerRadius), t.drawCircle(this.center, this.outerRadius)) : this.drawArcShape(t);
  }
  drawArcShape(t) {
    const { center: e, startAngle: n, endAngle: r, clockwise: i } = this, { x: a, y: o } = e;
    this.isClosedToCenter = false;
    const s = this.createEllipseCurve(a, o, this.innerRadius, this.innerRadius, n, r, i), l = this.createEllipseCurve(a, o, this.outerRadius, this.outerRadius, r, n, !i), c = this.createPaths([s, l]);
    let u = this.getShapePoints(c);
    this._draw(t, u), this._drawStoreLine(t, u);
  }
  getGripPoints() {
    return [this.center];
  }
  moveGripPointsAt(t, e) {
    return 0 === t && this.center.add(e), true;
  }
};
function drawMxDbArcShape() {
  const t = new MrxDbgUiPrPoint(), e = MxFun.getCurrentDraw(), n = new McEdGetPointWorldDrawObject();
  let r = new MxDbArcShapeDraw();
  t.setMessage("\n确定圆弧中点:"), t.setUserDraw(n), t.go(async () => {
    t.setMessage("\n确定圆弧开始点:"), r.center = t.value(), n.setDraw((t2) => {
      r.interRadiusPoint = t2, n.drawCircle(r.center, t2.distanceTo(r.center));
    }), r.interRadiusPoint = await t.go() || new THREE.Vector3(), n.setDraw((t2) => {
      r.outerRadiusPoint = t2, n.drawCustomEntity(r);
    }), r.outerRadiusPoint = await t.go() || new THREE.Vector3(), e.addMxEntity(r);
  });
}
var MxDbArcShapeDraw = class extends MxDbArcShape {
  getTypeName() {
    return "MxDbArcShapeDraw";
  }
  constructor() {
    super(), this.outerRadiusPoint = new THREE.Vector3(), this.interRadiusPoint = new THREE.Vector3(), this._propertyDbKeys = [...this._propertyDbKeys, "interRadiusPoint", "outerRadiusPoint"];
  }
  worldDraw(t) {
    this.innerRadius = this.center.distanceTo(this.interRadiusPoint), this.outerRadius = this.center.distanceTo(this.outerRadiusPoint), this.startAngle = THREE.MathUtils.degToRad(calculateArcAngle(this.interRadiusPoint, this.center, this.innerRadius).angle), this.endAngle = THREE.MathUtils.degToRad(calculateArcAngle(this.outerRadiusPoint, this.center, this.outerRadius).angle), this.drawArcShape(t);
  }
  getGripPoints() {
    return [this.center, this.interRadiusPoint, this.outerRadiusPoint];
  }
  moveGripPointsAt(t, e) {
    return 0 === t && (this.center.add(e), this.interRadiusPoint.add(e), this.outerRadiusPoint.add(e)), 1 === t && this.interRadiusPoint.add(e), 2 === t && this.outerRadiusPoint.add(e), true;
  }
};
function drawMxDbRingShape() {
  const t = new MrxDbgUiPrPoint(), e = MxFun.getCurrentDraw(), n = new McEdGetPointWorldDrawObject();
  t.setUserDraw(n);
  const r = new McEdGetPointWorldDrawObject(), i = new MxDbRingShapeDraw();
  t.setUserDraw(r), t.setMessage("\n确定圆弧开始点:"), t.go(async (n2) => {
    console.log(123), i.center = t.value(), r.setDraw((t2) => {
      r.drawCircle(i.center, i.center.distanceTo(t2));
    }), i.innerPoint = await t.go() || new THREE.Vector3(), r.setDraw((t2) => {
      i.outerPoint = t2, r.drawCustomEntity(i);
    }), i.outerPoint = await t.go() || new THREE.Vector3(), e.addMxEntity(i);
  });
}
MxDbArcShapeDraw.isRegister = false, MxDbArcShapeDraw.cmd = "Mx_MxDbArcShape", MxDbArcShapeDraw.draw = drawMxDbArcShape, addRegisterMxDbEntity(MxDbArcShapeDraw);
var MxDbRingShape = class extends MxDbArcShape {
  getTypeName() {
    return "MxDbRingShape";
  }
  worldDraw(t) {
    const { center: e, startAngle: n, endAngle: r, clockwise: i } = this, { x: a, y: o } = e;
    this.isClosedToCenter = false;
    const s = this.createEllipseCurve(a, o, this.innerRadius, this.innerRadius, n, r, i), l = this.createEllipseCurve(a, o, this.outerRadius, this.outerRadius, n, r, !i), c = this.createPaths([s, l]);
    let u = this.getShapePoints(c);
    const h = this.createPaths(s);
    let p = this.getShapePoints(h);
    const d = this.createPaths(l);
    let f = this.getShapePoints(d);
    this.isFill ? (this._draw(t, u), this._drawStoreLine(t, p), this._drawStoreLine(t, f)) : (this._draw(t, p), this._drawStoreLine(t, p), this._draw(t, f), this._drawStoreLine(t, f));
  }
};
MxDbRingShape.isRegister = false, MxDbRingShape.cmd = "Mx_MxDbRingShape", MxDbRingShape.draw = drawMxDbRingShape;
var MxDbRingShapeDraw = class extends MxDbRingShape {
  constructor() {
    super(), this.innerPoint = new THREE.Vector3(), this.outerPoint = new THREE.Vector3(), this._propertyDbKeys = [...this._propertyDbKeys, "innerPoint", "outerPoint"];
  }
  getGripPoints() {
    return [this.center, this.innerPoint, this.outerPoint];
  }
  moveGripPointsAt(t, e) {
    return 0 === t && (this.center.add(e), this.innerPoint.add(e), this.outerPoint.add(e)), 1 === t && this.innerPoint.add(e), 2 === t && this.outerPoint.add(e), true;
  }
  worldDraw(t) {
    this.innerPoint && (this.innerRadius = this.center.distanceTo(this.innerPoint)), this.outerPoint && (this.outerRadius = this.center.distanceTo(this.outerPoint)), super.worldDraw(t);
  }
};
function drawMxDbStarShape() {
  const t = new MrxDbgUiPrPoint(), e = MxFun.getCurrentDraw(), n = new McEdGetPointWorldDrawObject();
  t.setUserDraw(n);
  const r = new McEdGetPointWorldDrawObject(), i = new MxDbStarShapeDraw();
  t.setUserDraw(r), t.setMessage("\n确定圆弧开始点:"), t.go(async (n2) => {
    i.center = t.value(), r.setDraw((t2) => {
      i.innerPoint = t2, r.drawCircle(i.center, i.center.distanceTo(t2));
    }), i.innerPoint = await t.go() || new THREE.Vector3(), r.setDraw((t2) => {
      i.outerPoint = t2, r.drawCustomEntity(i);
    }), i.outerPoint = await t.go() || new THREE.Vector3(), e.addMxEntity(i);
  });
}
addRegisterMxDbEntity(MxDbRingShape);
var MxDbStarShape = class extends MxDbShape {
  getTypeName() {
    return "MxDbStarShape";
  }
  constructor() {
    super(), this.center = new THREE.Vector3(), this.numPoints = 10, this.innerRadius = 10, this.outerRadius = 10, this._propertyDbKeys = [...this._propertyDbKeys, "center", "numPoints", "innerRadius", "outerRadius"];
  }
  worldDraw(t) {
    const { x: e, y: n } = this.center, r = new THREE.Path();
    r.moveTo(e, n - this.outerRadius);
    for (let t2 = 1; t2 < 2 * this.numPoints; t2++) {
      const i2 = t2 % 2 == 0 ? this.outerRadius : this.innerRadius, a2 = i2 * Math.sin(t2 * Math.PI / this.numPoints) + e, o = -1 * i2 * Math.cos(t2 * Math.PI / this.numPoints) + n;
      r.lineTo(a2, o);
    }
    r.closePath();
    const i = this.createPaths(r), a = this.getShapePoints(i);
    this._draw(t, a), this._drawStoreLine(t, a);
  }
  getGripPoints() {
    return [this.center];
  }
  moveGripPointsAt(t, e) {
    return 0 === t && this.center.add(e), true;
  }
};
MxDbStarShape.cmd = "Mx_MxDbStarShape", MxDbStarShape.draw = drawMxDbStarShape;
var MxDbStarShapeDraw = class extends MxDbStarShape {
  constructor() {
    super(), this.innerPoint = new THREE.Vector3(), this.outerPoint = new THREE.Vector3(), this._propertyDbKeys = [...this._propertyDbKeys, "innerPoint", "outerPoint"];
  }
  getGripPoints() {
    return [this.center, this.innerPoint, this.outerPoint];
  }
  moveGripPointsAt(t, e) {
    return 0 === t && (this.center.add(e), this.innerPoint.add(e), this.outerPoint.add(e)), 1 === t && this.innerPoint.add(e), 2 === t && this.outerPoint.add(e), true;
  }
  worldDraw(t) {
    this.innerPoint && (this.innerRadius = this.center.distanceTo(this.innerPoint)), this.outerPoint && (this.outerRadius = this.center.distanceTo(this.outerPoint)), super.worldDraw(t);
  }
};
addRegisterMxDbEntity(MxDbStarShape);
var MxDbRegularPolygonShape = class extends MxDbShape {
  getTypeName() {
    return "MxDbRegularPolygonShape";
  }
  constructor() {
    super(), this.center = new THREE.Vector3(), this.sidesNumber = 6, this.radius = 70, this._propertyDbKeys = [...this._propertyDbKeys, "center", "sidesNumber", "radius"];
  }
  worldDraw(t) {
    this._drawPolygonShape(t);
  }
  _drawPolygonShape(t) {
    const e = this._getPoints(), n = new THREE.Path();
    n.moveTo(e[0].x, e[0].y);
    for (let t2 = 0; t2 < e.length; t2++) n.lineTo(e[t2].x, e[t2].y);
    n.closePath();
    const r = this.createPaths(n), i = this.getShapePoints(r);
    this._draw(t, i), this._drawStoreLine(t, i);
  }
  _getPoints() {
    const { sidesNumber: t, radius: e } = this, { x: n, y: r } = this.center, i = [];
    for (let a = 0; a < t; a++) i.push({ x: e * Math.sin(2 * a * Math.PI / t) + n, y: -1 * e * Math.cos(2 * a * Math.PI / t) + r });
    return i;
  }
  getGripPoints() {
    return [this.center];
  }
  moveGripPointsAt(t, e) {
    return 0 === t && this.center.add(e), true;
  }
};
function getScreenPixel(t, e) {
  let n = MxFun.screenCoordLong2World(e ? t : t - t / 3);
  return n = MxFun.worldCoordLong2Doc(n);
}
function drawMxDbArrow() {
  const t = new McEdGetPointWorldDrawObject(), e = new MxDbArrow(), n = MxFun.getCurrentDraw(), r = new MrxDbgUiPrPoint();
  r.setUserDraw(t), e.setLineWidth(10), r.go(() => {
    e.innerOffset = getScreenPixel(10), e.outerOffset = getScreenPixel(22), e.topOffset = getScreenPixel(36), e.startPoint = r.value(), t.setDraw((n2) => {
      e.endPoint = n2, t.drawCustomEntity(e);
    }), r.go(async (t2) => {
      e.endPoint = r.value(), n.addMxEntity(e);
    });
  });
}
addRegisterMxDbEntity(MxDbRegularPolygonShape);
var MxDbArrow = class extends MxDbShape {
  constructor() {
    super(), this.isSharpCorner = false, this.innerOffset = 10, this.outerOffset = 22, this.topOffset = 36, this.startPoint = new THREE.Vector3(), this.endPoint = new THREE.Vector3(), this._propertyDbKeys = [...this._propertyDbKeys, "outerOffset", "topOffset", "innerOffset", "isSharpCorner", "startPoint", "endPoint"];
  }
  worldDraw(t) {
    const e = this.getArrowVertex(this.startPoint, this.endPoint);
    e && (this._draw(t, e), this._drawStoreLine(t, e));
  }
  getArrowVertex(t, e, n = this.isSharpCorner) {
    let { innerOffset: r, topOffset: i, outerOffset: a } = this;
    const o = [];
    o[3] = e;
    const s = Math.sqrt((t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y));
    if (0 === s) return;
    const l = -(e.x - t.x) / s, c = (e.y - t.y) / s, u = t.x + r, h = t.y + s - i, p = t.x + a, d = t.y + s - i, f = t.x - r, m = t.y + s - i, g = t.x - a, y = t.y + s - i;
    return n ? (o[0] = t, o[6] = o[0]) : (o[0] = new THREE.Vector3(t.x - (f - t.x) * c, t.y - (f - t.x) * l), o[6] = new THREE.Vector3(t.x + (f - t.x) * c, t.y + (f - t.x) * l), o[7] = o[0]), o[1] = new THREE.Vector3(t.x + (u - t.x) * c - (h - t.y) * l, t.y + (u - t.x) * l + (h - t.y) * c), o[2] = new THREE.Vector3(t.x + (p - t.x) * c - (d - t.y) * l, t.y + (p - t.x) * l + (d - t.y) * c), o[4] = new THREE.Vector3(t.x + (g - t.x) * c - (y - t.y) * l, t.y + (g - t.x) * l + (y - t.y) * c), o[5] = new THREE.Vector3(t.x + (f - t.x) * c - (m - t.y) * l, t.y + (f - t.x) * l + (m - t.y) * c), o;
  }
  getGripPoints() {
    const t = new THREE.Vector3();
    return new THREE.Line3(this.startPoint, this.endPoint).getCenter(t), [this.startPoint, t, this.endPoint];
  }
  moveGripPointsAt(t, e) {
    return 0 === t && this.startPoint.add(e), 1 === t && (this.startPoint.add(e), this.endPoint.add(e)), 2 === t && this.endPoint.add(e), true;
  }
  getCornerRadiusPoints(t) {
    return t;
  }
};
MxDbArrow.cmd = "Mx_MxDbArrow", MxDbArrow.draw = drawMxDbArrow, addRegisterMxDbEntity(MxDbArrow);
var MxDbLineShape = class extends MxDbShape {
  setPoints(t) {
    return this.points = t, this;
  }
  addPoint(t) {
    return this.points.push(t), this;
  }
  removePoint(t) {
    return this.points.splice(t, 1), this;
  }
  constructor() {
    super(), this.points = [], this._propertyDbKeys = [...this._propertyDbKeys, "points"];
  }
  getTypeName() {
    return "MxDbLineShape";
  }
  worldDraw(t) {
    this._draw(t, this.points), this._drawStoreLine(t, this.points);
  }
  getGripPoints() {
    return this.points;
  }
  moveGripPointsAt(t, e) {
    return this.points[t].add(e), true;
  }
  getGeomExtents() {
    return new THREE.Box3().setFromPoints(this.points);
  }
  getGetLength() {
    let t = 0;
    for (let e = 0; e++; e < this.points.length) this.points[e + 1] && (t += this.points[e].distanceTo(this.points[e + 1]));
    return t;
  }
};
async function drawMxDbSplineCurve() {
  const t = new MrxDbgUiPrPoint(), e = new MxDbSplineCurve();
  t.setMessage("\n指定第一个点:"), t.goWhile(async (n) => {
    if (n === MrxDbgUiPrBaseReturn$1.kOk) e.points.push(t.value()), t.setUserDraw((n2, r) => {
      const i = e.clone();
      i.points.push(n2), r.drawCustomEntity(i), 0 === e.points.length ? t.setMessage("\n指定第一个点:") : (t.setMessage("\n指定下一个点:"), t.setKeyWords("[闭合(C)/ 放弃(U)]"));
    });
    else if (n === MrxDbgUiPrBaseReturn$1.kKeyWord) {
      if (t.isKeyWordPicked("C")) return e.closed = true, { exit: true };
      t.isKeyWordPicked("U") && e.points.pop();
    }
  }, () => {
    MxFun.getCurrentDraw().addMxEntity(e);
  });
}
addRegisterMxDbEntity(MxDbLineShape);
var propertyDbKeys = ["points", "closed", "tension", "curveType"];
var MxDbSplineCurve = class _MxDbSplineCurve extends MxDbEntity {
  constructor() {
    super(...arguments), this.points = [], this.closed = false, this.tension = 0.5, this.curveType = "centripetal";
  }
  worldDraw(t) {
    const e = new THREE.CatmullRomCurve3(this.points, this.closed, "catmullrom", this.tension).getPoints(15 * this.points.length), n = new THREE.Geometry().setFromPoints(e), r = new THREE.LineBasicMaterial({ color: this.color }), i = new THREE.Line(n, r);
    t.drawEntity(i);
  }
  getGripPoints() {
    return this.points;
  }
  moveGripPointsAt(t, e) {
    return this.points[t].add(e), true;
  }
  create() {
    return new _MxDbSplineCurve();
  }
  dwgIn(t) {
    return this.onDwgIn(t), this.dwgInHelp(t, propertyDbKeys), true;
  }
  dwgOut(t) {
    return this.onDwgOut(t), this.dwgOutHelp(t, propertyDbKeys), t;
  }
  getTypeName() {
    return "MxDbSplineCurve";
  }
};
MxDbSplineCurve.draw = drawMxDbSplineCurve, MxDbSplineCurve.cmd = "Mx_Spline", addRegisterMxDbEntity(MxDbSplineCurve);
var MrxDbgUiPrDist = class extends MrxDbgUiPrBase {
  constructor() {
    var t;
    super(new (null === (t = store.state.MxFun) || void 0 === t ? void 0 : t.getMxJigCmdManager().getMrxDbgUiPrDistClass())());
  }
  value() {
    return this.imp.value();
  }
  basePt() {
    return this.imp.basePt();
  }
  setBasePt(t) {
    return this.imp.setBasePt(t);
  }
  setUseBasePt(t) {
    return this.imp.setUseBasePt(t);
  }
  go(t) {
    let e = this;
    return t ? (e.imp.go((n) => {
      e.status = n, t(n);
    }), new Promise((t2, e2) => {
      t2(null);
    })) : new Promise((t2, n) => {
      e.imp.go((n2) => {
        e.status = n2, t2(0 != n2 ? null : e.imp.value());
      });
    });
  }
};
var MrxDbgUiPrInt = class extends MrxDbgUiPrBase {
  constructor() {
    var t;
    super(new (null === (t = store.state.MxFun) || void 0 === t ? void 0 : t.getMxJigCmdManager().getMrxDbgUiPrIntClass())());
  }
  value() {
    return this.imp.value();
  }
  go(t) {
    let e = this;
    return t ? (e.imp.go((n) => {
      e.status = n, t(n);
    }), new Promise((t2, e2) => {
      t2(null);
    })) : new Promise((t2, n) => {
      e.imp.go((n2) => {
        e.status = n2, t2(0 != n2 ? null : e.imp.value());
      });
    });
  }
};
var MrxDbgUiPrString = class extends MrxDbgUiPrBase {
  constructor() {
    var t;
    super(new (null === (t = store.state.MxFun) || void 0 === t ? void 0 : t.getMxJigCmdManager().getMrxDbgUiPrStringClass())());
  }
  value() {
    return this.imp.value();
  }
  go(t) {
    let e = this;
    return t ? (e.imp.go((n) => {
      e.status = n, t(n);
    }), new Promise((t2, e2) => {
      t2(null);
    })) : new Promise((t2, n) => {
      e.imp.go((n2) => {
        e.status = n2, t2(0 != n2 ? null : e.imp.value());
      });
    });
  }
};
var MrxDbgUiPrKeyWord = class extends MrxDbgUiPrBase {
  constructor() {
    var t;
    super(new (null === (t = store.state.MxFun) || void 0 === t ? void 0 : t.getMxJigCmdManager().getMrxDbgUiPrKeyWordClass())());
  }
  go(t) {
    let e = this;
    return t ? (e.imp.go((n) => {
      e.status = n, t(n);
    }), new Promise((t2, e2) => {
      t2(null);
    })) : new Promise((t2, n) => {
      e.imp.go((n2) => {
        e.status = n2, t2(0 != n2 ? null : e.keyWordPicked());
      });
    });
  }
};
var MrxDbgUiPrAngle = class extends MrxDbgUiPrBase {
  constructor() {
    var t;
    super(new (null === (t = store.state.MxFun) || void 0 === t ? void 0 : t.getMxJigCmdManager().getMrxDbgUiPrAngleClass())());
  }
  value() {
    return this.imp.value();
  }
  basePt() {
    return this.imp.basePt();
  }
  setBasePt(t) {
    return this.imp.setBasePt(t);
  }
  setUseBasePt(t) {
    return this.imp.setUseBasePt(t);
  }
  go(t) {
    let e = this;
    return t ? (e.imp.go((n) => {
      e.status = n, t(n);
    }), new Promise((t2, e2) => {
      t2(null);
    })) : new Promise((t2, n) => {
      e.imp.go((n2) => {
        e.status = n2, t2(0 != n2 ? null : e.imp.value());
      });
    });
  }
};
var Mx = Object.freeze({ __proto__: null, loadCoreCode, useCanvasResizeListener, store, MxFun, MxThreeJS, MxType, Mxassembly, McGeTool, MrxDbgUtils, MxPaintBrush, MrxDbgUiPrPoint, McEdGetPointWorldDrawObject, MrxDbgUiPrBaseReturn: MrxDbgUiPrBaseReturn$1, MxDbEntity, MxDbImage, MxDbSVG, MxDbSVGText, MxDbPolyline, MxDb2LineAngularDimension, Mx3PointArc, Mx2PointArc, MxDbCoord, MxDbLine, MxDbRect, MxDbAlignedDimension, MxFilters, McGiWorldDrawType: McGiWorldDrawType$1, MxDbArea, MxDbLeadTag, MxDbAnyLine, MxDbCloudLine, MxDbRegularPolygon, MxDbLeadComment, MxDbRectBoxLeadComment, MxDbEllipse, MxDbText, MxDrawObject, MxDbHatch, MxDbDatabase, MxDbGradientLine, MxDbShape, MxDbEllipseShape, MxDbEllipseArc, MxDbCircleShape, MxDbCircleArc, MxDbArcShapeDraw, MxDbRingShape, MxDbStarShape, MxDbRegularPolygonShape, MxDbArrow, MxDbLineShape, Layer, MxDbSplineCurve, MrxDbgUiPrBase, get MxCursorType() {
  return MxCursorType;
}, get DetailedResult() {
  return DetailedResult;
}, get DynamicInputType() {
  return DynamicInputType;
}, get UserInputControls() {
  return UserInputControls;
}, MrxDbgUiPrDist, MrxDbgUiPrInt, MrxDbgUiPrString, MrxDbgUiPrKeyWord, MrxDbgUiPrAngle, MxTempMarkDraw });
var elementResizeEventPolyfill_umd_min = createCommonjsModule(function(t, e) {
  "undefined" != typeof self && self, t.exports = function(t2) {
    var e2 = {};
    function n(r) {
      if (e2[r]) return e2[r].exports;
      var i = e2[r] = { i: r, l: false, exports: {} };
      return t2[r].call(i.exports, i, i.exports, n), i.l = true, i.exports;
    }
    return n.m = t2, n.c = e2, n.d = function(t3, e3, r) {
      n.o(t3, e3) || Object.defineProperty(t3, e3, { enumerable: true, get: r });
    }, n.r = function(t3) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t3, "__esModule", { value: true });
    }, n.t = function(t3, e3) {
      if (1 & e3 && (t3 = n(t3)), 8 & e3) return t3;
      if (4 & e3 && "object" == typeof t3 && t3 && t3.__esModule) return t3;
      var r = /* @__PURE__ */ Object.create(null);
      if (n.r(r), Object.defineProperty(r, "default", { enumerable: true, value: t3 }), 2 & e3 && "string" != typeof t3) for (var i in t3) n.d(r, i, (function(e4) {
        return t3[e4];
      }).bind(null, i));
      return r;
    }, n.n = function(t3) {
      var e3 = t3 && t3.__esModule ? function() {
        return t3.default;
      } : function() {
        return t3;
      };
      return n.d(e3, "a", e3), e3;
    }, n.o = function(t3, e3) {
      return Object.prototype.hasOwnProperty.call(t3, e3);
    }, n.p = "", n(n.s = "fae3");
  }({ "6dd8": function(t2, e2, n) {
    (function(t3) {
      var n2 = function() {
        if ("undefined" != typeof Map) return Map;
        function t4(t5, e3) {
          var n3 = -1;
          return t5.some(function(t6, r2) {
            return t6[0] === e3 && (n3 = r2, true);
          }), n3;
        }
        return function() {
          function e3() {
            this.__entries__ = [];
          }
          return Object.defineProperty(e3.prototype, "size", { get: function() {
            return this.__entries__.length;
          }, enumerable: true, configurable: true }), e3.prototype.get = function(e4) {
            var n3 = t4(this.__entries__, e4), r2 = this.__entries__[n3];
            return r2 && r2[1];
          }, e3.prototype.set = function(e4, n3) {
            var r2 = t4(this.__entries__, e4);
            ~r2 ? this.__entries__[r2][1] = n3 : this.__entries__.push([e4, n3]);
          }, e3.prototype.delete = function(e4) {
            var n3 = this.__entries__, r2 = t4(n3, e4);
            ~r2 && n3.splice(r2, 1);
          }, e3.prototype.has = function(e4) {
            return !!~t4(this.__entries__, e4);
          }, e3.prototype.clear = function() {
            this.__entries__.splice(0);
          }, e3.prototype.forEach = function(t5, e4) {
            void 0 === e4 && (e4 = null);
            for (var n3 = 0, r2 = this.__entries__; n3 < r2.length; n3++) {
              var i2 = r2[n3];
              t5.call(e4, i2[1], i2[0]);
            }
          }, e3;
        }();
      }(), r = "undefined" != typeof window && "undefined" != typeof document && window.document === document, i = void 0 !== t3 && t3.Math === Math ? t3 : "undefined" != typeof self && self.Math === Math ? self : "undefined" != typeof window && window.Math === Math ? window : Function("return this")(), a = "function" == typeof requestAnimationFrame ? requestAnimationFrame.bind(i) : function(t4) {
        return setTimeout(function() {
          return t4(Date.now());
        }, 1e3 / 60);
      }, o = 2;
      var s = 20, l = ["top", "right", "bottom", "left", "width", "height", "size", "weight"], c = "undefined" != typeof MutationObserver, u = function() {
        function t4() {
          this.connected_ = false, this.mutationEventsAdded_ = false, this.mutationsObserver_ = null, this.observers_ = [], this.onTransitionEnd_ = this.onTransitionEnd_.bind(this), this.refresh = /* @__PURE__ */ function(t5, e3) {
            var n3 = false, r2 = false, i2 = 0;
            function s2() {
              n3 && (n3 = false, t5()), r2 && c2();
            }
            function l2() {
              a(s2);
            }
            function c2() {
              var t6 = Date.now();
              if (n3) {
                if (t6 - i2 < o) return;
                r2 = true;
              } else n3 = true, r2 = false, setTimeout(l2, e3);
              i2 = t6;
            }
            return c2;
          }(this.refresh.bind(this), s);
        }
        return t4.prototype.addObserver = function(t5) {
          ~this.observers_.indexOf(t5) || this.observers_.push(t5), this.connected_ || this.connect_();
        }, t4.prototype.removeObserver = function(t5) {
          var e3 = this.observers_, n3 = e3.indexOf(t5);
          ~n3 && e3.splice(n3, 1), !e3.length && this.connected_ && this.disconnect_();
        }, t4.prototype.refresh = function() {
          this.updateObservers_() && this.refresh();
        }, t4.prototype.updateObservers_ = function() {
          var t5 = this.observers_.filter(function(t6) {
            return t6.gatherActive(), t6.hasActive();
          });
          return t5.forEach(function(t6) {
            return t6.broadcastActive();
          }), t5.length > 0;
        }, t4.prototype.connect_ = function() {
          r && !this.connected_ && (document.addEventListener("transitionend", this.onTransitionEnd_), window.addEventListener("resize", this.refresh), c ? (this.mutationsObserver_ = new MutationObserver(this.refresh), this.mutationsObserver_.observe(document, { attributes: true, childList: true, characterData: true, subtree: true })) : (document.addEventListener("DOMSubtreeModified", this.refresh), this.mutationEventsAdded_ = true), this.connected_ = true);
        }, t4.prototype.disconnect_ = function() {
          r && this.connected_ && (document.removeEventListener("transitionend", this.onTransitionEnd_), window.removeEventListener("resize", this.refresh), this.mutationsObserver_ && this.mutationsObserver_.disconnect(), this.mutationEventsAdded_ && document.removeEventListener("DOMSubtreeModified", this.refresh), this.mutationsObserver_ = null, this.mutationEventsAdded_ = false, this.connected_ = false);
        }, t4.prototype.onTransitionEnd_ = function(t5) {
          var e3 = t5.propertyName, n3 = void 0 === e3 ? "" : e3;
          l.some(function(t6) {
            return !!~n3.indexOf(t6);
          }) && this.refresh();
        }, t4.getInstance = function() {
          return this.instance_ || (this.instance_ = new t4()), this.instance_;
        }, t4.instance_ = null, t4;
      }(), h = function(t4, e3) {
        for (var n3 = 0, r2 = Object.keys(e3); n3 < r2.length; n3++) {
          var i2 = r2[n3];
          Object.defineProperty(t4, i2, { value: e3[i2], enumerable: false, writable: false, configurable: true });
        }
        return t4;
      }, p = function(t4) {
        return t4 && t4.ownerDocument && t4.ownerDocument.defaultView || i;
      }, d = x(0, 0, 0, 0);
      function f(t4) {
        return parseFloat(t4) || 0;
      }
      function m(t4) {
        for (var e3 = [], n3 = 1; n3 < arguments.length; n3++) e3[n3 - 1] = arguments[n3];
        return e3.reduce(function(e4, n4) {
          return e4 + f(t4["border-" + n4 + "-width"]);
        }, 0);
      }
      function g(t4) {
        var e3 = t4.clientWidth, n3 = t4.clientHeight;
        if (!e3 && !n3) return d;
        var r2 = p(t4).getComputedStyle(t4), i2 = function(t5) {
          for (var e4 = {}, n4 = 0, r3 = ["top", "right", "bottom", "left"]; n4 < r3.length; n4++) {
            var i3 = r3[n4], a3 = t5["padding-" + i3];
            e4[i3] = f(a3);
          }
          return e4;
        }(r2), a2 = i2.left + i2.right, o2 = i2.top + i2.bottom, s2 = f(r2.width), l2 = f(r2.height);
        if ("border-box" === r2.boxSizing && (Math.round(s2 + a2) !== e3 && (s2 -= m(r2, "left", "right") + a2), Math.round(l2 + o2) !== n3 && (l2 -= m(r2, "top", "bottom") + o2)), !function(t5) {
          return t5 === p(t5).document.documentElement;
        }(t4)) {
          var c2 = Math.round(s2 + a2) - e3, u2 = Math.round(l2 + o2) - n3;
          1 !== Math.abs(c2) && (s2 -= c2), 1 !== Math.abs(u2) && (l2 -= u2);
        }
        return x(i2.left, i2.top, s2, l2);
      }
      var y = "undefined" != typeof SVGGraphicsElement ? function(t4) {
        return t4 instanceof p(t4).SVGGraphicsElement;
      } : function(t4) {
        return t4 instanceof p(t4).SVGElement && "function" == typeof t4.getBBox;
      };
      function v(t4) {
        return r ? y(t4) ? function(t5) {
          var e3 = t5.getBBox();
          return x(0, 0, e3.width, e3.height);
        }(t4) : g(t4) : d;
      }
      function x(t4, e3, n3, r2) {
        return { x: t4, y: e3, width: n3, height: r2 };
      }
      var w = function() {
        function t4(t5) {
          this.broadcastWidth = 0, this.broadcastHeight = 0, this.contentRect_ = x(0, 0, 0, 0), this.target = t5;
        }
        return t4.prototype.isActive = function() {
          var t5 = v(this.target);
          return this.contentRect_ = t5, t5.width !== this.broadcastWidth || t5.height !== this.broadcastHeight;
        }, t4.prototype.broadcastRect = function() {
          var t5 = this.contentRect_;
          return this.broadcastWidth = t5.width, this.broadcastHeight = t5.height, t5;
        }, t4;
      }(), b = /* @__PURE__ */ function() {
        return function(t4, e3) {
          var n3 = function(t5) {
            var e4 = t5.x, n4 = t5.y, r2 = t5.width, i2 = t5.height, a2 = "undefined" != typeof DOMRectReadOnly ? DOMRectReadOnly : Object, o2 = Object.create(a2.prototype);
            return h(o2, { x: e4, y: n4, width: r2, height: i2, top: n4, right: e4 + r2, bottom: i2 + n4, left: e4 }), o2;
          }(e3);
          h(this, { target: t4, contentRect: n3 });
        };
      }(), M = function() {
        function t4(t5, e3, r2) {
          if (this.activeObservations_ = [], this.observations_ = new n2(), "function" != typeof t5) throw new TypeError("The callback provided as parameter 1 is not a function.");
          this.callback_ = t5, this.controller_ = e3, this.callbackCtx_ = r2;
        }
        return t4.prototype.observe = function(t5) {
          if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
          if ("undefined" != typeof Element && Element instanceof Object) {
            if (!(t5 instanceof p(t5).Element)) throw new TypeError('parameter 1 is not of type "Element".');
            var e3 = this.observations_;
            e3.has(t5) || (e3.set(t5, new w(t5)), this.controller_.addObserver(this), this.controller_.refresh());
          }
        }, t4.prototype.unobserve = function(t5) {
          if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
          if ("undefined" != typeof Element && Element instanceof Object) {
            if (!(t5 instanceof p(t5).Element)) throw new TypeError('parameter 1 is not of type "Element".');
            var e3 = this.observations_;
            e3.has(t5) && (e3.delete(t5), e3.size || this.controller_.removeObserver(this));
          }
        }, t4.prototype.disconnect = function() {
          this.clearActive(), this.observations_.clear(), this.controller_.removeObserver(this);
        }, t4.prototype.gatherActive = function() {
          var t5 = this;
          this.clearActive(), this.observations_.forEach(function(e3) {
            e3.isActive() && t5.activeObservations_.push(e3);
          });
        }, t4.prototype.broadcastActive = function() {
          if (this.hasActive()) {
            var t5 = this.callbackCtx_, e3 = this.activeObservations_.map(function(t6) {
              return new b(t6.target, t6.broadcastRect());
            });
            this.callback_.call(t5, e3, t5), this.clearActive();
          }
        }, t4.prototype.clearActive = function() {
          this.activeObservations_.splice(0);
        }, t4.prototype.hasActive = function() {
          return this.activeObservations_.length > 0;
        }, t4;
      }(), _ = "undefined" != typeof WeakMap ? /* @__PURE__ */ new WeakMap() : new n2(), T = /* @__PURE__ */ function() {
        return function t4(e3) {
          if (!(this instanceof t4)) throw new TypeError("Cannot call a class as a function.");
          if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
          var n3 = u.getInstance(), r2 = new M(e3, n3, this);
          _.set(this, r2);
        };
      }();
      ["observe", "unobserve", "disconnect"].forEach(function(t4) {
        T.prototype[t4] = function() {
          var e3;
          return (e3 = _.get(this))[t4].apply(e3, arguments);
        };
      });
      var C = void 0 !== i.ResizeObserver ? i.ResizeObserver : T;
      e2.a = C;
    }).call(this, n("c8ba"));
  }, c8ba: function(t2, e2) {
    var n;
    n = /* @__PURE__ */ function() {
      return this;
    }();
    try {
      n = n || new Function("return this")();
    } catch (t3) {
      "object" == typeof window && (n = window);
    }
    t2.exports = n;
  }, f6fd: function(t2, e2) {
    !function(t3) {
      var e3 = "currentScript", n = t3.getElementsByTagName("script");
      e3 in t3 || Object.defineProperty(t3, e3, { get: function() {
        try {
          throw new Error();
        } catch (r) {
          var t4, e4 = (/.*at [^\(]*\((.*):.+:.+\)$/gi.exec(r.stack) || [false])[1];
          for (t4 in n) if (n[t4].src == e4 || "interactive" == n[t4].readyState) return n[t4];
          return null;
        }
      } });
    }(document);
  }, fae3: function(t2, e2, n) {
    var r;
    n.r(e2), n.d(e2, "EventListenerWrapper", function() {
      return s;
    }), "undefined" != typeof window && (n("f6fd"), (r = window.document.currentScript) && (r = r.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)) && (n.p = r[1]));
    var i = n("6dd8");
    const a = EventTarget.prototype.addEventListener, o = function(t3) {
      const e3 = document.createEvent("HTMLEvents");
      return e3.initEvent(t3), e3;
    }, s = function(t3) {
      "resize" === t3 && c(this), a.apply(this, arguments);
    };
    function l(t3) {
      const e3 = l.observer = l.observer || new i.a(t3);
      return e3.initialized = true, e3;
    }
    function c(t3) {
      const e3 = l((t4) => {
        if (e3.initialized) e3.initialized = false;
        else for (let e4 of t4) {
          const t5 = o("resize");
          e4.target.dispatchEvent(t5), e4 && e4.target && "function" == typeof e4.target.onresize && e4.target.onresize(t5);
        }
      });
      e3.observe(t3);
    }
    HTMLElement.prototype.addEventListener = s, Reflect.defineProperty(HTMLElement.prototype, "onresize", { set(t3) {
      this._onresize = t3, "function" == typeof t3 && c(this);
    }, get() {
      return this._onresize || null;
    } });
  } });
});
var elementResizeEventPolyfill_umd_min$1 = unwrapExports(elementResizeEventPolyfill_umd_min);
var elementResizeEventPolyfill_umd_min$2 = Object.freeze({ __proto__: null, default: elementResizeEventPolyfill_umd_min$1, __moduleExports: elementResizeEventPolyfill_umd_min });

export {
  store,
  loadCoreCode,
  useCanvasResizeListener,
  McEdGetPointWorldDrawObject,
  MrxDbgUiPrBaseReturn$1,
  MxCursorType,
  DynamicInputType,
  DetailedResult,
  UserInputControls,
  MrxDbgUiPrBase,
  MrxDbgUiPrPoint,
  Layer,
  MxDbDatabase,
  MxTempMarkDraw,
  MxThreeJS,
  MxDrawObject,
  MxFun,
  MxType,
  Mxassembly,
  McGeTool,
  MrxDbgUtils,
  MxPaintBrush,
  MxDbEntity,
  MxDbImage,
  McGiWorldDrawType$1,
  MxDbSVGText,
  MxDbSVG,
  MxDbPolyline,
  MxDb2LineAngularDimension,
  MxFilters,
  MxDbShape,
  MxDbEllipseShape,
  MxDbCircleShape,
  Mx3PointArc,
  Mx2PointArc,
  MxDbCoord,
  MxDbLine,
  MxDbRect,
  MxDbAlignedDimension,
  MxDbHatch,
  MxDbArea,
  MxDbLeadTag,
  MxDbAnyLine,
  MxDbCloudLine,
  MxDbRegularPolygon,
  MxDbLeadComment,
  MxDbRectBoxLeadComment,
  MxDbEllipse,
  MxDbText,
  MxDbGradientLine,
  MxDbEllipseArc,
  MxDbCircleArc,
  MxDbArcShapeDraw,
  MxDbRingShape,
  MxDbStarShape,
  MxDbRegularPolygonShape,
  MxDbArrow,
  MxDbLineShape,
  MxDbSplineCurve,
  MrxDbgUiPrDist,
  MrxDbgUiPrInt,
  MrxDbgUiPrString,
  MrxDbgUiPrKeyWord,
  MrxDbgUiPrAngle,
  Mx
};
//# sourceMappingURL=chunk-GNMKA5IN.js.map
