{
  "version": 3,
  "sources": ["../../../../node_modules/ts-mixer/dist/esm/index.js", "../../../../node_modules/asyncsignal/src/index.ts", "../../../../node_modules/flexvars/dist/index.mjs", "../../../../node_modules/node_modules/.pnpm/flex-tools@1.4.41/node_modules/flex-tools/src/events/liteEvent.ts", "../../../../node_modules/node_modules/.pnpm/flex-tools@1.4.41/node_modules/flex-tools/dist/chunk-R42SWOGE.mjs", "../../../../node_modules/@voerkai18n/runtime/src/utils/getId.ts", "../../../../node_modules/node_modules/.pnpm/flex-tools@1.4.41/node_modules/flex-tools/src/typecheck/isNumber.ts", "../../../../node_modules/@voerkai18n/runtime/src/utils/isMessageId.ts", "../../../../node_modules/@voerkai18n/runtime/src/utils/isI18nScope.ts", "../../../../node_modules/@voerkai18n/runtime/src/utils/loadAsyncModule.ts", "../../../../node_modules/@voerkai18n/runtime/src/utils/isStorage.ts", "../../../../node_modules/@voerkai18n/runtime/src/utils/execAsyncs.ts", "../../../../node_modules/@voerkai18n/runtime/src/utils/isBrowser.ts", "../../../../node_modules/@voerkai18n/runtime/src/manager/index.ts", "../../../../node_modules/@voerkai18n/runtime/src/storage.ts", "../../../../node_modules/@voerkai18n/runtime/src/consts.ts", "../../../../node_modules/@voerkai18n/runtime/src/scope/mixins/eventEmitter.ts", "../../../../node_modules/node_modules/.pnpm/flex-tools@1.4.41/node_modules/flex-tools/src/typecheck/isFunction.ts", "../../../../node_modules/node_modules/.pnpm/flex-tools@1.4.41/node_modules/flex-tools/src/typecheck/isPlainObject.ts", "../../../../node_modules/node_modules/.pnpm/flex-tools@1.4.41/node_modules/flex-tools/src/async/asyncSignal.ts", "../../../../node_modules/@voerkai18n/runtime/src/scope/mixins/patch.ts", "../../../../node_modules/@voerkai18n/runtime/src/errors.ts", "../../../../node_modules/@voerkai18n/runtime/src/scope/mixins/change.ts", "../../../../node_modules/@voerkai18n/runtime/src/logger.ts", "../../../../node_modules/@voerkai18n/runtime/src/formatter/manager.ts", "../../../../node_modules/@voerkai18n/runtime/src/utils/isI18nManger.ts", "../../../../node_modules/@voerkai18n/runtime/src/scope/mixins/language.ts", "../../../../node_modules/@voerkai18n/runtime/src/scope/mixins/translate.ts", "../../../../node_modules/@voerkai18n/runtime/src/scope/mixins/restore.ts", "../../../../node_modules/node_modules/.pnpm/flex-tools@1.4.41/node_modules/flex-tools/src/object/getByPath.ts", "../../../../node_modules/@voerkai18n/runtime/src/scope/mixins/interpolator.ts", "../../../../node_modules/node_modules/.pnpm/flex-tools@1.4.41/node_modules/flex-tools/src/object/assignObject.ts", "../../../../node_modules/@voerkai18n/runtime/src/scope/index.ts", "../../../../node_modules/@voerkai18n/runtime/src/formatter/utils.ts", "../../../../node_modules/@voerkai18n/runtime/src/plugin.ts"],
  "sourcesContent": ["/**\n * Utility function that works like `Object.apply`, but copies getters and setters properly as well.  Additionally gives\n * the option to exclude properties by name.\n */\nconst copyProps = (dest, src, exclude = []) => {\n    const props = Object.getOwnPropertyDescriptors(src);\n    for (let prop of exclude)\n        delete props[prop];\n    Object.defineProperties(dest, props);\n};\n/**\n * Returns the full chain of prototypes up until Object.prototype given a starting object.  The order of prototypes will\n * be closest to farthest in the chain.\n */\nconst protoChain = (obj, currentChain = [obj]) => {\n    const proto = Object.getPrototypeOf(obj);\n    if (proto === null)\n        return currentChain;\n    return protoChain(proto, [...currentChain, proto]);\n};\n/**\n * Identifies the nearest ancestor common to all the given objects in their prototype chains.  For most unrelated\n * objects, this function should return Object.prototype.\n */\nconst nearestCommonProto = (...objs) => {\n    if (objs.length === 0)\n        return undefined;\n    let commonProto = undefined;\n    const protoChains = objs.map(obj => protoChain(obj));\n    while (protoChains.every(protoChain => protoChain.length > 0)) {\n        const protos = protoChains.map(protoChain => protoChain.pop());\n        const potentialCommonProto = protos[0];\n        if (protos.every(proto => proto === potentialCommonProto))\n            commonProto = potentialCommonProto;\n        else\n            break;\n    }\n    return commonProto;\n};\n/**\n * Creates a new prototype object that is a mixture of the given prototypes.  The mixing is achieved by first\n * identifying the nearest common ancestor and using it as the prototype for a new object.  Then all properties/methods\n * downstream of this prototype (ONLY downstream) are copied into the new object.\n *\n * The resulting prototype is more performant than softMixProtos(...), as well as ES5 compatible.  However, it's not as\n * flexible as updates to the source prototypes aren't captured by the mixed result.  See softMixProtos for why you may\n * want to use that instead.\n */\nconst hardMixProtos = (ingredients, constructor, exclude = []) => {\n    var _a;\n    const base = (_a = nearestCommonProto(...ingredients)) !== null && _a !== void 0 ? _a : Object.prototype;\n    const mixedProto = Object.create(base);\n    // Keeps track of prototypes we've already visited to avoid copying the same properties multiple times.  We init the\n    // list with the proto chain below the nearest common ancestor because we don't want any of those methods mixed in\n    // when they will already be accessible via prototype access.\n    const visitedProtos = protoChain(base);\n    for (let prototype of ingredients) {\n        let protos = protoChain(prototype);\n        // Apply the prototype chain in reverse order so that old methods don't override newer ones.\n        for (let i = protos.length - 1; i >= 0; i--) {\n            let newProto = protos[i];\n            if (visitedProtos.indexOf(newProto) === -1) {\n                copyProps(mixedProto, newProto, ['constructor', ...exclude]);\n                visitedProtos.push(newProto);\n            }\n        }\n    }\n    mixedProto.constructor = constructor;\n    return mixedProto;\n};\nconst unique = (arr) => arr.filter((e, i) => arr.indexOf(e) == i);\n\n/**\n * Finds the ingredient with the given prop, searching in reverse order and breadth-first if searching ingredient\n * prototypes is required.\n */\nconst getIngredientWithProp = (prop, ingredients) => {\n    const protoChains = ingredients.map(ingredient => protoChain(ingredient));\n    // since we search breadth-first, we need to keep track of our depth in the prototype chains\n    let protoDepth = 0;\n    // not all prototype chains are the same depth, so this remains true as long as at least one of the ingredients'\n    // prototype chains has an object at this depth\n    let protosAreLeftToSearch = true;\n    while (protosAreLeftToSearch) {\n        // with the start of each horizontal slice, we assume this is the one that's deeper than any of the proto chains\n        protosAreLeftToSearch = false;\n        // scan through the ingredients right to left\n        for (let i = ingredients.length - 1; i >= 0; i--) {\n            const searchTarget = protoChains[i][protoDepth];\n            if (searchTarget !== undefined && searchTarget !== null) {\n                // if we find something, this is proof that this horizontal slice potentially more objects to search\n                protosAreLeftToSearch = true;\n                // eureka, we found it\n                if (Object.getOwnPropertyDescriptor(searchTarget, prop) != undefined) {\n                    return protoChains[i][0];\n                }\n            }\n        }\n        protoDepth++;\n    }\n    return undefined;\n};\n/**\n * \"Mixes\" ingredients by wrapping them in a Proxy.  The optional prototype argument allows the mixed object to sit\n * downstream of an existing prototype chain.  Note that \"properties\" cannot be added, deleted, or modified.\n */\nconst proxyMix = (ingredients, prototype = Object.prototype) => new Proxy({}, {\n    getPrototypeOf() {\n        return prototype;\n    },\n    setPrototypeOf() {\n        throw Error('Cannot set prototype of Proxies created by ts-mixer');\n    },\n    getOwnPropertyDescriptor(_, prop) {\n        return Object.getOwnPropertyDescriptor(getIngredientWithProp(prop, ingredients) || {}, prop);\n    },\n    defineProperty() {\n        throw new Error('Cannot define new properties on Proxies created by ts-mixer');\n    },\n    has(_, prop) {\n        return getIngredientWithProp(prop, ingredients) !== undefined || prototype[prop] !== undefined;\n    },\n    get(_, prop) {\n        return (getIngredientWithProp(prop, ingredients) || prototype)[prop];\n    },\n    set(_, prop, val) {\n        const ingredientWithProp = getIngredientWithProp(prop, ingredients);\n        if (ingredientWithProp === undefined)\n            throw new Error('Cannot set new properties on Proxies created by ts-mixer');\n        ingredientWithProp[prop] = val;\n        return true;\n    },\n    deleteProperty() {\n        throw new Error('Cannot delete properties on Proxies created by ts-mixer');\n    },\n    ownKeys() {\n        return ingredients\n            .map(Object.getOwnPropertyNames)\n            .reduce((prev, curr) => curr.concat(prev.filter(key => curr.indexOf(key) < 0)));\n    },\n});\n/**\n * Creates a new proxy-prototype object that is a \"soft\" mixture of the given prototypes.  The mixing is achieved by\n * proxying all property access to the ingredients.  This is not ES5 compatible and less performant.  However, any\n * changes made to the source prototypes will be reflected in the proxy-prototype, which may be desirable.\n */\nconst softMixProtos = (ingredients, constructor) => proxyMix([...ingredients, { constructor }]);\n\nconst settings = {\n    initFunction: null,\n    staticsStrategy: 'copy',\n    prototypeStrategy: 'copy',\n    decoratorInheritance: 'deep',\n};\n\n// Keeps track of constituent classes for every mixin class created by ts-mixer.\nconst mixins = new WeakMap();\nconst getMixinsForClass = (clazz) => mixins.get(clazz);\nconst registerMixins = (mixedClass, constituents) => mixins.set(mixedClass, constituents);\nconst hasMixin = (instance, mixin) => {\n    if (instance instanceof mixin)\n        return true;\n    const constructor = instance.constructor;\n    const visited = new Set();\n    let frontier = new Set();\n    frontier.add(constructor);\n    while (frontier.size > 0) {\n        // check if the frontier has the mixin we're looking for.  if not, we can say we visited every item in the frontier\n        if (frontier.has(mixin))\n            return true;\n        frontier.forEach((item) => visited.add(item));\n        // build a new frontier based on the associated mixin classes and prototype chains of each frontier item\n        const newFrontier = new Set();\n        frontier.forEach((item) => {\n            var _a;\n            const itemConstituents = (_a = mixins.get(item)) !== null && _a !== void 0 ? _a : protoChain(item.prototype)\n                .map((proto) => proto.constructor)\n                .filter((item) => item !== null);\n            if (itemConstituents)\n                itemConstituents.forEach((constituent) => {\n                    if (!visited.has(constituent) && !frontier.has(constituent))\n                        newFrontier.add(constituent);\n                });\n        });\n        // we have a new frontier, now search again\n        frontier = newFrontier;\n    }\n    // if we get here, we couldn't find the mixin anywhere in the prototype chain or associated mixin classes\n    return false;\n};\n\nconst mergeObjectsOfDecorators = (o1, o2) => {\n    var _a, _b;\n    const allKeys = unique([...Object.getOwnPropertyNames(o1), ...Object.getOwnPropertyNames(o2)]);\n    const mergedObject = {};\n    for (let key of allKeys)\n        mergedObject[key] = unique([...((_a = o1 === null || o1 === void 0 ? void 0 : o1[key]) !== null && _a !== void 0 ? _a : []), ...((_b = o2 === null || o2 === void 0 ? void 0 : o2[key]) !== null && _b !== void 0 ? _b : [])]);\n    return mergedObject;\n};\nconst mergePropertyAndMethodDecorators = (d1, d2) => {\n    var _a, _b, _c, _d;\n    return ({\n        property: mergeObjectsOfDecorators((_a = d1 === null || d1 === void 0 ? void 0 : d1.property) !== null && _a !== void 0 ? _a : {}, (_b = d2 === null || d2 === void 0 ? void 0 : d2.property) !== null && _b !== void 0 ? _b : {}),\n        method: mergeObjectsOfDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.method) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.method) !== null && _d !== void 0 ? _d : {}),\n    });\n};\nconst mergeDecorators = (d1, d2) => {\n    var _a, _b, _c, _d, _e, _f;\n    return ({\n        class: unique([...(_a = d1 === null || d1 === void 0 ? void 0 : d1.class) !== null && _a !== void 0 ? _a : [], ...(_b = d2 === null || d2 === void 0 ? void 0 : d2.class) !== null && _b !== void 0 ? _b : []]),\n        static: mergePropertyAndMethodDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.static) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.static) !== null && _d !== void 0 ? _d : {}),\n        instance: mergePropertyAndMethodDecorators((_e = d1 === null || d1 === void 0 ? void 0 : d1.instance) !== null && _e !== void 0 ? _e : {}, (_f = d2 === null || d2 === void 0 ? void 0 : d2.instance) !== null && _f !== void 0 ? _f : {}),\n    });\n};\nconst decorators = new Map();\nconst findAllConstituentClasses = (...classes) => {\n    var _a;\n    const allClasses = new Set();\n    const frontier = new Set([...classes]);\n    while (frontier.size > 0) {\n        for (let clazz of frontier) {\n            const protoChainClasses = protoChain(clazz.prototype).map(proto => proto.constructor);\n            const mixinClasses = (_a = getMixinsForClass(clazz)) !== null && _a !== void 0 ? _a : [];\n            const potentiallyNewClasses = [...protoChainClasses, ...mixinClasses];\n            const newClasses = potentiallyNewClasses.filter(c => !allClasses.has(c));\n            for (let newClass of newClasses)\n                frontier.add(newClass);\n            allClasses.add(clazz);\n            frontier.delete(clazz);\n        }\n    }\n    return [...allClasses];\n};\nconst deepDecoratorSearch = (...classes) => {\n    const decoratorsForClassChain = findAllConstituentClasses(...classes)\n        .map(clazz => decorators.get(clazz))\n        .filter(decorators => !!decorators);\n    if (decoratorsForClassChain.length == 0)\n        return {};\n    if (decoratorsForClassChain.length == 1)\n        return decoratorsForClassChain[0];\n    return decoratorsForClassChain.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst directDecoratorSearch = (...classes) => {\n    const classDecorators = classes.map(clazz => getDecoratorsForClass(clazz));\n    if (classDecorators.length === 0)\n        return {};\n    if (classDecorators.length === 1)\n        return classDecorators[0];\n    return classDecorators.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst getDecoratorsForClass = (clazz) => {\n    let decoratorsForClass = decorators.get(clazz);\n    if (!decoratorsForClass) {\n        decoratorsForClass = {};\n        decorators.set(clazz, decoratorsForClass);\n    }\n    return decoratorsForClass;\n};\nconst decorateClass = (decorator) => ((clazz) => {\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    let classDecorators = decoratorsForClass.class;\n    if (!classDecorators) {\n        classDecorators = [];\n        decoratorsForClass.class = classDecorators;\n    }\n    classDecorators.push(decorator);\n    return decorator(clazz);\n});\nconst decorateMember = (decorator) => ((object, key, ...otherArgs) => {\n    var _a, _b, _c;\n    const decoratorTargetType = typeof object === 'function' ? 'static' : 'instance';\n    const decoratorType = typeof object[key] === 'function' ? 'method' : 'property';\n    const clazz = decoratorTargetType === 'static' ? object : object.constructor;\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    const decoratorsForTargetType = (_a = decoratorsForClass === null || decoratorsForClass === void 0 ? void 0 : decoratorsForClass[decoratorTargetType]) !== null && _a !== void 0 ? _a : {};\n    decoratorsForClass[decoratorTargetType] = decoratorsForTargetType;\n    let decoratorsForType = (_b = decoratorsForTargetType === null || decoratorsForTargetType === void 0 ? void 0 : decoratorsForTargetType[decoratorType]) !== null && _b !== void 0 ? _b : {};\n    decoratorsForTargetType[decoratorType] = decoratorsForType;\n    let decoratorsForKey = (_c = decoratorsForType === null || decoratorsForType === void 0 ? void 0 : decoratorsForType[key]) !== null && _c !== void 0 ? _c : [];\n    decoratorsForType[key] = decoratorsForKey;\n    // @ts-ignore: array is type `A[] | B[]` and item is type `A | B`, so technically a type error, but it's fine\n    decoratorsForKey.push(decorator);\n    // @ts-ignore\n    return decorator(object, key, ...otherArgs);\n});\nconst decorate = (decorator) => ((...args) => {\n    if (args.length === 1)\n        return decorateClass(decorator)(args[0]);\n    return decorateMember(decorator)(...args);\n});\n\nfunction Mixin(...constructors) {\n    var _a, _b, _c;\n    const prototypes = constructors.map(constructor => constructor.prototype);\n    // Here we gather up the init functions of the ingredient prototypes, combine them into one init function, and\n    // attach it to the mixed class prototype.  The reason we do this is because we want the init functions to mix\n    // similarly to constructors -- not methods, which simply override each other.\n    const initFunctionName = settings.initFunction;\n    if (initFunctionName !== null) {\n        const initFunctions = prototypes\n            .map(proto => proto[initFunctionName])\n            .filter(func => typeof func === 'function');\n        const combinedInitFunction = function (...args) {\n            for (let initFunction of initFunctions)\n                initFunction.apply(this, args);\n        };\n        const extraProto = { [initFunctionName]: combinedInitFunction };\n        prototypes.push(extraProto);\n    }\n    function MixedClass(...args) {\n        for (const constructor of constructors)\n            // @ts-ignore: potentially abstract class\n            copyProps(this, new constructor(...args));\n        if (initFunctionName !== null && typeof this[initFunctionName] === 'function')\n            this[initFunctionName].apply(this, args);\n    }\n    MixedClass.prototype = settings.prototypeStrategy === 'copy'\n        ? hardMixProtos(prototypes, MixedClass)\n        : softMixProtos(prototypes, MixedClass);\n    Object.setPrototypeOf(MixedClass, settings.staticsStrategy === 'copy'\n        ? hardMixProtos(constructors, null, ['prototype'])\n        : proxyMix(constructors, Function.prototype));\n    let DecoratedMixedClass = MixedClass;\n    if (settings.decoratorInheritance !== 'none') {\n        const classDecorators = settings.decoratorInheritance === 'deep'\n            ? deepDecoratorSearch(...constructors)\n            : directDecoratorSearch(...constructors);\n        for (let decorator of (_a = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.class) !== null && _a !== void 0 ? _a : []) {\n            const result = decorator(DecoratedMixedClass);\n            if (result) {\n                DecoratedMixedClass = result;\n            }\n        }\n        applyPropAndMethodDecorators((_b = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.static) !== null && _b !== void 0 ? _b : {}, DecoratedMixedClass);\n        applyPropAndMethodDecorators((_c = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.instance) !== null && _c !== void 0 ? _c : {}, DecoratedMixedClass.prototype);\n    }\n    registerMixins(DecoratedMixedClass, constructors);\n    return DecoratedMixedClass;\n}\nconst applyPropAndMethodDecorators = (propAndMethodDecorators, target) => {\n    const propDecorators = propAndMethodDecorators.property;\n    const methodDecorators = propAndMethodDecorators.method;\n    if (propDecorators)\n        for (let key in propDecorators)\n            for (let decorator of propDecorators[key])\n                decorator(target, key);\n    if (methodDecorators)\n        for (let key in methodDecorators)\n            for (let decorator of methodDecorators[key])\n                decorator(target, key, Object.getOwnPropertyDescriptor(target, key));\n};\n/**\n * A decorator version of the `Mixin` function.  You'll want to use this instead of `Mixin` for mixing generic classes.\n */\nconst mix = (...ingredients) => decoratedClass => {\n    // @ts-ignore\n    const mixedClass = Mixin(...ingredients.concat([decoratedClass]));\n    Object.defineProperty(mixedClass, 'name', {\n        value: decoratedClass.name,\n        writable: false,\n    });\n    return mixedClass;\n};\n\nexport { Mixin, decorate, hasMixin, mix, settings };\n", "/**\n *  生成一个异步控制信号\n *\n *  当满足condition时会进行等待\n *\n *  定义一个异步等待信号\n *  let signal = asyncSignal()\n *\n *  //\n *  然后在需要等待的地方\n *  await signal()\n *  await signal(100)  代表信号会自动超时resolve\n *  await signal(100,new Error())  代表信号会自动超时reject\n *\n *  可以手动resolve或reject该signal\n *  当要结束等待时调用 signal.resolve()\n *  当等待出错时调用 signal.reject()\n *\n * 可以传入一个condition函数，当signal.resolve时，会同时进行调用，该函数必须返回true，否则会继承等待\n * 超时时不会调用\n * let signal = asyncSignal(()=>{})\n *\n *  当signal使用一次后，如果需要再次使用，则需要signal.reset()复位一下，然后就可以\n *   await signal()\n *\n *  @param {Function} constraint 约束函数，指定当resolve或reject时，需要同时满足这个约束函数返回true才会进行resolve或reject\n *\n */ \n\n \nexport class AsyncSignalAbort extends Error {}\n \nexport interface IAsyncSignal {\n   (timeout?:number,returns?:any):Awaited<Promise<any>>\n   id             : number\n   reset()        : void\n   reject(e?      : Error | string):void\n   resolve(result?: any):void\n   destroy()      : void\n   isResolved()   : boolean\n   isRejected()   : boolean\n   isPending():boolean\n}\n\n\nlet AsyncSignalId = 0\n\n/**\n* 生成一个异步信号\n* \n* const signal = asyncSignal()\n* const signal = asyncSignal(()=>x==1,{timeout:10})\n* \n* await  signal(timeout)\n* signal.resolve()\n* signal.reject()\n* signal.destroy()\n*\n* @param {function} constraint\n*      当调用signal.resolve()时，还需要满足额外的约束条件，仅当constraint返回true，则signal才可以进行真正resolve\n* @returns {function}\n*/\n\nexport function asyncSignal(constraint?:()=>boolean,options:{timeout:number}={timeout:0}) : IAsyncSignal {     \n    let isResolved:boolean = false,isRejected:boolean = false,isPending:boolean = false\n    let resolveSignal:Function, rejectSignal:Function, timeoutId:any = 0\n    let objPromise:Promise<any> | null\n    let signalId = ++AsyncSignalId\n\n    // 重置信号，可以再次复用\n    const reset = function () {\n        clearTimeout(timeoutId)\n        isResolved = false\n        isRejected = false\n        isPending = false\n        objPromise = new Promise((resolve, reject) => {\n            resolveSignal = resolve\n            rejectSignal = reject\n        })\n    }\n    \n    reset()\n\n   async function signal(timeout:number = options.timeout, returns?:any){\n        // 如果constraint返回的true，代表不需要等待\n        if (typeof (constraint) === \"function\" && constraint()) {\n            isResolved = true\n            return\n        }\n\n        // 如果信号上次已经完成了，则需要重置信号\n        if (isResolved || isRejected) reset()\n\n        // 指定超时功能\n        if (timeout > 0) {\n            timeoutId = setTimeout(() => {\n                isResolved = true\n                try {\n                    if (returns instanceof Error) {\n                        rejectSignal(returns)\n                    } else {\n                        resolveSignal(returns)\n                    }\n                } catch {\n                }\n            }, timeout)\n        }\n        isPending = true\n        return objPromise\n    }\n    signal.id = signalId\n    signal.resolve = (result?:any) => {        \n        clearTimeout(timeoutId)\n        if(!isPending) return \n        if (isResolved || isRejected) return\n        // 注意：是否真正resolve还受约束条件的约束，只有满足约束条件时才会真正resolve\n        if (typeof (constraint) === \"function\" && constraint()) {\n            if(constraint()){\n                resolveSignal(result)\n            }else{\n               // 如果不满足约束条件，则静默返回，可以通过signal.isFulfilled()来判断是否完成\n               return    \n            }\n        } else {\n            resolveSignal(result)\n        }\n        isResolved = true\n    } \n\n    signal.reject = (e?:Error | string) => {        \n        clearTimeout(timeoutId)\n        if(!isPending) return \n        if (isResolved || isRejected) return\n        rejectSignal(typeof(e)==='string' ? new Error(e) : ((e instanceof Error) ? e : new Error()))\n        isRejected = true\n    }\n\n    // 信号被销毁时，产生一个中止错误，信号的使用者可以据此进行善后处理\n    signal.destroy = () => {\n       clearTimeout(timeoutId)\n       if(isPending) rejectSignal(new AsyncSignalAbort())   \n       isResolved =false\n       isPending = false         \n       isRejected =false\n       objPromise = null\n    }\n\n    signal.reset = reset\n    signal.isResolved = () => isResolved\n    signal.isRejected = () => isRejected \n    signal.isPending = () => isPending \n    return signal as unknown as IAsyncSignal\n}\n\n/**\n *   管理多个异步信号，并确保能正确resolve和reject\n *\n *\n *\n *  let signals = new AsyncSignalManager({\n *      timeout:60 * 1000,               // 所有信号均在1分钟后自动超时，0代表不设超时，并且此值应该大于signal(timeout)时指定的超时值\n *  })\n *\n *  signal = signals.create() 创建一个asyncSignal\n *\n *  signals.destroy()   销毁所有异步信号\n *  signal.resolve()    resolve所有异步信号\n *  signal.reject()     reject所有异步信号\n *  signal.reset()      reset所有异步信号\n *\n *\n */\n \n\nexport class AsyncSignalManager {\n   #_signals:Record<string,IAsyncSignal> = {}\n   constructor(public options?:{timeout: number} ) {\n        this.options = Object.assign({\n            timeout:0,// 为所有异步信号提供一个默认的超时时间，当信号超时未resolve时，会自动进行reject(timeout)\n        },options)\n    }\n    get signals():Record<string,IAsyncSignal> {return this.#_signals} \n\n    /**\n     * 创建新的异步信号\n     * @param constraint         额外的约束条件\n     * @param id\n     */\n    create(constraint?:()=>boolean){\n        let signal = asyncSignal(constraint,this.options)\n        this.#_signals[signal.id] = signal\n        return signal\n    }\n\n    /**\n     * 销毁指定的或者所有异步信号\n     *\n     *  destroy(id)\n     *  destroy([id,id,...])\n     *  destroy()                   // 销毁所有\n     * @param {string} id           可选的信号id,如果未指定则删除所有的信号\n     *\n     */ \n     \n   destroy(id:number | number[] | undefined) {\n        let ids = Array.isArray(id) ? id : (id===undefined ? Object.keys(this.#_signals) : [id])\n        for(let id of ids){\n            if(id in this.#_signals){\n                try{\n                    this.#_signals[id].destroy()\n                    delete this.#_signals[id]\n                }catch (e) { }\n            }\n        }\n   }\n   resolve(){\n        let args = arguments\n        Object.values(this.#_signals).forEach(signal=>signal.resolve(args))\n   }\n   reject(e:Error | string){\n        Object.values(this.#_signals).forEach(signal=>signal.reject(e))\n   }\n   reset(){\n        Object.values(this.#_signals).forEach(signal=>signal.reset())\n   }\n} \n\n", "/**\n*        \n*   ---=== FlexVars ===---\n*   https://zhangfisher.github.com/flexvars\n*    \n*\n*/\nvar T=Object.defineProperty;var D=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,B=Object.prototype.propertyIsEnumerable;var R=(e,t,r)=>t in e?T(e,t,{enumerable:true,configurable:true,writable:true,value:r}):e[t]=r,b=(e,t)=>{for(var r in t||(t={}))_.call(t,r)&&R(e,r,t[r]);if(D)for(var r of D(t))B.call(t,r)&&R(e,r,t[r]);return e};var h=(e=>typeof require!=\"undefined\"?require:typeof Proxy!=\"undefined\"?new Proxy(e,{get:(t,r)=>(typeof require!=\"undefined\"?require:t)[r]}):e)(function(e){if(typeof require!=\"undefined\")return require.apply(this,arguments);throw Error('Dynamic require of \"'+e+'\" is not supported')});var c={Abort:Symbol(\"Abort\"),Throw:Symbol(\"Throw\"),Ignore:Symbol(\"Ignore\")};var a=class extends Error{constructor(r){super();this.value=r;}},j=class extends a{},p=class extends a{},x=class extends a{},g=class extends a{};var S={name:\"error\",priority:\"before\",args:[\"operate\",\"value\"],default:{operate:\"ignore\"},next(e,t,r){let n=t.operate.toLowerCase(),i=t.value;return r.onError=(l,o,s,f)=>{if(!(l instanceof Error)||l instanceof a)throw l;if(n==\"throw\")throw i?new Error(i):l;if(n==\"abort\")throw new p(i);if(n==\"ignore\")throw new x(i);return o},e}},P={name:\"empty\",priority:\"before\",args:[\"operate\",\"value\"],default:{operate:\"abort\",value:\"\"},next(e,t,r){let n=t.operate.toLowerCase(),i=t.value;return r.onEmpty=()=>{if(n==\"throw\")throw new g;if(n==\"abort\")throw new p(i);if(n==\"ignore\")throw new x;return n},e}};function F(e,...t){if(t.length===0)return e;let r=t.map((n,i)=>{let l=Object.entries(n||{});return l.some(([o,s])=>s===void 0)?l.reduce((o,[s,f])=>(f!==void 0&&(o[s]=f),o),{}):n});return Object.assign(e,...r)}(e=>typeof h<\"u\"?h:typeof Proxy<\"u\"?new Proxy(e,{get:(t,r)=>(typeof h<\"u\"?h:t)[r]}):e)(function(e){if(typeof h<\"u\")return h.apply(this,arguments);throw Error('Dynamic require of \"'+e+'\" is not supported')});function y(e){if(typeof e!=\"object\"||e===null)return  false;var t=Object.getPrototypeOf(e);if(t===null)return  true;for(var r=t;Object.getPrototypeOf(r)!==null;)r=Object.getPrototypeOf(r);return t===r}function v(e){return e&&typeof e==\"function\"}function w(e,t,r){if(typeof t==\"string\"){let n=0,i;for(;(i=e.indexOf(t,n))>-1;){let l=typeof r==\"function\"?r(t):r,o=e.length;e=e.substring(0,i)+l+e.substring(i+t.length),n=i+l.length+e.length-o;}}else {let n;if(!t.global||!t.multiline)throw new Error(\"The search parameter must be enabled '/gm' option\");for(;(n=t.exec(e))!==null;){n.index===t.lastIndex&&t.lastIndex++;let i=e.length,l=n[0].length,o=typeof r==\"function\"?r(n[0],...n):r;e=e.substring(0,n.index)+o+e.substring(n.index+l),t.lastIndex+=e.length-i;}}return e}String.prototype.replaceAll||(String.prototype.replaceAll=function(e,t){return w(this,e,t)});function m(e){return e.replace(/([.?*+^$[\\]\\\\(){}|-])/g,\"\\\\$1\")}function C(e,t=false){if(typeof e==\"number\")return  true;if(typeof e!=\"string\"||t)return  false;try{if(e.includes(\".\")){let r=parseFloat(e);return e.endsWith(\".\")?!isNaN(r)&&String(r).length===e.length-1:!isNaN(r)&&String(r).length===e.length}else {let r=parseInt(e);return !isNaN(r)&&String(r).length===e.length}}catch(r){return  false}}var q=/\\n/gm,W=/([\"'])(.*?)(\\1)/gm,k=/([\\s\\[\\,\\{])(\\w+)(\\s*\\:)/gm;function V(e,t){try{return JSON.parse(e,(n,i)=>t?t(n,i):i)}catch(n){}let r=e.replace(q,(n,i,l)=>{let o=l.slice(0,i).trim(),s=l.slice(i+1).trim();return !/,$/.test(o)&&!/[\\[\\{\\}]$/.test(o)&&!/^\\}/.test(s)?`,\n`:`\n`});return r=r.replaceAll(W,(n,i,l)=>`\"${encodeURI(l)}\"`),r=r.replaceAll(k,(n,i,l,o)=>`${i}\"${l}\"${o}`),r=r.replaceAll(\"\\uFF0C\",\",\").replaceAll(\"\\u201C\",'\"').replaceAll(\"\\u201D\",'\"'),JSON.parse(r,(n,i)=>(typeof i==\"string\"&&(i=decodeURI(i)),i))}function J(e,t=\"{\",r=\"}\"){let n=0,i=0;for(;n<e.length;){let l=e.slice(n,n+t.length),o=e.slice(n,n+r.length);if(l==t){i++,e=e.substring(0,n+t.length)+`${i}%`+e.substring(n+t.length),n+=t.length+String(i).length+1;continue}if(o==r){i>0&&(e=e.substring(0,n)+`%${i}`+e.substring(n)),n+=r.length+String(i).length+1,i--;continue}n++;}return e}function H(e,...t){return t.length==0&&(t.push([\"{\",\"}\"]),t.push([\"[\",\"]\"])),t.forEach(r=>{e.includes(r[0])&&e.includes(r[1])&&(e=J(e,...r));}),e}function G(e,t,r){return [[t,new RegExp(m(t)+\"\\\\d+%\")],[r,new RegExp(\"%\\\\d+\"+m(r))]].forEach(([i,l])=>{let o;for(;(o=l.exec(e))!==null;)o.index===l.lastIndex&&l.lastIndex++,e=e.replace(l,i);}),e}function E(e,...t){return t.length==0&&(t.push([\"{\",\"}\"]),t.push([\"[\",\"]\"])),t.forEach(([r,n])=>{e.includes(r)&&e.includes(n)&&(e=G(e,r,n));}),e}function M(e){return e?e.trim().substring(1).trim().split(\"|\").map(r=>r.trim()).map(r=>{if(r==\"\")return null;let n=r.indexOf(\"(\"),i=r.lastIndexOf(\")\");if(n!==-1&&i!==-1){let l=r.substring(n+1,i).trim(),o=U(l);return [r.substring(0,n),o]}else return [r,[]]}).filter(r=>Array.isArray(r)):[]}function z(...e){e.length==0&&(e.push([\"{\",\"}\"]),e.push([\"[\",\"]\"]));let t=e.map(([r,n])=>`(${m(r)}1%.*?%1${m(n)})`);return L.replace(\"__TAG_REGEXP__\",t.length>0?t.join(\"|\")+\"|\":\"\")}var L=String.raw`((([\\'\\\"])(.*?)\\3))|__TAG_REGEXP__([\\d]+\\.?[\\d]?)|((true|false|null)(?=[,\\b\\s]))|([\\w\\.]+)|((?<=,)\\s*(?=,))(?<=\\s*[,\\)]?\\s*)`;function U(e){let t=[],r;e=H(e);try{let n=new RegExp(z(),\"g\");for(;(r=n.exec(e))!==null;){r.index===n.lastIndex&&n.lastIndex++;let i=r[0];if(i.trim()==\"\")i=void 0;else if(i.startsWith(\"'\")&&i.endsWith(\"'\")||i.startsWith('\"')&&i.endsWith('\"'))i=i.substring(1,i.length-1),i=E(i);else if(i.startsWith(\"{\")&&i.endsWith(\"}\")||i.startsWith(\"[\")&&i.endsWith(\"]\"))try{i=E(i),i=V(i);}catch(l){}else [\"true\",\"false\",\"null\"].includes(i)?i=JSON.parse(i):C(i)?i=parseFloat(i):i=E(String(i));t.push(i);}}catch(n){}return t}var X=new RegExp(\"(?<!\\\\\\\\)\\\\{([\\\\S]+\\\\s)?\\\\s*(\\\\w+)?((\\\\s*\\\\|\\\\s*\\\\w*(\\\\(.*?\\\\)){0,1}\\\\s*)*)\\\\s*(\\\\s[\\\\S]+)?\\\\}\",\"gm\");function O(e,t,r={}){let n=e,i,l=Object.assign({replaceAll:true},r),o=X;for(o.lastIndex=0;(i=o.exec(n))!==null;){i.index===o.lastIndex&&o.lastIndex++;let s=i[2]||\"\",f=(i[1]||\"\").trim(),u=(i[6]||\"\").trim(),d=n.length,N=M(i[3]||\"\");if(v(t)){let A=t(s,f,u,N,i[0]);l.replaceAll?n=w(n,i[0],A):n=n.replace(i[0],A),o.lastIndex+=n.length-d;}}return n}function I(e,t){let r=t.value;if(e.length>0){let n=ee.call(this,e,t);for(let i of n)try{r=i.call(this,r);}catch(l){if(l instanceof g)throw l;if(l instanceof a){if(l.value!=null&&(r=l.value),l instanceof p)break}else throw l}}return this.options.isEmpty(r)||(r=`${t.prefix}${r}${t.suffix}`),r}function K(e,t,r,n){if(!this.options.isEmpty(e))return e;let i=n.onEmpty||r.onEmpty||this.options.onEmpty;if(typeof i!=\"function\")return e;let l=i.call(this,e,t,n);throw l instanceof Error?l:l==c.Abort?new p:l==c.Ignore?new x:l==c.Throw?new g:new p(l)}function Q(e,t,r,n,i){let l=i.onError||n.onError||this.options.onError;if(typeof l!=\"function\")return t;let o=l.call(this,e,t,r,i);throw o instanceof Error?o:o==c.Abort?new p:o==c.Ignore?new x:o==c.Throw?e:new p(o)}function Y(e,t,r){var i;let n=Object.assign({},typeof e.default==\"function\"?e.default():e.default);return t.length==1&&y(t[0])?F(n,t[0]):e.args&&((i=e.args)==null?void 0:i.length)>0&&e.args.forEach((l,o)=>{t[o]!==void 0&&(n[l]=t[o]);}),l=>{let o;try{r.args=t,o=e.next.call(this,l,n,r),o=K.call(this,o,n,e,r);}catch(s){if(s.filter=e.name,s instanceof a)throw s;return this.log(`\\u5F53\\u6267\\u884C\\u8FC7\\u6EE4\\u5668\\u5668<${r.match}:${e.name}>\\u65F6\\u51FA\\u9519:${s.stack}`),Q.call(this,s,l,n,e,r)}return String(o)}}function Z(e){let t=[],r=e.map(([n,i])=>[this.getFilter.call(this,n),i]).filter(([n])=>n!=null);return r=r.reduce((n,[i,l])=>(i&&(i.priority==\"before\"?n.unshift([i,l]):i.priority==\"after\"?t.push([i,l]):n.push([i,l])),n),[]),r.concat(t)}function ee(e,t){let r=Z.call(this,e),n=[];for(let[i,l]of r)n.push(Y.call(this,i,l,t));return n}var $=class{constructor(t){this.options=F({log:console.log,filters:{},missing:\"default\",filterContext:{}},t),this.addDefaultHandlers(),this.addBuildinFilters(),this.normalizeFilters();}get filters(){return this.options.filters}addDefaultHandlers(){this.options.onError=()=>c.Ignore,this.options.onEmpty=()=>\"\",this.options.isEmpty=t=>t===null||t===\"\";}addFilter(t){if(!t.name)throw new Error(\"Filter name cannot be empty\");if(typeof t.next!=\"function\")throw new Error(\"The filter must provide a next function\");return t=F({priority:\"normal\"},t),this.filters[t.name]=t}removeFilter(t){delete this.filters[t];}getFilter(t){var r;if(t in this.options.filters)return this.options.filters[t];{let n=(r=this.options.getFilter)==null?void 0:r.call(this,t);return typeof n==\"function\"?{name:t,next:n}:t in String.prototype?{name:t,next:(i,l,o)=>i[t](...o.args)}:n}}addBuildinFilters(){this.addFilter(S),this.addFilter(P);}normalizeFilters(){Object.entries(this.options.filters).forEach(([t,r])=>{let n=F({name:t,priority:\"normal\",args:null,next:i=>i},typeof r==\"function\"?{filter:r}:r);this.options.filters[t]=n;});}getMissingValue(t,r){let n=this.options.missing;if(n==\"default\")return \"\";if(n==\"ignore\")return r;if(typeof n==\"function\")return n.call(this,t)}replace(t,...r){if(r.length===0)return t;if(r.length===1&&typeof r[0]==\"function\"&&(r[0]=r[0].call(this)),r.length===1&&y(r[0])){let n=r[0];return O.call(this,t,(i,l,o,s,f)=>{let u=i in n?n[i]:this.getMissingValue(i,f);return typeof u==\"function\"&&(u=u.call(this)),I.call(this,s,b({name:i,value:u,prefix:l,suffix:o,template:t,match:f,args:[]},this.options.filterContext))})}else {let n=r.length===1&&Array.isArray(r[0])?[...r[0]]:r,i=0;return O.call(this,t,(l,o,s,f,u)=>{let d=n.length>i?n[i++]:this.getMissingValue(i,u);return typeof d==\"function\"&&(d=d.call(this)),I.call(this,f,b({name:l,value:d,prefix:o,suffix:s,template:t,match:u,args:[]},this.options.filterContext))},{replaceAll:false})}}log(t,...r){this.options.debug&&this.options.log(t,...r);}};\n\nexport { c as FilterBehaviors, p as FlexFilterAbortError, g as FlexFilterEmptyError, a as FlexFilterError, x as FlexFilterIgnoreError, j as FlexFilterThrowError, $ as FlexVars, P as defaultEmptyFilter, S as defaultErrorFilter };\n", "/** \n* 一个简单的事件触发器 \n*/\n \nexport interface FlexLiteEvents{\n\n}\n\nexport interface LiteEventSubscribeOptions{\n    objectify?: boolean                 //  当调用时返回一个对象用来退订\n    count?:number                       // 触发几次\n}\nexport interface LiteEventOptions{\n    ignoreError?:boolean                // 执行侦听器出错时是否忽略错误\n}\n\nexport interface LiteEventListener<Message=any>{\n    (message:Message):void \n}\n\n\nexport type ForEachLiteEventListenerCallback<Events,Message> = ({event,listenerId,listener,count,eventListeners}:{event:Events,listenerId:number,listener:LiteEventListener<Message>,count:number,eventListeners:LiteEventListenerRegistry<Message>})=>boolean | void\n\n\nexport interface LiteEventSubscriber{\n    off():void\n}\n\n\nexport type LiteEventListenerRegistry<M> = Map<number,[LiteEventListener<M>,number]>\nexport type LiteListenerRegistry<E,M> = Map<E,LiteEventListenerRegistry<M>>\n\n\nexport class LiteEvent<\n    Events extends FlexLiteEvents = Record<string,any>,\n    EventNames extends keyof Events = keyof Events,\n    Message = any\n>{\n     \n    private _listeners:LiteListenerRegistry<EventNames,Message>= new Map()     // {\"<事件名称>\":{<listenerId>:[Callback,<侦听次数>]}}\n     \n    private _lastMessage:Record<string,any> = {}                       // 保留最后一次触发的消息,key=事件名称,value=消息\n    static listenerSeqId:number = 0\n    options:Required<LiteEventOptions>\n    constructor(options?:LiteEventOptions){\n        this.options = Object.assign({\n            ignoreError:false\n        },options) as Required<LiteEventOptions>\n     }\n    get listeners(){return this._listeners}\n     /**\n      * 订阅事件并返回一个事件订阅ID\n      * \n      * @param event \n      * @param callback \n      * @param options \n      * @returns \n      */\n    on<T extends EventNames>(event:T,callback:LiteEventListener<Events[T]>,options?:LiteEventSubscribeOptions):LiteEventSubscriber | number\n    on(event:'*',callback:LiteEventListener<Message>,options?:LiteEventSubscribeOptions):LiteEventSubscriber | number\n    on():LiteEventSubscriber | number{\n        const event    = arguments[0] as EventNames\n        const callback = arguments[1] as LiteEventListener<Message>\n        const options  = arguments[2] as LiteEventSubscribeOptions\n        const { objectify=true,count=-1 } = Object.assign({},options) as Required<LiteEventSubscribeOptions>        \n        if(!this._listeners.has(event)){\n             this._listeners.set(event,new Map())        \n        }\n        const listenerId     = ++LiteEvent.listenerSeqId            \n        const eventListeners = this._listeners.get(event) as LiteEventListenerRegistry<Message>\n        eventListeners?.set(listenerId,[callback,count])        \n        this._emitRetainEvent(event,listenerId,eventListeners)      \n        if(objectify){\n            return {\n                off:()=>{\n                    eventListeners?.delete(listenerId)\n                    if(eventListeners?.size==0){\n                        this._listeners.delete(event)\n                    }\n                }\n            }\n        }else{\n            return listenerId\n        }\n     } \n    onAny(callback:LiteEventListener<Message>,options?:LiteEventSubscribeOptions):LiteEventSubscriber | number{\n        return this.on('*',callback,options)\n    }\n     /**\n      * 如果事件已经有最近触发时保留的数据，则立即触发事件将最近的数据传递给侦听器\n      * @param event \n      */\n    private _emitRetainEvent(event:EventNames,listenerId:number,eventListeners:LiteEventListenerRegistry<Message>){\n        if(event in this._lastMessage){\n            this._executeListener(listenerId,eventListeners,this._lastMessage[event as string])   \n        }        \n    }\n     /**\n      * 只订阅一次事件\n      * @param event \n      * @param callback \n      * @param options \n      * @returns \n      */\n    once<T extends EventNames>(event:T,callback:LiteEventListener<Events[T]>,options?:LiteEventSubscribeOptions){\n         return this.on(event,callback,Object.assign({},options,{count:1}))        \n    }  \n \n    /**\n      * 遍历所有侦听器\n      *   {\"<事件名称>\":{<listenerId>:[Callback,<侦听次数>]}}\n      * @param callback  ={}\n      */\n    private _forEachListeners(callback:({event,listenerId,listener,count,eventListeners}:{event:EventNames,listenerId:number,listener:LiteEventListener<Message>,count:number,eventListeners:LiteEventListenerRegistry<Message>})=>boolean | void){\n         // {\"<事件名称>\":{<listenerId>:[Callback,<侦听次数>]}}\n         let isAbort = false\n         for(let [event,eventListeners] of this._listeners.entries()){\n             if(isAbort) break\n             for(let [listenerId,[listener,count]] of eventListeners.entries()){\n                 if(isAbort) break\n                 let r = callback({event,listenerId,listener,count,eventListeners})                \n                 isAbort = r === false // 显式返回false时中止遍历\n             }\n         }         \n     }\n     /**\n      * 遍历符合event事件的侦听器\n      * \n      * forEachEventListeners(event,callback)\n      * \n      * @param event         事件名称\n      * @param callback \n      * @returns \n      */\n     private _forEachEventListeners(event:EventNames,callback:ForEachLiteEventListenerCallback<EventNames,Message>){\n         // {\"<事件名称>\":{<listenerId>:[Callback,<侦听次数>]}}        \n         let isAbort = false        \n         let matchedListeners = [[event,this._listeners.get(event)]] as [EventNames,LiteEventListenerRegistry<Message> | undefined][]       \n         for(let [eventName,eventListeners] of matchedListeners){\n             if(!eventListeners) continue\n             for(let [listenerId,[listener,count]] of eventListeners){\n                 if(isAbort) break\n                 let r = callback({event:eventName,listenerId,listener,count,eventListeners})            \n                 isAbort = r === false// 显式返回false时中止遍历\n             }     \n         }\n     }  \n     /**\n      * 注销订阅\n      * \n      * - 通过listenerId进行退订\n      * - 直接指定一个callback并且callback严格相等\n      * - 具备同一样原型链的callback的均退订\n      * \n      *  let listenerId = emitter.on(event,callback)\n      * \n      *  emitter.off(listenerId)              // 精确退订指定的订阅，需要自行保存订阅Id\n      *  emitter.off(callback)                // 所有callback均会退订\n      *  emitter.off(event,callback)          // 退订指定事件的callback均会退订 \n      * \n      * @param event \n      * @param callback \n      * @returns \n      */ \n      off(listener:LiteEventListener<Message>):void;\n      off(listenerId:number):void;\n      off(event:EventNames,listener:LiteEventListener<any>):void;\n      off(){\n         // {\"<事件名称>\":{<listenerId>:[Callback,<侦听次数>]}}\n        if(arguments.length==1){\n             if(typeof(arguments[0])=='number'){// off(listenerId) 根据订阅ID退订\n                 this._forEachListeners(({listenerId,eventListeners,event})=>{\n                     if(listenerId == arguments[0]){\n                         eventListeners.delete(listenerId)\n                         if(this._listeners.get(event)?.size==0) this._listeners.delete(event)\n                         return false\n                     }   \n                 })\n             }else if(typeof(arguments[0])=='function'){  // off(callback) \n                 let callback = arguments[0]\n                 this._forEachListeners(({listenerId,listener,eventListeners,event})=>{\n                     if(listener == callback){\n                         eventListeners.delete(listenerId) \n                         if(this._listeners.get(event)?.size==0) this._listeners.delete(event)\n                     }   \n                 })\n             }\n        }else if(arguments.length==2){\n             if(typeof(arguments[0])=='string' && typeof(arguments[1])=='function'){// off(event,callback)\n                 this._forEachEventListeners(arguments[0] as EventNames,({event,listenerId,listener,eventListeners})=>{\n                     if(event == arguments[0] && listener ==  arguments[1] ){\n                         eventListeners.delete(listenerId) \n                         if(this._listeners.get(event)?.size==0) this._listeners.delete(event)\n                     }\n                 })\n             }\n        } \n     }\n \n     /**\n      * 等待某个事件触发后返回\n      * @param event  事件名称\n      */\n    waitFor(event:EventNames,timeout:number=0){        \n         return new Promise<Message>((resolve,reject)=>{\n             let tmId:any,isTimeout:boolean=false \n             let listenerId:number\n             if(timeout>0){\n                 tmId=setTimeout(()=>{\n                     isTimeout=true\n                     this.off(listenerId)\n                     reject(new Error(\"Timeout\"))    \n                 },timeout)\n             }        \n            listenerId = this.once(event,(message:any)=>{     \n                if(isTimeout) return\n                clearTimeout(tmId) \n                resolve(message)\n            }) as number\n        })\n    }\n    offAll(event?:EventNames){\n         if(event){\n             this._listeners.delete(event)\n         }else{\n             this._listeners.clear()\n         }        \n     }\n     /**    \n      * 执行侦听器函数\n      * \n      * @param listenerId  侦听器ID\n      * @param listeners   事件侦听器列表  \n      * @param message \n      * @returns \n      */\n    private _executeListener(listenerId:number,listeners:LiteEventListenerRegistry<Message>,message?:Message){\n         if(!listeners) return \n         const listener = listeners!.get(listenerId)\n         if(!listener) return \n         try{\n            return listener[0](message!) \n         }catch(e){\n            if(!this.options.ignoreError) throw e\n         }finally{\n             if(listener[1]>-1){\n                 listener[1] = listener[1]-1\n                 if(listener[1]==0){\n                     listeners.delete(listenerId)\n                 }\n             }            \n         }  \n     }   \n     private _executeListeners(event:EventNames,message?:Message,callback?:(listenerId?:number)=>void){\n         let results:any[] = []\n         this._forEachEventListeners(event,({event:eventName,listenerId,eventListeners})=>{\n             results.push(this._executeListener(listenerId,eventListeners,message))\n             if(typeof(callback)=='function') callback(listenerId)\n             if(eventListeners.size==0){\n                 this._listeners.delete(eventName)\n             }\n         })   \n         return results\n     }\n     /**\n      * 触发事件\n      * @param event \n      * @param message \n      */\n    emit<T extends EventNames>(event:T,message?:Events[T],retain?:boolean){\n        if(retain){\n            this._lastMessage[event as any] = message\n        }\n        return this._executeListeners(event,message as any)\n    }\n    async emitAsync<T extends EventNames>(event:T,message?:Events[T],retain?:boolean){\n        return await Promise.allSettled(this.emit(event,message,retain))\n     }\n } \n\n \n  \n//  export type VoerkaI18nEvents = {\n//     log        : { level: string, message:string }       // 当有日志输出时，data={level\n//     ready      : { scope:string,language:string }                        // 当默认语言第一次加载完成后触发，data={language,scope}\n//     Change     : string                                                 // 当语言切换时    data=language\n//     Registered : string                                                 // 当Scope注册到成功后    \n//     Restore    : { scope:string,language:string }                        // 当Scope加载并从本地存储中读取语言包合并到语言包时 ，data={language,scope}\n//     Patched    : { scope:string,language:string }                        // 当Scope加载并从本地存储中读取语言包合并到语言包时 ，data={language,scope}               \n// }      \n    \n\n\n//  const ev = new LiteEvent<VoerkaI18nEvents>()\n\n//  ev.on(\"log\",({level,message})=>{\n//     console.log(level,message)\n//  })\n//  ev.on(\"*\",({level,message})=>{\n//     console.log(level,message)\n//  })\n//  ev.emit(\"log\",{level:\"\",message:\"\"})", "/**\n*   ---=== FlexTools ===---\n*   https://zhangfisher.github.com/flex-tools \n*/\nvar i=Object.create;var f=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var l=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var g=a=>{throw TypeError(a)};var o=(a=>typeof require<\"u\"?require:typeof Proxy<\"u\"?new Proxy(a,{get:(b,c)=>(typeof require<\"u\"?require:b)[c]}):a)(function(a){if(typeof require<\"u\")return require.apply(this,arguments);throw Error('Dynamic require of \"'+a+'\" is not supported')});var p=(a,b)=>()=>(b||a((b={exports:{}}).exports,b),b.exports);var n=(a,b,c,d)=>{if(b&&typeof b==\"object\"||typeof b==\"function\")for(let e of k(b))!m.call(a,e)&&e!==c&&f(a,e,{get:()=>b[e],enumerable:!(d=j(b,e))||d.enumerable});return a};var q=(a,b,c)=>(c=a!=null?i(l(a)):{},n(b||!a||!a.__esModule?f(c,\"default\",{value:a,enumerable:true}):c,a));var h=(a,b,c)=>b.has(a)||g(\"Cannot \"+c);var r=(a,b,c)=>(h(a,b,\"read from private field\"),c?c.call(a):b.get(a)),s=(a,b,c)=>b.has(a)?g(\"Cannot add the same private member more than once\"):b instanceof WeakSet?b.add(a):b.set(a,c),t=(a,b,c,d)=>(h(a,b,\"write to private field\"),d?d.call(a,c):b.set(a,c),c);export{o as a,p as b,q as c,r as d,s as e,t as f};//# sourceMappingURL=chunk-R42SWOGE.mjs.map\n//# sourceMappingURL=chunk-R42SWOGE.mjs.map", "export function getId():string{\r\n    return Date.now().toString() + parseInt(String(Math.random() * 1000))\r\n}", "/**\n * 判断值是否是一个数字\n * \n * 默认情况下，也会对字符串类型的数字进行判断\n * 如isNumber('123')返回true\n * \n * \n * @param {*} value \n * @returns \n */\nexport function isNumber(value:any,strict:boolean=false):boolean {    \n    if(typeof(value)=='number') return true\n    if(typeof(value)!='string') return false\n    // 如果是严格模式，那么不允许字符串类型的数字\n    if(strict) return false        \n    try{\n        if(value.includes(\".\")){\n            let v = parseFloat(value)\n            if(value.endsWith(\".\")){                \n                return !isNaN(v) && String(v).length===value.length-1\n            }else{\n                return !isNaN(v) && String(v).length===value.length\n            }            \n        }else{\n            let v = parseInt(value)\n            return !isNaN(v) && String(v).length===value.length\n        }    \n    }catch{\n        return false\n    }\n}\n", "import { isNumber } from \"flex-tools/typecheck/isNumber\";\r\n\r\n/**\r\n * 文本id必须是一个数字\r\n * @param {*} content \r\n * @returns \r\n */\r\nexport function isMessageId(content:string){\r\n    return isNumber(content)\r\n}", "\r\nexport function isI18nScope(obj:any){\r\n    return obj && typeof(obj)==='object' && obj.__VoerkaI18nScope__ \r\n}", " \r\nexport async function loadAsyncModule(this:any,module:Function):Promise<any>{\r\n    const loadResult = (await (module as any).call(this))    \r\n    // @ts-ignore      \r\n    if((loadResult && \"__esModule\" in loadResult) || (Symbol.toStringTag in loadResult)){\r\n        return  (loadResult as any).default \r\n    }else{\r\n        return  loadResult\r\n    }  \r\n    \r\n} ", "import { IVoerkaI18nStorage } from \"@/types\";\r\n\r\n\r\nexport function isStorage(obj:any):obj is IVoerkaI18nStorage{\r\n    return obj \r\n        && typeof obj.get === 'function' \r\n        && typeof obj.set === 'function' \r\n        && typeof obj.remove === 'function'\r\n}", "/**\r\n * 异步执行一组Promise，并返回所有Promise的结果\r\n * \r\n * 该函数会处理所有Promise，无论成功或失败都会返回结果。\r\n * 如果环境支持Promise.allSettled，则直接使用；\r\n * 否则会手动包装每个Promise，确保不会抛出未捕获的异常。\r\n * \r\n * @template T Promise的返回值类型\r\n * @param {Promise<T>[]} promises 要执行的Promise数组\r\n * @returns {Promise<(T | Error)[]>} 返回一个Promise，resolve为包含所有结果的数组，\r\n *                                   每个元素要么是Promise的返回值，要么是Error对象\r\n */\r\nexport async function execAsyncs<T=any>(promises: Promise<T>[]): Promise<(T | Error)[]> {\r\n    // if (typeof Promise.allSettled === 'function') { // 更安全地检查Promise.allSettled是否存在      \r\n    const results = await Promise.allSettled(promises);\r\n    return results.map(result => \r\n        result.status === 'fulfilled' ? result.value : result.reason\r\n    );\r\n    // } else {\r\n    //     // 先包装每个Promise，统一处理错误\r\n    //     const wrappedPromises = promises.map(promise =>{\r\n    //         return new Promise<T | Error>(resolve => {\r\n    //             Promise.resolve(promise)\r\n    //                 .then(r => resolve(r))\r\n    //                 .catch(e => resolve(e instanceof Error ? e : new Error(String(e)))); // 确保错误是Error实例            \r\n    //         });            \r\n    //     })\r\n    //     return await Promise.all(wrappedPromises); \r\n    // }\r\n}", "export function isBrowser():boolean {\r\n    try{\r\n    return typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\r\n    }catch{\r\n        return false\r\n    }\r\n}", "import type {  VoerkaI18nScope } from \"../scope\"\r\nimport type { VoerkaI18nLanguage, VoerkaI18nEvents, VoerkaI18nPlugin }  from \"../types\"\r\nimport { LiteEvent } from \"flex-tools/events/liteEvent\" \r\nimport { execAsyncs, isI18nScope } from \"../utils\"  \r\n \r\n/** \r\n * 多语言管理类\r\n * \r\n * 当导入编译后的多语言文件时(import(\"./languages\"))，会自动生成全局实例VoerkaI18n\r\n *  \r\n * VoerkaI18n.languages             // 返回支持的语言列表\r\n * VoerkaI18n.defaultLanguage       // 默认语言\r\n * VoerkaI18n.language              // 当前语言\r\n * VoerkaI18n.change(language)      // 切换到新的语言 \r\n * \r\n * \r\n * VoerkaI18n.on(\"change\",(language)=>{})  // 注册语言切换事件\r\n * VoerkaI18n.off(\"change\",(language)=>{}) \r\n * \r\n * */ \r\n\r\nexport class VoerkaI18nManager extends LiteEvent<VoerkaI18nEvents>{\r\n    __VoerkaI18nManager__ = true\r\n    static instance?              : VoerkaI18nManager  \r\n    private _scopes               : VoerkaI18nScope[] = []    \r\n    private _appScope!            : VoerkaI18nScope \r\n    \r\n    constructor(appScope?:VoerkaI18nScope){\r\n        super()      \r\n        if(VoerkaI18nManager.instance){\r\n            return VoerkaI18nManager.instance;\r\n        }        \r\n        if(!appScope) throw new Error(\"create VoerkaI18nManager failed, appScope is required\")\r\n        this._registerAppScope(appScope)                                // 注册应用作用域     \r\n        this._registerScopes()                                          // 注册所有作用域\r\n        this._loadPlugins()\r\n        VoerkaI18nManager.instance = this                               // 加载初始格式化器   \r\n        // @ts-ignore\r\n        globalThis.VoerkaI18n = this   \r\n    }\r\n    get debug(){return this.scope.debug }  \r\n    get logger(){ return this.scope.logger! }                            // 日志记录器                        \r\n    get scopes(){ return this._scopes }                                 // 注册VoerkaI18nScope实例 \r\n    get activeLanguage(){ return this._appScope.activeLanguage }        // 当前激活语言名称   \r\n    get defaultLanguage(){ return this._appScope.defaultLanguage }      // 当前默认语言名称   \r\n    get loader(){ return this._appScope.loader}                         // 默认语言包加载器 \r\n    get storage(){return this.scope!.storage}\r\n    get languages(){return this.scope.languages}\r\n    get scope(){return this._appScope!}\r\n \r\n    /**\r\n     * 注册所有i18nScope作用域。\r\n     * 该方法会检查全局对象中的 `__VoerkaI18nScopes__` 属性，\r\n     * 如果该属性存在且为数组，则遍历数组并注册每个作用域。\r\n     * 这是内部实现细节，不对外暴露。\r\n     */\r\n    private _registerScopes() {\r\n        const scopes = globalThis.__VoerkaI18nScopes__\r\n        if(scopes && Array.isArray(scopes)){\r\n            scopes.forEach(scope=>this.register(scope)) \r\n        }        \r\n        // @ts-ignore\r\n        delete globalThis.__VoerkaI18nScopes__\r\n    }\r\n    getScope(id:string | undefined | null){\r\n        return this._scopes.find(scope=>scope.id===id)\r\n    }\r\n    private _loadPlugins(){\r\n        const plugins = globalThis.__VoerkaI18nPlugins__\r\n        if(plugins && Array.isArray(plugins)){\r\n            plugins.forEach(plugin=>plugin(this)) \r\n        }        \r\n        // @ts-ignore\r\n        delete globalThis.__VoerkaI18nPlugins__\r\n    }    \r\n\r\n    registerPlugin(plugin:VoerkaI18nPlugin){\r\n        if(typeof(plugin)==='function'){\r\n            plugin(this)\r\n        }\r\n    }\r\n\r\n    /** \r\n     * 将应用Scope注册到管理器中 \r\n     */\r\n    private _registerAppScope(scope:VoerkaI18nScope){ \r\n        this._scopes.push(scope)\r\n        this._appScope = scope\r\n        this.logger.debug(\"VoerkaI18nScope<\"+scope.id+\"> is registered as appScope\")\r\n        this.emitAsync(\"init\",()=>{ \r\n            return this._appScope.activeLanguage\r\n        },true)\r\n    }\r\n    /**\r\n     * \r\n     * 注册一个新的作用域\r\n     * \r\n     * 每一个库均对应一个作用域，每个作用域可以有多个语言包，且对应一个翻译函数\r\n     * 除了默认语言外，其他语言采用动态加载的方式\r\n     * \r\n     * @param {*} scope \r\n     */\r\n    register(scope:VoerkaI18nScope){ \r\n        if(!isI18nScope(scope)) throw new Error(\"register scope failed, invalid scope\")\r\n        this._scopes.push(scope)     \r\n        scope.bind(this)            \r\n        this.logger.debug(`VoerkaI18nScope<${scope.id}> is registered`)\r\n    }    \r\n    /**\r\n     *  切换语言\r\n     */\r\n    async change(language:string){\r\n        await this._refreshScopes(language)          // 刷新所有作用域    \r\n        const activeLanguage = this._appScope.activeLanguage                                 \r\n        this.scope.saveLanguage()                    // 保存语言配置到存储器        \r\n        this.emit(\"change\",activeLanguage,true)     \r\n        this.logger.info(\"language changed to: \"+activeLanguage)\r\n        return activeLanguage\r\n    } \r\n     /**\r\n     * 当切换语言时调用此方法来加载更新语言包\r\n     * @param {*} newLanguage \r\n     */\r\n     private async _refreshScopes(newLanguage:string){       \r\n        const scopeRefreshers = this._scopes.map(scope=>scope.refresh(newLanguage))\r\n        await execAsyncs(scopeRefreshers)         \r\n    }     \r\n\r\n    /**\r\n     * 刷新所有作用域\r\n     */\r\n    async refresh(){\r\n        return await this._refreshScopes(this.activeLanguage)\r\n    }\r\n    /**\r\n     * 等待管理器初始化完成\r\n     *  \r\n     * @returns \r\n     */\r\n    ready(callback:(language:string)=>void,timeout?:number){\r\n        return this.waitFor(\"ready\",timeout).then((lang)=>{\r\n            if(callback) callback.call(this,lang)\r\n        })\r\n    } \r\n    /**\r\n     * 清除所有作用域的翻译补丁信息\r\n     */\r\n    clearPatchedMessages(){\r\n        this._scopes.forEach(scope=>scope.clearPatchedMessages())\r\n    }\r\n    /**\r\n\t * 返回是否存在指定的语言\r\n\t * @param {*} language 语言名称\r\n\t * @returns\r\n\t */\r\n\thasLanguage(language:string) {\r\n\t\treturn this.languages.findIndex((lang:VoerkaI18nLanguage) => lang.name == language) != -1;\r\n\t}\r\n    clearLanguage(){\r\n        this.scope.clearLanguage()\r\n    }\r\n    saveLanguage(){\r\n        this.scope.saveLanguage()\r\n    }\r\n    restoreLanguage(){\r\n        this.scope.restoreLanguage()        \r\n    }\r\n\r\n} \r\n ", "import { IVoerkaI18nStorage } from \"./types\" \r\n\r\nexport const LocalStorage = {\r\n    get(key:string){\r\n        if(globalThis.localStorage){\r\n            return globalThis.localStorage.getItem(key)\r\n        }\r\n    },\r\n    set(key:string,value:any){\r\n        if(globalThis.localStorage){\r\n            globalThis.localStorage.setItem(key,value)\r\n        }\r\n    },\r\n    remove(key:string){\r\n        if(globalThis.localStorage){\r\n            globalThis.localStorage.removeItem(key)\r\n        }\r\n    }\r\n} as IVoerkaI18nStorage", "import { LocalStorage } from \"./storage\"\r\nexport const DefaultFallbackLanguage = 'en'    \r\n\r\n\r\nexport const DefaultLanguageSettings =  [\r\n    {name: \"zh\",title: \"中文\",default:true,active:true},\r\n    {name: \"en\",title: \"英文\"}\r\n] \r\n\r\nexport const DataTypes =  [\"String\",\"Number\",\"Boolean\",\"Object\",\"Array\",\"Function\",\"Error\",\"Symbol\",\"RegExp\",\"Date\",\"Null\",\"Undefined\",\"Set\",\"Map\",\"WeakSet\",\"WeakMap\"]\r\n\r\nexport const VOERKAI18N_FORMATTER = Symbol(\"VoerkaI18nFormatter\")\r\n\r\n\r\nexport const VOERKAI18N_FORMATTER_BUILDER = Symbol(\"VoerkaI18nFormatterBuilder\")\r\n// 默认语言配置\r\nexport const defaultLanguageSettings = {  \r\n    debug          : true,\r\n    storage        : LocalStorage,\r\n    languages      : [\r\n        { name: \"zh\", title: \"中文\", default: true, active: true },\r\n        { name: \"en\", title: \"英文\" }\r\n    ]\r\n}  \r\n\r\n\r\nexport const TEleClassName   = \"vt-msg\"\r\nexport const TEleMsgIdAttr   = \"data-id\"\r\nexport const TEleScopeIdAttr = \"data-scope\"", "/**\r\n * \r\n *  事件发射器混入\r\n * \r\n */ \r\nimport { VoerkaI18nEvents, VoerkaI18nEventListener, VoerkaI18nEventSubscriber } from \"@/types\"\r\nimport type { VoerkaI18nScope } from \"..\"  \r\nimport { LiteEvent, LiteEventListener,LiteEventSubscriber } from \"flex-tools/events/liteEvent\" \r\n\r\n\r\n\r\n \r\nexport class EventEmitterMixin{\r\n    private _eventEmitter!: LiteEvent<VoerkaI18nEvents>\r\n    protected _getEventEmitter(this:VoerkaI18nScope):LiteEvent<VoerkaI18nEvents>{\r\n        if(this.attached){\r\n            return this.manager\r\n        }else{\r\n            if(!this._eventEmitter) this._eventEmitter = new LiteEvent<VoerkaI18nEvents>()\r\n            return this._eventEmitter\r\n        }\r\n    } \r\n\t// 以下方法引用全局VoerkaI18n实例的方法\r\n\ton(this:VoerkaI18nScope,event: keyof VoerkaI18nEvents,callback:VoerkaI18nEventListener) {\r\n        return this._getEventEmitter().on(event,callback) as VoerkaI18nEventSubscriber\r\n    }\r\n    once(this:VoerkaI18nScope,event: keyof VoerkaI18nEvents,callback:VoerkaI18nEventListener) {\r\n        return this._getEventEmitter().once(event,callback)  as VoerkaI18nEventSubscriber\r\n    }\r\n\toff(this:VoerkaI18nScope,event: keyof VoerkaI18nEvents,callback:VoerkaI18nEventListener) {\r\n        return this._getEventEmitter().off(event,callback); \r\n    }\r\n    waitFor(this:VoerkaI18nScope,event: keyof VoerkaI18nEvents,timeout?:number):Promise<any>{\r\n        return this._getEventEmitter().waitFor(event,timeout);\r\n    }\r\n    async emit(this:VoerkaI18nScope,event: keyof VoerkaI18nEvents,payload?:any,retain?:boolean):Promise<any> {\r\n        return await this._getEventEmitter().emitAsync(event,payload,retain);\r\n    }\r\n}\r\n\r\n\r\n ", "export function isFunction(fn:any):fn is Function{\n    return fn && typeof(fn)==\"function\"\n}", "/**\n * 返回是否原始{}\n * @param obj\n * @returns {boolean}\n */\nexport function isPlainObject(obj:any):boolean{\n    if (typeof obj !== 'object' || obj === null) return false;\n    var proto = Object.getPrototypeOf(obj);\n    if (proto === null) return true;\n    var baseProto = proto;\n    while (Object.getPrototypeOf(baseProto) !== null) {\n        baseProto = Object.getPrototypeOf(baseProto);\n    }\n    return proto === baseProto;\n}\n", "/**\n *  生成一个异步控制信号\n *\n *  当满足condition时会进行等待\n *\n *  定义一个异步等待信号\n *  let signal = asyncSignal()\n *\n *  //\n *  然后在需要等待的地方\n *  await signal()\n *  await signal(100)  代表信号会自动超时resolve\n *  await signal(100,new Error())  代表信号会自动超时reject\n *\n *  可以手动resolve或reject该signal\n *  当要结束等待时调用 signal.resolve()\n *  当等待出错时调用 signal.reject()\n *\n * 可以传入一个condition函数，当signal.resolve时，会同时进行调用，该函数必须返回true，否则会继承等待\n * 超时时不会调用\n * let signal = asyncSignal(()=>{})\n *\n *  当signal使用一次后，如果需要再次使用，则需要signal.reset()复位一下，然后就可以\n *   await signal()\n *\n *  @param {Function} constraint 约束函数，指定当resolve或reject时，需要同时满足这个约束函数返回true才会进行resolve或reject\n *\n */ \n\n \n export class AsyncSignalAbort extends Error {}\n \n export interface IAsyncSignal {\n    (timeout?:number,returns?:any):Awaited<Promise<any>>\n    id:number\n    reset(): void\n    reject(e?:Error | string):void\n    resolve(result?: any):void\n    destroy():void\n    isResolved():boolean\n    isRejected():boolean\n    isPending():boolean\n }\n\n\nlet AsyncSignalId = 0\n\n/**\n * 生成一个异步信号\n * \n * const signal = asyncSignal()\n * const signal = asyncSignal(()=>x==1,{timeout:10})\n * \n * await  signal(timeout)\n * signal.resolve()\n * signal.reject()\n * signal.destroy()\n *\n * @param {function} constraint\n *      当调用signal.resolve()时，还需要满足额外的约束条件，仅当constraint返回true，则signal才可以进行真正resolve\n * @returns {function}\n */\n\nexport function asyncSignal(constraint?:Function,options:{timeout:number}={timeout:0}) : IAsyncSignal {     \n     let isResolved:boolean = false,isRejected:boolean = false,isPending:boolean = false\n     let resolveSignal:Function, rejectSignal:Function, timeoutId:any = 0\n     let objPromise:Promise<any> | null\n     let signalId = ++AsyncSignalId\n\n     // 重置信号，可以再次复用\n     const reset = function () {\n         clearTimeout(timeoutId)\n         isResolved = false\n         isRejected = false\n         isPending = false\n         objPromise = new Promise((resolve, reject) => {\n             resolveSignal = resolve\n             rejectSignal = reject\n         })\n     }\n     \n     reset()\n\n    async function signal(timeout:number =0 , returns?:any){\n         // 如果constraint返回的true，代表不需要等待\n         if (typeof (constraint) === \"function\" && constraint()) {\n             isResolved = true\n             return\n         }\n\n         // 如果信号上次已经完成了，则需要重置信号\n         if (isResolved || isRejected) reset()\n \n         // 指定超时功能\n         if (timeout > 0) {\n             timeoutId = setTimeout(() => {\n                 isResolved = true\n                 try {\n                     if (returns instanceof Error) {\n                         rejectSignal(returns)\n                     } else {\n                         resolveSignal(returns)\n                     }\n                 } catch {\n                 }\n             }, timeout)\n         }\n         isPending = true\n         return objPromise\n     }\n     signal.id = signalId\n     signal.resolve = (result?:any) => {        \n         clearTimeout(timeoutId)\n         if(!isPending) return \n         if (isResolved || isRejected) return\n         // 注意：是否真正resolve还受约束条件的约束，只有满足约束条件时才会真正resolve\n         if (typeof (constraint) === \"function\" && constraint()) {\n             if(constraint()){\n                 resolveSignal(result)\n             }else{\n                // 如果不满足约束条件，则静默返回，可以通过signal.isFulfilled()来判断是否完成\n                return    \n             }\n         } else {\n             resolveSignal(result)\n         }\n         isResolved = true\n     } \n\n     signal.reject = (e?:Error | string) => {        \n         clearTimeout(timeoutId)\n         if(!isPending) return \n         if (isResolved || isRejected) return\n         rejectSignal(typeof(e)==='string' ? new Error(e) : ((e instanceof Error) ? e : new Error()))\n         isRejected = true\n     }\n \n     // 信号被销毁时，产生一个中止错误，信号的使用者可以据此进行善后处理\n     signal.destroy = () => {\n        clearTimeout(timeoutId)\n        if(isPending) rejectSignal(new AsyncSignalAbort())   \n        isResolved =false\n        isPending = false         \n        isRejected =false\n        objPromise = null\n     }\n\n     signal.reset = reset\n     signal.isResolved = () => isResolved\n     signal.isRejected = () => isRejected \n     signal.isPending = () => isPending \n     return signal as unknown as IAsyncSignal\n }\n \n /**\n  *   管理多个异步信号，并确保能正确resolve和reject\n  *\n  *\n  *\n  *  let signals = new AsyncSignalManager({\n  *      timeout:60 * 1000,               // 所有信号均在1分钟后自动超时，0代表不设超时，并且此值应该大于signal(timeout)时指定的超时值\n  *  })\n  *\n  *  signal = signals.create() 创建一个asyncSignal\n  *\n  *  signals.destroy()   销毁所有异步信号\n  *  signal.resolve()    resolve所有异步信号\n  *  signal.reject()     reject所有异步信号\n  *  signal.reset()      reset所有异步信号\n  *\n  *\n  */\n  \n\n export class AsyncSignalManager {\n    #_signals:Record<string,IAsyncSignal> = {}\n    constructor(public options?:{timeout: number} ) {\n         this.options = Object.assign({\n             timeout:0,// 为所有异步信号提供一个默认的超时时间，当信号超时未resolve时，会自动进行reject(timeout)\n         },options)\n     }\n     get signals():Record<string,IAsyncSignal> {return this.#_signals} \n \n     /**\n      * 创建新的异步信号\n      * @param constraint         额外的约束条件\n      * @param id\n      */\n     create(constraint?:Function){\n         let signal = asyncSignal(constraint,this.options)\n         this.#_signals[signal.id] = signal\n         return signal\n     }\n \n     /**\n      * 销毁指定的或者所有异步信号\n      *\n      *  destroy(id)\n      *  destroy([id,id,...])\n      *  destroy()                   // 销毁所有\n      * @param {string} id           可选的信号id,如果未指定则删除所有的信号\n      *\n      */ \n      \n    destroy(id:number | number[] | undefined) {\n         let ids = Array.isArray(id) ? id : (id===undefined ? Object.keys(this.#_signals) : [id])\n         for(let id of ids){\n             if(id in this.#_signals){\n                 try{\n                     this.#_signals[id].destroy()\n                     delete this.#_signals[id]\n                 }catch (e) { }\n             }\n         }\n    }\n    resolve(){\n         let args = arguments\n         Object.values(this.#_signals).forEach(signal=>signal.resolve(args))\n    }\n    reject(e:Error | string){\n         Object.values(this.#_signals).forEach(signal=>signal.reject(e))\n    }\n    reset(){\n         Object.values(this.#_signals).forEach(signal=>signal.reset())\n    }\n } \n\n ", "import type { VoerkaI18nLanguageMessages } from \"@/types\";\r\nimport type { VoerkaI18nScope } from \"..\";\r\nimport { isFunction  } from \"flex-tools/typecheck/isFunction\";\r\nimport { isPlainObject } from \"flex-tools/typecheck/isPlainObject\"; \r\nimport { IAsyncSignal,asyncSignal } from \"flex-tools/async/asyncSignal\";\r\n\r\n/**\r\n * 语言包补丁\r\n * \r\n */\r\nexport class PatchMessageMixin{    \r\n\tprotected _patching:IAsyncSignal | undefined\r\n\tprivate _getPatchKey(this:VoerkaI18nScope,language:string){\r\n\t\treturn `voerkai18n_${this.id}_${language}_patched_messages`\r\n\t}\r\n    /**\r\n     * 清除保存在本地的补丁语言包\r\n     * @param language \r\n     */\r\n    clearPatchedMessages(this:VoerkaI18nScope,language?:string) {\r\n        if(this.storage){\r\n            let langs = language ? [language] : this.languages.map(language=>language.name);\r\n            for(let lang of langs){\r\n                this.storage.remove(this._getPatchKey(lang));\r\n            }\r\n        }\r\n    } \r\n\t/**\r\n\t * 当指定了默认语言包加载器后，会从服务加载语言补丁包来更新本地的语言包\r\n\t *\r\n\t * 补丁包会自动存储到本地的LocalStorage中\r\n\t *\r\n\t * @param {*} messages\r\n\t * @param {*} language\r\n\t * @returns {Promise<number>} 返回补丁包的数量\r\n\t */\r\n\tprotected async _patch(this:VoerkaI18nScope, language?:string){\r\n\t\tthis._patching = asyncSignal();\r\n\t\tif (!language) language = this.activeLanguage;\r\n      \t// 1. 从本地存储中恢复补丁\r\n        this._restorePatchedMessages(this.activeMessages, language); \r\n\t\t// 2. 从远程加载语言包补丁\t\t\r\n\t\ttry {\r\n\t\t\tif (isFunction(this.loader)){\r\n\t\t\t\tconst pachedMessages = (await this._loadMessagesFromLoader(language)) as unknown as VoerkaI18nLanguageMessages;\r\n\t\t\t\tif(isPlainObject(pachedMessages)){\r\n\t\t\t\t\tObject.assign(this._activeMessages, pachedMessages);\r\n\t\t\t\t\tthis._setPatchedMessages(pachedMessages, language);\r\n\t\t\t\t\tthis.emit('patched',{ language:language,scope:this.id })\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}catch (e:any) {\r\n\t\t\tthis.logger.warn(`从远程加载语言补丁包<${language}>时出错: ${e.stack}(scope=${this.id})`);\r\n\t\t}finally{\r\n\t\t\tthis._patching?.resolve()\r\n\t\t\tthis._patching = undefined\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 从本地存储中读取语言包补丁合并到当前语言包中\r\n\t */\r\n\tprotected _restorePatchedMessages(this:VoerkaI18nScope,messages:VoerkaI18nLanguageMessages,language:string) {\r\n\t\tconst patchedMessages = this._getPatchedMessages(language);\r\n\t\tif (isPlainObject(patchedMessages)){\r\n            Object.assign(messages, patchedMessages);\r\n            this.emit('restore',{language,scope:this.id})\r\n            this.logger.debug(`成功恢复补丁语言包<${language}>(scope=${this.id})`);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 将读取的补丁包保存到本地的LocalStorage中\r\n\t *\r\n\t * 为什么要保存到本地的LocalStorage中？\r\n\t *\r\n\t * 因为默认语言是静态嵌入到源码中的，而加载语言包补丁是延后异步的，\r\n\t * 当应用启动第一次就会渲染出来的是没有打过补丁的内容。\r\n\t *\r\n\t * - 如果还需要等待从服务器加载语言补丁合并后再渲染会影响速度\r\n\t * - 如果不等待从服务器加载语言补丁就渲染，则会先显示未打补丁的内容，然后在打完补丁后再对应用进行重新渲染生效\r\n\t *   这明显不是个好的方式\r\n\t *\r\n\t * 因此，采用的方式是：\r\n\t * - 加载语言包补丁后，将之保存到到本地的LocalStorage中\r\n\t * - 当应用加载时会查询是否存在补丁，如果存在就会合并渲染\r\n\t *\r\n\t * @param {*} messages\r\n\t */\r\n\tprotected _setPatchedMessages(this:VoerkaI18nScope,messages:VoerkaI18nLanguageMessages, language:string) {\r\n        if(!this.attached && !this.storage) return \r\n\t\ttry {\r\n            this.storage && this.storage.set(this._getPatchKey(language),JSON.stringify(messages));\r\n\t\t} catch (e:any) {\r\n\t\t\tthis.logger.error(`保存语言包补丁(${language})时出错: ${e.stack}(scope=${this.id})`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 从本地缓存中读取补丁语言包\r\n\t * @param {*} language\r\n\t * @returns\r\n\t */\r\n\tprotected _getPatchedMessages(this:VoerkaI18nScope,language:string) {\r\n\t\ttry {\r\n            if(this.storage && this.options.cachePatch){\r\n                return this.storage.get(this._getPatchKey(language)) \r\n            }else{\r\n                return {};\r\n            }\r\n\t\t} catch (e:any) {\r\n            this.logger.error(`读取语言包补丁(${language})时出错:${e.stack}(scope=${this.id})`);\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n}\r\n\r\n", "export class VoerkaI18nError extends Error{}\r\nexport class VoerkaI18nInvalidLanguageError extends VoerkaI18nError{}\r\nexport class VoerkaI18nOnlyOneAppScopeError extends VoerkaI18nError{}\r\nexport class VoerkaI18nChangeLanguageError extends VoerkaI18nError{}\r\nexport class VoerkaI18nLoadLanguageError extends VoerkaI18nError{}\r\n", "/**\r\n * \r\n * \r\n * 加载语言包\r\n * \r\n */\r\n\r\nimport { isFunction } from \"flex-tools/typecheck/isFunction\";\r\nimport { isPlainObject } from \"flex-tools/typecheck/isPlainObject\";\r\nimport type { VoerkaI18nScope } from \"..\";\r\nimport type { VoerkaI18nDynamicLanguageMessages, VoerkaI18nLanguageMessages } from \"@/types\";\r\nimport { IAsyncSignal,asyncSignal } from \"asyncsignal\"\r\nimport {  VoerkaI18nError, VoerkaI18nLoadLanguageError } from \"@/errors\";\r\nimport { loadAsyncModule } from \"@/utils/loadAsyncModule\";\r\n\r\n\r\n\r\nexport class ChangeLanguageMixin{     \r\n    protected _refreshSignal? :IAsyncSignal \r\n\r\n    /** \r\n     * 刷新语言包 \r\n     * @param language \r\n     */\r\n    async refresh(this:VoerkaI18nScope,language?:string,options?:{fallback?:boolean,patch:boolean}):Promise<string>{\r\n        if(!this._refreshSignal) this._refreshSignal = asyncSignal() \r\n        if (!language) language   = this.activeLanguage;        \r\n        let finalLanguage : string = language; \r\n        let finalMessages : VoerkaI18nLanguageMessages | undefined = undefined\r\n        const { patch,fallback } = Object.assign({ fallback:false,patch:true },options)\r\n\r\n        try{\r\n            finalMessages = await this._loadLanguageMessages(language)\r\n            this._activeMessages = finalMessages as VoerkaI18nLanguageMessages\r\n            // 打语言包补丁, 如果是从远程加载语言包则不需要再打补丁了,因为远程加载的语言包已经是补丁过的了            \r\n            if(finalMessages && !finalMessages.$remote && patch) {\r\n                await this._patch(language);\r\n            }\r\n        }catch(e:any){\r\n            // 切换语言失败，回退到默认语言,  注意：回退语言是不可能出错的，无论回退到了何种语言，默认语言总是可以兜底的回退语言\r\n            if(e && e instanceof VoerkaI18nError){\r\n                const fallbackLanguage = this.getFallbackLanguage(language)\r\n                if(fallbackLanguage && fallbackLanguage!==language){\r\n                    finalLanguage = await this.refresh(fallbackLanguage,{ patch,fallback:true })\r\n                }\r\n            }\r\n        }finally{\r\n            if(!fallback){\r\n                this._activeLanguage = finalLanguage\r\n                if(typeof(this.messages[finalLanguage])==='function' || !(finalLanguage in this.messages)) this.messages[finalLanguage] = this._activeMessages\r\n                this._activeParagraphs = this.paragraphs[finalLanguage]\r\n                this._refreshSignal.resolve()\r\n                this._refreshSignal = undefined\r\n                await this.emit('scope/change',finalLanguage,true)\r\n            }\r\n        }\r\n        this._setLanguageAttr()    \r\n        return finalLanguage\r\n    }\r\n    /**\r\n     * \r\n     *   通过加载器从远程加载指定语言的语言包\r\n     * \r\n     *   - 简单的对象{}\r\n     *   - 或者是一个返回Promise<VoerkaI18nLanguageMessages>的异步函数\r\n     *   - 或者是全局的默认加载器 \r\n     * \r\n     * @param language 语言名称\r\n     * @returns \r\n     */\r\n    private async _loadLanguageMessages(this:VoerkaI18nScope,language:string):Promise<VoerkaI18nLanguageMessages | undefined>{\r\n        \r\n        this.logger.debug(`准备加载语言包:${language}`)\r\n\r\n        // 非默认语言可以是：语言包对象，也可以是一个异步加载语言包文件,加载器是一个异步函数\r\n\t\t// 如果没有加载器，则无法加载语言包，因此回退到默认语言\r\n\t\tconst loader = this.messages[language];\r\n        let messages:VoerkaI18nLanguageMessages | undefined = undefined;\r\n\r\n        if (isPlainObject(loader)) {                // 静态语言包\r\n            messages = loader as unknown as VoerkaI18nLanguageMessages;\r\n        } else if(isFunction(loader)) {             // 异步chunk语言包 \r\n            try{\r\n                messages = await loadAsyncModule.call(this,loader)\r\n            }catch(e:any){\r\n                this.logger.error(`加载异步语言包<${language}>失败:${e.message}`)\r\n                messages = undefined\r\n            }\r\n        } \r\n\r\n        // 使用全局默认加载器从服务器加载语言包\r\n        if (!messages && isFunction(this.loader)) { \r\n            // 从远程加载语言包:如果该语言没有指定加载器，则使用全局配置的默认加载器\r\n            try{\r\n                const remoteMessages = (await this._loadMessagesFromLoader(language)) as unknown as VoerkaI18nDynamicLanguageMessages;\r\n                if(isPlainObject(remoteMessages)){  \r\n                    messages = Object.assign(\r\n                        { $remote : true },                     // 添加一个标识，表示该语言包是从远程加载的                     \r\n                        this.messages[this.defaultLanguage], \r\n                        remoteMessages\r\n                    ) as VoerkaI18nLanguageMessages;            // 合并默认语言包和动态语言包,这样就可以局部覆盖默认语言包\r\n                }else{\r\n                    this.logger.error(`错误的语言包<${language}>数据:${remoteMessages}`)\r\n                }\r\n            }catch(e:any){\r\n                throw new VoerkaI18nLoadLanguageError(e.message)\r\n            }\r\n        }\r\n        if(!isPlainObject(messages)) throw new VoerkaI18nLoadLanguageError(language)\r\n        return messages\r\n    }\r\n    /**\r\n     * \r\n     * 从远程加载信息包\r\n     * \r\n     * @param this \r\n     * @param language \r\n     */\r\n    protected async _loadMessagesFromLoader(this:VoerkaI18nScope,language:string){\r\n        if(isFunction(this.loader)){\r\n            return await this.loader.call(this,language,this)      \r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * - 如果正在刷新语言包，则等待刷新完成\r\n     *  \r\n     * i18nScope.ready(callback,timeout)\r\n     *   \r\n     * @param this \r\n     * @returns \r\n     */\r\n    ready(this:VoerkaI18nScope,timeout?:number):Promise<void>  \r\n    ready(this:VoerkaI18nScope,callback:(activeLanguage:string)=>void,timeout?:number):void\r\n    ready(this:VoerkaI18nScope):any{  \r\n        const callback = typeof arguments[0] === 'function' ? arguments[0] : undefined\r\n        const timeout = typeof arguments[0] === 'number' ? arguments[0] : arguments[1]\r\n        if(typeof(callback)==='function'){\r\n            this.manager.ready(callback,timeout)      \r\n        }else{\r\n            return new Promise(resolve=>{\r\n                this.manager.ready(resolve,timeout)      \r\n            })\r\n        }        \r\n    }\r\n    /**\r\n     * await changing()\r\n     * \r\n     * @param this \r\n     * @param timeout \r\n     * @returns \r\n     */\r\n    async changing(this:VoerkaI18nScope,timeout?:number){\r\n        if(!this._refreshSignal && !this._patching) {\r\n            return        \r\n        }\r\n        await Promise.all([this._refreshSignal?.(timeout), this._patching?.(timeout)]) \r\n    }\r\n}", "import { VoerkaI18nManager } from \"./manager\"\r\n\r\nexport type VoerkaI18nLoggerLevels = 'warn' | 'error' | 'info' | 'debug'\r\n\r\nexport type VoerkaI18nLogger = {\r\n    [key in VoerkaI18nLoggerLevels]: (message:string,...args:any[])=>void\r\n}\r\n\r\nexport type VoerkaI18nLoggerOutput = (level:VoerkaI18nLoggerLevels,message:string)=>void\r\n\r\nexport const ConsoleLogger =  {\r\n    warn : console.warn,\r\n    error: console.error,\r\n    info : console.info,\r\n    debug: console.debug        \r\n}\r\n\r\n\r\n\r\nexport function createLogger(logFn:VoerkaI18nLoggerOutput):VoerkaI18nLogger{        \r\n    let  manager:VoerkaI18nManager    \r\n    const logCache:[string,string][] = []\r\n    const logOutput = (level:VoerkaI18nLoggerLevels,...args:any[])=>{\r\n        const message = args.join(\" \")\r\n        if(!manager){\r\n            // @ts-ignore\r\n            manager =  globalThis.VoerkaI18n \r\n            if(manager && manager instanceof VoerkaI18nManager){\r\n                if(manager.debug){\r\n                    logCache.push([level,message])\r\n                    const log = (level:VoerkaI18nLoggerLevels,message:string)=>{                        \r\n                        if(logFn){\r\n                            logFn(level,message)\r\n                        }else{\r\n                            ConsoleLogger[level as VoerkaI18nLoggerLevels](message)\r\n                        }\r\n                    }\r\n                    manager.on(\"log\",({level, message}) => log(level as any, message))\r\n                    logCache.forEach(([level,message])=>log(level as any,message))\r\n                }else{                    \r\n                    logCache.splice(0,logCache.length)      // 清空缓存\r\n                }\r\n            }else{\r\n                logCache.push([level,message])\r\n            }\r\n        }else{\r\n            if(!manager.debug) return\r\n            manager.emit(\"log\",{level,message})    \r\n        }\r\n    }\r\n    return { \r\n        warn: ( ...args: any[]) => logOutput(\"warn\",...args),\r\n        error: ( ...args: any[]) => logOutput(\"error\",...args),\r\n        info: ( ...args: any[]) => logOutput(\"info\",...args),\r\n        debug: (...args: any[]) => logOutput(\"debug\",...args)\r\n    }\r\n}\r\n ", "/**\r\n * \r\n *  保存所有格式化器数据\r\n *  \r\n */\r\nimport { Dict, LanguageName } from '@/types';\r\nimport type { VoerkaI18nScope } from '../scope';        \r\nimport { VoerkaI18nFormatter, VoerkaI18nFormatterBuilder, VoerkaI18nFormatters } from './types';\r\n \r\nexport interface VoerkaI18nScopeCache{\r\n    activeLanguage :string | null,\r\n    typedFormatters: VoerkaI18nFormatters,\r\n    formatters     : VoerkaI18nFormatters,\r\n}\r\n\r\nexport class FormattersNotLoadedError extends Error{\r\n    constructor(language:string){\r\n        super(`Formatters of language<${language}> is not loaded,try to call load()`)\r\n    }\r\n} \r\n\r\nexport class VoerkaI18nFormatterManager{\r\n    private _formatters        : VoerkaI18nFormatters = [] \r\n    private _scope             : VoerkaI18nScope                                         \r\n\r\n    constructor(scope:VoerkaI18nScope){ \r\n        this._scope = scope   \r\n        this._formatters = scope?.options.formatters     \r\n        this._registerFormatters()\r\n    }    \r\n    get scope(){ return this._scope! }      \r\n    get formatters(){ return this._formatters }    \r\n    /** \r\n     * 加载所有格式化器 \r\n     */\r\n    private _registerFormatters(){\r\n        this._formatters && this._formatters.forEach((formatter)=>{\r\n            if(Array.isArray(formatter)){\r\n                this.register.apply(this,formatter as any);\r\n            }else{\r\n                this.register.apply(this,[formatter]);\r\n            }\r\n        })        \r\n    }   \r\n    private _addFormatter(filter:VoerkaI18nFormatter<any,any>){\r\n        try{\r\n            this.scope.interpolator.addFilter(filter)\r\n            // 如果是全局格式化器，则注册到全局scope(即appCcope)里面\r\n            if(filter){\r\n                const appScope = this.scope.manager.scope\r\n                if(appScope.id !== this.scope.id){\r\n                    appScope.interpolator.addFilter(filter)\r\n                }\r\n            }\r\n        }catch(e:any){\r\n            this.scope.logger.error(`fail while register formatter<${filter.name}>：${e.stack}`)\r\n        }\r\n    }\r\n    register<Args extends Dict,Config extends  Dict = Args>(\r\n        formatter: VoerkaI18nFormatter<Args, Config>,\r\n        configs? : Partial<Record<LanguageName,Partial<Config>>>,\r\n        defaultConfig? : Partial<Config>\r\n    ){\r\n        const scope = this.scope\r\n        const oldNext = formatter.next\r\n        formatter.next = function (value, args, ctx) {\r\n            const langConfig = ctx.getConfig as any // 语言包中的$config\r\n            ctx.getConfig = () => {\r\n                return Object.assign({}, \r\n                    defaultConfig,\r\n                    configs?.[scope.activeLanguage],                    \r\n                    langConfig(formatter.name),                    \r\n                ) as Config;\r\n            }\r\n            return oldNext.call(this, value, args, ctx);\r\n        }  \r\n        // \r\n        this._addFormatter(formatter) \r\n    }\r\n\r\n}", "\r\n/**\r\n * 判断给定对象是否为管理者对象。\r\n * 管理者对象需满足以下条件：\r\n * 1. 是一个对象。\r\n * 2. 具有 `__VOERKAI18N_MANAGER__` 属性。\r\n * \r\n * 为什么不用 `instanceof` 运算符？\r\n * \r\n * 为了兼容让scope可以注册到不同版本的VoerkaI18nManager中，不能使用instanceof运算符。\r\n * \r\n * \r\n * @param obj 要检查的对象\r\n * @returns 如果对象是管理者对象，则返回 true；否则返回 false。\r\n */\r\nexport function isI18nManger(obj: any) {\r\n    return obj && typeof (obj) === 'object' && obj.__VoerkaI18nManager__\r\n}", "import type { VoerkaI18nLanguage } from \"@/types\";\r\nimport type { VoerkaI18nScope } from \"..\";\r\n\r\n\r\nexport class LanguageMixin{\r\n\t/**\r\n\t * 获取指定语言信息\r\n\t * @param {*} language\r\n\t * @returns\r\n\t */\r\n\tgetLanguage(this:VoerkaI18nScope,language:string):VoerkaI18nLanguage | undefined{\r\n\t\tlet index = this.languages.findIndex((lng) => lng.name == language);\r\n\t\tif (index !== -1) return this.languages[index];\r\n    }\r\n\r\n    /**\r\n     * 获取指定语言的备用语言。如果指定的语言存在备用语言选项，则返回该备用语言；否则返回默认语言。\r\n     * @param this - VoerkaI18nScope 实例\r\n     * @param language - 需要获取备用语言的目标语言代码\r\n     * @returns 返回备用语言代码或默认语言代码\r\n     */\r\n    getFallbackLanguage(this: VoerkaI18nScope, language: string): string {\r\n        const lngOptions = this.getLanguage(language)\r\n\t\treturn (lngOptions && lngOptions.fallback)\r\n\t\t\t\t\t|| this.options.fallback\r\n\t\t\t\t\t|| this._defaultLanguage        \r\n    }\r\n\t/**\r\n\t * 返回是否存在指定的语言\r\n\t * @param {*} language 语言名称\r\n\t * @returns\r\n\t */\r\n\thasLanguage(this:VoerkaI18nScope,language:string) {\r\n\t\treturn this.languages.findIndex((lang:VoerkaI18nLanguage) => lang.name == language) != -1;\r\n\t} \r\n}\r\n\r\n ", "import { isMessageId } from \"@/utils/isMessageId\"\r\nimport { isFunction } from \"flex-tools/typecheck/isFunction\"\r\nimport { isNumber } from \"flex-tools/typecheck/isNumber\"\r\nimport { isPlainObject } from \"flex-tools/typecheck/isPlainObject\"\r\nimport type { VoerkaI18nScope } from \"..\"\r\nimport type { VoerkaI18nTranslateVars, VoerkaI18nTranslateOptions, VoerkaI18nLanguageMessages } from \"@/types\"\r\n\r\n\r\n\r\nexport class TranslateMixin {    \r\n    /**\r\n     * 根据值的单数和复数形式，从messages中取得相应的消息\r\n     * \r\n     * @param {*} messages  复数形式的文本内容 = [<=0时的内容>，<=1时的内容>，<=2时的内容>,...,<>=N的内容>]\r\n     * @param {*} value \r\n     */\r\n    private _getPluraMessage(this:VoerkaI18nScope,messages:string | string[],value:number){\r\n        try{\r\n            if(Array.isArray(messages)){\r\n                return messages.length > value ? messages[value] : messages[messages.length-1]\r\n            }else{\r\n                return messages\r\n            }\r\n        }catch{\r\n            return Array.isArray(messages) ? messages[0] : messages\r\n        }\r\n    }\r\n    private _getPluraValue(args:any):[number | null,any[]]{\r\n        let pluraValue:number | null = null                 // 复数值        \r\n        let vars:any[] = []                                 // 插值变量列表\r\n        // 1. 预处理变量:  复数变量保存至pluralVars中 , 变量如果是Function则调用 \r\n        if(isPlainObject(args)){// 字典插值\r\n            const dictVars:Record<string,any> = args\r\n            for(const [name,value] of Object.entries(dictVars)){\r\n                if(isFunction(value)){\r\n                    try{\r\n                        dictVars[name] = value()\r\n                    }catch{\r\n                        dictVars[name] = value\r\n                    }\r\n                }                   \r\n                const isNum:boolean = typeof(dictVars[name])===\"number\"  // 以$开头的视为复数变量，记录下来\r\n                if((pluraValue==null && isNum) || name.startsWith(\"$\") && isNum){\r\n                    pluraValue = dictVars[name]\r\n                }\r\n            }            \r\n            vars = [dictVars]\r\n        }else if(Array.isArray(args)){      // 位置插值\r\n            vars = args.map((arg)=>{\r\n                try{\r\n                    arg = isFunction(arg) ? arg() : arg\r\n                    if(isNumber(arg) && !pluraValue) pluraValue = parseInt(arg)     // 约定：位置参数中以第一个数值变量作为指示复数变量\r\n                }catch{\r\n                    return String(arg)\r\n                 }\r\n                return arg   \r\n            })            \r\n        }else if(args!==undefined){         // 单个插值\r\n            pluraValue = isNumber(args) ? parseInt(args) : 0\r\n            vars = [args]\r\n        }\r\n        return [pluraValue,vars]\r\n    } \r\n \r\n    /**\r\n     * 翻译组件\r\n     * \r\n     */\r\n    protected _getTranslateComponent(this: VoerkaI18nScope ): any {\r\n        if(!this._translateComponent){\r\n            const builder =  this.options.component || this.appScope.options.component\r\n            if(typeof(builder)==='function'){\r\n                this._translateComponent =  builder.call(this,this)\r\n            }else{\r\n                this._translateComponent = ()=>{}\r\n                this.logger.warn(\"No translate component builder configured\")\r\n            }\r\n        }\r\n        return this._translateComponent\r\n    }\r\n    protected _getTranslateTransformer(this: VoerkaI18nScope ): any {\r\n        if(!this._translateTransformer){\r\n            const builder =  this.options.transform || this.appScope.options.transform\r\n            if(typeof(builder)==='function'){\r\n                this._translateTransformer =  builder.call(this,this)\r\n            }\r\n        }\r\n        return this._translateTransformer\r\n    }\r\n\r\n    private _getActiveMessages(this:VoerkaI18nScope,language:string):VoerkaI18nLanguageMessages{\r\n        const messages = this.messages[language]         \r\n        if(typeof messages === 'function') {\r\n            this.logger.warn(`When the t function specifies the language <${language}> , only synchronized language packs can be used`)\r\n            return this.activeMessages \r\n        }\r\n        return (this.messages as any)[language] as VoerkaI18nLanguageMessages\r\n    }\r\n    translate<R=string>(this:VoerkaI18nScope, message:string, vars?:VoerkaI18nTranslateVars, options?:VoerkaI18nTranslateOptions):R{ \r\n        if(typeof(message)!=='string'){\r\n            this.logger.debug(`failed to translate message:${message},it is not a string`)\r\n            return '' as R\r\n        } \r\n        const activeLanguage = options?.language || this.activeLanguage\r\n        const activeMessages = this._getActiveMessages(activeLanguage)\r\n        \r\n        // 为什么样要转义换行符？因为在translates/*.json中key不允许换行符存在，需要转义为\\\\n，这里需要转回来\r\n        message = message.replace(/\\n/g,\"\\\\n\")\r\n        // 如果内容是复数，则其值是一个数组，数组中的每个元素是从1-N数量形式的文本内容\r\n        let result:any = message        \r\n        if(!(typeof(message)===\"string\")) return message \r\n        const finalArgs = vars===undefined ? [] : (isFunction(vars) ? vars() : vars) \r\n        try{            \r\n            if(isMessageId(message)){ // 如果是数字id,\r\n                result = (activeMessages as any)[message] || message\r\n            }else{\r\n                const msgId = this.idMap[message]  \r\n                // 语言包可能是使用idMap映射过的，则需要转换\r\n                result = ( activeMessages[msgId]  || activeMessages[message] || message ) as string | string[]\r\n            }\r\n            const [pluraValue,vars] = this._getPluraValue(finalArgs)\r\n             // 2. 处理复数\r\n            // 经过上面的处理，content可能是字符串或者数组\r\n            // content = \"原始文本内容\" || 复数形式[\"原始文本内容\",\"原始文本内容\"....]\r\n            // 如果是数组说明要启用复数机制，需要根据插值变量中的某个变量来判断复数形式\r\n            if(Array.isArray(result) && result.length>0){\r\n                // 如果存在复数命名变量，只取第一个复数变量\r\n                if(pluraValue!==null){  // 启用的是位置插值 \r\n                    result = this._getPluraMessage(result,pluraValue!)\r\n                }else{ // 如果找不到复数变量，则使用第一个内容\r\n                    result = result[0]\r\n                }\r\n            }         \r\n            // 如果没有传入插值变量，则直接返回\r\n            if(finalArgs.length===0) result as string\r\n            // 进行插值处理\r\n            result = this.interpolator.replace(result as string,...vars)\r\n            \r\n            if(this._translateTransformer && options?.transform){\r\n                result = this._translateTransformer(result,vars,options)\r\n            }\r\n\r\n        }catch(e:any){\r\n            this.logger.error(`翻译失败：${e.stack}`) \r\n        }  \r\n        return result as R\r\n    } \r\n}", "/**\r\n * \r\n * 从存储中恢复语言\r\n * \r\n */\r\nimport { IVoerkaI18nStorage } from \"@/types\"\r\nimport type { VoerkaI18nScope } from \"..\"\r\nimport { isStorage } from \"@/utils/isStorage\"\r\n\r\n\r\nexport class RestoreMixin{\r\n    private _getStorage(this:VoerkaI18nScope):IVoerkaI18nStorage | undefined{\r\n        const storage = this.storage \r\n        return isStorage(storage) ? storage: undefined\r\n    }\r\n    /**\r\n     * \r\n     * @param this \r\n     */\r\n    private _getStorageKey(this:VoerkaI18nScope){\r\n        const storageKey = this.options.storageKey       \r\n        return storageKey.replace(\"{scope}\",this.id)\r\n    }\r\n    /**\r\n     * 从存储器加载语言配置\r\n     */\r\n    restoreLanguage(this:VoerkaI18nScope){\r\n        const storage = this._getStorage()\r\n        if(storage){      \r\n            const storageKey = this._getStorageKey()      \r\n            const savedLanguage = storage.get(storageKey)\r\n            if(!savedLanguage || !this.hasLanguage(savedLanguage))  return \r\n            this._activeLanguage = savedLanguage\r\n            this.logger.debug(`从存储<${storageKey}>中恢复保存的语言：${savedLanguage}`)\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * 将当前语言保存到Storage\r\n     * \r\n     */\r\n    saveLanguage(this:VoerkaI18nScope){\r\n        const storage = this._getStorage()\r\n        if(storage){\r\n            if(!this._activeLanguage)  return\r\n            const storageKey = this._getStorageKey()\r\n            storage.set(storageKey,this.activeLanguage)            \r\n            this.logger.debug(`当前语言已保存到存储${storageKey}=${this.activeLanguage}`)\r\n        }\r\n    }  \r\n    clearLanguage(this:VoerkaI18nScope){\r\n        const storage = this._getStorage()\r\n        if(storage){\r\n            storage.remove(this._getStorageKey())\r\n        }\r\n    }\r\n    \r\n}", "export interface GetByPathArgs {\n    defaultValue?: any; // 默认值\n    delimiter?: string; // 路径分隔符，默认为 '.',\n    matched?: ({ value, parent, indexOrKey }: {\n        value?     : any;\n        parent?    : object | any[];\n        indexOrKey?:  string | symbol | number;\n    }) => void;\n}\n\nexport function getByPath<R = any, T = object>(obj: T, path: string, options?: GetByPathArgs): R {\n    const { defaultValue, delimiter,matched } = Object.assign({\n        delimiter : '.'\n    },options)\n\n    if (!obj || typeof path !== 'string') {\n        return defaultValue as R;\n    }\n    if(!path) return obj as R    \n\n    const keys = path.split(delimiter);\n    let current: any = obj;\n    let parent: any \n    let indexOrKey:any\n    try{\n        for (const key of keys) {\n            if (current instanceof Map || current instanceof WeakMap) {\n                if(!current.has(key as any)) {\n                    return defaultValue as R\n                }\n                parent =  current                \n                indexOrKey = key\n                current = current.get(key as any);\n            } else if (current instanceof Set)  {\n                const index = parseInt(key, 10)\n                if(index>=current.size) return defaultValue as R\n                parent =  current\n                indexOrKey = index\n                current = [...current][index];\n            } else if (current && typeof current === 'object' && key in current) {\n                parent =  current\n                indexOrKey = Array.isArray(current) ? parseInt(key) : key\n                current = current[key];\n            } else {\n                return defaultValue as R;\n            }\n        }\n    }catch{\n        return defaultValue as R\n    }   \n    if(typeof(matched)===\"function\"){\n        matched({ value:current, parent, indexOrKey })\n    }\n    return current as R\n}", "import { FlexVars } from \"flexvars\"\r\nimport type { VoerkaI18nScope } from \"..\"\r\nimport {  getByPath } from \"flex-tools/object/getByPath\"\r\nimport { VoerkaI18nFormatterContext } from \"@/formatter/types\"\r\n\r\nexport class InterpolatorMixin{\r\n    protected _flexVars?        : FlexVars<VoerkaI18nFormatterContext>          // 变量插值处理器,使用flexvars    \r\n    protected _initInterpolators(this:VoerkaI18nScope){\r\n        this._flexVars = new FlexVars<VoerkaI18nFormatterContext>({\r\n            filterContext:{\r\n                getConfig:(configKey?:string)=>{\r\n                    const configs = (this.activeMessages['$config'] || {}) as any\r\n                    if(!configKey) return configs\r\n                    return getByPath(configs,configKey)\r\n                },\r\n                scope:this\r\n            }\r\n        })\r\n    }\r\n}", "/**\n * \n * 使用方法与object.assign一样，差别在于\n * \n *  Object.assign({a:1},{a:undefined}) === {a:undefined}\n * \n *  assignObject({a:1},{a:undefined}) === {a:1}\n * \n * 会忽略掉里面的undefined\n * \n *  当最后一参数是函数时传入(key)=>boolean，表示只有返回true时才会覆盖\n * \n \n * \n\n * \n */\n\nexport function assignObject<T extends Record<any,any> = Record<any,any>>(target:object , ...sources: any[]): T{   \n    if(sources.length === 0) return target as any;\n    let mapSources = sources.map((source,index) =>{\n        const sourceEntries = Object.entries(source || {})\n        if(sourceEntries.some(([k,v]) =>v ===undefined)){\n            return sourceEntries.reduce((result:any,[k,v])=>{\n                if(v!==undefined){\n                    result[k] = v\n                }\n                return result\n            },{})\n        }else{\n            return source\n        }\n    })\n    return  Object.assign(target as any, ...mapSources);\n}\n\n ", "import type { \r\n    Voerkai18nIdMap, \r\n    VoerkaI18nLanguage, \r\n    VoerkaI18nLanguageMessages,   \r\n    VoerkaI18nLanguageMessagePack,\r\n    IVoerkaI18nStorage,  \r\n    VoerkaI18nLanguagePack,\r\n    VoerkaI18nLanguageLoader,\r\n    VoerkaI18nTranslate, \r\n    VoerkaI18nTranslateComponentBuilder,\r\n    VoerkaI18nParagraphs,\r\n    VoerkaI18nLanguageParagraphs,\r\n    VoerkaI18nTranslateVars,\r\n    VoerkaI18nTranslateOptions,\r\n    VoerkaI18nTranslateTransformBuilder,\r\n    VoerkaI18nTranslateTransformer\r\n} from \"@/types\" \r\nimport { DefaultLanguageSettings } from '../consts';\r\nimport { Mixin } from \"ts-mixer\"\r\nimport { EventEmitterMixin } from \"./mixins/eventEmitter\"\r\nimport { PatchMessageMixin } from \"./mixins/patch\"\r\nimport { ChangeLanguageMixin } from \"./mixins/change\"\r\nimport { VoerkaI18nLogger, VoerkaI18nLoggerOutput } from \"../logger\";\r\nimport { VoerkaI18nFormatters } from \"../formatter/types\"\r\nimport { getId } from \"@/utils/getId\"  \r\nimport { createLogger } from \"@/logger\";\r\nimport { VoerkaI18nFormatterManager } from \"../formatter/manager\"; \r\nimport { isI18nManger } from \"@/utils/isI18nManger\"\r\nimport { LanguageMixin } from \"./mixins/language\"\r\nimport { TranslateMixin } from \"./mixins/translate\"\r\nimport { RestoreMixin } from \"./mixins/restore\";\r\nimport { InterpolatorMixin } from \"./mixins/interpolator\"; \r\nimport { isFunction } from \"flex-tools/typecheck/isFunction\" \r\nimport { assignObject } from \"flex-tools/object/assignObject\"\r\nimport { VoerkaI18nManager } from \"../manager\"\r\nimport { LocalStorage } from \"@/storage\";\r\nimport { isBrowser } from \"@/utils/isBrowser\";\r\nimport { isMessageId } from \"@/utils/isMessageId\"; \r\n\r\n\r\n\r\nexport interface VoerkaI18nScopeOptions<TranslateComponent=any,TranslateTransformResult=any> {\r\n    id?            : string                                                  // 作用域唯一id，一般可以使用package.json中的name字段\r\n    debug?         : boolean                                                 // 是否开启调试模式，开启后会输出调试信息\r\n    library?       : boolean                                                 // 当使用在库中时应该置为true\r\n    languages      : VoerkaI18nLanguage[]                              // 当前作用域支持的语言列表\r\n    fallback?      : string                                                  // 默认回退语言\r\n    messages       : VoerkaI18nLanguageMessagePack                           // 当前语言包\r\n    paragraphs     : VoerkaI18nParagraphs                                    // 段落\r\n    idMap?         : Voerkai18nIdMap                                         // 消息id映射列表\r\n    storage?       : IVoerkaI18nStorage                                      // 语言包存储器\r\n    formatters?    : VoerkaI18nFormatters                                    // 当前作用域的格式化\r\n    log?           : VoerkaI18nLoggerOutput                                  // 日志记录器\r\n    attached?      : boolean                                                 // 是否挂接到appScope\r\n    storageKey?    : string                                                  // 保存到Storeage时的Key\r\n    loader?        : VoerkaI18nLanguageLoader                                // 从远程加载语言包 \r\n    cachePatch?    : boolean                                                 // 是否缓存补丁语言包    \r\n    injectLangAttr?: boolean | string                                        // 是否注入到html元素上注入一个langauge属性指向当前活动语言\r\n    namespaces?    : Record<string,string>                                   // 命名空间\r\n    patterns?      : string[]                                                // 源文件匹配清单，使用fast-glob匹配文件\r\n    component?     : VoerkaI18nTranslateComponentBuilder<TranslateComponent> // 翻译组件       \r\n    transform?     : VoerkaI18nTranslateTransformBuilder<TranslateTransformResult>  // 对翻译结果进行变换，比如变换为vue/ref对象\r\n} \r\n\r\nexport class VoerkaI18nScope<TranslateComponent=any,TranslateTransformResult=any> extends Mixin(\r\n        EventEmitterMixin,\r\n        PatchMessageMixin,\r\n        ChangeLanguageMixin,\r\n        LanguageMixin,\r\n        TranslateMixin,\r\n        InterpolatorMixin,\r\n        RestoreMixin\r\n    ){\r\n    __VoerkaI18nScope__ = true\r\n    static idSeq:number = 0\r\n    private _options              : Required<VoerkaI18nScopeOptions<TranslateComponent>>\r\n    private _manager!             : VoerkaI18nManager                                   // 引用全局VoerkaI18nManager配置，注册后自动引用\r\n    private _formatterManager     : VoerkaI18nFormatterManager | null = null\r\n    private _logger!              : VoerkaI18nLogger    \r\n    protected _defaultLanguage    : string ='zh-CN'                                     // 默认语言名称\r\n    protected _activeLanguage     : string ='zh-CN'                                     // 默认语言名称    \r\n    protected _activeMessages     : VoerkaI18nLanguageMessages = {}                     // 当前语言包\r\n    protected _patchedMessages    : VoerkaI18nLanguagePack = {}                         // 补丁语言包\r\n    protected _translateComponent?: TranslateComponent\r\n    protected _translateTransformer?:VoerkaI18nTranslateTransformer<TranslateTransformResult>\r\n    protected _activeParagraphs   : VoerkaI18nLanguageParagraphs = {}                   // 当前段落\r\n\r\n    $id:number = ++VoerkaI18nScope.idSeq                        \r\n\r\n    /**\r\n     * \r\n     * @param options  \r\n     */\r\n\tconstructor(options:VoerkaI18nScopeOptions) {\r\n        super()\r\n        this._options = assignObject({\r\n            id             : getId(),                       // 作用域唯一id\r\n            library        : false,                         // 当使用在库中时应该置为true\r\n            debug          : false,                         // 是否开启调试模式，开启后会输出调试信息\r\n            injectLangAttr : true,                          // 是否注入一个langauge属性到body元素，或者指定元素选择器\r\n            languages      : [],                            // 当前作用域支持的语言列表\r\n            messages       : {},                            // 所有语言包={[language]:VoerkaI18nLanguageMessages}\r\n            paragraphs     : {},                            // 段落\r\n            idMap          : {},                            // 消息id映射列表\r\n            formatters     : [],                            // 是否挂接到appScope\r\n            attached       : true,                          // 是否挂接到appScope\r\n            storageKey     : 'language',                    // 保存语言配置到Storage时的Key\r\n            cachePatch     : true                           // 是否缓存补丁语言包\r\n        },options) as Required<VoerkaI18nScopeOptions>\r\n        this._init()\r\n\t}\r\n    get id() { return this._options.id;}                                        // 作用域唯一id\t    \r\n    get options(){ return this._options}                                        // \r\n\tget attached() { return this._options.attached}                             // 作用域唯一id\t    \r\n    get debug(){return this._options.debug }                                    // 是否开启调试模式\r\n    get library(){return this._options.library }                                // 是否是库\r\n    get formatters() {\treturn this._formatterManager! }                        // 格式化器管理器\r\n    get defaultLanguage() { return this._defaultLanguage }                      // 默认语言名称    \r\n    get defaultMessages() { return this.messages[this.defaultLanguage];}        // 默认语言包    \r\n\tget messages() { return this._options.messages;\t}                           // 所有语言包\t\r\n    get paragraphs() { return this._options.paragraphs;}                        // 段落\r\n\tget idMap() { return this._options.idMap;}                                  // 消息id映射列表\t\r\n\tget languages() { return this._options.languages;}                          // 当前作用域支持的语言列表[{name,title,fallback}]\t\r\n\tget manager() {\treturn this._manager;}                                      // 引用全局VoerkaI18n配置，注册后自动引用    \r\n    get appScope() { return this._manager.scope}                                // 全局作用域\r\n\tget interpolator(){ return this._flexVars! }                                // 变量插值处理器,使用flexvars    \r\n    get logger(){ return this._logger!}                                         // 日志记录器\r\n    get t():VoerkaI18nTranslate{ return this.translate.bind(this) as VoerkaI18nTranslate}\r\n    get Translate():TranslateComponent { return this._getTranslateComponent()! as TranslateComponent }\r\n    get activeMessages() { return this._activeMessages;}                        // 当前语言包 \r\n    get activeParagraphs() { return this._activeParagraphs;}                    // 当前段落\r\n\tget activeLanguage():string { return this._activeLanguage   }  \r\n    get storage(){ return this.getScopeOption<IVoerkaI18nStorage>('storage')}    \r\n    get loader(){ return this.getScopeOption<VoerkaI18nLanguageLoader>('loader') }\r\n    get $t():VoerkaI18nTranslate<TranslateTransformResult>{ \r\n        return (message:string,vars?:VoerkaI18nTranslateVars,options?:VoerkaI18nTranslateOptions)=>{\r\n            this._getTranslateTransformer()\r\n            if(!options)  options = {}\r\n            options.transform = true\r\n            return this.translate(message,vars,options)\r\n        }\r\n    }\r\n    /**\r\n     * 有些配置项是以appScope为准\r\n     * @param name \r\n     * @returns \r\n     */\r\n    private getScopeOption<T>(name:string):T | undefined{\r\n        const scopeOpts = this._options as any\r\n        // @ts-ignore\r\n        return (this.attached ? scopeOpts[name] || (this.library ? this._manager[name] : undefined) : scopeOpts[name]) as T | undefined\r\n    }\r\n\r\n    private _initOptions(){\r\n        // 1. 检测语言配置列表是否有效\r\n        if(!Array.isArray(this.languages)){\r\n            this.logger.warn(\"[VoerkaI18n] invalid language settings, will use default language settings.\")\r\n            this._options.languages = Object.assign([],DefaultLanguageSettings)\r\n        }else if(this.languages.length==0){      \r\n            throw new Error(\"[VoerkaI18n] must provide valid language settings.\")\r\n        }\r\n        // 2.为语言配置默认回退语言，并且提取默认语言和活动语言\r\n        let activeLang: string, defaultLang: string\r\n        this.languages.forEach(language => {\r\n            if (language.default) defaultLang = language.name\r\n            if (language.active) activeLang = language.name\r\n        })\r\n        // 3. 确保提供了有效的默认语言和活动语言\r\n        const lanMessages = this._options.messages\r\n        if (!(defaultLang! in lanMessages)) defaultLang = Object.keys(lanMessages)[0]\r\n        if (!(activeLang! in lanMessages)) activeLang = defaultLang!\r\n        if (!(defaultLang! in lanMessages)) {\r\n            throw new Error(\"[VoerkaI18n] invalid language configuration, must provide valid default and active languages.\")\r\n        } \r\n        this._activeLanguage  = activeLang!\r\n        this._defaultLanguage = defaultLang!\r\n\r\n        if(!this._options.library && !this._options.storage){\r\n            this._options.storage = LocalStorage\r\n        }        \r\n        // 初始化时，默认和激活的语言包只能是静态语言包，不能是动态语言包\r\n        // 因为初始化时激活语言需要马上显示，如果是异步语言包，会导致显示延迟\r\n        if(isFunction(this.messages[this._defaultLanguage])){\r\n            throw new Error(\"[VoerkaI18n] default language pack must be static content, can't use async load way.\")\r\n        }\r\n        this._activeMessages   = this.messages[this._activeLanguage] as VoerkaI18nLanguageMessages\r\n        this._activeParagraphs = this.paragraphs[this._activeLanguage] as VoerkaI18nLanguageParagraphs\r\n    } \r\n    /**\r\n     * 对输入的语言配置进行处理\r\n     * - 将en配置为默认回退语言\r\n     * - 确保提供了有效的默认语言和活动语言\r\n     */\r\n    private _init(){         \r\n        this._logger = createLogger(this._options.log)\r\n        // 处理初始化参数\r\n        this._initOptions()\r\n        // appScope需要从应用中恢复保存的\r\n        if(!this.library) this.restoreLanguage()\r\n        // 初始化格式化器\r\n        this._initInterpolators()        \r\n        // 将当前实例注册到全局单例VoerkaI18nManager中\r\n\t\tthis.registerToManager()               \r\n        // 初始化格式化器\r\n        this._formatterManager = new VoerkaI18nFormatterManager(this)       \r\n    } \r\n    /**\r\n     * \r\n     * 当scope上在全局应用scope创建之后时，会调用此方法\r\n     * 本方法在注册到全局VoerkaI18nManager时由Manager调用，\r\n     * \r\n     * 注意：本方法仅当\r\n     * scope是在全局应用scope创建之前时才会调用\r\n     * \r\n     * 如果scope是在全局应用scope创建之后时创建的，则不会调用此方法\r\n     * 因为此时scope会直接注册到全局VoerkaI18nManager中，不会保存到全局变量__VoerkaI18nScopes__中\r\n     * \r\n     * @param manager \r\n     * @returns \r\n     */\r\n    bind(manager:VoerkaI18nManager){\r\n        this._manager = manager               \r\n        this._manager.once('init',this._initRefresh.bind(this))        \r\n    }\r\n    /**\r\n     * 第一次初始化时刷新语言\r\n     */\r\n    private _initRefresh(getInitLanguage?:()=>string){\r\n        if(this.library){\r\n            this.refresh(getInitLanguage && getInitLanguage())\r\n        }else{  \r\n            const tasks:any[]=[]\r\n            if(this._defaultLanguage !== this._activeLanguage || isFunction(this.activeMessages)){\r\n                tasks.push(this.refresh(undefined,{ patch:false }))                \r\n            }    \r\n            tasks.push(\r\n                this._patch()\r\n            )\r\n            Promise.all(tasks).then(()=>{\r\n                this.emit('ready',this.activeLanguage,true)                \r\n                this._setLanguageAttr()   \r\n            })\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * 注册当前作用域到全局作用域\r\n     * @param callback \r\n     */\r\n    private registerToManager(){ \r\n        if(!this.attached) return\r\n        const isAppScope = !this.options.library \r\n        if(isAppScope){\r\n            if(globalThis.VoerkaI18n && globalThis.VoerkaI18n.scope && isBrowser()){\r\n               console.warn(\"Only can have one i18nScope with library=false\")\r\n            }\r\n            this._manager = new VoerkaI18nManager(this)            \r\n        }\r\n        // 当前作用域是库时，如果此时Manager和应用Scope还没创建就先保存到了全局变量__VoerkaI18nScopes__中\r\n        // 当应用Scope创建后，会再调用registerToManager方法注册到全局VoerkaI18nManager中\r\n        const manager = globalThis.VoerkaI18n as VoerkaI18nManager\r\n        if(manager && isI18nManger(manager)){\r\n            if(isAppScope){\r\n                this._initRefresh()\r\n            }else{\r\n                manager.register(this)  \r\n            } \r\n        }else{\r\n            if(!globalThis.__VoerkaI18nScopes__) globalThis.__VoerkaI18nScopes__ = []\r\n            globalThis.__VoerkaI18nScopes__.push(this)\r\n        }\r\n    }\r\n\tasync change(language:string) {\r\n        let finalLang:string = this.activeLanguage\r\n        if(this.attached){\r\n            finalLang = await this._manager.change(language)\r\n        }else{\r\n            finalLang = await this.refresh(language)\r\n        }            \r\n        return finalLang \r\n    }  \r\n    /**\r\n     * 检查当前环境是是否是在浏览器环境中，如果是，则在body上添加language=<activeLanguage>属性\r\n     */\r\n    protected _setLanguageAttr(){       \r\n        if(this.library || !isBrowser()) return\r\n        try{\r\n            const injectLangAttr = this._options.injectLangAttr\r\n            if(!injectLangAttr) return\r\n            const ele = injectLangAttr===true ? document.body : document.body.querySelector(injectLangAttr as string)\r\n            if(ele){\r\n                ele.setAttribute(\"lang\",this.activeLanguage)\r\n            }            \r\n        }catch{}\r\n    }\r\n    /**\r\n     * \r\n     * @param message \r\n     * @returns \r\n     */\r\n    getRawMessage(message:string){\r\n        if(isMessageId(message)){\r\n            if(message in this.defaultMessages){\r\n                return (this.defaultMessages as any)[message]\r\n            }\r\n        }else{\r\n            return message\r\n        }\r\n    }\r\n    getMessageId(message:any){\r\n        if(isMessageId(message)){\r\n            return message\r\n        }else{\r\n            if(message in this.idMap){\r\n                return this.idMap[message]\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n", "/**\r\n * \r\n * 提供格式化相关逻辑\r\n * \r\n */\r\nimport type { VoerkaI18nScope } from \"@/scope\";\r\nimport { Dict, LanguageName  } from \"@/types\";\r\nimport type { VoerkaI18nFormatter } from \"./types\";  \r\nimport { VoerkaI18nFormatterBuilder } from './types';\r\n\r\n\r\nexport function createFormatter<Args extends Dict,Config extends  Dict = Args>(\r\n    formatter: VoerkaI18nFormatter<Args, Config>,\r\n    configs? : Partial<Record<LanguageName,Partial<Config>>>,\r\n    defaultConfig? : Partial<Config>\r\n){\r\n    return ((scope: VoerkaI18nScope)=>{\r\n        const oldNext = formatter.next\r\n        formatter.next = function (value, args, ctx) {\r\n            const langConfig = ctx.getConfig as any // 语言包中的$config\r\n            ctx.getConfig = () => {\r\n                return Object.assign({}, \r\n                    defaultConfig,\r\n                    configs?.[scope.activeLanguage],                    \r\n                    langConfig(formatter.name),                    \r\n                ) as Config;\r\n            }\r\n            return oldNext.call(this, value, args, ctx);\r\n        }  \r\n        return formatter as VoerkaI18nFormatter<Args, Config>\r\n    }) as VoerkaI18nFormatterBuilder<Args,Config>\r\n}\r\n \r\n", "import type { VoerkaI18nPlugin } from \"./types\"\r\n\r\n\r\nexport function definePlugin(plugin:VoerkaI18nPlugin){    \r\n    const manager = globalThis.VoerkaI18n\r\n    if(manager){\r\n        manager.registerPlugin(plugin)\r\n    }else{\r\n        if(!globalThis.__VoerkaI18nPlugins__) globalThis.__VoerkaI18nPlugins__ = []\r\n        globalThis.__VoerkaI18nPlugins__.push(plugin)\r\n    }\r\n}"],
  "mappings": "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",
  "names": ["protoChain", "i", "_", "_e", "c", "decorators", "f", "y", "d", "AsyncSignalAbort", "AsyncSignalId", "asyncSignal", "constraint", "options", "isResolved", "isRejected", "isPending", "resolveSignal", "rejectSignal", "timeoutId", "objPromise", "signalId", "reset", "resolve", "reject", "signal", "__async", "timeout", "returns", "e", "result", "__signals", "__signals", "R", "b", "i", "f", "d", "N", "A", "I", "b", "_LiteEvent", "_a", "options", "event", "callback", "objectify", "count", "listenerId", "eventListeners", "__name", "isAbort", "listener", "matchedListeners", "eventName", "timeout", "resolve", "reject", "tmId", "isTimeout", "message", "listeners", "e", "results", "retain", "LiteEvent", "a", "__require", "b", "c", "getId", "Date", "now", "toString", "parseInt", "String", "Math", "random", "isNumber", "value", "strict", "v", "isMessageId", "content", "isI18nScope", "obj", "__VoerkaI18nScope__", "loadAsyncModule", "module", "loadResult", "call", "Symbol", "toStringTag", "default", "isStorage", "get", "set", "remove", "execAsyncs", "promises", "Promise", "allSettled", "map", "result", "status", "reason", "isBrowser", "window", "document", "createElement", "VoerkaI18nManager", "constructor", "appScope", "__VoerkaI18nManager__", "_scopes", "_appScope", "instance", "Error", "_registerAppScope", "_registerScopes", "_loadPlugins", "globalThis", "VoerkaI18n", "debug", "scope", "logger", "scopes", "activeLanguage", "defaultLanguage", "loader", "storage", "languages", "__VoerkaI18nScopes__", "Array", "isArray", "forEach", "register", "getScope", "id", "find", "plugins", "__VoerkaI18nPlugins__", "plugin", "registerPlugin", "push", "emitAsync", "bind", "change", "language", "_refreshScopes", "saveLanguage", "emit", "info", "newLanguage", "scopeRefreshers", "refresh", "ready", "waitFor", "then", "lang", "clearPatchedMessages", "hasLanguage", "findIndex", "name", "clearLanguage", "restoreLanguage", "__publicField", "_VoerkaI18nManager", "LocalStorage", "key", "localStorage", "getItem", "setItem", "removeItem", "DefaultFallbackLanguage", "DefaultLanguageSettings", "title", "active", "DataTypes", "VOERKAI18N_FORMATTER", "VOERKAI18N_FORMATTER_BUILDER", "defaultLanguageSettings", "TEleClassName", "TEleMsgIdAttr", "TEleScopeIdAttr", "EventEmitterMixin", "_eventEmitter", "_getEventEmitter", "attached", "manager", "on", "once", "off", "payload", "_EventEmitterMixin", "isFunction", "fn", "isPlainObject", "proto", "baseProto", "AsyncSignalAbort", "AsyncSignalId", "asyncSignal", "constraint", "isResolved", "isRejected", "isPending", "resolveSignal", "rejectSignal", "timeoutId", "objPromise", "signalId", "reset", "signal", "returns", "PatchMessageMixin", "_patching", "_getPatchKey", "langs", "_patch", "_restorePatchedMessages", "activeMessages", "pachedMessages", "_loadMessagesFromLoader", "Object", "assign", "_activeMessages", "_setPatchedMessages", "warn", "stack", "undefined", "messages", "patchedMessages", "_getPatchedMessages", "JSON", "stringify", "error", "cachePatch", "_PatchMessageMixin", "VoerkaI18nError", "_VoerkaI18nError", "VoerkaI18nInvalidLanguageError", "_VoerkaI18nInvalidLanguageError", "VoerkaI18nOnlyOneAppScopeError", "_VoerkaI18nOnlyOneAppScopeError", "VoerkaI18nChangeLanguageError", "_VoerkaI18nChangeLanguageError", "VoerkaI18nLoadLanguageError", "_VoerkaI18nLoadLanguageError", "ChangeLanguageMixin", "_refreshSignal", "finalLanguage", "finalMessages", "patch", "fallback", "_loadLanguageMessages", "$remote", "fallbackLanguage", "getFallbackLanguage", "_activeLanguage", "_activeParagraphs", "paragraphs", "_setLanguageAttr", "remoteMessages", "arguments", "changing", "all", "_ChangeLanguageMixin", "ConsoleLogger", "console", "createLogger", "logFn", "logCache", "logOutput", "level", "args", "join", "log", "splice", "length", "FormattersNotLoadedError", "_FormattersNotLoadedError", "VoerkaI18nFormatterManager", "_formatters", "_scope", "formatters", "_registerFormatters", "formatter", "apply", "_addFormatter", "filter", "interpolator", "addFilter", "configs", "defaultConfig", "oldNext", "next", "ctx", "langConfig", "getConfig", "_VoerkaI18nFormatterManager", "isI18nManger", "LanguageMixin", "getLanguage", "index", "lng", "lngOptions", "_defaultLanguage", "_LanguageMixin", "TranslateMixin", "_getPluraMessage", "_getPluraValue", "pluraValue", "vars", "dictVars", "entries", "isNum", "startsWith", "arg", "_getTranslateComponent", "_translateComponent", "builder", "component", "_getTranslateTransformer", "_translateTransformer", "transform", "_getActiveMessages", "translate", "replace", "finalArgs", "msgId", "idMap", "_TranslateMixin", "RestoreMixin", "_getStorage", "_getStorageKey", "storageKey", "savedLanguage", "_RestoreMixin", "getByPath", "path", "defaultValue", "delimiter", "matched", "keys", "current", "parent", "indexOrKey", "InterpolatorMixin", "_flexVars", "_initInterpolators", "FlexVars", "filterContext", "configKey", "_InterpolatorMixin", "assignObject", "target", "sources", "mapSources", "source", "sourceEntries", "k", "VoerkaI18nScope", "Mixin", "_options", "_manager", "_formatterManager", "_logger", "_patchedMessages", "$id", "idSeq", "library", "injectLangAttr", "_init", "defaultMessages", "t", "Translate", "activeParagraphs", "getScopeOption", "$t", "scopeOpts", "_initOptions", "activeLang", "defaultLang", "lanMessages", "registerToManager", "_initRefresh", "getInitLanguage", "tasks", "isAppScope", "finalLang", "ele", "body", "querySelector", "setAttribute", "getRawMessage", "getMessageId", "_VoerkaI18nScope", "createFormatter", "definePlugin"]
}
